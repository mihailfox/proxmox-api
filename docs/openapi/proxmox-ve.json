{
  "openapi": "3.1.0",
  "info": {
    "title": "Proxmox VE API Documentation",
    "version": "2025-09-30T01:05:25.797Z",
    "description": "Generated from the normalized Proxmox VE API intermediate representation.\nSource: https://pve.proxmox.com/pve-docs/api-viewer/\nScraped at: 2025-09-30T01:05:25.797Z\nNormalized at: 2025-09-30T01:48:14.178Z\nOperations: 628"
  },
  "servers": [
    {
      "url": "https://{host}:{port}/api2/json",
      "description": "Proxmox VE API base URL",
      "variables": {
        "host": {
          "default": "localhost"
        },
        "port": {
          "default": "8006"
        }
      }
    }
  ],
  "tags": [
    {
      "name": "/access",
      "description": "access"
    },
    {
      "name": "/access/acl",
      "description": "access › acl"
    },
    {
      "name": "/access/domains",
      "description": "access › domains"
    },
    {
      "name": "/access/domains/{realm}",
      "description": "access › domains › {realm}"
    },
    {
      "name": "/access/domains/{realm}/sync",
      "description": "access › domains › {realm} › sync"
    },
    {
      "name": "/access/groups",
      "description": "access › groups"
    },
    {
      "name": "/access/groups/{groupid}",
      "description": "access › groups › {groupid}"
    },
    {
      "name": "/access/openid",
      "description": "access › openid"
    },
    {
      "name": "/access/openid/auth-url",
      "description": "access › openid › auth-url"
    },
    {
      "name": "/access/openid/login",
      "description": "access › openid › login"
    },
    {
      "name": "/access/password",
      "description": "access › password"
    },
    {
      "name": "/access/permissions",
      "description": "access › permissions"
    },
    {
      "name": "/access/roles",
      "description": "access › roles"
    },
    {
      "name": "/access/roles/{roleid}",
      "description": "access › roles › {roleid}"
    },
    {
      "name": "/access/tfa",
      "description": "access › tfa"
    },
    {
      "name": "/access/tfa/{userid}",
      "description": "access › tfa › {userid}"
    },
    {
      "name": "/access/tfa/{userid}/{id}",
      "description": "access › tfa › {userid} › {id}"
    },
    {
      "name": "/access/ticket",
      "description": "access › ticket"
    },
    {
      "name": "/access/users",
      "description": "access › users"
    },
    {
      "name": "/access/users/{userid}",
      "description": "access › users › {userid}"
    },
    {
      "name": "/access/users/{userid}/tfa",
      "description": "access › users › {userid} › tfa"
    },
    {
      "name": "/access/users/{userid}/token",
      "description": "access › users › {userid} › token"
    },
    {
      "name": "/access/users/{userid}/token/{tokenid}",
      "description": "access › users › {userid} › token › {tokenid}"
    },
    {
      "name": "/access/users/{userid}/unlock-tfa",
      "description": "access › users › {userid} › unlock-tfa"
    },
    {
      "name": "/cluster",
      "description": "cluster"
    },
    {
      "name": "/cluster/acme",
      "description": "cluster › acme"
    },
    {
      "name": "/cluster/acme/account",
      "description": "cluster › acme › account"
    },
    {
      "name": "/cluster/acme/account/{name}",
      "description": "cluster › acme › account › {name}"
    },
    {
      "name": "/cluster/acme/challenge-schema",
      "description": "cluster › acme › challenge-schema"
    },
    {
      "name": "/cluster/acme/directories",
      "description": "cluster › acme › directories"
    },
    {
      "name": "/cluster/acme/meta",
      "description": "cluster › acme › meta"
    },
    {
      "name": "/cluster/acme/plugins",
      "description": "cluster › acme › plugins"
    },
    {
      "name": "/cluster/acme/plugins/{id}",
      "description": "cluster › acme › plugins › {id}"
    },
    {
      "name": "/cluster/acme/tos",
      "description": "cluster › acme › tos"
    },
    {
      "name": "/cluster/backup",
      "description": "cluster › backup"
    },
    {
      "name": "/cluster/backup-info",
      "description": "cluster › backup-info"
    },
    {
      "name": "/cluster/backup-info/not-backed-up",
      "description": "cluster › backup-info › not-backed-up"
    },
    {
      "name": "/cluster/backup/{id}",
      "description": "cluster › backup › {id}"
    },
    {
      "name": "/cluster/backup/{id}/included_volumes",
      "description": "cluster › backup › {id} › included_volumes"
    },
    {
      "name": "/cluster/ceph",
      "description": "cluster › ceph"
    },
    {
      "name": "/cluster/ceph/flags",
      "description": "cluster › ceph › flags"
    },
    {
      "name": "/cluster/ceph/flags/{flag}",
      "description": "cluster › ceph › flags › {flag}"
    },
    {
      "name": "/cluster/ceph/metadata",
      "description": "cluster › ceph › metadata"
    },
    {
      "name": "/cluster/ceph/status",
      "description": "cluster › ceph › status"
    },
    {
      "name": "/cluster/config",
      "description": "cluster › config"
    },
    {
      "name": "/cluster/config/apiversion",
      "description": "cluster › config › apiversion"
    },
    {
      "name": "/cluster/config/join",
      "description": "cluster › config › join"
    },
    {
      "name": "/cluster/config/nodes",
      "description": "cluster › config › nodes"
    },
    {
      "name": "/cluster/config/nodes/{node}",
      "description": "cluster › config › nodes › {node}"
    },
    {
      "name": "/cluster/config/qdevice",
      "description": "cluster › config › qdevice"
    },
    {
      "name": "/cluster/config/totem",
      "description": "cluster › config › totem"
    },
    {
      "name": "/cluster/firewall",
      "description": "cluster › firewall"
    },
    {
      "name": "/cluster/firewall/aliases",
      "description": "cluster › firewall › aliases"
    },
    {
      "name": "/cluster/firewall/aliases/{name}",
      "description": "cluster › firewall › aliases › {name}"
    },
    {
      "name": "/cluster/firewall/groups",
      "description": "cluster › firewall › groups"
    },
    {
      "name": "/cluster/firewall/groups/{group}",
      "description": "cluster › firewall › groups › {group}"
    },
    {
      "name": "/cluster/firewall/groups/{group}/{pos}",
      "description": "cluster › firewall › groups › {group} › {pos}"
    },
    {
      "name": "/cluster/firewall/ipset",
      "description": "cluster › firewall › ipset"
    },
    {
      "name": "/cluster/firewall/ipset/{name}",
      "description": "cluster › firewall › ipset › {name}"
    },
    {
      "name": "/cluster/firewall/ipset/{name}/{cidr}",
      "description": "cluster › firewall › ipset › {name} › {cidr}"
    },
    {
      "name": "/cluster/firewall/macros",
      "description": "cluster › firewall › macros"
    },
    {
      "name": "/cluster/firewall/options",
      "description": "cluster › firewall › options"
    },
    {
      "name": "/cluster/firewall/refs",
      "description": "cluster › firewall › refs"
    },
    {
      "name": "/cluster/firewall/rules",
      "description": "cluster › firewall › rules"
    },
    {
      "name": "/cluster/firewall/rules/{pos}",
      "description": "cluster › firewall › rules › {pos}"
    },
    {
      "name": "/cluster/ha",
      "description": "cluster › ha"
    },
    {
      "name": "/cluster/ha/groups",
      "description": "cluster › ha › groups"
    },
    {
      "name": "/cluster/ha/groups/{group}",
      "description": "cluster › ha › groups › {group}"
    },
    {
      "name": "/cluster/ha/resources",
      "description": "cluster › ha › resources"
    },
    {
      "name": "/cluster/ha/resources/{sid}",
      "description": "cluster › ha › resources › {sid}"
    },
    {
      "name": "/cluster/ha/resources/{sid}/migrate",
      "description": "cluster › ha › resources › {sid} › migrate"
    },
    {
      "name": "/cluster/ha/resources/{sid}/relocate",
      "description": "cluster › ha › resources › {sid} › relocate"
    },
    {
      "name": "/cluster/ha/rules",
      "description": "cluster › ha › rules"
    },
    {
      "name": "/cluster/ha/rules/{rule}",
      "description": "cluster › ha › rules › {rule}"
    },
    {
      "name": "/cluster/ha/status",
      "description": "cluster › ha › status"
    },
    {
      "name": "/cluster/ha/status/current",
      "description": "cluster › ha › status › current"
    },
    {
      "name": "/cluster/ha/status/manager_status",
      "description": "cluster › ha › status › manager_status"
    },
    {
      "name": "/cluster/jobs",
      "description": "cluster › jobs"
    },
    {
      "name": "/cluster/jobs/realm-sync",
      "description": "cluster › jobs › realm-sync"
    },
    {
      "name": "/cluster/jobs/realm-sync/{id}",
      "description": "cluster › jobs › realm-sync › {id}"
    },
    {
      "name": "/cluster/jobs/schedule-analyze",
      "description": "cluster › jobs › schedule-analyze"
    },
    {
      "name": "/cluster/log",
      "description": "cluster › log"
    },
    {
      "name": "/cluster/mapping",
      "description": "cluster › mapping"
    },
    {
      "name": "/cluster/mapping/dir",
      "description": "cluster › mapping › dir"
    },
    {
      "name": "/cluster/mapping/dir/{id}",
      "description": "cluster › mapping › dir › {id}"
    },
    {
      "name": "/cluster/mapping/pci",
      "description": "cluster › mapping › pci"
    },
    {
      "name": "/cluster/mapping/pci/{id}",
      "description": "cluster › mapping › pci › {id}"
    },
    {
      "name": "/cluster/mapping/usb",
      "description": "cluster › mapping › usb"
    },
    {
      "name": "/cluster/mapping/usb/{id}",
      "description": "cluster › mapping › usb › {id}"
    },
    {
      "name": "/cluster/metrics",
      "description": "cluster › metrics"
    },
    {
      "name": "/cluster/metrics/export",
      "description": "cluster › metrics › export"
    },
    {
      "name": "/cluster/metrics/server",
      "description": "cluster › metrics › server"
    },
    {
      "name": "/cluster/metrics/server/{id}",
      "description": "cluster › metrics › server › {id}"
    },
    {
      "name": "/cluster/nextid",
      "description": "cluster › nextid"
    },
    {
      "name": "/cluster/notifications",
      "description": "cluster › notifications"
    },
    {
      "name": "/cluster/notifications/endpoints",
      "description": "cluster › notifications › endpoints"
    },
    {
      "name": "/cluster/notifications/endpoints/gotify",
      "description": "cluster › notifications › endpoints › gotify"
    },
    {
      "name": "/cluster/notifications/endpoints/gotify/{name}",
      "description": "cluster › notifications › endpoints › gotify › {name}"
    },
    {
      "name": "/cluster/notifications/endpoints/sendmail",
      "description": "cluster › notifications › endpoints › sendmail"
    },
    {
      "name": "/cluster/notifications/endpoints/sendmail/{name}",
      "description": "cluster › notifications › endpoints › sendmail › {name}"
    },
    {
      "name": "/cluster/notifications/endpoints/smtp",
      "description": "cluster › notifications › endpoints › smtp"
    },
    {
      "name": "/cluster/notifications/endpoints/smtp/{name}",
      "description": "cluster › notifications › endpoints › smtp › {name}"
    },
    {
      "name": "/cluster/notifications/endpoints/webhook",
      "description": "cluster › notifications › endpoints › webhook"
    },
    {
      "name": "/cluster/notifications/endpoints/webhook/{name}",
      "description": "cluster › notifications › endpoints › webhook › {name}"
    },
    {
      "name": "/cluster/notifications/matcher-field-values",
      "description": "cluster › notifications › matcher-field-values"
    },
    {
      "name": "/cluster/notifications/matcher-fields",
      "description": "cluster › notifications › matcher-fields"
    },
    {
      "name": "/cluster/notifications/matchers",
      "description": "cluster › notifications › matchers"
    },
    {
      "name": "/cluster/notifications/matchers/{name}",
      "description": "cluster › notifications › matchers › {name}"
    },
    {
      "name": "/cluster/notifications/targets",
      "description": "cluster › notifications › targets"
    },
    {
      "name": "/cluster/notifications/targets/{name}/test",
      "description": "cluster › notifications › targets › {name} › test"
    },
    {
      "name": "/cluster/options",
      "description": "cluster › options"
    },
    {
      "name": "/cluster/replication",
      "description": "cluster › replication"
    },
    {
      "name": "/cluster/replication/{id}",
      "description": "cluster › replication › {id}"
    },
    {
      "name": "/cluster/resources",
      "description": "cluster › resources"
    },
    {
      "name": "/cluster/sdn",
      "description": "cluster › sdn"
    },
    {
      "name": "/cluster/sdn/controllers",
      "description": "cluster › sdn › controllers"
    },
    {
      "name": "/cluster/sdn/controllers/{controller}",
      "description": "cluster › sdn › controllers › {controller}"
    },
    {
      "name": "/cluster/sdn/dns",
      "description": "cluster › sdn › dns"
    },
    {
      "name": "/cluster/sdn/dns/{dns}",
      "description": "cluster › sdn › dns › {dns}"
    },
    {
      "name": "/cluster/sdn/fabrics",
      "description": "cluster › sdn › fabrics"
    },
    {
      "name": "/cluster/sdn/fabrics/all",
      "description": "cluster › sdn › fabrics › all"
    },
    {
      "name": "/cluster/sdn/fabrics/fabric",
      "description": "cluster › sdn › fabrics › fabric"
    },
    {
      "name": "/cluster/sdn/fabrics/fabric/{id}",
      "description": "cluster › sdn › fabrics › fabric › {id}"
    },
    {
      "name": "/cluster/sdn/fabrics/node",
      "description": "cluster › sdn › fabrics › node"
    },
    {
      "name": "/cluster/sdn/fabrics/node/{fabric_id}",
      "description": "cluster › sdn › fabrics › node › {fabric_id}"
    },
    {
      "name": "/cluster/sdn/fabrics/node/{fabric_id}/{node_id}",
      "description": "cluster › sdn › fabrics › node › {fabric_id} › {node_id}"
    },
    {
      "name": "/cluster/sdn/ipams",
      "description": "cluster › sdn › ipams"
    },
    {
      "name": "/cluster/sdn/ipams/{ipam}",
      "description": "cluster › sdn › ipams › {ipam}"
    },
    {
      "name": "/cluster/sdn/ipams/{ipam}/status",
      "description": "cluster › sdn › ipams › {ipam} › status"
    },
    {
      "name": "/cluster/sdn/lock",
      "description": "cluster › sdn › lock"
    },
    {
      "name": "/cluster/sdn/rollback",
      "description": "cluster › sdn › rollback"
    },
    {
      "name": "/cluster/sdn/vnets",
      "description": "cluster › sdn › vnets"
    },
    {
      "name": "/cluster/sdn/vnets/{vnet}",
      "description": "cluster › sdn › vnets › {vnet}"
    },
    {
      "name": "/cluster/sdn/vnets/{vnet}/firewall",
      "description": "cluster › sdn › vnets › {vnet} › firewall"
    },
    {
      "name": "/cluster/sdn/vnets/{vnet}/firewall/options",
      "description": "cluster › sdn › vnets › {vnet} › firewall › options"
    },
    {
      "name": "/cluster/sdn/vnets/{vnet}/firewall/rules",
      "description": "cluster › sdn › vnets › {vnet} › firewall › rules"
    },
    {
      "name": "/cluster/sdn/vnets/{vnet}/firewall/rules/{pos}",
      "description": "cluster › sdn › vnets › {vnet} › firewall › rules › {pos}"
    },
    {
      "name": "/cluster/sdn/vnets/{vnet}/ips",
      "description": "cluster › sdn › vnets › {vnet} › ips"
    },
    {
      "name": "/cluster/sdn/vnets/{vnet}/subnets",
      "description": "cluster › sdn › vnets › {vnet} › subnets"
    },
    {
      "name": "/cluster/sdn/vnets/{vnet}/subnets/{subnet}",
      "description": "cluster › sdn › vnets › {vnet} › subnets › {subnet}"
    },
    {
      "name": "/cluster/sdn/zones",
      "description": "cluster › sdn › zones"
    },
    {
      "name": "/cluster/sdn/zones/{zone}",
      "description": "cluster › sdn › zones › {zone}"
    },
    {
      "name": "/cluster/status",
      "description": "cluster › status"
    },
    {
      "name": "/cluster/tasks",
      "description": "cluster › tasks"
    },
    {
      "name": "/nodes",
      "description": "nodes"
    },
    {
      "name": "/nodes/{node}",
      "description": "nodes › {node}"
    },
    {
      "name": "/nodes/{node}/aplinfo",
      "description": "nodes › {node} › aplinfo"
    },
    {
      "name": "/nodes/{node}/apt",
      "description": "nodes › {node} › apt"
    },
    {
      "name": "/nodes/{node}/apt/changelog",
      "description": "nodes › {node} › apt › changelog"
    },
    {
      "name": "/nodes/{node}/apt/repositories",
      "description": "nodes › {node} › apt › repositories"
    },
    {
      "name": "/nodes/{node}/apt/update",
      "description": "nodes › {node} › apt › update"
    },
    {
      "name": "/nodes/{node}/apt/versions",
      "description": "nodes › {node} › apt › versions"
    },
    {
      "name": "/nodes/{node}/capabilities",
      "description": "nodes › {node} › capabilities"
    },
    {
      "name": "/nodes/{node}/capabilities/qemu",
      "description": "nodes › {node} › capabilities › qemu"
    },
    {
      "name": "/nodes/{node}/capabilities/qemu/cpu",
      "description": "nodes › {node} › capabilities › qemu › cpu"
    },
    {
      "name": "/nodes/{node}/capabilities/qemu/machines",
      "description": "nodes › {node} › capabilities › qemu › machines"
    },
    {
      "name": "/nodes/{node}/capabilities/qemu/migration",
      "description": "nodes › {node} › capabilities › qemu › migration"
    },
    {
      "name": "/nodes/{node}/ceph",
      "description": "nodes › {node} › ceph"
    },
    {
      "name": "/nodes/{node}/ceph/cfg",
      "description": "nodes › {node} › ceph › cfg"
    },
    {
      "name": "/nodes/{node}/ceph/cfg/db",
      "description": "nodes › {node} › ceph › cfg › db"
    },
    {
      "name": "/nodes/{node}/ceph/cfg/raw",
      "description": "nodes › {node} › ceph › cfg › raw"
    },
    {
      "name": "/nodes/{node}/ceph/cfg/value",
      "description": "nodes › {node} › ceph › cfg › value"
    },
    {
      "name": "/nodes/{node}/ceph/cmd-safety",
      "description": "nodes › {node} › ceph › cmd-safety"
    },
    {
      "name": "/nodes/{node}/ceph/crush",
      "description": "nodes › {node} › ceph › crush"
    },
    {
      "name": "/nodes/{node}/ceph/fs",
      "description": "nodes › {node} › ceph › fs"
    },
    {
      "name": "/nodes/{node}/ceph/fs/{name}",
      "description": "nodes › {node} › ceph › fs › {name}"
    },
    {
      "name": "/nodes/{node}/ceph/init",
      "description": "nodes › {node} › ceph › init"
    },
    {
      "name": "/nodes/{node}/ceph/log",
      "description": "nodes › {node} › ceph › log"
    },
    {
      "name": "/nodes/{node}/ceph/mds",
      "description": "nodes › {node} › ceph › mds"
    },
    {
      "name": "/nodes/{node}/ceph/mds/{name}",
      "description": "nodes › {node} › ceph › mds › {name}"
    },
    {
      "name": "/nodes/{node}/ceph/mgr",
      "description": "nodes › {node} › ceph › mgr"
    },
    {
      "name": "/nodes/{node}/ceph/mgr/{id}",
      "description": "nodes › {node} › ceph › mgr › {id}"
    },
    {
      "name": "/nodes/{node}/ceph/mon",
      "description": "nodes › {node} › ceph › mon"
    },
    {
      "name": "/nodes/{node}/ceph/mon/{monid}",
      "description": "nodes › {node} › ceph › mon › {monid}"
    },
    {
      "name": "/nodes/{node}/ceph/osd",
      "description": "nodes › {node} › ceph › osd"
    },
    {
      "name": "/nodes/{node}/ceph/osd/{osdid}",
      "description": "nodes › {node} › ceph › osd › {osdid}"
    },
    {
      "name": "/nodes/{node}/ceph/osd/{osdid}/in",
      "description": "nodes › {node} › ceph › osd › {osdid} › in"
    },
    {
      "name": "/nodes/{node}/ceph/osd/{osdid}/lv-info",
      "description": "nodes › {node} › ceph › osd › {osdid} › lv-info"
    },
    {
      "name": "/nodes/{node}/ceph/osd/{osdid}/metadata",
      "description": "nodes › {node} › ceph › osd › {osdid} › metadata"
    },
    {
      "name": "/nodes/{node}/ceph/osd/{osdid}/out",
      "description": "nodes › {node} › ceph › osd › {osdid} › out"
    },
    {
      "name": "/nodes/{node}/ceph/osd/{osdid}/scrub",
      "description": "nodes › {node} › ceph › osd › {osdid} › scrub"
    },
    {
      "name": "/nodes/{node}/ceph/pool",
      "description": "nodes › {node} › ceph › pool"
    },
    {
      "name": "/nodes/{node}/ceph/pool/{name}",
      "description": "nodes › {node} › ceph › pool › {name}"
    },
    {
      "name": "/nodes/{node}/ceph/pool/{name}/status",
      "description": "nodes › {node} › ceph › pool › {name} › status"
    },
    {
      "name": "/nodes/{node}/ceph/restart",
      "description": "nodes › {node} › ceph › restart"
    },
    {
      "name": "/nodes/{node}/ceph/rules",
      "description": "nodes › {node} › ceph › rules"
    },
    {
      "name": "/nodes/{node}/ceph/start",
      "description": "nodes › {node} › ceph › start"
    },
    {
      "name": "/nodes/{node}/ceph/status",
      "description": "nodes › {node} › ceph › status"
    },
    {
      "name": "/nodes/{node}/ceph/stop",
      "description": "nodes › {node} › ceph › stop"
    },
    {
      "name": "/nodes/{node}/certificates",
      "description": "nodes › {node} › certificates"
    },
    {
      "name": "/nodes/{node}/certificates/acme",
      "description": "nodes › {node} › certificates › acme"
    },
    {
      "name": "/nodes/{node}/certificates/acme/certificate",
      "description": "nodes › {node} › certificates › acme › certificate"
    },
    {
      "name": "/nodes/{node}/certificates/custom",
      "description": "nodes › {node} › certificates › custom"
    },
    {
      "name": "/nodes/{node}/certificates/info",
      "description": "nodes › {node} › certificates › info"
    },
    {
      "name": "/nodes/{node}/config",
      "description": "nodes › {node} › config"
    },
    {
      "name": "/nodes/{node}/disks",
      "description": "nodes › {node} › disks"
    },
    {
      "name": "/nodes/{node}/disks/directory",
      "description": "nodes › {node} › disks › directory"
    },
    {
      "name": "/nodes/{node}/disks/directory/{name}",
      "description": "nodes › {node} › disks › directory › {name}"
    },
    {
      "name": "/nodes/{node}/disks/initgpt",
      "description": "nodes › {node} › disks › initgpt"
    },
    {
      "name": "/nodes/{node}/disks/list",
      "description": "nodes › {node} › disks › list"
    },
    {
      "name": "/nodes/{node}/disks/lvm",
      "description": "nodes › {node} › disks › lvm"
    },
    {
      "name": "/nodes/{node}/disks/lvm/{name}",
      "description": "nodes › {node} › disks › lvm › {name}"
    },
    {
      "name": "/nodes/{node}/disks/lvmthin",
      "description": "nodes › {node} › disks › lvmthin"
    },
    {
      "name": "/nodes/{node}/disks/lvmthin/{name}",
      "description": "nodes › {node} › disks › lvmthin › {name}"
    },
    {
      "name": "/nodes/{node}/disks/smart",
      "description": "nodes › {node} › disks › smart"
    },
    {
      "name": "/nodes/{node}/disks/wipedisk",
      "description": "nodes › {node} › disks › wipedisk"
    },
    {
      "name": "/nodes/{node}/disks/zfs",
      "description": "nodes › {node} › disks › zfs"
    },
    {
      "name": "/nodes/{node}/disks/zfs/{name}",
      "description": "nodes › {node} › disks › zfs › {name}"
    },
    {
      "name": "/nodes/{node}/dns",
      "description": "nodes › {node} › dns"
    },
    {
      "name": "/nodes/{node}/execute",
      "description": "nodes › {node} › execute"
    },
    {
      "name": "/nodes/{node}/firewall",
      "description": "nodes › {node} › firewall"
    },
    {
      "name": "/nodes/{node}/firewall/log",
      "description": "nodes › {node} › firewall › log"
    },
    {
      "name": "/nodes/{node}/firewall/options",
      "description": "nodes › {node} › firewall › options"
    },
    {
      "name": "/nodes/{node}/firewall/rules",
      "description": "nodes › {node} › firewall › rules"
    },
    {
      "name": "/nodes/{node}/firewall/rules/{pos}",
      "description": "nodes › {node} › firewall › rules › {pos}"
    },
    {
      "name": "/nodes/{node}/hardware",
      "description": "nodes › {node} › hardware"
    },
    {
      "name": "/nodes/{node}/hardware/pci",
      "description": "nodes › {node} › hardware › pci"
    },
    {
      "name": "/nodes/{node}/hardware/pci/{pci-id-or-mapping}",
      "description": "nodes › {node} › hardware › pci › {pci-id-or-mapping}"
    },
    {
      "name": "/nodes/{node}/hardware/pci/{pci-id-or-mapping}/mdev",
      "description": "nodes › {node} › hardware › pci › {pci-id-or-mapping} › mdev"
    },
    {
      "name": "/nodes/{node}/hardware/usb",
      "description": "nodes › {node} › hardware › usb"
    },
    {
      "name": "/nodes/{node}/hosts",
      "description": "nodes › {node} › hosts"
    },
    {
      "name": "/nodes/{node}/journal",
      "description": "nodes › {node} › journal"
    },
    {
      "name": "/nodes/{node}/lxc",
      "description": "nodes › {node} › lxc"
    },
    {
      "name": "/nodes/{node}/lxc/{vmid}",
      "description": "nodes › {node} › lxc › {vmid}"
    },
    {
      "name": "/nodes/{node}/lxc/{vmid}/clone",
      "description": "nodes › {node} › lxc › {vmid} › clone"
    },
    {
      "name": "/nodes/{node}/lxc/{vmid}/config",
      "description": "nodes › {node} › lxc › {vmid} › config"
    },
    {
      "name": "/nodes/{node}/lxc/{vmid}/feature",
      "description": "nodes › {node} › lxc › {vmid} › feature"
    },
    {
      "name": "/nodes/{node}/lxc/{vmid}/firewall",
      "description": "nodes › {node} › lxc › {vmid} › firewall"
    },
    {
      "name": "/nodes/{node}/lxc/{vmid}/firewall/aliases",
      "description": "nodes › {node} › lxc › {vmid} › firewall › aliases"
    },
    {
      "name": "/nodes/{node}/lxc/{vmid}/firewall/aliases/{name}",
      "description": "nodes › {node} › lxc › {vmid} › firewall › aliases › {name}"
    },
    {
      "name": "/nodes/{node}/lxc/{vmid}/firewall/ipset",
      "description": "nodes › {node} › lxc › {vmid} › firewall › ipset"
    },
    {
      "name": "/nodes/{node}/lxc/{vmid}/firewall/ipset/{name}",
      "description": "nodes › {node} › lxc › {vmid} › firewall › ipset › {name}"
    },
    {
      "name": "/nodes/{node}/lxc/{vmid}/firewall/ipset/{name}/{cidr}",
      "description": "nodes › {node} › lxc › {vmid} › firewall › ipset › {name} › {cidr}"
    },
    {
      "name": "/nodes/{node}/lxc/{vmid}/firewall/log",
      "description": "nodes › {node} › lxc › {vmid} › firewall › log"
    },
    {
      "name": "/nodes/{node}/lxc/{vmid}/firewall/options",
      "description": "nodes › {node} › lxc › {vmid} › firewall › options"
    },
    {
      "name": "/nodes/{node}/lxc/{vmid}/firewall/refs",
      "description": "nodes › {node} › lxc › {vmid} › firewall › refs"
    },
    {
      "name": "/nodes/{node}/lxc/{vmid}/firewall/rules",
      "description": "nodes › {node} › lxc › {vmid} › firewall › rules"
    },
    {
      "name": "/nodes/{node}/lxc/{vmid}/firewall/rules/{pos}",
      "description": "nodes › {node} › lxc › {vmid} › firewall › rules › {pos}"
    },
    {
      "name": "/nodes/{node}/lxc/{vmid}/interfaces",
      "description": "nodes › {node} › lxc › {vmid} › interfaces"
    },
    {
      "name": "/nodes/{node}/lxc/{vmid}/migrate",
      "description": "nodes › {node} › lxc › {vmid} › migrate"
    },
    {
      "name": "/nodes/{node}/lxc/{vmid}/move_volume",
      "description": "nodes › {node} › lxc › {vmid} › move_volume"
    },
    {
      "name": "/nodes/{node}/lxc/{vmid}/mtunnel",
      "description": "nodes › {node} › lxc › {vmid} › mtunnel"
    },
    {
      "name": "/nodes/{node}/lxc/{vmid}/mtunnelwebsocket",
      "description": "nodes › {node} › lxc › {vmid} › mtunnelwebsocket"
    },
    {
      "name": "/nodes/{node}/lxc/{vmid}/pending",
      "description": "nodes › {node} › lxc › {vmid} › pending"
    },
    {
      "name": "/nodes/{node}/lxc/{vmid}/remote_migrate",
      "description": "nodes › {node} › lxc › {vmid} › remote_migrate"
    },
    {
      "name": "/nodes/{node}/lxc/{vmid}/resize",
      "description": "nodes › {node} › lxc › {vmid} › resize"
    },
    {
      "name": "/nodes/{node}/lxc/{vmid}/rrd",
      "description": "nodes › {node} › lxc › {vmid} › rrd"
    },
    {
      "name": "/nodes/{node}/lxc/{vmid}/rrddata",
      "description": "nodes › {node} › lxc › {vmid} › rrddata"
    },
    {
      "name": "/nodes/{node}/lxc/{vmid}/snapshot",
      "description": "nodes › {node} › lxc › {vmid} › snapshot"
    },
    {
      "name": "/nodes/{node}/lxc/{vmid}/snapshot/{snapname}",
      "description": "nodes › {node} › lxc › {vmid} › snapshot › {snapname}"
    },
    {
      "name": "/nodes/{node}/lxc/{vmid}/snapshot/{snapname}/config",
      "description": "nodes › {node} › lxc › {vmid} › snapshot › {snapname} › config"
    },
    {
      "name": "/nodes/{node}/lxc/{vmid}/snapshot/{snapname}/rollback",
      "description": "nodes › {node} › lxc › {vmid} › snapshot › {snapname} › rollback"
    },
    {
      "name": "/nodes/{node}/lxc/{vmid}/spiceproxy",
      "description": "nodes › {node} › lxc › {vmid} › spiceproxy"
    },
    {
      "name": "/nodes/{node}/lxc/{vmid}/status",
      "description": "nodes › {node} › lxc › {vmid} › status"
    },
    {
      "name": "/nodes/{node}/lxc/{vmid}/status/current",
      "description": "nodes › {node} › lxc › {vmid} › status › current"
    },
    {
      "name": "/nodes/{node}/lxc/{vmid}/status/reboot",
      "description": "nodes › {node} › lxc › {vmid} › status › reboot"
    },
    {
      "name": "/nodes/{node}/lxc/{vmid}/status/resume",
      "description": "nodes › {node} › lxc › {vmid} › status › resume"
    },
    {
      "name": "/nodes/{node}/lxc/{vmid}/status/shutdown",
      "description": "nodes › {node} › lxc › {vmid} › status › shutdown"
    },
    {
      "name": "/nodes/{node}/lxc/{vmid}/status/start",
      "description": "nodes › {node} › lxc › {vmid} › status › start"
    },
    {
      "name": "/nodes/{node}/lxc/{vmid}/status/stop",
      "description": "nodes › {node} › lxc › {vmid} › status › stop"
    },
    {
      "name": "/nodes/{node}/lxc/{vmid}/status/suspend",
      "description": "nodes › {node} › lxc › {vmid} › status › suspend"
    },
    {
      "name": "/nodes/{node}/lxc/{vmid}/template",
      "description": "nodes › {node} › lxc › {vmid} › template"
    },
    {
      "name": "/nodes/{node}/lxc/{vmid}/termproxy",
      "description": "nodes › {node} › lxc › {vmid} › termproxy"
    },
    {
      "name": "/nodes/{node}/lxc/{vmid}/vncproxy",
      "description": "nodes › {node} › lxc › {vmid} › vncproxy"
    },
    {
      "name": "/nodes/{node}/lxc/{vmid}/vncwebsocket",
      "description": "nodes › {node} › lxc › {vmid} › vncwebsocket"
    },
    {
      "name": "/nodes/{node}/migrateall",
      "description": "nodes › {node} › migrateall"
    },
    {
      "name": "/nodes/{node}/netstat",
      "description": "nodes › {node} › netstat"
    },
    {
      "name": "/nodes/{node}/network",
      "description": "nodes › {node} › network"
    },
    {
      "name": "/nodes/{node}/network/{iface}",
      "description": "nodes › {node} › network › {iface}"
    },
    {
      "name": "/nodes/{node}/qemu",
      "description": "nodes › {node} › qemu"
    },
    {
      "name": "/nodes/{node}/qemu/{vmid}",
      "description": "nodes › {node} › qemu › {vmid}"
    },
    {
      "name": "/nodes/{node}/qemu/{vmid}/agent",
      "description": "nodes › {node} › qemu › {vmid} › agent"
    },
    {
      "name": "/nodes/{node}/qemu/{vmid}/agent/exec",
      "description": "nodes › {node} › qemu › {vmid} › agent › exec"
    },
    {
      "name": "/nodes/{node}/qemu/{vmid}/agent/exec-status",
      "description": "nodes › {node} › qemu › {vmid} › agent › exec-status"
    },
    {
      "name": "/nodes/{node}/qemu/{vmid}/agent/file-read",
      "description": "nodes › {node} › qemu › {vmid} › agent › file-read"
    },
    {
      "name": "/nodes/{node}/qemu/{vmid}/agent/file-write",
      "description": "nodes › {node} › qemu › {vmid} › agent › file-write"
    },
    {
      "name": "/nodes/{node}/qemu/{vmid}/agent/fsfreeze-freeze",
      "description": "nodes › {node} › qemu › {vmid} › agent › fsfreeze-freeze"
    },
    {
      "name": "/nodes/{node}/qemu/{vmid}/agent/fsfreeze-status",
      "description": "nodes › {node} › qemu › {vmid} › agent › fsfreeze-status"
    },
    {
      "name": "/nodes/{node}/qemu/{vmid}/agent/fsfreeze-thaw",
      "description": "nodes › {node} › qemu › {vmid} › agent › fsfreeze-thaw"
    },
    {
      "name": "/nodes/{node}/qemu/{vmid}/agent/fstrim",
      "description": "nodes › {node} › qemu › {vmid} › agent › fstrim"
    },
    {
      "name": "/nodes/{node}/qemu/{vmid}/agent/get-fsinfo",
      "description": "nodes › {node} › qemu › {vmid} › agent › get-fsinfo"
    },
    {
      "name": "/nodes/{node}/qemu/{vmid}/agent/get-host-name",
      "description": "nodes › {node} › qemu › {vmid} › agent › get-host-name"
    },
    {
      "name": "/nodes/{node}/qemu/{vmid}/agent/get-memory-block-info",
      "description": "nodes › {node} › qemu › {vmid} › agent › get-memory-block-info"
    },
    {
      "name": "/nodes/{node}/qemu/{vmid}/agent/get-memory-blocks",
      "description": "nodes › {node} › qemu › {vmid} › agent › get-memory-blocks"
    },
    {
      "name": "/nodes/{node}/qemu/{vmid}/agent/get-osinfo",
      "description": "nodes › {node} › qemu › {vmid} › agent › get-osinfo"
    },
    {
      "name": "/nodes/{node}/qemu/{vmid}/agent/get-time",
      "description": "nodes › {node} › qemu › {vmid} › agent › get-time"
    },
    {
      "name": "/nodes/{node}/qemu/{vmid}/agent/get-timezone",
      "description": "nodes › {node} › qemu › {vmid} › agent › get-timezone"
    },
    {
      "name": "/nodes/{node}/qemu/{vmid}/agent/get-users",
      "description": "nodes › {node} › qemu › {vmid} › agent › get-users"
    },
    {
      "name": "/nodes/{node}/qemu/{vmid}/agent/get-vcpus",
      "description": "nodes › {node} › qemu › {vmid} › agent › get-vcpus"
    },
    {
      "name": "/nodes/{node}/qemu/{vmid}/agent/info",
      "description": "nodes › {node} › qemu › {vmid} › agent › info"
    },
    {
      "name": "/nodes/{node}/qemu/{vmid}/agent/network-get-interfaces",
      "description": "nodes › {node} › qemu › {vmid} › agent › network-get-interfaces"
    },
    {
      "name": "/nodes/{node}/qemu/{vmid}/agent/ping",
      "description": "nodes › {node} › qemu › {vmid} › agent › ping"
    },
    {
      "name": "/nodes/{node}/qemu/{vmid}/agent/set-user-password",
      "description": "nodes › {node} › qemu › {vmid} › agent › set-user-password"
    },
    {
      "name": "/nodes/{node}/qemu/{vmid}/agent/shutdown",
      "description": "nodes › {node} › qemu › {vmid} › agent › shutdown"
    },
    {
      "name": "/nodes/{node}/qemu/{vmid}/agent/suspend-disk",
      "description": "nodes › {node} › qemu › {vmid} › agent › suspend-disk"
    },
    {
      "name": "/nodes/{node}/qemu/{vmid}/agent/suspend-hybrid",
      "description": "nodes › {node} › qemu › {vmid} › agent › suspend-hybrid"
    },
    {
      "name": "/nodes/{node}/qemu/{vmid}/agent/suspend-ram",
      "description": "nodes › {node} › qemu › {vmid} › agent › suspend-ram"
    },
    {
      "name": "/nodes/{node}/qemu/{vmid}/clone",
      "description": "nodes › {node} › qemu › {vmid} › clone"
    },
    {
      "name": "/nodes/{node}/qemu/{vmid}/cloudinit",
      "description": "nodes › {node} › qemu › {vmid} › cloudinit"
    },
    {
      "name": "/nodes/{node}/qemu/{vmid}/cloudinit/dump",
      "description": "nodes › {node} › qemu › {vmid} › cloudinit › dump"
    },
    {
      "name": "/nodes/{node}/qemu/{vmid}/config",
      "description": "nodes › {node} › qemu › {vmid} › config"
    },
    {
      "name": "/nodes/{node}/qemu/{vmid}/dbus-vmstate",
      "description": "nodes › {node} › qemu › {vmid} › dbus-vmstate"
    },
    {
      "name": "/nodes/{node}/qemu/{vmid}/feature",
      "description": "nodes › {node} › qemu › {vmid} › feature"
    },
    {
      "name": "/nodes/{node}/qemu/{vmid}/firewall",
      "description": "nodes › {node} › qemu › {vmid} › firewall"
    },
    {
      "name": "/nodes/{node}/qemu/{vmid}/firewall/aliases",
      "description": "nodes › {node} › qemu › {vmid} › firewall › aliases"
    },
    {
      "name": "/nodes/{node}/qemu/{vmid}/firewall/aliases/{name}",
      "description": "nodes › {node} › qemu › {vmid} › firewall › aliases › {name}"
    },
    {
      "name": "/nodes/{node}/qemu/{vmid}/firewall/ipset",
      "description": "nodes › {node} › qemu › {vmid} › firewall › ipset"
    },
    {
      "name": "/nodes/{node}/qemu/{vmid}/firewall/ipset/{name}",
      "description": "nodes › {node} › qemu › {vmid} › firewall › ipset › {name}"
    },
    {
      "name": "/nodes/{node}/qemu/{vmid}/firewall/ipset/{name}/{cidr}",
      "description": "nodes › {node} › qemu › {vmid} › firewall › ipset › {name} › {cidr}"
    },
    {
      "name": "/nodes/{node}/qemu/{vmid}/firewall/log",
      "description": "nodes › {node} › qemu › {vmid} › firewall › log"
    },
    {
      "name": "/nodes/{node}/qemu/{vmid}/firewall/options",
      "description": "nodes › {node} › qemu › {vmid} › firewall › options"
    },
    {
      "name": "/nodes/{node}/qemu/{vmid}/firewall/refs",
      "description": "nodes › {node} › qemu › {vmid} › firewall › refs"
    },
    {
      "name": "/nodes/{node}/qemu/{vmid}/firewall/rules",
      "description": "nodes › {node} › qemu › {vmid} › firewall › rules"
    },
    {
      "name": "/nodes/{node}/qemu/{vmid}/firewall/rules/{pos}",
      "description": "nodes › {node} › qemu › {vmid} › firewall › rules › {pos}"
    },
    {
      "name": "/nodes/{node}/qemu/{vmid}/migrate",
      "description": "nodes › {node} › qemu › {vmid} › migrate"
    },
    {
      "name": "/nodes/{node}/qemu/{vmid}/monitor",
      "description": "nodes › {node} › qemu › {vmid} › monitor"
    },
    {
      "name": "/nodes/{node}/qemu/{vmid}/move_disk",
      "description": "nodes › {node} › qemu › {vmid} › move_disk"
    },
    {
      "name": "/nodes/{node}/qemu/{vmid}/mtunnel",
      "description": "nodes › {node} › qemu › {vmid} › mtunnel"
    },
    {
      "name": "/nodes/{node}/qemu/{vmid}/mtunnelwebsocket",
      "description": "nodes › {node} › qemu › {vmid} › mtunnelwebsocket"
    },
    {
      "name": "/nodes/{node}/qemu/{vmid}/pending",
      "description": "nodes › {node} › qemu › {vmid} › pending"
    },
    {
      "name": "/nodes/{node}/qemu/{vmid}/remote_migrate",
      "description": "nodes › {node} › qemu › {vmid} › remote_migrate"
    },
    {
      "name": "/nodes/{node}/qemu/{vmid}/resize",
      "description": "nodes › {node} › qemu › {vmid} › resize"
    },
    {
      "name": "/nodes/{node}/qemu/{vmid}/rrd",
      "description": "nodes › {node} › qemu › {vmid} › rrd"
    },
    {
      "name": "/nodes/{node}/qemu/{vmid}/rrddata",
      "description": "nodes › {node} › qemu › {vmid} › rrddata"
    },
    {
      "name": "/nodes/{node}/qemu/{vmid}/sendkey",
      "description": "nodes › {node} › qemu › {vmid} › sendkey"
    },
    {
      "name": "/nodes/{node}/qemu/{vmid}/snapshot",
      "description": "nodes › {node} › qemu › {vmid} › snapshot"
    },
    {
      "name": "/nodes/{node}/qemu/{vmid}/snapshot/{snapname}",
      "description": "nodes › {node} › qemu › {vmid} › snapshot › {snapname}"
    },
    {
      "name": "/nodes/{node}/qemu/{vmid}/snapshot/{snapname}/config",
      "description": "nodes › {node} › qemu › {vmid} › snapshot › {snapname} › config"
    },
    {
      "name": "/nodes/{node}/qemu/{vmid}/snapshot/{snapname}/rollback",
      "description": "nodes › {node} › qemu › {vmid} › snapshot › {snapname} › rollback"
    },
    {
      "name": "/nodes/{node}/qemu/{vmid}/spiceproxy",
      "description": "nodes › {node} › qemu › {vmid} › spiceproxy"
    },
    {
      "name": "/nodes/{node}/qemu/{vmid}/status",
      "description": "nodes › {node} › qemu › {vmid} › status"
    },
    {
      "name": "/nodes/{node}/qemu/{vmid}/status/current",
      "description": "nodes › {node} › qemu › {vmid} › status › current"
    },
    {
      "name": "/nodes/{node}/qemu/{vmid}/status/reboot",
      "description": "nodes › {node} › qemu › {vmid} › status › reboot"
    },
    {
      "name": "/nodes/{node}/qemu/{vmid}/status/reset",
      "description": "nodes › {node} › qemu › {vmid} › status › reset"
    },
    {
      "name": "/nodes/{node}/qemu/{vmid}/status/resume",
      "description": "nodes › {node} › qemu › {vmid} › status › resume"
    },
    {
      "name": "/nodes/{node}/qemu/{vmid}/status/shutdown",
      "description": "nodes › {node} › qemu › {vmid} › status › shutdown"
    },
    {
      "name": "/nodes/{node}/qemu/{vmid}/status/start",
      "description": "nodes › {node} › qemu › {vmid} › status › start"
    },
    {
      "name": "/nodes/{node}/qemu/{vmid}/status/stop",
      "description": "nodes › {node} › qemu › {vmid} › status › stop"
    },
    {
      "name": "/nodes/{node}/qemu/{vmid}/status/suspend",
      "description": "nodes › {node} › qemu › {vmid} › status › suspend"
    },
    {
      "name": "/nodes/{node}/qemu/{vmid}/template",
      "description": "nodes › {node} › qemu › {vmid} › template"
    },
    {
      "name": "/nodes/{node}/qemu/{vmid}/termproxy",
      "description": "nodes › {node} › qemu › {vmid} › termproxy"
    },
    {
      "name": "/nodes/{node}/qemu/{vmid}/unlink",
      "description": "nodes › {node} › qemu › {vmid} › unlink"
    },
    {
      "name": "/nodes/{node}/qemu/{vmid}/vncproxy",
      "description": "nodes › {node} › qemu › {vmid} › vncproxy"
    },
    {
      "name": "/nodes/{node}/qemu/{vmid}/vncwebsocket",
      "description": "nodes › {node} › qemu › {vmid} › vncwebsocket"
    },
    {
      "name": "/nodes/{node}/query-url-metadata",
      "description": "nodes › {node} › query-url-metadata"
    },
    {
      "name": "/nodes/{node}/replication",
      "description": "nodes › {node} › replication"
    },
    {
      "name": "/nodes/{node}/replication/{id}",
      "description": "nodes › {node} › replication › {id}"
    },
    {
      "name": "/nodes/{node}/replication/{id}/log",
      "description": "nodes › {node} › replication › {id} › log"
    },
    {
      "name": "/nodes/{node}/replication/{id}/schedule_now",
      "description": "nodes › {node} › replication › {id} › schedule_now"
    },
    {
      "name": "/nodes/{node}/replication/{id}/status",
      "description": "nodes › {node} › replication › {id} › status"
    },
    {
      "name": "/nodes/{node}/report",
      "description": "nodes › {node} › report"
    },
    {
      "name": "/nodes/{node}/rrd",
      "description": "nodes › {node} › rrd"
    },
    {
      "name": "/nodes/{node}/rrddata",
      "description": "nodes › {node} › rrddata"
    },
    {
      "name": "/nodes/{node}/scan",
      "description": "nodes › {node} › scan"
    },
    {
      "name": "/nodes/{node}/scan/cifs",
      "description": "nodes › {node} › scan › cifs"
    },
    {
      "name": "/nodes/{node}/scan/iscsi",
      "description": "nodes › {node} › scan › iscsi"
    },
    {
      "name": "/nodes/{node}/scan/lvm",
      "description": "nodes › {node} › scan › lvm"
    },
    {
      "name": "/nodes/{node}/scan/lvmthin",
      "description": "nodes › {node} › scan › lvmthin"
    },
    {
      "name": "/nodes/{node}/scan/nfs",
      "description": "nodes › {node} › scan › nfs"
    },
    {
      "name": "/nodes/{node}/scan/pbs",
      "description": "nodes › {node} › scan › pbs"
    },
    {
      "name": "/nodes/{node}/scan/zfs",
      "description": "nodes › {node} › scan › zfs"
    },
    {
      "name": "/nodes/{node}/sdn",
      "description": "nodes › {node} › sdn"
    },
    {
      "name": "/nodes/{node}/sdn/zones",
      "description": "nodes › {node} › sdn › zones"
    },
    {
      "name": "/nodes/{node}/sdn/zones/{zone}",
      "description": "nodes › {node} › sdn › zones › {zone}"
    },
    {
      "name": "/nodes/{node}/sdn/zones/{zone}/content",
      "description": "nodes › {node} › sdn › zones › {zone} › content"
    },
    {
      "name": "/nodes/{node}/services",
      "description": "nodes › {node} › services"
    },
    {
      "name": "/nodes/{node}/services/{service}",
      "description": "nodes › {node} › services › {service}"
    },
    {
      "name": "/nodes/{node}/services/{service}/reload",
      "description": "nodes › {node} › services › {service} › reload"
    },
    {
      "name": "/nodes/{node}/services/{service}/restart",
      "description": "nodes › {node} › services › {service} › restart"
    },
    {
      "name": "/nodes/{node}/services/{service}/start",
      "description": "nodes › {node} › services › {service} › start"
    },
    {
      "name": "/nodes/{node}/services/{service}/state",
      "description": "nodes › {node} › services › {service} › state"
    },
    {
      "name": "/nodes/{node}/services/{service}/stop",
      "description": "nodes › {node} › services › {service} › stop"
    },
    {
      "name": "/nodes/{node}/spiceshell",
      "description": "nodes › {node} › spiceshell"
    },
    {
      "name": "/nodes/{node}/startall",
      "description": "nodes › {node} › startall"
    },
    {
      "name": "/nodes/{node}/status",
      "description": "nodes › {node} › status"
    },
    {
      "name": "/nodes/{node}/stopall",
      "description": "nodes › {node} › stopall"
    },
    {
      "name": "/nodes/{node}/storage",
      "description": "nodes › {node} › storage"
    },
    {
      "name": "/nodes/{node}/storage/{storage}",
      "description": "nodes › {node} › storage › {storage}"
    },
    {
      "name": "/nodes/{node}/storage/{storage}/content",
      "description": "nodes › {node} › storage › {storage} › content"
    },
    {
      "name": "/nodes/{node}/storage/{storage}/content/{volume}",
      "description": "nodes › {node} › storage › {storage} › content › {volume}"
    },
    {
      "name": "/nodes/{node}/storage/{storage}/download-url",
      "description": "nodes › {node} › storage › {storage} › download-url"
    },
    {
      "name": "/nodes/{node}/storage/{storage}/file-restore/download",
      "description": "nodes › {node} › storage › {storage} › file-restore › download"
    },
    {
      "name": "/nodes/{node}/storage/{storage}/file-restore/list",
      "description": "nodes › {node} › storage › {storage} › file-restore › list"
    },
    {
      "name": "/nodes/{node}/storage/{storage}/import-metadata",
      "description": "nodes › {node} › storage › {storage} › import-metadata"
    },
    {
      "name": "/nodes/{node}/storage/{storage}/prunebackups",
      "description": "nodes › {node} › storage › {storage} › prunebackups"
    },
    {
      "name": "/nodes/{node}/storage/{storage}/rrd",
      "description": "nodes › {node} › storage › {storage} › rrd"
    },
    {
      "name": "/nodes/{node}/storage/{storage}/rrddata",
      "description": "nodes › {node} › storage › {storage} › rrddata"
    },
    {
      "name": "/nodes/{node}/storage/{storage}/status",
      "description": "nodes › {node} › storage › {storage} › status"
    },
    {
      "name": "/nodes/{node}/storage/{storage}/upload",
      "description": "nodes › {node} › storage › {storage} › upload"
    },
    {
      "name": "/nodes/{node}/subscription",
      "description": "nodes › {node} › subscription"
    },
    {
      "name": "/nodes/{node}/suspendall",
      "description": "nodes › {node} › suspendall"
    },
    {
      "name": "/nodes/{node}/syslog",
      "description": "nodes › {node} › syslog"
    },
    {
      "name": "/nodes/{node}/tasks",
      "description": "nodes › {node} › tasks"
    },
    {
      "name": "/nodes/{node}/tasks/{upid}",
      "description": "nodes › {node} › tasks › {upid}"
    },
    {
      "name": "/nodes/{node}/tasks/{upid}/log",
      "description": "nodes › {node} › tasks › {upid} › log"
    },
    {
      "name": "/nodes/{node}/tasks/{upid}/status",
      "description": "nodes › {node} › tasks › {upid} › status"
    },
    {
      "name": "/nodes/{node}/termproxy",
      "description": "nodes › {node} › termproxy"
    },
    {
      "name": "/nodes/{node}/time",
      "description": "nodes › {node} › time"
    },
    {
      "name": "/nodes/{node}/version",
      "description": "nodes › {node} › version"
    },
    {
      "name": "/nodes/{node}/vncshell",
      "description": "nodes › {node} › vncshell"
    },
    {
      "name": "/nodes/{node}/vncwebsocket",
      "description": "nodes › {node} › vncwebsocket"
    },
    {
      "name": "/nodes/{node}/vzdump",
      "description": "nodes › {node} › vzdump"
    },
    {
      "name": "/nodes/{node}/vzdump/defaults",
      "description": "nodes › {node} › vzdump › defaults"
    },
    {
      "name": "/nodes/{node}/vzdump/extractconfig",
      "description": "nodes › {node} › vzdump › extractconfig"
    },
    {
      "name": "/nodes/{node}/wakeonlan",
      "description": "nodes › {node} › wakeonlan"
    },
    {
      "name": "/pools",
      "description": "pools"
    },
    {
      "name": "/pools/{poolid}",
      "description": "pools › {poolid}"
    },
    {
      "name": "/storage",
      "description": "storage"
    },
    {
      "name": "/storage/{storage}",
      "description": "storage › {storage}"
    },
    {
      "name": "/version",
      "description": "version"
    }
  ],
  "paths": {
    "/access": {
      "get": {
        "operationId": "get-access",
        "summary": "index",
        "description": "Directory index.",
        "tags": [
          "/access"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "subdir": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "subdir"
                    ]
                  },
                  "x-proxmox-metadata": {
                    "links": [
                      {
                        "href": "{subdir}",
                        "rel": "child"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-access",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "security": [],
        "x-proxmox-permissions": {
          "all": [
            {
              "user": "all"
            }
          ]
        }
      }
    },
    "/access/acl": {
      "get": {
        "operationId": "get-access-acl",
        "summary": "read_acl",
        "description": "Get Access Control List (ACLs).",
        "tags": [
          "/access/acl"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "path": {
                        "type": "string",
                        "description": "Access control path"
                      },
                      "propagate": {
                        "type": "boolean",
                        "description": "Allow to propagate (inherit) permissions.",
                        "default": true,
                        "x-proxmox-optional": true
                      },
                      "roleid": {
                        "type": "string"
                      },
                      "type": {
                        "type": "string",
                        "enum": [
                          "user",
                          "group",
                          "token"
                        ]
                      },
                      "ugid": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "path",
                      "roleid",
                      "type",
                      "ugid"
                    ],
                    "additionalProperties": false
                  }
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-access-acl",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "security": [],
        "x-proxmox-permissions": {
          "all": [
            {
              "description": "The returned list is restricted to objects where you have rights to modify permissions.",
              "user": "all"
            }
          ]
        }
      },
      "put": {
        "operationId": "put-access-acl",
        "summary": "update_acl",
        "description": "Update Access Control List (add or remove permissions).",
        "tags": [
          "/access/acl"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "put-access-acl",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "delete": {
                    "type": "boolean",
                    "description": "Remove permissions (instead of adding it).",
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "groups": {
                    "type": "string",
                    "description": "List of groups.",
                    "format": "pve-groupid-list",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "path": {
                    "type": "string",
                    "description": "Access control path",
                    "x-proxmox-typetext": "<string>"
                  },
                  "propagate": {
                    "type": "boolean",
                    "description": "Allow to propagate (inherit) permissions.",
                    "default": true,
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "roles": {
                    "type": "string",
                    "description": "List of roles.",
                    "format": "pve-roleid-list",
                    "x-proxmox-typetext": "<string>"
                  },
                  "tokens": {
                    "type": "string",
                    "description": "List of API tokens.",
                    "format": "pve-tokenid-list",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "users": {
                    "type": "string",
                    "description": "List of users.",
                    "format": "pve-userid-list",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  }
                },
                "required": [
                  "path",
                  "roles"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm-modify",
                "{path}"
              ]
            }
          ]
        }
      }
    },
    "/access/domains": {
      "get": {
        "operationId": "get-access-domains",
        "summary": "index",
        "description": "Authentication domain index.",
        "tags": [
          "/access/domains"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "comment": {
                        "type": "string",
                        "description": "A comment. The GUI use this text when you select a domain (Realm) on the login window.",
                        "x-proxmox-optional": true
                      },
                      "realm": {
                        "type": "string"
                      },
                      "tfa": {
                        "type": "string",
                        "description": "Two-factor authentication provider.",
                        "enum": [
                          "yubico",
                          "oath"
                        ],
                        "x-proxmox-optional": true
                      },
                      "type": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "realm",
                      "type"
                    ]
                  },
                  "x-proxmox-metadata": {
                    "links": [
                      {
                        "href": "{realm}",
                        "rel": "child"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-access-domains",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "security": [],
        "x-proxmox-permissions": {
          "all": [
            {
              "description": "Anyone can access that, because we need that list for the login box (before the user is authenticated).",
              "user": "world"
            }
          ]
        }
      },
      "post": {
        "operationId": "post-access-domains",
        "summary": "create",
        "description": "Add an authentication server.",
        "tags": [
          "/access/domains"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "post-access-domains",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "acr-values": {
                    "type": "string",
                    "description": "Specifies the Authentication Context Class Reference values that theAuthorization Server is being requested to use for the Auth Request.",
                    "pattern": "^[^\\x00-\\x1F\\x7F <>#\"]*$",
                    "x-proxmox-optional": true
                  },
                  "autocreate": {
                    "type": "boolean",
                    "description": "Automatically create users if they do not exist.",
                    "default": false,
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "base_dn": {
                    "type": "string",
                    "description": "LDAP base domain name",
                    "maxLength": 256,
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "bind_dn": {
                    "type": "string",
                    "description": "LDAP bind domain name",
                    "maxLength": 256,
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "capath": {
                    "type": "string",
                    "description": "Path to the CA certificate store",
                    "default": "/etc/ssl/certs",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "case-sensitive": {
                    "type": "boolean",
                    "description": "username is case-sensitive",
                    "default": true,
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "cert": {
                    "type": "string",
                    "description": "Path to the client certificate",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "certkey": {
                    "type": "string",
                    "description": "Path to the client certificate key",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "check-connection": {
                    "type": "boolean",
                    "description": "Check bind connection to the server.",
                    "default": false,
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "client-id": {
                    "type": "string",
                    "description": "OpenID Client ID",
                    "maxLength": 256,
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "client-key": {
                    "type": "string",
                    "description": "OpenID Client Key",
                    "maxLength": 256,
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "comment": {
                    "type": "string",
                    "description": "Description.",
                    "maxLength": 4096,
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "default": {
                    "type": "boolean",
                    "description": "Use this as default realm",
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "domain": {
                    "type": "string",
                    "description": "AD domain name",
                    "maxLength": 256,
                    "pattern": "\\S+",
                    "x-proxmox-optional": true
                  },
                  "filter": {
                    "type": "string",
                    "description": "LDAP filter for user sync.",
                    "maxLength": 2048,
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "group_classes": {
                    "type": "string",
                    "description": "The objectclasses for groups.",
                    "default": "groupOfNames, group, univentionGroup, ipausergroup",
                    "format": "ldap-simple-attr-list",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "group_dn": {
                    "type": "string",
                    "description": "LDAP base domain name for group sync. If not set, the base_dn will be used.",
                    "maxLength": 256,
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "group_filter": {
                    "type": "string",
                    "description": "LDAP filter for group sync.",
                    "maxLength": 2048,
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "group_name_attr": {
                    "type": "string",
                    "description": "LDAP attribute representing a groups name. If not set or found, the first value of the DN will be used as name.",
                    "maxLength": 256,
                    "format": "ldap-simple-attr",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "groups-autocreate": {
                    "type": "boolean",
                    "description": "Automatically create groups if they do not exist.",
                    "default": false,
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "groups-claim": {
                    "type": "string",
                    "description": "OpenID claim used to retrieve groups with.",
                    "maxLength": 256,
                    "pattern": "(?^:[A-Za-z0-9\\.\\-_]+)",
                    "x-proxmox-optional": true
                  },
                  "groups-overwrite": {
                    "type": "boolean",
                    "description": "All groups will be overwritten for the user on login.",
                    "default": false,
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "issuer-url": {
                    "type": "string",
                    "description": "OpenID Issuer Url",
                    "maxLength": 256,
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "mode": {
                    "type": "string",
                    "description": "LDAP protocol mode.",
                    "enum": [
                      "ldap",
                      "ldaps",
                      "ldap+starttls"
                    ],
                    "default": "ldap",
                    "x-proxmox-optional": true
                  },
                  "password": {
                    "type": "string",
                    "description": "LDAP bind password. Will be stored in '/etc/pve/priv/realm/<REALM>.pw'.",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "port": {
                    "type": "integer",
                    "description": "Server port.",
                    "minimum": 1,
                    "maximum": 65535,
                    "x-proxmox-typetext": "<integer> (1 - 65535)",
                    "x-proxmox-optional": true
                  },
                  "prompt": {
                    "type": "string",
                    "description": "Specifies whether the Authorization Server prompts the End-User for reauthentication and consent.",
                    "pattern": "(?:none|login|consent|select_account|\\S+)",
                    "x-proxmox-optional": true
                  },
                  "query-userinfo": {
                    "type": "boolean",
                    "description": "Enables querying the userinfo endpoint for claims values.",
                    "default": true,
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "realm": {
                    "type": "string",
                    "description": "Authentication domain ID",
                    "maxLength": 32,
                    "format": "pve-realm",
                    "x-proxmox-typetext": "<string>"
                  },
                  "scopes": {
                    "type": "string",
                    "description": "Specifies the scopes (user details) that should be authorized and returned, for example 'email' or 'profile'.",
                    "default": "email profile",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "secure": {
                    "type": "boolean",
                    "description": "Use secure LDAPS protocol. DEPRECATED: use 'mode' instead.",
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "server1": {
                    "type": "string",
                    "description": "Server IP address (or DNS name)",
                    "maxLength": 256,
                    "format": "address",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "server2": {
                    "type": "string",
                    "description": "Fallback Server IP address (or DNS name)",
                    "maxLength": 256,
                    "format": "address",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "sslversion": {
                    "type": "string",
                    "description": "LDAPS TLS/SSL version. It's not recommended to use version older than 1.2!",
                    "enum": [
                      "tlsv1",
                      "tlsv1_1",
                      "tlsv1_2",
                      "tlsv1_3"
                    ],
                    "x-proxmox-optional": true
                  },
                  "sync-defaults-options": {
                    "type": "string",
                    "description": "The default options for behavior of synchronizations.",
                    "format": "realm-sync-options",
                    "x-proxmox-typetext": "[enable-new=<1|0>] [,full=<1|0>] [,purge=<1|0>] [,remove-vanished=([acl];[properties];[entry])|none] [,scope=<users|groups|both>]",
                    "x-proxmox-optional": true
                  },
                  "sync_attributes": {
                    "type": "string",
                    "description": "Comma separated list of key=value pairs for specifying which LDAP attributes map to which PVE user field. For example, to map the LDAP attribute 'mail' to PVEs 'email', write  'email=mail'. By default, each PVE user field is represented  by an LDAP attribute of the same name.",
                    "pattern": "\\w+=[^,]+(,\\s*\\w+=[^,]+)*",
                    "x-proxmox-optional": true
                  },
                  "tfa": {
                    "type": "string",
                    "description": "Use Two-factor authentication.",
                    "maxLength": 128,
                    "format": "pve-tfa-config",
                    "x-proxmox-typetext": "type=<TFATYPE> [,digits=<COUNT>] [,id=<ID>] [,key=<KEY>] [,step=<SECONDS>] [,url=<URL>]",
                    "x-proxmox-optional": true
                  },
                  "type": {
                    "type": "string",
                    "description": "Realm type.",
                    "enum": [
                      "ad",
                      "ldap",
                      "openid",
                      "pam",
                      "pve"
                    ]
                  },
                  "user_attr": {
                    "type": "string",
                    "description": "LDAP user attribute name",
                    "maxLength": 256,
                    "pattern": "\\S{2,}",
                    "x-proxmox-optional": true
                  },
                  "user_classes": {
                    "type": "string",
                    "description": "The objectclasses for users.",
                    "default": "inetorgperson, posixaccount, person, user",
                    "format": "ldap-simple-attr-list",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "username-claim": {
                    "type": "string",
                    "description": "OpenID claim used to generate the unique username.",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "verify": {
                    "type": "boolean",
                    "description": "Verify the server's SSL certificate",
                    "default": false,
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  }
                },
                "required": [
                  "realm",
                  "type"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/access/realm",
                [
                  "Realm.Allocate"
                ]
              ]
            }
          ]
        }
      }
    },
    "/access/domains/{realm}": {
      "delete": {
        "operationId": "delete-access-domains-realm",
        "summary": "delete",
        "description": "Delete an authentication server.",
        "tags": [
          "/access/domains/{realm}"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "delete-access-domains-realm",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "realm",
            "in": "path",
            "required": true,
            "description": "Authentication domain ID",
            "schema": {
              "type": "string",
              "description": "Authentication domain ID",
              "maxLength": 32,
              "format": "pve-realm",
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/access/realm",
                [
                  "Realm.Allocate"
                ]
              ]
            }
          ]
        }
      },
      "get": {
        "operationId": "get-access-domains-realm",
        "summary": "read",
        "description": "Get auth server configuration.",
        "tags": [
          "/access/domains/{realm}"
        ],
        "responses": {
          "200": {
            "description": "Successful response"
          }
        },
        "x-proxmox-endpoint-id": "get-access-domains-realm",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "realm",
            "in": "path",
            "required": true,
            "description": "Authentication domain ID",
            "schema": {
              "type": "string",
              "description": "Authentication domain ID",
              "maxLength": 32,
              "format": "pve-realm",
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "security": [],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/access/realm",
                [
                  "Realm.Allocate",
                  "Sys.Audit"
                ],
                "any",
                1
              ]
            }
          ]
        }
      },
      "put": {
        "operationId": "put-access-domains-realm",
        "summary": "update",
        "description": "Update authentication server settings.",
        "tags": [
          "/access/domains/{realm}"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "put-access-domains-realm",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "realm",
            "in": "path",
            "required": true,
            "description": "Authentication domain ID",
            "schema": {
              "type": "string",
              "description": "Authentication domain ID",
              "maxLength": 32,
              "format": "pve-realm",
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "acr-values": {
                    "type": "string",
                    "description": "Specifies the Authentication Context Class Reference values that theAuthorization Server is being requested to use for the Auth Request.",
                    "pattern": "^[^\\x00-\\x1F\\x7F <>#\"]*$",
                    "x-proxmox-optional": true
                  },
                  "autocreate": {
                    "type": "boolean",
                    "description": "Automatically create users if they do not exist.",
                    "default": false,
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "base_dn": {
                    "type": "string",
                    "description": "LDAP base domain name",
                    "maxLength": 256,
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "bind_dn": {
                    "type": "string",
                    "description": "LDAP bind domain name",
                    "maxLength": 256,
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "capath": {
                    "type": "string",
                    "description": "Path to the CA certificate store",
                    "default": "/etc/ssl/certs",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "case-sensitive": {
                    "type": "boolean",
                    "description": "username is case-sensitive",
                    "default": true,
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "cert": {
                    "type": "string",
                    "description": "Path to the client certificate",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "certkey": {
                    "type": "string",
                    "description": "Path to the client certificate key",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "check-connection": {
                    "type": "boolean",
                    "description": "Check bind connection to the server.",
                    "default": false,
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "client-id": {
                    "type": "string",
                    "description": "OpenID Client ID",
                    "maxLength": 256,
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "client-key": {
                    "type": "string",
                    "description": "OpenID Client Key",
                    "maxLength": 256,
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "comment": {
                    "type": "string",
                    "description": "Description.",
                    "maxLength": 4096,
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "default": {
                    "type": "boolean",
                    "description": "Use this as default realm",
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "delete": {
                    "type": "string",
                    "description": "A list of settings you want to delete.",
                    "maxLength": 4096,
                    "format": "pve-configid-list",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "digest": {
                    "type": "string",
                    "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
                    "maxLength": 64,
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "domain": {
                    "type": "string",
                    "description": "AD domain name",
                    "maxLength": 256,
                    "pattern": "\\S+",
                    "x-proxmox-optional": true
                  },
                  "filter": {
                    "type": "string",
                    "description": "LDAP filter for user sync.",
                    "maxLength": 2048,
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "group_classes": {
                    "type": "string",
                    "description": "The objectclasses for groups.",
                    "default": "groupOfNames, group, univentionGroup, ipausergroup",
                    "format": "ldap-simple-attr-list",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "group_dn": {
                    "type": "string",
                    "description": "LDAP base domain name for group sync. If not set, the base_dn will be used.",
                    "maxLength": 256,
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "group_filter": {
                    "type": "string",
                    "description": "LDAP filter for group sync.",
                    "maxLength": 2048,
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "group_name_attr": {
                    "type": "string",
                    "description": "LDAP attribute representing a groups name. If not set or found, the first value of the DN will be used as name.",
                    "maxLength": 256,
                    "format": "ldap-simple-attr",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "groups-autocreate": {
                    "type": "boolean",
                    "description": "Automatically create groups if they do not exist.",
                    "default": false,
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "groups-claim": {
                    "type": "string",
                    "description": "OpenID claim used to retrieve groups with.",
                    "maxLength": 256,
                    "pattern": "(?^:[A-Za-z0-9\\.\\-_]+)",
                    "x-proxmox-optional": true
                  },
                  "groups-overwrite": {
                    "type": "boolean",
                    "description": "All groups will be overwritten for the user on login.",
                    "default": false,
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "issuer-url": {
                    "type": "string",
                    "description": "OpenID Issuer Url",
                    "maxLength": 256,
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "mode": {
                    "type": "string",
                    "description": "LDAP protocol mode.",
                    "enum": [
                      "ldap",
                      "ldaps",
                      "ldap+starttls"
                    ],
                    "default": "ldap",
                    "x-proxmox-optional": true
                  },
                  "password": {
                    "type": "string",
                    "description": "LDAP bind password. Will be stored in '/etc/pve/priv/realm/<REALM>.pw'.",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "port": {
                    "type": "integer",
                    "description": "Server port.",
                    "minimum": 1,
                    "maximum": 65535,
                    "x-proxmox-typetext": "<integer> (1 - 65535)",
                    "x-proxmox-optional": true
                  },
                  "prompt": {
                    "type": "string",
                    "description": "Specifies whether the Authorization Server prompts the End-User for reauthentication and consent.",
                    "pattern": "(?:none|login|consent|select_account|\\S+)",
                    "x-proxmox-optional": true
                  },
                  "query-userinfo": {
                    "type": "boolean",
                    "description": "Enables querying the userinfo endpoint for claims values.",
                    "default": true,
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "scopes": {
                    "type": "string",
                    "description": "Specifies the scopes (user details) that should be authorized and returned, for example 'email' or 'profile'.",
                    "default": "email profile",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "secure": {
                    "type": "boolean",
                    "description": "Use secure LDAPS protocol. DEPRECATED: use 'mode' instead.",
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "server1": {
                    "type": "string",
                    "description": "Server IP address (or DNS name)",
                    "maxLength": 256,
                    "format": "address",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "server2": {
                    "type": "string",
                    "description": "Fallback Server IP address (or DNS name)",
                    "maxLength": 256,
                    "format": "address",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "sslversion": {
                    "type": "string",
                    "description": "LDAPS TLS/SSL version. It's not recommended to use version older than 1.2!",
                    "enum": [
                      "tlsv1",
                      "tlsv1_1",
                      "tlsv1_2",
                      "tlsv1_3"
                    ],
                    "x-proxmox-optional": true
                  },
                  "sync-defaults-options": {
                    "type": "string",
                    "description": "The default options for behavior of synchronizations.",
                    "format": "realm-sync-options",
                    "x-proxmox-typetext": "[enable-new=<1|0>] [,full=<1|0>] [,purge=<1|0>] [,remove-vanished=([acl];[properties];[entry])|none] [,scope=<users|groups|both>]",
                    "x-proxmox-optional": true
                  },
                  "sync_attributes": {
                    "type": "string",
                    "description": "Comma separated list of key=value pairs for specifying which LDAP attributes map to which PVE user field. For example, to map the LDAP attribute 'mail' to PVEs 'email', write  'email=mail'. By default, each PVE user field is represented  by an LDAP attribute of the same name.",
                    "pattern": "\\w+=[^,]+(,\\s*\\w+=[^,]+)*",
                    "x-proxmox-optional": true
                  },
                  "tfa": {
                    "type": "string",
                    "description": "Use Two-factor authentication.",
                    "maxLength": 128,
                    "format": "pve-tfa-config",
                    "x-proxmox-typetext": "type=<TFATYPE> [,digits=<COUNT>] [,id=<ID>] [,key=<KEY>] [,step=<SECONDS>] [,url=<URL>]",
                    "x-proxmox-optional": true
                  },
                  "user_attr": {
                    "type": "string",
                    "description": "LDAP user attribute name",
                    "maxLength": 256,
                    "pattern": "\\S{2,}",
                    "x-proxmox-optional": true
                  },
                  "user_classes": {
                    "type": "string",
                    "description": "The objectclasses for users.",
                    "default": "inetorgperson, posixaccount, person, user",
                    "format": "ldap-simple-attr-list",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "verify": {
                    "type": "boolean",
                    "description": "Verify the server's SSL certificate",
                    "default": false,
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/access/realm",
                [
                  "Realm.Allocate"
                ]
              ]
            }
          ]
        }
      }
    },
    "/access/domains/{realm}/sync": {
      "post": {
        "operationId": "post-access-domains-realm-sync",
        "summary": "sync",
        "description": "Syncs users and/or groups from the configured LDAP to user.cfg. NOTE: Synced groups will have the name 'name-$realm', so make sure those groups do not exist to prevent overwriting.",
        "tags": [
          "/access/domains/{realm}/sync"
        ],
        "responses": {
          "200": {
            "description": "Worker Task-UPID",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Worker Task-UPID"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "post-access-domains-realm-sync",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "realm",
            "in": "path",
            "required": true,
            "description": "Authentication domain ID",
            "schema": {
              "type": "string",
              "description": "Authentication domain ID",
              "maxLength": 32,
              "format": "pve-realm",
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "dry-run": {
                    "type": "boolean",
                    "description": "If set, does not write anything.",
                    "default": false,
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "enable-new": {
                    "type": "boolean",
                    "description": "Enable newly synced users immediately.",
                    "default": "1",
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "full": {
                    "type": "boolean",
                    "description": "DEPRECATED: use 'remove-vanished' instead. If set, uses the LDAP Directory as source of truth, deleting users or groups not returned from the sync and removing all locally modified properties of synced users. If not set, only syncs information which is present in the synced data, and does not delete or modify anything else.",
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "purge": {
                    "type": "boolean",
                    "description": "DEPRECATED: use 'remove-vanished' instead. Remove ACLs for users or groups which were removed from the config during a sync.",
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "remove-vanished": {
                    "type": "string",
                    "description": "A semicolon-separated list of things to remove when they or the user vanishes during a sync. The following values are possible: 'entry' removes the user/group when not returned from the sync. 'properties' removes the set properties on existing user/group that do not appear in the source (even custom ones). 'acl' removes acls when the user/group is not returned from the sync. Instead of a list it also can be 'none' (the default).",
                    "default": "none",
                    "pattern": "(?:(?:(?:acl|properties|entry);)*(?:acl|properties|entry))|none",
                    "x-proxmox-typetext": "([acl];[properties];[entry])|none",
                    "x-proxmox-optional": true
                  },
                  "scope": {
                    "type": "string",
                    "description": "Select what to sync.",
                    "enum": [
                      "users",
                      "groups",
                      "both"
                    ],
                    "x-proxmox-optional": true
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "description": "'Realm.AllocateUser' on '/access/realm/<realm>' and  'User.Modify' permissions to '/access/groups/'.",
              "check": [
                "and",
                [
                  "perm",
                  "/access/realm/{realm}",
                  [
                    "Realm.AllocateUser"
                  ]
                ],
                [
                  "perm",
                  "/access/groups",
                  [
                    "User.Modify"
                  ]
                ]
              ]
            }
          ]
        }
      }
    },
    "/access/groups": {
      "get": {
        "operationId": "get-access-groups",
        "summary": "index",
        "description": "Group index.",
        "tags": [
          "/access/groups"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "comment": {
                        "type": "string",
                        "x-proxmox-optional": true
                      },
                      "groupid": {
                        "type": "string",
                        "format": "pve-groupid"
                      },
                      "users": {
                        "type": "string",
                        "description": "list of users which form this group",
                        "format": "pve-userid-list",
                        "x-proxmox-optional": true
                      }
                    },
                    "required": [
                      "groupid"
                    ]
                  },
                  "x-proxmox-metadata": {
                    "links": [
                      {
                        "href": "{groupid}",
                        "rel": "child"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-access-groups",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "security": [],
        "x-proxmox-permissions": {
          "all": [
            {
              "description": "The returned list is restricted to groups where you have 'User.Modify', 'Sys.Audit'  or 'Group.Allocate' permissions on /access/groups/<group>.",
              "user": "all"
            }
          ]
        }
      },
      "post": {
        "operationId": "post-access-groups",
        "summary": "create_group",
        "description": "Create new group.",
        "tags": [
          "/access/groups"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "post-access-groups",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "comment": {
                    "type": "string",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "groupid": {
                    "type": "string",
                    "format": "pve-groupid",
                    "x-proxmox-typetext": "<string>"
                  }
                },
                "required": [
                  "groupid"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/access/groups",
                [
                  "Group.Allocate"
                ]
              ]
            }
          ]
        }
      }
    },
    "/access/groups/{groupid}": {
      "delete": {
        "operationId": "delete-access-groups-groupid",
        "summary": "delete_group",
        "description": "Delete group.",
        "tags": [
          "/access/groups/{groupid}"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "delete-access-groups-groupid",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "groupid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "pve-groupid",
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/access/groups",
                [
                  "Group.Allocate"
                ]
              ]
            }
          ]
        }
      },
      "get": {
        "operationId": "get-access-groups-groupid",
        "summary": "read_group",
        "description": "Get group configuration.",
        "tags": [
          "/access/groups/{groupid}"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "comment": {
                      "type": "string",
                      "x-proxmox-optional": true
                    },
                    "members": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "description": "Full User ID, in the `name@realm` format.",
                        "maxLength": 64,
                        "format": "pve-userid"
                      }
                    }
                  },
                  "required": [
                    "members"
                  ],
                  "additionalProperties": false
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-access-groups-groupid",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "groupid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "pve-groupid",
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "security": [],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/access/groups",
                [
                  "Sys.Audit",
                  "Group.Allocate"
                ],
                "any",
                1
              ]
            }
          ]
        }
      },
      "put": {
        "operationId": "put-access-groups-groupid",
        "summary": "update_group",
        "description": "Update group data.",
        "tags": [
          "/access/groups/{groupid}"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "put-access-groups-groupid",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "groupid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "pve-groupid",
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "comment": {
                    "type": "string",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/access/groups",
                [
                  "Group.Allocate"
                ]
              ]
            }
          ]
        }
      }
    },
    "/access/openid": {
      "get": {
        "operationId": "get-access-openid",
        "summary": "index",
        "description": "Directory index.",
        "tags": [
          "/access/openid"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "subdir": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "subdir"
                    ]
                  },
                  "x-proxmox-metadata": {
                    "links": [
                      {
                        "href": "{subdir}",
                        "rel": "child"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-access-openid",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "security": [],
        "x-proxmox-permissions": {
          "all": [
            {
              "user": "all"
            }
          ]
        }
      }
    },
    "/access/openid/auth-url": {
      "post": {
        "operationId": "post-access-openid-auth-url",
        "summary": "auth_url",
        "description": "Get the OpenId Authorization Url for the specified realm.",
        "tags": [
          "/access/openid/auth-url"
        ],
        "responses": {
          "200": {
            "description": "Redirection URL.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Redirection URL."
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "post-access-openid-auth-url",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "realm": {
                    "type": "string",
                    "description": "Authentication domain ID",
                    "maxLength": 32,
                    "format": "pve-realm",
                    "x-proxmox-typetext": "<string>"
                  },
                  "redirect-url": {
                    "type": "string",
                    "description": "Redirection Url. The client should set this to the used server url (location.origin).",
                    "maxLength": 255,
                    "x-proxmox-typetext": "<string>"
                  }
                },
                "required": [
                  "realm",
                  "redirect-url"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "user": "world"
            }
          ]
        }
      }
    },
    "/access/openid/login": {
      "post": {
        "operationId": "post-access-openid-login",
        "summary": "login",
        "description": " Verify OpenID authorization code and create a ticket.",
        "tags": [
          "/access/openid/login"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "CSRFPreventionToken": {
                      "type": "string"
                    },
                    "cap": {
                      "type": "object"
                    },
                    "clustername": {
                      "type": "string",
                      "x-proxmox-optional": true
                    },
                    "ticket": {
                      "type": "string"
                    },
                    "username": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "CSRFPreventionToken",
                    "cap",
                    "ticket",
                    "username"
                  ]
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "post-access-openid-login",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "code": {
                    "type": "string",
                    "description": "OpenId authorization code.",
                    "maxLength": 4096,
                    "x-proxmox-typetext": "<string>"
                  },
                  "redirect-url": {
                    "type": "string",
                    "description": "Redirection Url. The client should set this to the used server url (location.origin).",
                    "maxLength": 255,
                    "x-proxmox-typetext": "<string>"
                  },
                  "state": {
                    "type": "string",
                    "description": "OpenId state.",
                    "maxLength": 1024,
                    "x-proxmox-typetext": "<string>"
                  }
                },
                "required": [
                  "code",
                  "redirect-url",
                  "state"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "user": "world"
            }
          ]
        }
      }
    },
    "/access/password": {
      "put": {
        "operationId": "put-access-password",
        "summary": "change_password",
        "description": "Change user password.",
        "tags": [
          "/access/password"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "put-access-password",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "confirmation-password": {
                    "type": "string",
                    "description": "The current password of the user performing the change.",
                    "minLength": 5,
                    "maxLength": 64,
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "password": {
                    "type": "string",
                    "description": "The new password.",
                    "minLength": 8,
                    "maxLength": 64,
                    "x-proxmox-typetext": "<string>"
                  },
                  "userid": {
                    "type": "string",
                    "description": "Full User ID, in the `name@realm` format.",
                    "maxLength": 64,
                    "format": "pve-userid",
                    "x-proxmox-typetext": "<string>"
                  }
                },
                "required": [
                  "password",
                  "userid"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "security": [
          {
            "PVEAuthCookie": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "description": "Each user is allowed to change their own password. A user can change the password of another user if they have 'Realm.AllocateUser' (on the realm of user <userid>) and 'User.Modify' permission on /access/groups/<group> on a group where user <userid> is member of. For the PAM realm, a password change does not take  effect cluster-wide, but only applies to the local node.",
              "check": [
                "or",
                [
                  "userid-param",
                  "self"
                ],
                [
                  "and",
                  [
                    "userid-param",
                    "Realm.AllocateUser"
                  ],
                  [
                    "userid-group",
                    [
                      "User.Modify"
                    ]
                  ]
                ]
              ]
            }
          ]
        }
      }
    },
    "/access/permissions": {
      "get": {
        "operationId": "get-access-permissions",
        "summary": "permissions",
        "description": "Retrieve effective permissions of given user/token.",
        "tags": [
          "/access/permissions"
        ],
        "responses": {
          "200": {
            "description": "Map of \"path\" => (Map of \"privilege\" => \"propagate boolean\").",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Map of \"path\" => (Map of \"privilege\" => \"propagate boolean\")."
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-access-permissions",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "path",
            "in": "query",
            "required": false,
            "description": "Only dump this specific path, not the whole tree.",
            "schema": {
              "type": "string",
              "description": "Only dump this specific path, not the whole tree.",
              "x-proxmox-typetext": "<string>",
              "x-proxmox-optional": true
            }
          },
          {
            "name": "userid",
            "in": "query",
            "required": false,
            "description": "User ID or full API token ID",
            "schema": {
              "type": "string",
              "description": "User ID or full API token ID",
              "pattern": "(?^:^(?^:[^\\s:/]+)\\@(?^:[A-Za-z][A-Za-z0-9\\.\\-_]+)(?:!(?^:[A-Za-z][A-Za-z0-9\\.\\-_]+))?$)",
              "x-proxmox-optional": true
            }
          }
        ],
        "security": [],
        "x-proxmox-permissions": {
          "all": [
            {
              "description": "Each user/token is allowed to dump their own permissions (or that of owned tokens). A user can dump the permissions of another user or their tokens if they have 'Sys.Audit' permission on /access.",
              "user": "all"
            }
          ]
        }
      }
    },
    "/access/roles": {
      "get": {
        "operationId": "get-access-roles",
        "summary": "index",
        "description": "Role index.",
        "tags": [
          "/access/roles"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "privs": {
                        "type": "string",
                        "format": "pve-priv-list",
                        "x-proxmox-optional": true
                      },
                      "roleid": {
                        "type": "string",
                        "format": "pve-roleid"
                      },
                      "special": {
                        "type": "boolean",
                        "default": false,
                        "x-proxmox-optional": true
                      }
                    },
                    "required": [
                      "roleid"
                    ]
                  },
                  "x-proxmox-metadata": {
                    "links": [
                      {
                        "href": "{roleid}",
                        "rel": "child"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-access-roles",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "security": [],
        "x-proxmox-permissions": {
          "all": [
            {
              "user": "all"
            }
          ]
        }
      },
      "post": {
        "operationId": "post-access-roles",
        "summary": "create_role",
        "description": "Create new role.",
        "tags": [
          "/access/roles"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "post-access-roles",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "privs": {
                    "type": "string",
                    "format": "pve-priv-list",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "roleid": {
                    "type": "string",
                    "format": "pve-roleid",
                    "x-proxmox-typetext": "<string>"
                  }
                },
                "required": [
                  "roleid"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/access",
                [
                  "Sys.Modify"
                ]
              ]
            }
          ]
        }
      }
    },
    "/access/roles/{roleid}": {
      "delete": {
        "operationId": "delete-access-roles-roleid",
        "summary": "delete_role",
        "description": "Delete role.",
        "tags": [
          "/access/roles/{roleid}"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "delete-access-roles-roleid",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "roleid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "pve-roleid",
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/access",
                [
                  "Sys.Modify"
                ]
              ]
            }
          ]
        }
      },
      "get": {
        "operationId": "get-access-roles-roleid",
        "summary": "read_role",
        "description": "Get role configuration.",
        "tags": [
          "/access/roles/{roleid}"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Datastore.Allocate": {
                      "type": "boolean",
                      "x-proxmox-optional": true
                    },
                    "Datastore.AllocateSpace": {
                      "type": "boolean",
                      "x-proxmox-optional": true
                    },
                    "Datastore.AllocateTemplate": {
                      "type": "boolean",
                      "x-proxmox-optional": true
                    },
                    "Datastore.Audit": {
                      "type": "boolean",
                      "x-proxmox-optional": true
                    },
                    "Group.Allocate": {
                      "type": "boolean",
                      "x-proxmox-optional": true
                    },
                    "Mapping.Audit": {
                      "type": "boolean",
                      "x-proxmox-optional": true
                    },
                    "Mapping.Modify": {
                      "type": "boolean",
                      "x-proxmox-optional": true
                    },
                    "Mapping.Use": {
                      "type": "boolean",
                      "x-proxmox-optional": true
                    },
                    "Permissions.Modify": {
                      "type": "boolean",
                      "x-proxmox-optional": true
                    },
                    "Pool.Allocate": {
                      "type": "boolean",
                      "x-proxmox-optional": true
                    },
                    "Pool.Audit": {
                      "type": "boolean",
                      "x-proxmox-optional": true
                    },
                    "Realm.Allocate": {
                      "type": "boolean",
                      "x-proxmox-optional": true
                    },
                    "Realm.AllocateUser": {
                      "type": "boolean",
                      "x-proxmox-optional": true
                    },
                    "SDN.Allocate": {
                      "type": "boolean",
                      "x-proxmox-optional": true
                    },
                    "SDN.Audit": {
                      "type": "boolean",
                      "x-proxmox-optional": true
                    },
                    "SDN.Use": {
                      "type": "boolean",
                      "x-proxmox-optional": true
                    },
                    "Sys.AccessNetwork": {
                      "type": "boolean",
                      "x-proxmox-optional": true
                    },
                    "Sys.Audit": {
                      "type": "boolean",
                      "x-proxmox-optional": true
                    },
                    "Sys.Console": {
                      "type": "boolean",
                      "x-proxmox-optional": true
                    },
                    "Sys.Incoming": {
                      "type": "boolean",
                      "x-proxmox-optional": true
                    },
                    "Sys.Modify": {
                      "type": "boolean",
                      "x-proxmox-optional": true
                    },
                    "Sys.PowerMgmt": {
                      "type": "boolean",
                      "x-proxmox-optional": true
                    },
                    "Sys.Syslog": {
                      "type": "boolean",
                      "x-proxmox-optional": true
                    },
                    "User.Modify": {
                      "type": "boolean",
                      "x-proxmox-optional": true
                    },
                    "VM.Allocate": {
                      "type": "boolean",
                      "x-proxmox-optional": true
                    },
                    "VM.Audit": {
                      "type": "boolean",
                      "x-proxmox-optional": true
                    },
                    "VM.Backup": {
                      "type": "boolean",
                      "x-proxmox-optional": true
                    },
                    "VM.Clone": {
                      "type": "boolean",
                      "x-proxmox-optional": true
                    },
                    "VM.Config.CDROM": {
                      "type": "boolean",
                      "x-proxmox-optional": true
                    },
                    "VM.Config.CPU": {
                      "type": "boolean",
                      "x-proxmox-optional": true
                    },
                    "VM.Config.Cloudinit": {
                      "type": "boolean",
                      "x-proxmox-optional": true
                    },
                    "VM.Config.Disk": {
                      "type": "boolean",
                      "x-proxmox-optional": true
                    },
                    "VM.Config.HWType": {
                      "type": "boolean",
                      "x-proxmox-optional": true
                    },
                    "VM.Config.Memory": {
                      "type": "boolean",
                      "x-proxmox-optional": true
                    },
                    "VM.Config.Network": {
                      "type": "boolean",
                      "x-proxmox-optional": true
                    },
                    "VM.Config.Options": {
                      "type": "boolean",
                      "x-proxmox-optional": true
                    },
                    "VM.Console": {
                      "type": "boolean",
                      "x-proxmox-optional": true
                    },
                    "VM.GuestAgent.Audit": {
                      "type": "boolean",
                      "x-proxmox-optional": true
                    },
                    "VM.GuestAgent.FileRead": {
                      "type": "boolean",
                      "x-proxmox-optional": true
                    },
                    "VM.GuestAgent.FileSystemMgmt": {
                      "type": "boolean",
                      "x-proxmox-optional": true
                    },
                    "VM.GuestAgent.FileWrite": {
                      "type": "boolean",
                      "x-proxmox-optional": true
                    },
                    "VM.GuestAgent.Unrestricted": {
                      "type": "boolean",
                      "x-proxmox-optional": true
                    },
                    "VM.Migrate": {
                      "type": "boolean",
                      "x-proxmox-optional": true
                    },
                    "VM.PowerMgmt": {
                      "type": "boolean",
                      "x-proxmox-optional": true
                    },
                    "VM.Replicate": {
                      "type": "boolean",
                      "x-proxmox-optional": true
                    },
                    "VM.Snapshot": {
                      "type": "boolean",
                      "x-proxmox-optional": true
                    },
                    "VM.Snapshot.Rollback": {
                      "type": "boolean",
                      "x-proxmox-optional": true
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-access-roles-roleid",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "roleid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "pve-roleid",
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "security": [],
        "x-proxmox-permissions": {
          "all": [
            {
              "user": "all"
            }
          ]
        }
      },
      "put": {
        "operationId": "put-access-roles-roleid",
        "summary": "update_role",
        "description": "Update an existing role.",
        "tags": [
          "/access/roles/{roleid}"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "put-access-roles-roleid",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "roleid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "pve-roleid",
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "append": {
                    "type": "boolean",
                    "x-proxmox-requires": [
                      "privs"
                    ],
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "privs": {
                    "type": "string",
                    "format": "pve-priv-list",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/access",
                [
                  "Sys.Modify"
                ]
              ]
            }
          ]
        }
      }
    },
    "/access/tfa": {
      "get": {
        "operationId": "get-access-tfa",
        "summary": "list_tfa",
        "description": "List TFA configurations of users.",
        "tags": [
          "/access/tfa"
        ],
        "responses": {
          "200": {
            "description": "The list tuples of user and TFA entries.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "The list tuples of user and TFA entries.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "entries": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "description": "TFA Entry.",
                          "properties": {
                            "created": {
                              "type": "integer",
                              "description": "Creation time of this entry as unix epoch."
                            },
                            "description": {
                              "type": "string",
                              "description": "User chosen description for this entry."
                            },
                            "enable": {
                              "type": "boolean",
                              "description": "Whether this TFA entry is currently enabled.",
                              "default": true,
                              "x-proxmox-optional": true
                            },
                            "id": {
                              "type": "string",
                              "description": "The id used to reference this entry."
                            },
                            "type": {
                              "type": "string",
                              "description": "TFA Entry Type.",
                              "enum": [
                                "totp",
                                "u2f",
                                "webauthn",
                                "recovery",
                                "yubico"
                              ]
                            }
                          },
                          "required": [
                            "created",
                            "description",
                            "id",
                            "type"
                          ]
                        }
                      },
                      "tfa-locked-until": {
                        "type": "integer",
                        "description": "Contains a timestamp until when a user is locked out of 2nd factors.",
                        "x-proxmox-optional": true
                      },
                      "totp-locked": {
                        "type": "boolean",
                        "description": "True if the user is currently locked out of TOTP factors.",
                        "x-proxmox-optional": true
                      },
                      "userid": {
                        "type": "string",
                        "description": "User this entry belongs to."
                      }
                    },
                    "required": [
                      "entries",
                      "userid"
                    ]
                  },
                  "x-proxmox-metadata": {
                    "links": [
                      {
                        "href": "{userid}",
                        "rel": "child"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-access-tfa",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "description": "Returns all or just the logged-in user, depending on privileges.",
              "user": "all"
            }
          ]
        }
      }
    },
    "/access/tfa/{userid}": {
      "get": {
        "operationId": "get-access-tfa-userid",
        "summary": "list_user_tfa",
        "description": "List TFA configurations of users.",
        "tags": [
          "/access/tfa/{userid}"
        ],
        "responses": {
          "200": {
            "description": "A list of the user's TFA entries.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "A list of the user's TFA entries.",
                  "items": {
                    "type": "object",
                    "description": "TFA Entry.",
                    "properties": {
                      "created": {
                        "type": "integer",
                        "description": "Creation time of this entry as unix epoch."
                      },
                      "description": {
                        "type": "string",
                        "description": "User chosen description for this entry."
                      },
                      "enable": {
                        "type": "boolean",
                        "description": "Whether this TFA entry is currently enabled.",
                        "default": true,
                        "x-proxmox-optional": true
                      },
                      "id": {
                        "type": "string",
                        "description": "The id used to reference this entry."
                      },
                      "type": {
                        "type": "string",
                        "description": "TFA Entry Type.",
                        "enum": [
                          "totp",
                          "u2f",
                          "webauthn",
                          "recovery",
                          "yubico"
                        ]
                      }
                    },
                    "required": [
                      "created",
                      "description",
                      "id",
                      "type"
                    ]
                  },
                  "x-proxmox-metadata": {
                    "links": [
                      {
                        "href": "{id}",
                        "rel": "child"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-access-tfa-userid",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "userid",
            "in": "path",
            "required": true,
            "description": "Full User ID, in the `name@realm` format.",
            "schema": {
              "type": "string",
              "description": "Full User ID, in the `name@realm` format.",
              "maxLength": 64,
              "format": "pve-userid",
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "or",
                [
                  "userid-param",
                  "self"
                ],
                [
                  "userid-group",
                  [
                    "User.Modify",
                    "Sys.Audit"
                  ]
                ]
              ]
            }
          ]
        }
      },
      "post": {
        "operationId": "post-access-tfa-userid",
        "summary": "add_tfa_entry",
        "description": "Add a TFA entry for a user.",
        "tags": [
          "/access/tfa/{userid}"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "challenge": {
                      "type": "string",
                      "description": "When adding u2f entries, this contains a challenge the user must respond to in order to finish the registration.",
                      "x-proxmox-optional": true
                    },
                    "id": {
                      "type": "string",
                      "description": "The id of a newly added TFA entry."
                    },
                    "recovery": {
                      "type": "array",
                      "description": "When adding recovery codes, this contains the list of codes to be displayed to the user",
                      "items": {
                        "type": "string",
                        "description": "A recovery entry."
                      },
                      "x-proxmox-optional": true
                    }
                  },
                  "required": [
                    "id"
                  ]
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "post-access-tfa-userid",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "userid",
            "in": "path",
            "required": true,
            "description": "Full User ID, in the `name@realm` format.",
            "schema": {
              "type": "string",
              "description": "Full User ID, in the `name@realm` format.",
              "maxLength": 64,
              "format": "pve-userid",
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "challenge": {
                    "type": "string",
                    "description": "When responding to a u2f challenge: the original challenge string",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "description": {
                    "type": "string",
                    "description": "A description to distinguish multiple entries from one another",
                    "maxLength": 255,
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "password": {
                    "type": "string",
                    "description": "The current password of the user performing the change.",
                    "minLength": 5,
                    "maxLength": 64,
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "totp": {
                    "type": "string",
                    "description": "A totp URI.",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "type": {
                    "type": "string",
                    "description": "TFA Entry Type.",
                    "enum": [
                      "totp",
                      "u2f",
                      "webauthn",
                      "recovery",
                      "yubico"
                    ]
                  },
                  "value": {
                    "type": "string",
                    "description": "The current value for the provided totp URI, or a Webauthn/U2F challenge response",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  }
                },
                "required": [
                  "type"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "security": [
          {
            "PVEAuthCookie": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "or",
                [
                  "userid-param",
                  "self"
                ],
                [
                  "userid-group",
                  [
                    "User.Modify"
                  ]
                ]
              ]
            }
          ]
        }
      }
    },
    "/access/tfa/{userid}/{id}": {
      "delete": {
        "operationId": "delete-access-tfa-userid-id",
        "summary": "delete_tfa",
        "description": "Delete a TFA entry by ID.",
        "tags": [
          "/access/tfa/{userid}/{id}"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "delete-access-tfa-userid-id",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A TFA entry id.",
            "schema": {
              "type": "string",
              "description": "A TFA entry id.",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "password",
            "in": "query",
            "required": false,
            "description": "The current password of the user performing the change.",
            "schema": {
              "type": "string",
              "description": "The current password of the user performing the change.",
              "minLength": 5,
              "maxLength": 64,
              "x-proxmox-typetext": "<string>",
              "x-proxmox-optional": true
            }
          },
          {
            "name": "userid",
            "in": "path",
            "required": true,
            "description": "Full User ID, in the `name@realm` format.",
            "schema": {
              "type": "string",
              "description": "Full User ID, in the `name@realm` format.",
              "maxLength": 64,
              "format": "pve-userid",
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "security": [
          {
            "PVEAuthCookie": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "or",
                [
                  "userid-param",
                  "self"
                ],
                [
                  "userid-group",
                  [
                    "User.Modify"
                  ]
                ]
              ]
            }
          ]
        }
      },
      "get": {
        "operationId": "get-access-tfa-userid-id",
        "summary": "get_tfa_entry",
        "description": "Fetch a requested TFA entry if present.",
        "tags": [
          "/access/tfa/{userid}/{id}"
        ],
        "responses": {
          "200": {
            "description": "TFA Entry.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "TFA Entry.",
                  "properties": {
                    "created": {
                      "type": "integer",
                      "description": "Creation time of this entry as unix epoch."
                    },
                    "description": {
                      "type": "string",
                      "description": "User chosen description for this entry."
                    },
                    "enable": {
                      "type": "boolean",
                      "description": "Whether this TFA entry is currently enabled.",
                      "default": true,
                      "x-proxmox-optional": true
                    },
                    "id": {
                      "type": "string",
                      "description": "The id used to reference this entry."
                    },
                    "type": {
                      "type": "string",
                      "description": "TFA Entry Type.",
                      "enum": [
                        "totp",
                        "u2f",
                        "webauthn",
                        "recovery",
                        "yubico"
                      ]
                    }
                  },
                  "required": [
                    "created",
                    "description",
                    "id",
                    "type"
                  ]
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-access-tfa-userid-id",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A TFA entry id.",
            "schema": {
              "type": "string",
              "description": "A TFA entry id.",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "userid",
            "in": "path",
            "required": true,
            "description": "Full User ID, in the `name@realm` format.",
            "schema": {
              "type": "string",
              "description": "Full User ID, in the `name@realm` format.",
              "maxLength": 64,
              "format": "pve-userid",
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "or",
                [
                  "userid-param",
                  "self"
                ],
                [
                  "userid-group",
                  [
                    "User.Modify",
                    "Sys.Audit"
                  ]
                ]
              ]
            }
          ]
        }
      },
      "put": {
        "operationId": "put-access-tfa-userid-id",
        "summary": "update_tfa_entry",
        "description": "Add a TFA entry for a user.",
        "tags": [
          "/access/tfa/{userid}/{id}"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "put-access-tfa-userid-id",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A TFA entry id.",
            "schema": {
              "type": "string",
              "description": "A TFA entry id.",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "userid",
            "in": "path",
            "required": true,
            "description": "Full User ID, in the `name@realm` format.",
            "schema": {
              "type": "string",
              "description": "Full User ID, in the `name@realm` format.",
              "maxLength": 64,
              "format": "pve-userid",
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "description": {
                    "type": "string",
                    "description": "A description to distinguish multiple entries from one another",
                    "maxLength": 255,
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "enable": {
                    "type": "boolean",
                    "description": "Whether the entry should be enabled for login.",
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "password": {
                    "type": "string",
                    "description": "The current password of the user performing the change.",
                    "minLength": 5,
                    "maxLength": 64,
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "security": [
          {
            "PVEAuthCookie": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "or",
                [
                  "userid-param",
                  "self"
                ],
                [
                  "userid-group",
                  [
                    "User.Modify"
                  ]
                ]
              ]
            }
          ]
        }
      }
    },
    "/access/ticket": {
      "get": {
        "operationId": "get-access-ticket",
        "summary": "get_ticket",
        "description": "Dummy. Useful for formatters which want to provide a login page.",
        "tags": [
          "/access/ticket"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-access-ticket",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "security": [],
        "x-proxmox-permissions": {
          "all": [
            {
              "user": "world"
            }
          ]
        }
      },
      "post": {
        "operationId": "post-access-ticket",
        "summary": "create_ticket",
        "description": "Create or verify authentication ticket.",
        "tags": [
          "/access/ticket"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "CSRFPreventionToken": {
                      "type": "string",
                      "x-proxmox-optional": true
                    },
                    "clustername": {
                      "type": "string",
                      "x-proxmox-optional": true
                    },
                    "ticket": {
                      "type": "string",
                      "x-proxmox-optional": true
                    },
                    "username": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "username"
                  ]
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "post-access-ticket",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "new-format": {
                    "type": "boolean",
                    "description": "This parameter is now ignored and assumed to be 1.",
                    "default": true,
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "otp": {
                    "type": "string",
                    "description": "One-time password for Two-factor authentication.",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "password": {
                    "type": "string",
                    "description": "The secret password. This can also be a valid ticket.",
                    "x-proxmox-typetext": "<string>"
                  },
                  "path": {
                    "type": "string",
                    "description": "Verify ticket, and check if user have access 'privs' on 'path'",
                    "maxLength": 64,
                    "x-proxmox-requires": [
                      "privs"
                    ],
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "privs": {
                    "type": "string",
                    "description": "Verify ticket, and check if user have access 'privs' on 'path'",
                    "maxLength": 64,
                    "format": "pve-priv-list",
                    "x-proxmox-requires": [
                      "path"
                    ],
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "realm": {
                    "type": "string",
                    "description": "You can optionally pass the realm using this parameter. Normally the realm is simply added to the username <username>@<realm>.",
                    "maxLength": 32,
                    "format": "pve-realm",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "tfa-challenge": {
                    "type": "string",
                    "description": "The signed TFA challenge string the user wants to respond to.",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "username": {
                    "type": "string",
                    "description": "User name",
                    "maxLength": 64,
                    "x-proxmox-typetext": "<string>"
                  }
                },
                "required": [
                  "password",
                  "username"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "security": [
          {
            "PVEAuthCookie": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "description": "You need to pass valid credientials.",
              "user": "world"
            }
          ]
        }
      }
    },
    "/access/users": {
      "get": {
        "operationId": "get-access-users",
        "summary": "index",
        "description": "User index.",
        "tags": [
          "/access/users"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "comment": {
                        "type": "string",
                        "maxLength": 2048,
                        "x-proxmox-optional": true
                      },
                      "email": {
                        "type": "string",
                        "maxLength": 254,
                        "format": "email-opt",
                        "x-proxmox-optional": true
                      },
                      "enable": {
                        "type": "boolean",
                        "description": "Enable the account (default). You can set this to '0' to disable the account",
                        "default": true,
                        "x-proxmox-optional": true
                      },
                      "expire": {
                        "type": "integer",
                        "description": "Account expiration date (seconds since epoch). '0' means no expiration date.",
                        "minimum": 0,
                        "x-proxmox-optional": true
                      },
                      "firstname": {
                        "type": "string",
                        "maxLength": 1024,
                        "x-proxmox-optional": true
                      },
                      "groups": {
                        "type": "string",
                        "format": "pve-groupid-list",
                        "x-proxmox-optional": true
                      },
                      "keys": {
                        "type": "string",
                        "description": "Keys for two factor auth (yubico).",
                        "pattern": "[0-9a-zA-Z!=]{0,4096}",
                        "x-proxmox-optional": true
                      },
                      "lastname": {
                        "type": "string",
                        "maxLength": 1024,
                        "x-proxmox-optional": true
                      },
                      "realm-type": {
                        "type": "string",
                        "description": "The type of the users realm",
                        "format": "pve-realm",
                        "x-proxmox-optional": true
                      },
                      "tfa-locked-until": {
                        "type": "integer",
                        "description": "Contains a timestamp until when a user is locked out of 2nd factors.",
                        "x-proxmox-optional": true
                      },
                      "tokens": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "comment": {
                              "type": "string",
                              "x-proxmox-optional": true
                            },
                            "expire": {
                              "type": "integer",
                              "description": "API token expiration date (seconds since epoch). '0' means no expiration date.",
                              "default": "same as user",
                              "minimum": 0,
                              "x-proxmox-optional": true
                            },
                            "privsep": {
                              "type": "boolean",
                              "description": "Restrict API token privileges with separate ACLs (default), or give full privileges of corresponding user.",
                              "default": true,
                              "x-proxmox-optional": true
                            },
                            "tokenid": {
                              "type": "string",
                              "description": "User-specific token identifier.",
                              "pattern": "(?^:[A-Za-z][A-Za-z0-9\\.\\-_]+)"
                            }
                          },
                          "required": [
                            "tokenid"
                          ]
                        },
                        "x-proxmox-optional": true
                      },
                      "totp-locked": {
                        "type": "boolean",
                        "description": "True if the user is currently locked out of TOTP factors.",
                        "x-proxmox-optional": true
                      },
                      "userid": {
                        "type": "string",
                        "description": "Full User ID, in the `name@realm` format.",
                        "maxLength": 64,
                        "format": "pve-userid"
                      }
                    },
                    "required": [
                      "userid"
                    ]
                  },
                  "x-proxmox-metadata": {
                    "links": [
                      {
                        "href": "{userid}",
                        "rel": "child"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-access-users",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "enabled",
            "in": "query",
            "required": false,
            "description": "Optional filter for enable property.",
            "schema": {
              "type": "boolean",
              "description": "Optional filter for enable property.",
              "x-proxmox-typetext": "<boolean>",
              "x-proxmox-optional": true
            }
          },
          {
            "name": "full",
            "in": "query",
            "required": false,
            "description": "Include group and token information.",
            "schema": {
              "type": "boolean",
              "description": "Include group and token information.",
              "default": false,
              "x-proxmox-typetext": "<boolean>",
              "x-proxmox-optional": true
            }
          }
        ],
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "description": "The returned list is restricted to users where you have 'User.Modify' or 'Sys.Audit' permissions on '/access/groups' or on a group the user belongs too. But it always includes the current (authenticated) user.",
              "user": "all"
            }
          ]
        }
      },
      "post": {
        "operationId": "post-access-users",
        "summary": "create_user",
        "description": "Create new user.",
        "tags": [
          "/access/users"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "post-access-users",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "comment": {
                    "type": "string",
                    "maxLength": 2048,
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "email": {
                    "type": "string",
                    "maxLength": 254,
                    "format": "email-opt",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "enable": {
                    "type": "boolean",
                    "description": "Enable the account (default). You can set this to '0' to disable the account",
                    "default": true,
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "expire": {
                    "type": "integer",
                    "description": "Account expiration date (seconds since epoch). '0' means no expiration date.",
                    "minimum": 0,
                    "x-proxmox-typetext": "<integer> (0 - N)",
                    "x-proxmox-optional": true
                  },
                  "firstname": {
                    "type": "string",
                    "maxLength": 1024,
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "groups": {
                    "type": "string",
                    "format": "pve-groupid-list",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "keys": {
                    "type": "string",
                    "description": "Keys for two factor auth (yubico).",
                    "pattern": "[0-9a-zA-Z!=]{0,4096}",
                    "x-proxmox-optional": true
                  },
                  "lastname": {
                    "type": "string",
                    "maxLength": 1024,
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "password": {
                    "type": "string",
                    "description": "Initial password.",
                    "minLength": 8,
                    "maxLength": 64,
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "userid": {
                    "type": "string",
                    "description": "Full User ID, in the `name@realm` format.",
                    "maxLength": 64,
                    "format": "pve-userid",
                    "x-proxmox-typetext": "<string>"
                  }
                },
                "required": [
                  "userid"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "description": "You need 'Realm.AllocateUser' on '/access/realm/<realm>' on the realm of user <userid>, and 'User.Modify' permissions to '/access/groups/<group>' for any group specified (or 'User.Modify' on '/access/groups' if you pass no groups.",
              "check": [
                "and",
                [
                  "userid-param",
                  "Realm.AllocateUser"
                ],
                [
                  "userid-group",
                  [
                    "User.Modify"
                  ],
                  "groups_param",
                  "create"
                ]
              ]
            }
          ]
        }
      }
    },
    "/access/users/{userid}": {
      "delete": {
        "operationId": "delete-access-users-userid",
        "summary": "delete_user",
        "description": "Delete user.",
        "tags": [
          "/access/users/{userid}"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "delete-access-users-userid",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "userid",
            "in": "path",
            "required": true,
            "description": "Full User ID, in the `name@realm` format.",
            "schema": {
              "type": "string",
              "description": "Full User ID, in the `name@realm` format.",
              "maxLength": 64,
              "format": "pve-userid",
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "and",
                [
                  "userid-param",
                  "Realm.AllocateUser"
                ],
                [
                  "userid-group",
                  [
                    "User.Modify"
                  ]
                ]
              ]
            }
          ]
        }
      },
      "get": {
        "operationId": "get-access-users-userid",
        "summary": "read_user",
        "description": "Get user configuration.",
        "tags": [
          "/access/users/{userid}"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "comment": {
                      "type": "string",
                      "maxLength": 2048,
                      "x-proxmox-optional": true
                    },
                    "email": {
                      "type": "string",
                      "maxLength": 254,
                      "format": "email-opt",
                      "x-proxmox-optional": true
                    },
                    "enable": {
                      "type": "boolean",
                      "description": "Enable the account (default). You can set this to '0' to disable the account",
                      "default": true,
                      "x-proxmox-optional": true
                    },
                    "expire": {
                      "type": "integer",
                      "description": "Account expiration date (seconds since epoch). '0' means no expiration date.",
                      "minimum": 0,
                      "x-proxmox-optional": true
                    },
                    "firstname": {
                      "type": "string",
                      "maxLength": 1024,
                      "x-proxmox-optional": true
                    },
                    "groups": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "format": "pve-groupid"
                      },
                      "x-proxmox-optional": true
                    },
                    "keys": {
                      "type": "string",
                      "description": "Keys for two factor auth (yubico).",
                      "pattern": "[0-9a-zA-Z!=]{0,4096}",
                      "x-proxmox-optional": true
                    },
                    "lastname": {
                      "type": "string",
                      "maxLength": 1024,
                      "x-proxmox-optional": true
                    },
                    "tokens": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "comment": {
                            "type": "string",
                            "x-proxmox-optional": true
                          },
                          "expire": {
                            "type": "integer",
                            "description": "API token expiration date (seconds since epoch). '0' means no expiration date.",
                            "default": "same as user",
                            "minimum": 0,
                            "x-proxmox-optional": true
                          },
                          "privsep": {
                            "type": "boolean",
                            "description": "Restrict API token privileges with separate ACLs (default), or give full privileges of corresponding user.",
                            "default": true,
                            "x-proxmox-optional": true
                          }
                        }
                      },
                      "x-proxmox-optional": true
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-access-users-userid",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "userid",
            "in": "path",
            "required": true,
            "description": "Full User ID, in the `name@realm` format.",
            "schema": {
              "type": "string",
              "description": "Full User ID, in the `name@realm` format.",
              "maxLength": 64,
              "format": "pve-userid",
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "security": [],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "userid-group",
                [
                  "User.Modify",
                  "Sys.Audit"
                ]
              ]
            }
          ]
        }
      },
      "put": {
        "operationId": "put-access-users-userid",
        "summary": "update_user",
        "description": "Update user configuration.",
        "tags": [
          "/access/users/{userid}"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "put-access-users-userid",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "userid",
            "in": "path",
            "required": true,
            "description": "Full User ID, in the `name@realm` format.",
            "schema": {
              "type": "string",
              "description": "Full User ID, in the `name@realm` format.",
              "maxLength": 64,
              "format": "pve-userid",
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "append": {
                    "type": "boolean",
                    "x-proxmox-requires": [
                      "groups"
                    ],
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "comment": {
                    "type": "string",
                    "maxLength": 2048,
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "email": {
                    "type": "string",
                    "maxLength": 254,
                    "format": "email-opt",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "enable": {
                    "type": "boolean",
                    "description": "Enable the account (default). You can set this to '0' to disable the account",
                    "default": true,
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "expire": {
                    "type": "integer",
                    "description": "Account expiration date (seconds since epoch). '0' means no expiration date.",
                    "minimum": 0,
                    "x-proxmox-typetext": "<integer> (0 - N)",
                    "x-proxmox-optional": true
                  },
                  "firstname": {
                    "type": "string",
                    "maxLength": 1024,
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "groups": {
                    "type": "string",
                    "format": "pve-groupid-list",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "keys": {
                    "type": "string",
                    "description": "Keys for two factor auth (yubico).",
                    "pattern": "[0-9a-zA-Z!=]{0,4096}",
                    "x-proxmox-optional": true
                  },
                  "lastname": {
                    "type": "string",
                    "maxLength": 1024,
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "userid-group",
                [
                  "User.Modify"
                ],
                "groups_param",
                "update"
              ]
            }
          ]
        }
      }
    },
    "/access/users/{userid}/tfa": {
      "get": {
        "operationId": "get-access-users-userid-tfa",
        "summary": "read_user_tfa_type",
        "description": "Get user TFA types (Personal and Realm).",
        "tags": [
          "/access/users/{userid}/tfa"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "realm": {
                      "type": "string",
                      "description": "The type of TFA the users realm has set, if any.",
                      "enum": [
                        "oath",
                        "yubico"
                      ],
                      "x-proxmox-optional": true
                    },
                    "types": {
                      "type": "array",
                      "description": "Array of the user configured TFA types, if any. Only available if 'multiple' was not passed.",
                      "items": {
                        "type": "string",
                        "description": "A TFA type.",
                        "enum": [
                          "totp",
                          "u2f",
                          "yubico",
                          "webauthn",
                          "recovedry"
                        ]
                      },
                      "x-proxmox-optional": true
                    },
                    "user": {
                      "type": "string",
                      "description": "The type of TFA the user has set, if any. Only set if 'multiple' was not passed.",
                      "enum": [
                        "oath",
                        "u2f"
                      ],
                      "x-proxmox-optional": true
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-access-users-userid-tfa",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "multiple",
            "in": "query",
            "required": false,
            "description": "Request all entries as an array.",
            "schema": {
              "type": "boolean",
              "description": "Request all entries as an array.",
              "default": false,
              "x-proxmox-typetext": "<boolean>",
              "x-proxmox-optional": true
            }
          },
          {
            "name": "userid",
            "in": "path",
            "required": true,
            "description": "Full User ID, in the `name@realm` format.",
            "schema": {
              "type": "string",
              "description": "Full User ID, in the `name@realm` format.",
              "maxLength": 64,
              "format": "pve-userid",
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "or",
                [
                  "userid-param",
                  "self"
                ],
                [
                  "userid-group",
                  [
                    "User.Modify",
                    "Sys.Audit"
                  ]
                ]
              ]
            }
          ]
        }
      }
    },
    "/access/users/{userid}/token": {
      "get": {
        "operationId": "get-access-users-userid-token",
        "summary": "token_index",
        "description": "Get user API tokens.",
        "tags": [
          "/access/users/{userid}/token"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "comment": {
                        "type": "string",
                        "x-proxmox-optional": true
                      },
                      "expire": {
                        "type": "integer",
                        "description": "API token expiration date (seconds since epoch). '0' means no expiration date.",
                        "default": "same as user",
                        "minimum": 0,
                        "x-proxmox-optional": true
                      },
                      "privsep": {
                        "type": "boolean",
                        "description": "Restrict API token privileges with separate ACLs (default), or give full privileges of corresponding user.",
                        "default": true,
                        "x-proxmox-optional": true
                      },
                      "tokenid": {
                        "type": "string",
                        "description": "User-specific token identifier.",
                        "pattern": "(?^:[A-Za-z][A-Za-z0-9\\.\\-_]+)"
                      }
                    },
                    "required": [
                      "tokenid"
                    ]
                  },
                  "x-proxmox-metadata": {
                    "links": [
                      {
                        "href": "{tokenid}",
                        "rel": "child"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-access-users-userid-token",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "userid",
            "in": "path",
            "required": true,
            "description": "Full User ID, in the `name@realm` format.",
            "schema": {
              "type": "string",
              "description": "Full User ID, in the `name@realm` format.",
              "maxLength": 64,
              "format": "pve-userid",
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "security": [],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "or",
                [
                  "userid-param",
                  "self"
                ],
                [
                  "userid-group",
                  [
                    "User.Modify"
                  ]
                ]
              ]
            }
          ]
        }
      }
    },
    "/access/users/{userid}/token/{tokenid}": {
      "delete": {
        "operationId": "delete-access-users-userid-token-tokenid",
        "summary": "remove_token",
        "description": "Remove API token for a specific user.",
        "tags": [
          "/access/users/{userid}/token/{tokenid}"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "delete-access-users-userid-token-tokenid",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "tokenid",
            "in": "path",
            "required": true,
            "description": "User-specific token identifier.",
            "schema": {
              "type": "string",
              "description": "User-specific token identifier.",
              "pattern": "(?^:[A-Za-z][A-Za-z0-9\\.\\-_]+)"
            }
          },
          {
            "name": "userid",
            "in": "path",
            "required": true,
            "description": "Full User ID, in the `name@realm` format.",
            "schema": {
              "type": "string",
              "description": "Full User ID, in the `name@realm` format.",
              "maxLength": 64,
              "format": "pve-userid",
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "or",
                [
                  "userid-param",
                  "self"
                ],
                [
                  "userid-group",
                  [
                    "User.Modify"
                  ]
                ]
              ]
            }
          ]
        }
      },
      "get": {
        "operationId": "get-access-users-userid-token-tokenid",
        "summary": "read_token",
        "description": "Get specific API token information.",
        "tags": [
          "/access/users/{userid}/token/{tokenid}"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "comment": {
                      "type": "string",
                      "x-proxmox-optional": true
                    },
                    "expire": {
                      "type": "integer",
                      "description": "API token expiration date (seconds since epoch). '0' means no expiration date.",
                      "default": "same as user",
                      "minimum": 0,
                      "x-proxmox-optional": true
                    },
                    "privsep": {
                      "type": "boolean",
                      "description": "Restrict API token privileges with separate ACLs (default), or give full privileges of corresponding user.",
                      "default": true,
                      "x-proxmox-optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-access-users-userid-token-tokenid",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "tokenid",
            "in": "path",
            "required": true,
            "description": "User-specific token identifier.",
            "schema": {
              "type": "string",
              "description": "User-specific token identifier.",
              "pattern": "(?^:[A-Za-z][A-Za-z0-9\\.\\-_]+)"
            }
          },
          {
            "name": "userid",
            "in": "path",
            "required": true,
            "description": "Full User ID, in the `name@realm` format.",
            "schema": {
              "type": "string",
              "description": "Full User ID, in the `name@realm` format.",
              "maxLength": 64,
              "format": "pve-userid",
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "security": [],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "or",
                [
                  "userid-param",
                  "self"
                ],
                [
                  "userid-group",
                  [
                    "User.Modify"
                  ]
                ]
              ]
            }
          ]
        }
      },
      "post": {
        "operationId": "post-access-users-userid-token-tokenid",
        "summary": "generate_token",
        "description": "Generate a new API token for a specific user. NOTE: returns API token value, which needs to be stored as it cannot be retrieved afterwards!",
        "tags": [
          "/access/users/{userid}/token/{tokenid}"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "full-tokenid": {
                      "type": "string",
                      "description": "The full token id.",
                      "x-proxmox-format-description": "<userid>!<tokenid>"
                    },
                    "info": {
                      "type": "object",
                      "properties": {
                        "comment": {
                          "type": "string",
                          "x-proxmox-optional": true
                        },
                        "expire": {
                          "type": "integer",
                          "description": "API token expiration date (seconds since epoch). '0' means no expiration date.",
                          "default": "same as user",
                          "minimum": 0,
                          "x-proxmox-optional": true
                        },
                        "privsep": {
                          "type": "boolean",
                          "description": "Restrict API token privileges with separate ACLs (default), or give full privileges of corresponding user.",
                          "default": true,
                          "x-proxmox-optional": true
                        }
                      }
                    },
                    "value": {
                      "type": "string",
                      "description": "API token value used for authentication."
                    }
                  },
                  "required": [
                    "full-tokenid",
                    "info",
                    "value"
                  ],
                  "additionalProperties": false
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "post-access-users-userid-token-tokenid",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "tokenid",
            "in": "path",
            "required": true,
            "description": "User-specific token identifier.",
            "schema": {
              "type": "string",
              "description": "User-specific token identifier.",
              "pattern": "(?^:[A-Za-z][A-Za-z0-9\\.\\-_]+)"
            }
          },
          {
            "name": "userid",
            "in": "path",
            "required": true,
            "description": "Full User ID, in the `name@realm` format.",
            "schema": {
              "type": "string",
              "description": "Full User ID, in the `name@realm` format.",
              "maxLength": 64,
              "format": "pve-userid",
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "comment": {
                    "type": "string",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "expire": {
                    "type": "integer",
                    "description": "API token expiration date (seconds since epoch). '0' means no expiration date.",
                    "default": "same as user",
                    "minimum": 0,
                    "x-proxmox-typetext": "<integer> (0 - N)",
                    "x-proxmox-optional": true
                  },
                  "privsep": {
                    "type": "boolean",
                    "description": "Restrict API token privileges with separate ACLs (default), or give full privileges of corresponding user.",
                    "default": true,
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "or",
                [
                  "userid-param",
                  "self"
                ],
                [
                  "userid-group",
                  [
                    "User.Modify"
                  ]
                ]
              ]
            }
          ]
        }
      },
      "put": {
        "operationId": "put-access-users-userid-token-tokenid",
        "summary": "update_token_info",
        "description": "Update API token for a specific user.",
        "tags": [
          "/access/users/{userid}/token/{tokenid}"
        ],
        "responses": {
          "200": {
            "description": "Updated token information.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Updated token information.",
                  "properties": {
                    "comment": {
                      "type": "string",
                      "x-proxmox-optional": true
                    },
                    "expire": {
                      "type": "integer",
                      "description": "API token expiration date (seconds since epoch). '0' means no expiration date.",
                      "default": "same as user",
                      "minimum": 0,
                      "x-proxmox-optional": true
                    },
                    "privsep": {
                      "type": "boolean",
                      "description": "Restrict API token privileges with separate ACLs (default), or give full privileges of corresponding user.",
                      "default": true,
                      "x-proxmox-optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "put-access-users-userid-token-tokenid",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "tokenid",
            "in": "path",
            "required": true,
            "description": "User-specific token identifier.",
            "schema": {
              "type": "string",
              "description": "User-specific token identifier.",
              "pattern": "(?^:[A-Za-z][A-Za-z0-9\\.\\-_]+)"
            }
          },
          {
            "name": "userid",
            "in": "path",
            "required": true,
            "description": "Full User ID, in the `name@realm` format.",
            "schema": {
              "type": "string",
              "description": "Full User ID, in the `name@realm` format.",
              "maxLength": 64,
              "format": "pve-userid",
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "comment": {
                    "type": "string",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "expire": {
                    "type": "integer",
                    "description": "API token expiration date (seconds since epoch). '0' means no expiration date.",
                    "default": "same as user",
                    "minimum": 0,
                    "x-proxmox-typetext": "<integer> (0 - N)",
                    "x-proxmox-optional": true
                  },
                  "privsep": {
                    "type": "boolean",
                    "description": "Restrict API token privileges with separate ACLs (default), or give full privileges of corresponding user.",
                    "default": true,
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "or",
                [
                  "userid-param",
                  "self"
                ],
                [
                  "userid-group",
                  [
                    "User.Modify"
                  ]
                ]
              ]
            }
          ]
        }
      }
    },
    "/access/users/{userid}/unlock-tfa": {
      "put": {
        "operationId": "put-access-users-userid-unlock-tfa",
        "summary": "unlock_tfa",
        "description": "Unlock a user's TFA authentication.",
        "tags": [
          "/access/users/{userid}/unlock-tfa"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "put-access-users-userid-unlock-tfa",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "userid",
            "in": "path",
            "required": true,
            "description": "Full User ID, in the `name@realm` format.",
            "schema": {
              "type": "string",
              "description": "Full User ID, in the `name@realm` format.",
              "maxLength": 64,
              "format": "pve-userid",
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "userid-group",
                [
                  "User.Modify"
                ]
              ]
            }
          ]
        }
      }
    },
    "/cluster": {
      "get": {
        "operationId": "get-cluster",
        "summary": "index",
        "description": "Cluster index.",
        "tags": [
          "/cluster"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  },
                  "x-proxmox-metadata": {
                    "links": [
                      {
                        "href": "{name}",
                        "rel": "child"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-cluster",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "security": [],
        "x-proxmox-permissions": {
          "all": [
            {
              "user": "all"
            }
          ]
        }
      }
    },
    "/cluster/acme": {
      "get": {
        "operationId": "get-cluster-acme",
        "summary": "index",
        "description": "ACMEAccount index.",
        "tags": [
          "/cluster/acme"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  },
                  "x-proxmox-metadata": {
                    "links": [
                      {
                        "href": "{name}",
                        "rel": "child"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-cluster-acme",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "security": [],
        "x-proxmox-permissions": {
          "all": [
            {
              "user": "all"
            }
          ]
        }
      }
    },
    "/cluster/acme/account": {
      "get": {
        "operationId": "get-cluster-acme-account",
        "summary": "account_index",
        "description": "ACMEAccount index.",
        "tags": [
          "/cluster/acme/account"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  },
                  "x-proxmox-metadata": {
                    "links": [
                      {
                        "href": "{name}",
                        "rel": "child"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-cluster-acme-account",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "user": "all"
            }
          ]
        }
      },
      "post": {
        "operationId": "post-cluster-acme-account",
        "summary": "register_account",
        "description": "Register a new ACME account with CA.",
        "tags": [
          "/cluster/acme/account"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "post-cluster-acme-account",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "contact": {
                    "type": "string",
                    "description": "Contact email addresses.",
                    "format": "email-list",
                    "x-proxmox-typetext": "<string>"
                  },
                  "directory": {
                    "type": "string",
                    "description": "URL of ACME CA directory endpoint.",
                    "default": "https://acme-v02.api.letsencrypt.org/directory",
                    "pattern": "^https?://.*",
                    "x-proxmox-optional": true
                  },
                  "eab-hmac-key": {
                    "type": "string",
                    "description": "HMAC key for External Account Binding.",
                    "x-proxmox-requires": [
                      "eab-kid"
                    ],
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "eab-kid": {
                    "type": "string",
                    "description": "Key Identifier for External Account Binding.",
                    "x-proxmox-requires": [
                      "eab-hmac-key"
                    ],
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "name": {
                    "type": "string",
                    "description": "ACME account config file name.",
                    "default": "default",
                    "format": "pve-configid",
                    "x-proxmox-format-description": "name",
                    "x-proxmox-typetext": "<name>",
                    "x-proxmox-optional": true
                  },
                  "tos_url": {
                    "type": "string",
                    "description": "URL of CA TermsOfService - setting this indicates agreement.",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  }
                },
                "required": [
                  "contact"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ]
      }
    },
    "/cluster/acme/account/{name}": {
      "delete": {
        "operationId": "delete-cluster-acme-account-name",
        "summary": "deactivate_account",
        "description": "Deactivate existing ACME account at CA.",
        "tags": [
          "/cluster/acme/account/{name}"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "delete-cluster-acme-account-name",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "description": "ACME account config file name.",
            "schema": {
              "type": "string",
              "description": "ACME account config file name.",
              "default": "default",
              "format": "pve-configid",
              "x-proxmox-format-description": "name",
              "x-proxmox-typetext": "<name>",
              "x-proxmox-optional": true
            }
          }
        ],
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ]
      },
      "get": {
        "operationId": "get-cluster-acme-account-name",
        "summary": "get_account",
        "description": "Return existing ACME account information.",
        "tags": [
          "/cluster/acme/account/{name}"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "account": {
                      "type": "object",
                      "x-proxmox-optional": true,
                      "x-proxmox-metadata": {
                        "renderer": "yaml"
                      }
                    },
                    "directory": {
                      "type": "string",
                      "description": "URL of ACME CA directory endpoint.",
                      "pattern": "^https?://.*",
                      "x-proxmox-optional": true
                    },
                    "location": {
                      "type": "string",
                      "x-proxmox-optional": true
                    },
                    "tos": {
                      "type": "string",
                      "x-proxmox-optional": true
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-cluster-acme-account-name",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "description": "ACME account config file name.",
            "schema": {
              "type": "string",
              "description": "ACME account config file name.",
              "default": "default",
              "format": "pve-configid",
              "x-proxmox-format-description": "name",
              "x-proxmox-typetext": "<name>",
              "x-proxmox-optional": true
            }
          }
        ],
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ]
      },
      "put": {
        "operationId": "put-cluster-acme-account-name",
        "summary": "update_account",
        "description": "Update existing ACME account information with CA. Note: not specifying any new account information triggers a refresh.",
        "tags": [
          "/cluster/acme/account/{name}"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "put-cluster-acme-account-name",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "description": "ACME account config file name.",
            "schema": {
              "type": "string",
              "description": "ACME account config file name.",
              "default": "default",
              "format": "pve-configid",
              "x-proxmox-format-description": "name",
              "x-proxmox-typetext": "<name>",
              "x-proxmox-optional": true
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "contact": {
                    "type": "string",
                    "description": "Contact email addresses.",
                    "format": "email-list",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ]
      }
    },
    "/cluster/acme/challenge-schema": {
      "get": {
        "operationId": "get-cluster-acme-challenge-schema",
        "summary": "challengeschema",
        "description": "Get schema of ACME challenge types.",
        "tags": [
          "/cluster/acme/challenge-schema"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string",
                        "description": "Human readable name, falls back to id"
                      },
                      "schema": {
                        "type": "object"
                      },
                      "type": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "name",
                      "schema",
                      "type"
                    ],
                    "additionalProperties": false
                  }
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-cluster-acme-challenge-schema",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "security": [],
        "x-proxmox-permissions": {
          "all": [
            {
              "user": "all"
            }
          ]
        }
      }
    },
    "/cluster/acme/directories": {
      "get": {
        "operationId": "get-cluster-acme-directories",
        "summary": "get_directories",
        "description": "Get named known ACME directory endpoints.",
        "tags": [
          "/cluster/acme/directories"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "url": {
                        "type": "string",
                        "description": "URL of ACME CA directory endpoint.",
                        "pattern": "^https?://.*"
                      }
                    },
                    "required": [
                      "name",
                      "url"
                    ],
                    "additionalProperties": false
                  }
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-cluster-acme-directories",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "security": [],
        "x-proxmox-permissions": {
          "all": [
            {
              "user": "all"
            }
          ]
        }
      }
    },
    "/cluster/acme/meta": {
      "get": {
        "operationId": "get-cluster-acme-meta",
        "summary": "get_meta",
        "description": "Retrieve ACME Directory Meta Information",
        "tags": [
          "/cluster/acme/meta"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "caaIdentities": {
                      "type": "array",
                      "description": "Hostnames referring to the ACME servers.",
                      "items": {
                        "type": "string"
                      },
                      "x-proxmox-optional": true
                    },
                    "externalAccountRequired": {
                      "type": "boolean",
                      "description": "EAB Required",
                      "x-proxmox-optional": true
                    },
                    "termsOfService": {
                      "type": "string",
                      "description": "ACME TermsOfService URL.",
                      "x-proxmox-optional": true
                    },
                    "website": {
                      "type": "string",
                      "description": "URL to more information about the ACME server.",
                      "x-proxmox-optional": true
                    }
                  },
                  "additionalProperties": true
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-cluster-acme-meta",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "directory",
            "in": "query",
            "required": false,
            "description": "URL of ACME CA directory endpoint.",
            "schema": {
              "type": "string",
              "description": "URL of ACME CA directory endpoint.",
              "default": "https://acme-v02.api.letsencrypt.org/directory",
              "pattern": "^https?://.*",
              "x-proxmox-optional": true
            }
          }
        ],
        "security": [],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/nodes/{node}",
                [
                  "Sys.Audit"
                ]
              ]
            }
          ]
        }
      }
    },
    "/cluster/acme/plugins": {
      "get": {
        "operationId": "get-cluster-acme-plugins",
        "summary": "index",
        "description": "ACME plugin index.",
        "tags": [
          "/cluster/acme/plugins"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "plugin": {
                        "type": "string",
                        "description": "Unique identifier for ACME plugin instance.",
                        "format": "pve-configid"
                      }
                    },
                    "required": [
                      "plugin"
                    ]
                  },
                  "x-proxmox-metadata": {
                    "links": [
                      {
                        "href": "{plugin}",
                        "rel": "child"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-cluster-acme-plugins",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "required": false,
            "description": "Only list ACME plugins of a specific type",
            "schema": {
              "type": "string",
              "description": "Only list ACME plugins of a specific type",
              "enum": [
                "dns",
                "standalone"
              ],
              "x-proxmox-optional": true
            }
          }
        ],
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/",
                [
                  "Sys.Modify"
                ]
              ]
            }
          ]
        }
      },
      "post": {
        "operationId": "post-cluster-acme-plugins",
        "summary": "add_plugin",
        "description": "Add ACME plugin configuration.",
        "tags": [
          "/cluster/acme/plugins"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "post-cluster-acme-plugins",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "api": {
                    "type": "string",
                    "description": "API plugin name",
                    "enum": [
                      "1984hosting",
                      "acmedns",
                      "acmeproxy",
                      "active24",
                      "ad",
                      "ali",
                      "alviy",
                      "anx",
                      "artfiles",
                      "arvan",
                      "aurora",
                      "autodns",
                      "aws",
                      "azion",
                      "azure",
                      "beget",
                      "bookmyname",
                      "bunny",
                      "cf",
                      "clouddns",
                      "cloudns",
                      "cn",
                      "conoha",
                      "constellix",
                      "cpanel",
                      "curanet",
                      "cyon",
                      "da",
                      "ddnss",
                      "desec",
                      "df",
                      "dgon",
                      "dnsexit",
                      "dnshome",
                      "dnsimple",
                      "dnsservices",
                      "doapi",
                      "domeneshop",
                      "dp",
                      "dpi",
                      "dreamhost",
                      "duckdns",
                      "durabledns",
                      "dyn",
                      "dynu",
                      "dynv6",
                      "easydns",
                      "edgecenter",
                      "edgedns",
                      "euserv",
                      "exoscale",
                      "fornex",
                      "freedns",
                      "freemyip",
                      "gandi_livedns",
                      "gcloud",
                      "gcore",
                      "gd",
                      "geoscaling",
                      "googledomains",
                      "he",
                      "he_ddns",
                      "hetzner",
                      "hexonet",
                      "hostingde",
                      "huaweicloud",
                      "infoblox",
                      "infomaniak",
                      "internetbs",
                      "inwx",
                      "ionos",
                      "ionos_cloud",
                      "ipv64",
                      "ispconfig",
                      "jd",
                      "joker",
                      "kappernet",
                      "kas",
                      "kinghost",
                      "knot",
                      "la",
                      "leaseweb",
                      "lexicon",
                      "limacity",
                      "linode",
                      "linode_v4",
                      "loopia",
                      "lua",
                      "maradns",
                      "me",
                      "miab",
                      "mijnhost",
                      "misaka",
                      "myapi",
                      "mydevil",
                      "mydnsjp",
                      "mythic_beasts",
                      "namecheap",
                      "namecom",
                      "namesilo",
                      "nanelo",
                      "nederhost",
                      "neodigit",
                      "netcup",
                      "netlify",
                      "nic",
                      "njalla",
                      "nm",
                      "nsd",
                      "nsone",
                      "nsupdate",
                      "nw",
                      "oci",
                      "omglol",
                      "one",
                      "online",
                      "openprovider",
                      "openstack",
                      "opnsense",
                      "ovh",
                      "pdns",
                      "pleskxml",
                      "pointhq",
                      "porkbun",
                      "rackcorp",
                      "rackspace",
                      "rage4",
                      "rcode0",
                      "regru",
                      "scaleway",
                      "schlundtech",
                      "selectel",
                      "selfhost",
                      "servercow",
                      "simply",
                      "technitium",
                      "tele3",
                      "tencent",
                      "timeweb",
                      "transip",
                      "udr",
                      "ultra",
                      "unoeuro",
                      "variomedia",
                      "veesp",
                      "vercel",
                      "vscale",
                      "vultr",
                      "websupport",
                      "west_cn",
                      "world4you",
                      "yandex360",
                      "yc",
                      "zilore",
                      "zone",
                      "zoneedit",
                      "zonomi"
                    ],
                    "x-proxmox-optional": true
                  },
                  "data": {
                    "type": "string",
                    "description": "DNS plugin data. (base64 encoded)",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "disable": {
                    "type": "boolean",
                    "description": "Flag to disable the config.",
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "id": {
                    "type": "string",
                    "description": "ACME Plugin ID name",
                    "format": "pve-configid",
                    "x-proxmox-typetext": "<string>"
                  },
                  "nodes": {
                    "type": "string",
                    "description": "List of cluster node names.",
                    "format": "pve-node-list",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "type": {
                    "type": "string",
                    "description": "ACME challenge type.",
                    "enum": [
                      "dns",
                      "standalone"
                    ]
                  },
                  "validation-delay": {
                    "type": "integer",
                    "description": "Extra delay in seconds to wait before requesting validation. Allows to cope with a long TTL of DNS records.",
                    "default": 30,
                    "minimum": 0,
                    "maximum": 172800,
                    "x-proxmox-typetext": "<integer> (0 - 172800)",
                    "x-proxmox-optional": true
                  }
                },
                "required": [
                  "id",
                  "type"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/",
                [
                  "Sys.Modify"
                ]
              ]
            }
          ]
        }
      }
    },
    "/cluster/acme/plugins/{id}": {
      "delete": {
        "operationId": "delete-cluster-acme-plugins-id",
        "summary": "delete_plugin",
        "description": "Delete ACME plugin configuration.",
        "tags": [
          "/cluster/acme/plugins/{id}"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "delete-cluster-acme-plugins-id",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Unique identifier for ACME plugin instance.",
            "schema": {
              "type": "string",
              "description": "Unique identifier for ACME plugin instance.",
              "format": "pve-configid",
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/",
                [
                  "Sys.Modify"
                ]
              ]
            }
          ]
        }
      },
      "get": {
        "operationId": "get-cluster-acme-plugins-id",
        "summary": "get_plugin_config",
        "description": "Get ACME plugin configuration.",
        "tags": [
          "/cluster/acme/plugins/{id}"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-cluster-acme-plugins-id",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Unique identifier for ACME plugin instance.",
            "schema": {
              "type": "string",
              "description": "Unique identifier for ACME plugin instance.",
              "format": "pve-configid",
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/",
                [
                  "Sys.Modify"
                ]
              ]
            }
          ]
        }
      },
      "put": {
        "operationId": "put-cluster-acme-plugins-id",
        "summary": "update_plugin",
        "description": "Update ACME plugin configuration.",
        "tags": [
          "/cluster/acme/plugins/{id}"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "put-cluster-acme-plugins-id",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ACME Plugin ID name",
            "schema": {
              "type": "string",
              "description": "ACME Plugin ID name",
              "format": "pve-configid",
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "api": {
                    "type": "string",
                    "description": "API plugin name",
                    "enum": [
                      "1984hosting",
                      "acmedns",
                      "acmeproxy",
                      "active24",
                      "ad",
                      "ali",
                      "alviy",
                      "anx",
                      "artfiles",
                      "arvan",
                      "aurora",
                      "autodns",
                      "aws",
                      "azion",
                      "azure",
                      "beget",
                      "bookmyname",
                      "bunny",
                      "cf",
                      "clouddns",
                      "cloudns",
                      "cn",
                      "conoha",
                      "constellix",
                      "cpanel",
                      "curanet",
                      "cyon",
                      "da",
                      "ddnss",
                      "desec",
                      "df",
                      "dgon",
                      "dnsexit",
                      "dnshome",
                      "dnsimple",
                      "dnsservices",
                      "doapi",
                      "domeneshop",
                      "dp",
                      "dpi",
                      "dreamhost",
                      "duckdns",
                      "durabledns",
                      "dyn",
                      "dynu",
                      "dynv6",
                      "easydns",
                      "edgecenter",
                      "edgedns",
                      "euserv",
                      "exoscale",
                      "fornex",
                      "freedns",
                      "freemyip",
                      "gandi_livedns",
                      "gcloud",
                      "gcore",
                      "gd",
                      "geoscaling",
                      "googledomains",
                      "he",
                      "he_ddns",
                      "hetzner",
                      "hexonet",
                      "hostingde",
                      "huaweicloud",
                      "infoblox",
                      "infomaniak",
                      "internetbs",
                      "inwx",
                      "ionos",
                      "ionos_cloud",
                      "ipv64",
                      "ispconfig",
                      "jd",
                      "joker",
                      "kappernet",
                      "kas",
                      "kinghost",
                      "knot",
                      "la",
                      "leaseweb",
                      "lexicon",
                      "limacity",
                      "linode",
                      "linode_v4",
                      "loopia",
                      "lua",
                      "maradns",
                      "me",
                      "miab",
                      "mijnhost",
                      "misaka",
                      "myapi",
                      "mydevil",
                      "mydnsjp",
                      "mythic_beasts",
                      "namecheap",
                      "namecom",
                      "namesilo",
                      "nanelo",
                      "nederhost",
                      "neodigit",
                      "netcup",
                      "netlify",
                      "nic",
                      "njalla",
                      "nm",
                      "nsd",
                      "nsone",
                      "nsupdate",
                      "nw",
                      "oci",
                      "omglol",
                      "one",
                      "online",
                      "openprovider",
                      "openstack",
                      "opnsense",
                      "ovh",
                      "pdns",
                      "pleskxml",
                      "pointhq",
                      "porkbun",
                      "rackcorp",
                      "rackspace",
                      "rage4",
                      "rcode0",
                      "regru",
                      "scaleway",
                      "schlundtech",
                      "selectel",
                      "selfhost",
                      "servercow",
                      "simply",
                      "technitium",
                      "tele3",
                      "tencent",
                      "timeweb",
                      "transip",
                      "udr",
                      "ultra",
                      "unoeuro",
                      "variomedia",
                      "veesp",
                      "vercel",
                      "vscale",
                      "vultr",
                      "websupport",
                      "west_cn",
                      "world4you",
                      "yandex360",
                      "yc",
                      "zilore",
                      "zone",
                      "zoneedit",
                      "zonomi"
                    ],
                    "x-proxmox-optional": true
                  },
                  "data": {
                    "type": "string",
                    "description": "DNS plugin data. (base64 encoded)",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "delete": {
                    "type": "string",
                    "description": "A list of settings you want to delete.",
                    "maxLength": 4096,
                    "format": "pve-configid-list",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "digest": {
                    "type": "string",
                    "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
                    "maxLength": 64,
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "disable": {
                    "type": "boolean",
                    "description": "Flag to disable the config.",
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "nodes": {
                    "type": "string",
                    "description": "List of cluster node names.",
                    "format": "pve-node-list",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "validation-delay": {
                    "type": "integer",
                    "description": "Extra delay in seconds to wait before requesting validation. Allows to cope with a long TTL of DNS records.",
                    "default": 30,
                    "minimum": 0,
                    "maximum": 172800,
                    "x-proxmox-typetext": "<integer> (0 - 172800)",
                    "x-proxmox-optional": true
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/",
                [
                  "Sys.Modify"
                ]
              ]
            }
          ]
        }
      }
    },
    "/cluster/acme/tos": {
      "get": {
        "operationId": "get-cluster-acme-tos",
        "summary": "get_tos",
        "description": "Retrieve ACME TermsOfService URL from CA. Deprecated, please use /cluster/acme/meta.",
        "tags": [
          "/cluster/acme/tos"
        ],
        "responses": {
          "200": {
            "description": "ACME TermsOfService URL.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "ACME TermsOfService URL.",
                  "x-proxmox-optional": true
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-cluster-acme-tos",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "directory",
            "in": "query",
            "required": false,
            "description": "URL of ACME CA directory endpoint.",
            "schema": {
              "type": "string",
              "description": "URL of ACME CA directory endpoint.",
              "default": "https://acme-v02.api.letsencrypt.org/directory",
              "pattern": "^https?://.*",
              "x-proxmox-optional": true
            }
          }
        ],
        "security": [],
        "x-proxmox-permissions": {
          "all": [
            {
              "user": "all"
            }
          ]
        }
      }
    },
    "/cluster/backup": {
      "get": {
        "operationId": "get-cluster-backup",
        "summary": "index",
        "description": "List vzdump backup schedule.",
        "tags": [
          "/cluster/backup"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "The job ID.",
                        "maxLength": 50,
                        "pattern": "\\S+"
                      }
                    },
                    "required": [
                      "id"
                    ]
                  },
                  "x-proxmox-metadata": {
                    "links": [
                      {
                        "href": "{id}",
                        "rel": "child"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-cluster-backup",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "security": [],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/",
                [
                  "Sys.Audit"
                ]
              ]
            }
          ]
        }
      },
      "post": {
        "operationId": "post-cluster-backup",
        "summary": "create_job",
        "description": "Create new vzdump backup job.",
        "tags": [
          "/cluster/backup"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "post-cluster-backup",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "all": {
                    "type": "boolean",
                    "description": "Backup all known guest systems on this host.",
                    "default": false,
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "bwlimit": {
                    "type": "integer",
                    "description": "Limit I/O bandwidth (in KiB/s).",
                    "default": 0,
                    "minimum": 0,
                    "x-proxmox-typetext": "<integer> (0 - N)",
                    "x-proxmox-optional": true
                  },
                  "comment": {
                    "type": "string",
                    "description": "Description for the Job.",
                    "maxLength": 512,
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "compress": {
                    "type": "string",
                    "description": "Compress dump file.",
                    "enum": [
                      "0",
                      "1",
                      "gzip",
                      "lzo",
                      "zstd"
                    ],
                    "default": "0",
                    "x-proxmox-optional": true
                  },
                  "dow": {
                    "type": "string",
                    "description": "Day of week selection.",
                    "default": "mon,tue,wed,thu,fri,sat,sun",
                    "format": "pve-day-of-week-list",
                    "x-proxmox-requires": [
                      "starttime"
                    ],
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "dumpdir": {
                    "type": "string",
                    "description": "Store resulting files to specified directory.",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "enabled": {
                    "type": "boolean",
                    "description": "Enable or disable the job.",
                    "default": "1",
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "exclude": {
                    "type": "string",
                    "description": "Exclude specified guest systems (assumes --all)",
                    "format": "pve-vmid-list",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "exclude-path": {
                    "type": "array",
                    "description": "Exclude certain files/directories (shell globs). Paths starting with '/' are anchored to the container's root, other paths match relative to each subdirectory.",
                    "items": {
                      "type": "string"
                    },
                    "x-proxmox-typetext": "<array>",
                    "x-proxmox-optional": true
                  },
                  "fleecing": {
                    "type": "string",
                    "description": "Options for backup fleecing (VM only).",
                    "format": "backup-fleecing",
                    "x-proxmox-typetext": "[[enabled=]<1|0>] [,storage=<storage ID>]",
                    "x-proxmox-optional": true
                  },
                  "id": {
                    "type": "string",
                    "description": "Job ID (will be autogenerated).",
                    "format": "pve-configid",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "ionice": {
                    "type": "integer",
                    "description": "Set IO priority when using the BFQ scheduler. For snapshot and suspend mode backups of VMs, this only affects the compressor. A value of 8 means the idle priority is used, otherwise the best-effort priority is used with the specified value.",
                    "default": 7,
                    "minimum": 0,
                    "maximum": 8,
                    "x-proxmox-typetext": "<integer> (0 - 8)",
                    "x-proxmox-optional": true
                  },
                  "lockwait": {
                    "type": "integer",
                    "description": "Maximal time to wait for the global lock (minutes).",
                    "default": 180,
                    "minimum": 0,
                    "x-proxmox-typetext": "<integer> (0 - N)",
                    "x-proxmox-optional": true
                  },
                  "mailnotification": {
                    "type": "string",
                    "description": "Deprecated: use notification targets/matchers instead. Specify when to send a notification mail",
                    "enum": [
                      "always",
                      "failure"
                    ],
                    "default": "always",
                    "x-proxmox-optional": true
                  },
                  "mailto": {
                    "type": "string",
                    "description": "Deprecated: Use notification targets/matchers instead. Comma-separated list of email addresses or users that should receive email notifications.",
                    "format": "email-or-username-list",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "maxfiles": {
                    "type": "integer",
                    "description": "Deprecated: use 'prune-backups' instead. Maximal number of backup files per guest system.",
                    "minimum": 1,
                    "x-proxmox-typetext": "<integer> (1 - N)",
                    "x-proxmox-optional": true
                  },
                  "mode": {
                    "type": "string",
                    "description": "Backup mode.",
                    "enum": [
                      "snapshot",
                      "suspend",
                      "stop"
                    ],
                    "default": "snapshot",
                    "x-proxmox-optional": true
                  },
                  "node": {
                    "type": "string",
                    "description": "Only run if executed on this node.",
                    "format": "pve-node",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "notes-template": {
                    "type": "string",
                    "description": "Template string for generating notes for the backup(s). It can contain variables which will be replaced by their values. Currently supported are {{cluster}}, {{guestname}}, {{node}}, and {{vmid}}, but more might be added in the future. Needs to be a single line, newline and backslash need to be escaped as '\\n' and '\\\\' respectively.",
                    "maxLength": 1024,
                    "x-proxmox-requires": [
                      "storage"
                    ],
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "notification-mode": {
                    "type": "string",
                    "description": "Determine which notification system to use. If set to 'legacy-sendmail', vzdump will consider the mailto/mailnotification parameters and send emails to the specified address(es) via the 'sendmail' command. If set to 'notification-system', a notification will be sent via PVE's notification system, and the mailto and mailnotification will be ignored. If set to 'auto' (default setting), an email will be sent if mailto is set, and the notification system will be used if not.",
                    "enum": [
                      "auto",
                      "legacy-sendmail",
                      "notification-system"
                    ],
                    "default": "auto",
                    "x-proxmox-optional": true
                  },
                  "pbs-change-detection-mode": {
                    "type": "string",
                    "description": "PBS mode used to detect file changes and switch encoding format for container backups.",
                    "enum": [
                      "legacy",
                      "data",
                      "metadata"
                    ],
                    "x-proxmox-optional": true
                  },
                  "performance": {
                    "type": "string",
                    "description": "Other performance-related settings.",
                    "format": "backup-performance",
                    "x-proxmox-typetext": "[max-workers=<integer>] [,pbs-entries-max=<integer>]",
                    "x-proxmox-optional": true
                  },
                  "pigz": {
                    "type": "integer",
                    "description": "Use pigz instead of gzip when N>0. N=1 uses half of cores, N>1 uses N as thread count.",
                    "default": 0,
                    "x-proxmox-typetext": "<integer>",
                    "x-proxmox-optional": true
                  },
                  "pool": {
                    "type": "string",
                    "description": "Backup all known guest systems included in the specified pool.",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "protected": {
                    "type": "boolean",
                    "description": "If true, mark backup(s) as protected.",
                    "x-proxmox-requires": [
                      "storage"
                    ],
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "prune-backups": {
                    "type": "string",
                    "description": "Use these retention options instead of those from the storage configuration.",
                    "default": "keep-all=1",
                    "format": "prune-backups",
                    "x-proxmox-typetext": "[keep-all=<1|0>] [,keep-daily=<N>] [,keep-hourly=<N>] [,keep-last=<N>] [,keep-monthly=<N>] [,keep-weekly=<N>] [,keep-yearly=<N>]",
                    "x-proxmox-optional": true
                  },
                  "quiet": {
                    "type": "boolean",
                    "description": "Be quiet.",
                    "default": false,
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "remove": {
                    "type": "boolean",
                    "description": "Prune older backups according to 'prune-backups'.",
                    "default": true,
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "repeat-missed": {
                    "type": "boolean",
                    "description": "If true, the job will be run as soon as possible if it was missed while the scheduler was not running.",
                    "default": false,
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "schedule": {
                    "type": "string",
                    "description": "Backup schedule. The format is a subset of `systemd` calendar events.",
                    "maxLength": 128,
                    "format": "pve-calendar-event",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "script": {
                    "type": "string",
                    "description": "Use specified hook script.",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "starttime": {
                    "type": "string",
                    "description": "Job Start time.",
                    "pattern": "\\d{1,2}:\\d{1,2}",
                    "x-proxmox-typetext": "HH:MM",
                    "x-proxmox-optional": true
                  },
                  "stdexcludes": {
                    "type": "boolean",
                    "description": "Exclude temporary files and logs.",
                    "default": true,
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "stop": {
                    "type": "boolean",
                    "description": "Stop running backup jobs on this host.",
                    "default": false,
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "stopwait": {
                    "type": "integer",
                    "description": "Maximal time to wait until a guest system is stopped (minutes).",
                    "default": 10,
                    "minimum": 0,
                    "x-proxmox-typetext": "<integer> (0 - N)",
                    "x-proxmox-optional": true
                  },
                  "storage": {
                    "type": "string",
                    "description": "Store resulting file to this storage.",
                    "format": "pve-storage-id",
                    "x-proxmox-format-description": "storage ID",
                    "x-proxmox-typetext": "<storage ID>",
                    "x-proxmox-optional": true
                  },
                  "tmpdir": {
                    "type": "string",
                    "description": "Store temporary files to specified directory.",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "vmid": {
                    "type": "string",
                    "description": "The ID of the guest system you want to backup.",
                    "format": "pve-vmid-list",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "zstd": {
                    "type": "integer",
                    "description": "Zstd threads. N=0 uses half of the available cores, if N is set to a value bigger than 0, N is used as thread count.",
                    "default": 1,
                    "x-proxmox-typetext": "<integer>",
                    "x-proxmox-optional": true
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "description": "The 'tmpdir', 'dumpdir' and 'script' parameters are additionally restricted to the 'root@pam' user.",
              "check": [
                "perm",
                "/",
                [
                  "Sys.Modify"
                ]
              ]
            }
          ]
        }
      }
    },
    "/cluster/backup-info": {
      "get": {
        "operationId": "get-cluster-backup-info",
        "summary": "index",
        "description": "Index for backup info related endpoints",
        "tags": [
          "/cluster/backup-info"
        ],
        "responses": {
          "200": {
            "description": "Directory index.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "Directory index.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "subdir": {
                        "type": "string",
                        "description": "API sub-directory endpoint"
                      }
                    },
                    "required": [
                      "subdir"
                    ]
                  },
                  "x-proxmox-metadata": {
                    "links": [
                      {
                        "href": "{subdir}",
                        "rel": "child"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-cluster-backup-info",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "security": []
      }
    },
    "/cluster/backup-info/not-backed-up": {
      "get": {
        "operationId": "get-cluster-backup-info-not-backed-up",
        "summary": "get_guests_not_in_backup",
        "description": "Shows all guests which are not covered by any backup job.",
        "tags": [
          "/cluster/backup-info/not-backed-up"
        ],
        "responses": {
          "200": {
            "description": "Contains the guest objects.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "Contains the guest objects.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "Name of the guest",
                        "x-proxmox-optional": true
                      },
                      "type": {
                        "type": "string",
                        "description": "Type of the guest.",
                        "enum": [
                          "qemu",
                          "lxc"
                        ]
                      },
                      "vmid": {
                        "type": "integer",
                        "description": "VMID of the guest."
                      }
                    },
                    "required": [
                      "type",
                      "vmid"
                    ]
                  }
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-cluster-backup-info-not-backed-up",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/",
                [
                  "Sys.Audit"
                ]
              ]
            }
          ]
        }
      }
    },
    "/cluster/backup/{id}": {
      "delete": {
        "operationId": "delete-cluster-backup-id",
        "summary": "delete_job",
        "description": "Delete vzdump backup job definition.",
        "tags": [
          "/cluster/backup/{id}"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "delete-cluster-backup-id",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The job ID.",
            "schema": {
              "type": "string",
              "description": "The job ID.",
              "maxLength": 50,
              "pattern": "\\S+"
            }
          }
        ],
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/",
                [
                  "Sys.Modify"
                ]
              ]
            }
          ]
        }
      },
      "get": {
        "operationId": "get-cluster-backup-id",
        "summary": "read_job",
        "description": "Read vzdump backup job definition.",
        "tags": [
          "/cluster/backup/{id}"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-cluster-backup-id",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The job ID.",
            "schema": {
              "type": "string",
              "description": "The job ID.",
              "maxLength": 50,
              "pattern": "\\S+"
            }
          }
        ],
        "security": [],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/",
                [
                  "Sys.Audit"
                ]
              ]
            }
          ]
        }
      },
      "put": {
        "operationId": "put-cluster-backup-id",
        "summary": "update_job",
        "description": "Update vzdump backup job definition.",
        "tags": [
          "/cluster/backup/{id}"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "put-cluster-backup-id",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The job ID.",
            "schema": {
              "type": "string",
              "description": "The job ID.",
              "maxLength": 50,
              "pattern": "\\S+"
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "all": {
                    "type": "boolean",
                    "description": "Backup all known guest systems on this host.",
                    "default": false,
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "bwlimit": {
                    "type": "integer",
                    "description": "Limit I/O bandwidth (in KiB/s).",
                    "default": 0,
                    "minimum": 0,
                    "x-proxmox-typetext": "<integer> (0 - N)",
                    "x-proxmox-optional": true
                  },
                  "comment": {
                    "type": "string",
                    "description": "Description for the Job.",
                    "maxLength": 512,
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "compress": {
                    "type": "string",
                    "description": "Compress dump file.",
                    "enum": [
                      "0",
                      "1",
                      "gzip",
                      "lzo",
                      "zstd"
                    ],
                    "default": "0",
                    "x-proxmox-optional": true
                  },
                  "delete": {
                    "type": "string",
                    "description": "A list of settings you want to delete.",
                    "format": "pve-configid-list",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "dow": {
                    "type": "string",
                    "description": "Day of week selection.",
                    "format": "pve-day-of-week-list",
                    "x-proxmox-requires": [
                      "starttime"
                    ],
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "dumpdir": {
                    "type": "string",
                    "description": "Store resulting files to specified directory.",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "enabled": {
                    "type": "boolean",
                    "description": "Enable or disable the job.",
                    "default": "1",
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "exclude": {
                    "type": "string",
                    "description": "Exclude specified guest systems (assumes --all)",
                    "format": "pve-vmid-list",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "exclude-path": {
                    "type": "array",
                    "description": "Exclude certain files/directories (shell globs). Paths starting with '/' are anchored to the container's root, other paths match relative to each subdirectory.",
                    "items": {
                      "type": "string"
                    },
                    "x-proxmox-typetext": "<array>",
                    "x-proxmox-optional": true
                  },
                  "fleecing": {
                    "type": "string",
                    "description": "Options for backup fleecing (VM only).",
                    "format": "backup-fleecing",
                    "x-proxmox-typetext": "[[enabled=]<1|0>] [,storage=<storage ID>]",
                    "x-proxmox-optional": true
                  },
                  "ionice": {
                    "type": "integer",
                    "description": "Set IO priority when using the BFQ scheduler. For snapshot and suspend mode backups of VMs, this only affects the compressor. A value of 8 means the idle priority is used, otherwise the best-effort priority is used with the specified value.",
                    "default": 7,
                    "minimum": 0,
                    "maximum": 8,
                    "x-proxmox-typetext": "<integer> (0 - 8)",
                    "x-proxmox-optional": true
                  },
                  "lockwait": {
                    "type": "integer",
                    "description": "Maximal time to wait for the global lock (minutes).",
                    "default": 180,
                    "minimum": 0,
                    "x-proxmox-typetext": "<integer> (0 - N)",
                    "x-proxmox-optional": true
                  },
                  "mailnotification": {
                    "type": "string",
                    "description": "Deprecated: use notification targets/matchers instead. Specify when to send a notification mail",
                    "enum": [
                      "always",
                      "failure"
                    ],
                    "default": "always",
                    "x-proxmox-optional": true
                  },
                  "mailto": {
                    "type": "string",
                    "description": "Deprecated: Use notification targets/matchers instead. Comma-separated list of email addresses or users that should receive email notifications.",
                    "format": "email-or-username-list",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "maxfiles": {
                    "type": "integer",
                    "description": "Deprecated: use 'prune-backups' instead. Maximal number of backup files per guest system.",
                    "minimum": 1,
                    "x-proxmox-typetext": "<integer> (1 - N)",
                    "x-proxmox-optional": true
                  },
                  "mode": {
                    "type": "string",
                    "description": "Backup mode.",
                    "enum": [
                      "snapshot",
                      "suspend",
                      "stop"
                    ],
                    "default": "snapshot",
                    "x-proxmox-optional": true
                  },
                  "node": {
                    "type": "string",
                    "description": "Only run if executed on this node.",
                    "format": "pve-node",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "notes-template": {
                    "type": "string",
                    "description": "Template string for generating notes for the backup(s). It can contain variables which will be replaced by their values. Currently supported are {{cluster}}, {{guestname}}, {{node}}, and {{vmid}}, but more might be added in the future. Needs to be a single line, newline and backslash need to be escaped as '\\n' and '\\\\' respectively.",
                    "maxLength": 1024,
                    "x-proxmox-requires": [
                      "storage"
                    ],
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "notification-mode": {
                    "type": "string",
                    "description": "Determine which notification system to use. If set to 'legacy-sendmail', vzdump will consider the mailto/mailnotification parameters and send emails to the specified address(es) via the 'sendmail' command. If set to 'notification-system', a notification will be sent via PVE's notification system, and the mailto and mailnotification will be ignored. If set to 'auto' (default setting), an email will be sent if mailto is set, and the notification system will be used if not.",
                    "enum": [
                      "auto",
                      "legacy-sendmail",
                      "notification-system"
                    ],
                    "default": "auto",
                    "x-proxmox-optional": true
                  },
                  "pbs-change-detection-mode": {
                    "type": "string",
                    "description": "PBS mode used to detect file changes and switch encoding format for container backups.",
                    "enum": [
                      "legacy",
                      "data",
                      "metadata"
                    ],
                    "x-proxmox-optional": true
                  },
                  "performance": {
                    "type": "string",
                    "description": "Other performance-related settings.",
                    "format": "backup-performance",
                    "x-proxmox-typetext": "[max-workers=<integer>] [,pbs-entries-max=<integer>]",
                    "x-proxmox-optional": true
                  },
                  "pigz": {
                    "type": "integer",
                    "description": "Use pigz instead of gzip when N>0. N=1 uses half of cores, N>1 uses N as thread count.",
                    "default": 0,
                    "x-proxmox-typetext": "<integer>",
                    "x-proxmox-optional": true
                  },
                  "pool": {
                    "type": "string",
                    "description": "Backup all known guest systems included in the specified pool.",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "protected": {
                    "type": "boolean",
                    "description": "If true, mark backup(s) as protected.",
                    "x-proxmox-requires": [
                      "storage"
                    ],
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "prune-backups": {
                    "type": "string",
                    "description": "Use these retention options instead of those from the storage configuration.",
                    "default": "keep-all=1",
                    "format": "prune-backups",
                    "x-proxmox-typetext": "[keep-all=<1|0>] [,keep-daily=<N>] [,keep-hourly=<N>] [,keep-last=<N>] [,keep-monthly=<N>] [,keep-weekly=<N>] [,keep-yearly=<N>]",
                    "x-proxmox-optional": true
                  },
                  "quiet": {
                    "type": "boolean",
                    "description": "Be quiet.",
                    "default": false,
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "remove": {
                    "type": "boolean",
                    "description": "Prune older backups according to 'prune-backups'.",
                    "default": true,
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "repeat-missed": {
                    "type": "boolean",
                    "description": "If true, the job will be run as soon as possible if it was missed while the scheduler was not running.",
                    "default": false,
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "schedule": {
                    "type": "string",
                    "description": "Backup schedule. The format is a subset of `systemd` calendar events.",
                    "maxLength": 128,
                    "format": "pve-calendar-event",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "script": {
                    "type": "string",
                    "description": "Use specified hook script.",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "starttime": {
                    "type": "string",
                    "description": "Job Start time.",
                    "pattern": "\\d{1,2}:\\d{1,2}",
                    "x-proxmox-typetext": "HH:MM",
                    "x-proxmox-optional": true
                  },
                  "stdexcludes": {
                    "type": "boolean",
                    "description": "Exclude temporary files and logs.",
                    "default": true,
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "stop": {
                    "type": "boolean",
                    "description": "Stop running backup jobs on this host.",
                    "default": false,
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "stopwait": {
                    "type": "integer",
                    "description": "Maximal time to wait until a guest system is stopped (minutes).",
                    "default": 10,
                    "minimum": 0,
                    "x-proxmox-typetext": "<integer> (0 - N)",
                    "x-proxmox-optional": true
                  },
                  "storage": {
                    "type": "string",
                    "description": "Store resulting file to this storage.",
                    "format": "pve-storage-id",
                    "x-proxmox-format-description": "storage ID",
                    "x-proxmox-typetext": "<storage ID>",
                    "x-proxmox-optional": true
                  },
                  "tmpdir": {
                    "type": "string",
                    "description": "Store temporary files to specified directory.",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "vmid": {
                    "type": "string",
                    "description": "The ID of the guest system you want to backup.",
                    "format": "pve-vmid-list",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "zstd": {
                    "type": "integer",
                    "description": "Zstd threads. N=0 uses half of the available cores, if N is set to a value bigger than 0, N is used as thread count.",
                    "default": 1,
                    "x-proxmox-typetext": "<integer>",
                    "x-proxmox-optional": true
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "description": "The 'tmpdir', 'dumpdir' and 'script' parameters are additionally restricted to the 'root@pam' user.",
              "check": [
                "perm",
                "/",
                [
                  "Sys.Modify"
                ]
              ]
            }
          ]
        }
      }
    },
    "/cluster/backup/{id}/included_volumes": {
      "get": {
        "operationId": "get-cluster-backup-id-included-volumes",
        "summary": "get_volume_backup_included",
        "description": "Returns included guests and the backup status of their disks. Optimized to be used in ExtJS tree views.",
        "tags": [
          "/cluster/backup/{id}/included_volumes"
        ],
        "responses": {
          "200": {
            "description": "Root node of the tree object. Children represent guests, grandchildren represent volumes of that guest.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Root node of the tree object. Children represent guests, grandchildren represent volumes of that guest.",
                  "properties": {
                    "children": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "children": {
                            "type": "array",
                            "description": "The volumes of the guest with the information if they will be included in backups.",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "description": "Configuration key of the volume."
                                },
                                "included": {
                                  "type": "boolean",
                                  "description": "Whether the volume is included in the backup or not."
                                },
                                "name": {
                                  "type": "string",
                                  "description": "Name of the volume."
                                },
                                "reason": {
                                  "type": "string",
                                  "description": "The reason why the volume is included (or excluded)."
                                }
                              },
                              "required": [
                                "id",
                                "included",
                                "name",
                                "reason"
                              ]
                            },
                            "x-proxmox-optional": true
                          },
                          "id": {
                            "type": "integer",
                            "description": "VMID of the guest."
                          },
                          "name": {
                            "type": "string",
                            "description": "Name of the guest",
                            "x-proxmox-optional": true
                          },
                          "type": {
                            "type": "string",
                            "description": "Type of the guest, VM, CT or unknown for removed but not purged guests.",
                            "enum": [
                              "qemu",
                              "lxc",
                              "unknown"
                            ]
                          }
                        },
                        "required": [
                          "id",
                          "type"
                        ]
                      }
                    }
                  },
                  "required": [
                    "children"
                  ]
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-cluster-backup-id-included-volumes",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The job ID.",
            "schema": {
              "type": "string",
              "description": "The job ID.",
              "maxLength": 50,
              "pattern": "\\S+"
            }
          }
        ],
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/",
                [
                  "Sys.Audit"
                ]
              ]
            }
          ]
        }
      }
    },
    "/cluster/ceph": {
      "get": {
        "operationId": "get-cluster-ceph",
        "summary": "cephindex",
        "description": "Cluster ceph index.",
        "tags": [
          "/cluster/ceph"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  },
                  "x-proxmox-metadata": {
                    "links": [
                      {
                        "href": "{name}",
                        "rel": "child"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-cluster-ceph",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "security": [],
        "x-proxmox-permissions": {
          "all": [
            {
              "user": "all"
            }
          ]
        }
      }
    },
    "/cluster/ceph/flags": {
      "get": {
        "operationId": "get-cluster-ceph-flags",
        "summary": "get_all_flags",
        "description": "get the status of all ceph flags",
        "tags": [
          "/cluster/ceph/flags"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "description": {
                        "type": "string",
                        "description": "Flag description."
                      },
                      "name": {
                        "type": "string",
                        "description": "Flag name.",
                        "enum": [
                          "nobackfill",
                          "nodeep-scrub",
                          "nodown",
                          "noin",
                          "noout",
                          "norebalance",
                          "norecover",
                          "noscrub",
                          "notieragent",
                          "noup",
                          "pause"
                        ]
                      },
                      "value": {
                        "type": "boolean",
                        "description": "Flag value."
                      }
                    },
                    "required": [
                      "description",
                      "name",
                      "value"
                    ],
                    "additionalProperties": true
                  },
                  "x-proxmox-metadata": {
                    "links": [
                      {
                        "href": "{name}",
                        "rel": "child"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-cluster-ceph-flags",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/",
                [
                  "Sys.Audit"
                ]
              ]
            }
          ]
        }
      },
      "put": {
        "operationId": "put-cluster-ceph-flags",
        "summary": "set_flags",
        "description": "Set/Unset multiple ceph flags at once.",
        "tags": [
          "/cluster/ceph/flags"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "put-cluster-ceph-flags",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "nobackfill": {
                    "type": "boolean",
                    "description": "Backfilling of PGs is suspended.",
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "nodeep-scrub": {
                    "type": "boolean",
                    "description": "Deep Scrubbing is disabled.",
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "nodown": {
                    "type": "boolean",
                    "description": "OSD failure reports are being ignored, such that the monitors will not mark OSDs down.",
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "noin": {
                    "type": "boolean",
                    "description": "OSDs that were previously marked out will not be marked back in when they start.",
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "noout": {
                    "type": "boolean",
                    "description": "OSDs will not automatically be marked out after the configured interval.",
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "norebalance": {
                    "type": "boolean",
                    "description": "Rebalancing of PGs is suspended.",
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "norecover": {
                    "type": "boolean",
                    "description": "Recovery of PGs is suspended.",
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "noscrub": {
                    "type": "boolean",
                    "description": "Scrubbing is disabled.",
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "notieragent": {
                    "type": "boolean",
                    "description": "Cache tiering activity is suspended.",
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "noup": {
                    "type": "boolean",
                    "description": "OSDs are not allowed to start.",
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "pause": {
                    "type": "boolean",
                    "description": "Pauses read and writes.",
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/",
                [
                  "Sys.Modify"
                ]
              ]
            }
          ]
        }
      }
    },
    "/cluster/ceph/flags/{flag}": {
      "get": {
        "operationId": "get-cluster-ceph-flags-flag",
        "summary": "get_flag",
        "description": "Get the status of a specific ceph flag.",
        "tags": [
          "/cluster/ceph/flags/{flag}"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-cluster-ceph-flags-flag",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "flag",
            "in": "path",
            "required": true,
            "description": "The name of the flag name to get.",
            "schema": {
              "type": "string",
              "description": "The name of the flag name to get.",
              "enum": [
                "nobackfill",
                "nodeep-scrub",
                "nodown",
                "noin",
                "noout",
                "norebalance",
                "norecover",
                "noscrub",
                "notieragent",
                "noup",
                "pause"
              ]
            }
          }
        ],
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/",
                [
                  "Sys.Audit"
                ]
              ]
            }
          ]
        }
      },
      "put": {
        "operationId": "put-cluster-ceph-flags-flag",
        "summary": "update_flag",
        "description": "Set or clear (unset) a specific ceph flag",
        "tags": [
          "/cluster/ceph/flags/{flag}"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "put-cluster-ceph-flags-flag",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "flag",
            "in": "path",
            "required": true,
            "description": "The ceph flag to update",
            "schema": {
              "type": "string",
              "description": "The ceph flag to update",
              "enum": [
                "nobackfill",
                "nodeep-scrub",
                "nodown",
                "noin",
                "noout",
                "norebalance",
                "norecover",
                "noscrub",
                "notieragent",
                "noup",
                "pause"
              ]
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "value": {
                    "type": "boolean",
                    "description": "The new value of the flag",
                    "x-proxmox-typetext": "<boolean>"
                  }
                },
                "required": [
                  "value"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/",
                [
                  "Sys.Modify"
                ]
              ]
            }
          ]
        }
      }
    },
    "/cluster/ceph/metadata": {
      "get": {
        "operationId": "get-cluster-ceph-metadata",
        "summary": "metadata",
        "description": "Get ceph metadata.",
        "tags": [
          "/cluster/ceph/metadata"
        ],
        "responses": {
          "200": {
            "description": "Items for each type of service containing objects for each instance.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Items for each type of service containing objects for each instance.",
                  "properties": {
                    "mds": {
                      "type": "object",
                      "description": "Metadata servers configured in the cluster and their properties.",
                      "properties": {
                        "{id}": {
                          "type": "object",
                          "description": "Useful properties are listed, but not the full list.",
                          "properties": {
                            "addr": {
                              "type": "string",
                              "description": "Bind addresses and ports."
                            },
                            "ceph_release": {
                              "type": "string",
                              "description": "Ceph release codename currently used."
                            },
                            "ceph_version": {
                              "type": "string",
                              "description": "Version info currently used by the service."
                            },
                            "ceph_version_short": {
                              "type": "string",
                              "description": "Short version (numerical) info currently used by the service."
                            },
                            "hostname": {
                              "type": "string",
                              "description": "Hostname on which the service is running."
                            },
                            "mem_swap_kb": {
                              "type": "integer",
                              "description": "Memory of the service currently in swap."
                            },
                            "mem_total_kb": {
                              "type": "integer",
                              "description": "Memory consumption of the service."
                            },
                            "name": {
                              "type": "string",
                              "description": "Name of the service instance."
                            }
                          },
                          "required": [
                            "addr",
                            "ceph_release",
                            "ceph_version",
                            "ceph_version_short",
                            "hostname",
                            "mem_swap_kb",
                            "mem_total_kb",
                            "name"
                          ]
                        }
                      },
                      "required": [
                        "{id}"
                      ]
                    },
                    "mgr": {
                      "type": "object",
                      "description": "Managers configured in the cluster and their properties.",
                      "properties": {
                        "{id}": {
                          "type": "object",
                          "description": "Useful properties are listed, but not the full list.",
                          "properties": {
                            "addr": {
                              "type": "string",
                              "description": "Bind address"
                            },
                            "ceph_release": {
                              "type": "string",
                              "description": "Ceph release codename currently used."
                            },
                            "ceph_version": {
                              "type": "string",
                              "description": "Version info currently used by the service."
                            },
                            "ceph_version_short": {
                              "type": "string",
                              "description": "Short version (numerical) info currently used by the service."
                            },
                            "hostname": {
                              "type": "string",
                              "description": "Hostname on which the service is running."
                            },
                            "mem_swap_kb": {
                              "type": "integer",
                              "description": "Memory of the service currently in swap."
                            },
                            "mem_total_kb": {
                              "type": "integer",
                              "description": "Memory consumption of the service."
                            },
                            "name": {
                              "type": "string",
                              "description": "Name of the service instance."
                            }
                          },
                          "required": [
                            "addr",
                            "ceph_release",
                            "ceph_version",
                            "ceph_version_short",
                            "hostname",
                            "mem_swap_kb",
                            "mem_total_kb",
                            "name"
                          ]
                        }
                      },
                      "required": [
                        "{id}"
                      ]
                    },
                    "mon": {
                      "type": "object",
                      "description": "Monitors configured in the cluster and their properties.",
                      "properties": {
                        "{id}": {
                          "type": "object",
                          "description": "Useful properties are listed, but not the full list.",
                          "properties": {
                            "addrs": {
                              "type": "string",
                              "description": "Bind addresses and ports."
                            },
                            "ceph_release": {
                              "type": "string",
                              "description": "Ceph release codename currently used."
                            },
                            "ceph_version": {
                              "type": "string",
                              "description": "Version info currently used by the service."
                            },
                            "ceph_version_short": {
                              "type": "string",
                              "description": "Short version (numerical) info currently used by the service."
                            },
                            "hostname": {
                              "type": "string",
                              "description": "Hostname on which the service is running."
                            },
                            "mem_swap_kb": {
                              "type": "integer",
                              "description": "Memory of the service currently in swap."
                            },
                            "mem_total_kb": {
                              "type": "integer",
                              "description": "Memory consumption of the service."
                            },
                            "name": {
                              "type": "string",
                              "description": "Name of the service instance."
                            }
                          },
                          "required": [
                            "addrs",
                            "ceph_release",
                            "ceph_version",
                            "ceph_version_short",
                            "hostname",
                            "mem_swap_kb",
                            "mem_total_kb",
                            "name"
                          ]
                        }
                      },
                      "required": [
                        "{id}"
                      ]
                    },
                    "node": {
                      "type": "object",
                      "description": "Ceph version installed on the nodes.",
                      "properties": {
                        "{node}": {
                          "type": "object",
                          "properties": {
                            "buildcommit": {
                              "type": "string",
                              "description": "GIT commit used for the build."
                            },
                            "version": {
                              "type": "object",
                              "description": "Version info.",
                              "properties": {
                                "parts": {
                                  "type": "array",
                                  "description": "major, minor & patch"
                                },
                                "str": {
                                  "type": "string",
                                  "description": "Version as single string."
                                }
                              },
                              "required": [
                                "parts",
                                "str"
                              ]
                            }
                          },
                          "required": [
                            "buildcommit",
                            "version"
                          ]
                        }
                      },
                      "required": [
                        "{node}"
                      ]
                    },
                    "osd": {
                      "type": "array",
                      "description": "OSDs configured in the cluster and their properties.",
                      "properties": {
                        "{id}": {
                          "type": "object",
                          "description": "Useful properties are listed, but not the full list.",
                          "properties": {
                            "back_addr": {
                              "type": "string",
                              "description": "Bind addresses and ports for backend inter OSD traffic."
                            },
                            "ceph_release": {
                              "type": "string",
                              "description": "Ceph release codename currently used."
                            },
                            "ceph_version": {
                              "type": "string",
                              "description": "Version info currently used by the service."
                            },
                            "ceph_version_short": {
                              "type": "string",
                              "description": "Short version (numerical) info currently used by the service."
                            },
                            "device_id": {
                              "type": "string",
                              "description": "Devices used by the OSD."
                            },
                            "front_addr": {
                              "type": "string",
                              "description": "Bind addresses and ports for frontend traffic to OSDs."
                            },
                            "hostname": {
                              "type": "string",
                              "description": "Hostname on which the service is running."
                            },
                            "id": {
                              "type": "integer",
                              "description": "OSD ID."
                            },
                            "mem_swap_kb": {
                              "type": "integer",
                              "description": "Memory of the service currently in swap."
                            },
                            "mem_total_kb": {
                              "type": "integer",
                              "description": "Memory consumption of the service."
                            },
                            "osd_data": {
                              "type": "string",
                              "description": "Path to the OSD data directory."
                            },
                            "osd_objectstore": {
                              "type": "string",
                              "description": "OSD objectstore type."
                            }
                          },
                          "required": [
                            "back_addr",
                            "ceph_release",
                            "ceph_version",
                            "ceph_version_short",
                            "device_id",
                            "front_addr",
                            "hostname",
                            "id",
                            "mem_swap_kb",
                            "mem_total_kb",
                            "osd_data",
                            "osd_objectstore"
                          ]
                        }
                      },
                      "required": [
                        "{id}"
                      ]
                    }
                  },
                  "required": [
                    "mds",
                    "mgr",
                    "mon",
                    "node",
                    "osd"
                  ]
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-cluster-ceph-metadata",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "scope",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "all",
                "versions"
              ],
              "default": "all",
              "x-proxmox-optional": true
            }
          }
        ],
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/",
                [
                  "Sys.Audit",
                  "Datastore.Audit"
                ],
                "any",
                1
              ]
            }
          ]
        }
      }
    },
    "/cluster/ceph/status": {
      "get": {
        "operationId": "get-cluster-ceph-status",
        "summary": "status",
        "description": "Get ceph status.",
        "tags": [
          "/cluster/ceph/status"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-cluster-ceph-status",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/",
                [
                  "Sys.Audit",
                  "Datastore.Audit"
                ],
                "any",
                1
              ]
            }
          ]
        }
      }
    },
    "/cluster/config": {
      "get": {
        "operationId": "get-cluster-config",
        "summary": "index",
        "description": "Directory index.",
        "tags": [
          "/cluster/config"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  },
                  "x-proxmox-metadata": {
                    "links": [
                      {
                        "href": "{name}",
                        "rel": "child"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-cluster-config",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "security": [],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/",
                [
                  "Sys.Audit"
                ]
              ]
            }
          ]
        }
      },
      "post": {
        "operationId": "post-cluster-config",
        "summary": "create",
        "description": "Generate new cluster configuration. If no links given, default to local IP address as link0.",
        "tags": [
          "/cluster/config"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "post-cluster-config",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "clustername": {
                    "type": "string",
                    "description": "The name of the cluster.",
                    "maxLength": 15,
                    "format": "pve-node",
                    "x-proxmox-typetext": "<string>"
                  },
                  "link[n]": {
                    "type": "string",
                    "description": "Address and priority information of a single corosync link. (up to 8 links supported; link0..link7)",
                    "x-proxmox-typetext": "[address=]<IP> [,priority=<integer>]",
                    "x-proxmox-optional": true
                  },
                  "nodeid": {
                    "type": "integer",
                    "description": "Node id for this node.",
                    "minimum": 1,
                    "x-proxmox-typetext": "<integer> (1 - N)",
                    "x-proxmox-optional": true
                  },
                  "votes": {
                    "type": "integer",
                    "description": "Number of votes for this node.",
                    "minimum": 1,
                    "x-proxmox-typetext": "<integer> (1 - N)",
                    "x-proxmox-optional": true
                  }
                },
                "required": [
                  "clustername"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ]
      }
    },
    "/cluster/config/apiversion": {
      "get": {
        "operationId": "get-cluster-config-apiversion",
        "summary": "join_api_version",
        "description": "Return the version of the cluster join API available on this node.",
        "tags": [
          "/cluster/config/apiversion"
        ],
        "responses": {
          "200": {
            "description": "Cluster Join API version, currently 1",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "description": "Cluster Join API version, currently 1",
                  "minimum": 0
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-cluster-config-apiversion",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "security": [],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/",
                [
                  "Sys.Audit"
                ]
              ]
            }
          ]
        }
      }
    },
    "/cluster/config/join": {
      "get": {
        "operationId": "get-cluster-config-join",
        "summary": "join_info",
        "description": "Get information needed to join this cluster over the connected node.",
        "tags": [
          "/cluster/config/join"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "config_digest": {
                      "type": "string"
                    },
                    "nodelist": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The cluster node name.",
                            "format": "pve-node"
                          },
                          "nodeid": {
                            "type": "integer",
                            "description": "Node id for this node.",
                            "minimum": 1,
                            "x-proxmox-optional": true
                          },
                          "pve_addr": {
                            "type": "string",
                            "format": "ip"
                          },
                          "pve_fp": {
                            "type": "string",
                            "description": "Certificate SHA 256 fingerprint.",
                            "pattern": "([A-Fa-f0-9]{2}:){31}[A-Fa-f0-9]{2}"
                          },
                          "quorum_votes": {
                            "type": "integer",
                            "minimum": 0
                          },
                          "ring0_addr": {
                            "type": "string",
                            "description": "Address and priority information of a single corosync link. (up to 8 links supported; link0..link7)",
                            "x-proxmox-optional": true
                          }
                        },
                        "required": [
                          "name",
                          "pve_addr",
                          "pve_fp",
                          "quorum_votes"
                        ],
                        "additionalProperties": true
                      }
                    },
                    "preferred_node": {
                      "type": "string",
                      "description": "The cluster node name.",
                      "format": "pve-node"
                    },
                    "totem": {
                      "type": "object"
                    }
                  },
                  "required": [
                    "config_digest",
                    "nodelist",
                    "preferred_node",
                    "totem"
                  ],
                  "additionalProperties": false
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-cluster-config-join",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "query",
            "required": false,
            "description": "The node for which the joinee gets the nodeinfo. ",
            "schema": {
              "type": "string",
              "description": "The node for which the joinee gets the nodeinfo. ",
              "default": "current connected node",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>",
              "x-proxmox-optional": true
            }
          }
        ],
        "security": [],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/",
                [
                  "Sys.Audit"
                ]
              ]
            }
          ]
        }
      },
      "post": {
        "operationId": "post-cluster-config-join",
        "summary": "join",
        "description": "Joins this node into an existing cluster. If no links are given, default to IP resolved by node's hostname on single link (fallback fails for clusters with multiple links).",
        "tags": [
          "/cluster/config/join"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "post-cluster-config-join",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "fingerprint": {
                    "type": "string",
                    "description": "Certificate SHA 256 fingerprint.",
                    "pattern": "([A-Fa-f0-9]{2}:){31}[A-Fa-f0-9]{2}"
                  },
                  "force": {
                    "type": "boolean",
                    "description": "Do not throw error if node already exists.",
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "hostname": {
                    "type": "string",
                    "description": "Hostname (or IP) of an existing cluster member.",
                    "x-proxmox-typetext": "<string>"
                  },
                  "link[n]": {
                    "type": "string",
                    "description": "Address and priority information of a single corosync link. (up to 8 links supported; link0..link7)",
                    "x-proxmox-typetext": "[address=]<IP> [,priority=<integer>]",
                    "x-proxmox-optional": true
                  },
                  "nodeid": {
                    "type": "integer",
                    "description": "Node id for this node.",
                    "minimum": 1,
                    "x-proxmox-typetext": "<integer> (1 - N)",
                    "x-proxmox-optional": true
                  },
                  "password": {
                    "type": "string",
                    "description": "Superuser (root) password of peer node.",
                    "maxLength": 128,
                    "x-proxmox-typetext": "<string>"
                  },
                  "votes": {
                    "type": "integer",
                    "description": "Number of votes for this node",
                    "minimum": 0,
                    "x-proxmox-typetext": "<integer> (0 - N)",
                    "x-proxmox-optional": true
                  }
                },
                "required": [
                  "fingerprint",
                  "hostname",
                  "password"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ]
      }
    },
    "/cluster/config/nodes": {
      "get": {
        "operationId": "get-cluster-config-nodes",
        "summary": "nodes",
        "description": "Corosync node list.",
        "tags": [
          "/cluster/config/nodes"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "node": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "node"
                    ]
                  },
                  "x-proxmox-metadata": {
                    "links": [
                      {
                        "href": "{node}",
                        "rel": "child"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-cluster-config-nodes",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "security": [],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/",
                [
                  "Sys.Audit"
                ]
              ]
            }
          ]
        }
      }
    },
    "/cluster/config/nodes/{node}": {
      "delete": {
        "operationId": "delete-cluster-config-nodes-node",
        "summary": "delnode",
        "description": "Removes a node from the cluster configuration.",
        "tags": [
          "/cluster/config/nodes/{node}"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "delete-cluster-config-nodes-node",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ]
      },
      "post": {
        "operationId": "post-cluster-config-nodes-node",
        "summary": "addnode",
        "description": "Adds a node to the cluster configuration. This call is for internal use.",
        "tags": [
          "/cluster/config/nodes/{node}"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "corosync_authkey": {
                      "type": "string"
                    },
                    "corosync_conf": {
                      "type": "string"
                    },
                    "warnings": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "corosync_authkey",
                    "corosync_conf",
                    "warnings"
                  ]
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "post-cluster-config-nodes-node",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "apiversion": {
                    "type": "integer",
                    "description": "The JOIN_API_VERSION of the new node.",
                    "x-proxmox-typetext": "<integer>",
                    "x-proxmox-optional": true
                  },
                  "force": {
                    "type": "boolean",
                    "description": "Do not throw error if node already exists.",
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "link[n]": {
                    "type": "string",
                    "description": "Address and priority information of a single corosync link. (up to 8 links supported; link0..link7)",
                    "x-proxmox-typetext": "[address=]<IP> [,priority=<integer>]",
                    "x-proxmox-optional": true
                  },
                  "new_node_ip": {
                    "type": "string",
                    "description": "IP Address of node to add. Used as fallback if no links are given.",
                    "format": "ip",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "nodeid": {
                    "type": "integer",
                    "description": "Node id for this node.",
                    "minimum": 1,
                    "x-proxmox-typetext": "<integer> (1 - N)",
                    "x-proxmox-optional": true
                  },
                  "votes": {
                    "type": "integer",
                    "description": "Number of votes for this node",
                    "minimum": 0,
                    "x-proxmox-typetext": "<integer> (0 - N)",
                    "x-proxmox-optional": true
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ]
      }
    },
    "/cluster/config/qdevice": {
      "get": {
        "operationId": "get-cluster-config-qdevice",
        "summary": "status",
        "description": "Get QDevice status",
        "tags": [
          "/cluster/config/qdevice"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-cluster-config-qdevice",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/",
                [
                  "Sys.Audit"
                ]
              ]
            }
          ]
        }
      }
    },
    "/cluster/config/totem": {
      "get": {
        "operationId": "get-cluster-config-totem",
        "summary": "totem",
        "description": "Get corosync totem protocol settings.",
        "tags": [
          "/cluster/config/totem"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-cluster-config-totem",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "security": [],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/",
                [
                  "Sys.Audit"
                ]
              ]
            }
          ]
        }
      }
    },
    "/cluster/firewall": {
      "get": {
        "operationId": "get-cluster-firewall",
        "summary": "index",
        "description": "Directory index.",
        "tags": [
          "/cluster/firewall"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  },
                  "x-proxmox-metadata": {
                    "links": [
                      {
                        "href": "{name}",
                        "rel": "child"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-cluster-firewall",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "security": [],
        "x-proxmox-permissions": {
          "all": [
            {
              "user": "all"
            }
          ]
        }
      }
    },
    "/cluster/firewall/aliases": {
      "get": {
        "operationId": "get-cluster-firewall-aliases",
        "summary": "get_aliases",
        "description": "List aliases",
        "tags": [
          "/cluster/firewall/aliases"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "cidr": {
                        "type": "string"
                      },
                      "comment": {
                        "type": "string",
                        "x-proxmox-optional": true
                      },
                      "digest": {
                        "type": "string",
                        "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
                        "maxLength": 64,
                        "x-proxmox-optional": false
                      },
                      "name": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "cidr",
                      "digest",
                      "name"
                    ]
                  },
                  "x-proxmox-metadata": {
                    "links": [
                      {
                        "href": "{name}",
                        "rel": "child"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-cluster-firewall-aliases",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "security": [],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/",
                [
                  "Sys.Audit"
                ]
              ]
            }
          ]
        }
      },
      "post": {
        "operationId": "post-cluster-firewall-aliases",
        "summary": "create_alias",
        "description": "Create IP or Network Alias.",
        "tags": [
          "/cluster/firewall/aliases"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "post-cluster-firewall-aliases",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "cidr": {
                    "type": "string",
                    "description": "Network/IP specification in CIDR format.",
                    "format": "IPorCIDR",
                    "x-proxmox-typetext": "<string>"
                  },
                  "comment": {
                    "type": "string",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "name": {
                    "type": "string",
                    "description": "Alias name.",
                    "minLength": 2,
                    "maxLength": 64,
                    "pattern": "[A-Za-z][A-Za-z0-9\\-\\_]+"
                  }
                },
                "required": [
                  "cidr",
                  "name"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/",
                [
                  "Sys.Modify"
                ]
              ]
            }
          ]
        }
      }
    },
    "/cluster/firewall/aliases/{name}": {
      "delete": {
        "operationId": "delete-cluster-firewall-aliases-name",
        "summary": "remove_alias",
        "description": "Remove IP or Network alias.",
        "tags": [
          "/cluster/firewall/aliases/{name}"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "delete-cluster-firewall-aliases-name",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "digest",
            "in": "query",
            "required": false,
            "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
            "schema": {
              "type": "string",
              "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
              "maxLength": 64,
              "x-proxmox-typetext": "<string>",
              "x-proxmox-optional": true
            }
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "description": "Alias name.",
            "schema": {
              "type": "string",
              "description": "Alias name.",
              "minLength": 2,
              "maxLength": 64,
              "pattern": "[A-Za-z][A-Za-z0-9\\-\\_]+"
            }
          }
        ],
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/",
                [
                  "Sys.Modify"
                ]
              ]
            }
          ]
        }
      },
      "get": {
        "operationId": "get-cluster-firewall-aliases-name",
        "summary": "read_alias",
        "description": "Read alias.",
        "tags": [
          "/cluster/firewall/aliases/{name}"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-cluster-firewall-aliases-name",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "description": "Alias name.",
            "schema": {
              "type": "string",
              "description": "Alias name.",
              "minLength": 2,
              "maxLength": 64,
              "pattern": "[A-Za-z][A-Za-z0-9\\-\\_]+"
            }
          }
        ],
        "security": [],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/",
                [
                  "Sys.Audit"
                ]
              ]
            }
          ]
        }
      },
      "put": {
        "operationId": "put-cluster-firewall-aliases-name",
        "summary": "update_alias",
        "description": "Update IP or Network alias.",
        "tags": [
          "/cluster/firewall/aliases/{name}"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "put-cluster-firewall-aliases-name",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "description": "Alias name.",
            "schema": {
              "type": "string",
              "description": "Alias name.",
              "minLength": 2,
              "maxLength": 64,
              "pattern": "[A-Za-z][A-Za-z0-9\\-\\_]+"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "cidr": {
                    "type": "string",
                    "description": "Network/IP specification in CIDR format.",
                    "format": "IPorCIDR",
                    "x-proxmox-typetext": "<string>"
                  },
                  "comment": {
                    "type": "string",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "digest": {
                    "type": "string",
                    "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
                    "maxLength": 64,
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "rename": {
                    "type": "string",
                    "description": "Rename an existing alias.",
                    "minLength": 2,
                    "maxLength": 64,
                    "pattern": "[A-Za-z][A-Za-z0-9\\-\\_]+",
                    "x-proxmox-optional": true
                  }
                },
                "required": [
                  "cidr"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/",
                [
                  "Sys.Modify"
                ]
              ]
            }
          ]
        }
      }
    },
    "/cluster/firewall/groups": {
      "get": {
        "operationId": "get-cluster-firewall-groups",
        "summary": "list_security_groups",
        "description": "List security groups.",
        "tags": [
          "/cluster/firewall/groups"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "comment": {
                        "type": "string",
                        "x-proxmox-optional": true
                      },
                      "digest": {
                        "type": "string",
                        "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
                        "maxLength": 64,
                        "x-proxmox-optional": false
                      },
                      "group": {
                        "type": "string",
                        "description": "Security Group name.",
                        "minLength": 2,
                        "maxLength": 18,
                        "pattern": "[A-Za-z][A-Za-z0-9\\-\\_]+"
                      }
                    },
                    "required": [
                      "digest",
                      "group"
                    ]
                  },
                  "x-proxmox-metadata": {
                    "links": [
                      {
                        "href": "{group}",
                        "rel": "child"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-cluster-firewall-groups",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "security": [],
        "x-proxmox-permissions": {
          "all": [
            {
              "user": "all"
            }
          ]
        }
      },
      "post": {
        "operationId": "post-cluster-firewall-groups",
        "summary": "create_security_group",
        "description": "Create new security group.",
        "tags": [
          "/cluster/firewall/groups"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "post-cluster-firewall-groups",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "comment": {
                    "type": "string",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "digest": {
                    "type": "string",
                    "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
                    "maxLength": 64,
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "group": {
                    "type": "string",
                    "description": "Security Group name.",
                    "minLength": 2,
                    "maxLength": 18,
                    "pattern": "[A-Za-z][A-Za-z0-9\\-\\_]+"
                  },
                  "rename": {
                    "type": "string",
                    "description": "Rename/update an existing security group. You can set 'rename' to the same value as 'name' to update the 'comment' of an existing group.",
                    "minLength": 2,
                    "maxLength": 18,
                    "pattern": "[A-Za-z][A-Za-z0-9\\-\\_]+",
                    "x-proxmox-optional": true
                  }
                },
                "required": [
                  "group"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/",
                [
                  "Sys.Modify"
                ]
              ]
            }
          ]
        }
      }
    },
    "/cluster/firewall/groups/{group}": {
      "delete": {
        "operationId": "delete-cluster-firewall-groups-group",
        "summary": "delete_security_group",
        "description": "Delete security group.",
        "tags": [
          "/cluster/firewall/groups/{group}"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "delete-cluster-firewall-groups-group",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "group",
            "in": "path",
            "required": true,
            "description": "Security Group name.",
            "schema": {
              "type": "string",
              "description": "Security Group name.",
              "minLength": 2,
              "maxLength": 18,
              "pattern": "[A-Za-z][A-Za-z0-9\\-\\_]+"
            }
          }
        ],
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/",
                [
                  "Sys.Modify"
                ]
              ]
            }
          ]
        }
      },
      "get": {
        "operationId": "get-cluster-firewall-groups-group",
        "summary": "get_rules",
        "description": "List rules.",
        "tags": [
          "/cluster/firewall/groups/{group}"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "pos": {
                        "type": "integer"
                      }
                    },
                    "required": [
                      "pos"
                    ]
                  },
                  "x-proxmox-metadata": {
                    "links": [
                      {
                        "href": "{pos}",
                        "rel": "child"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-cluster-firewall-groups-group",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "group",
            "in": "path",
            "required": true,
            "description": "Security Group name.",
            "schema": {
              "type": "string",
              "description": "Security Group name.",
              "minLength": 2,
              "maxLength": 18,
              "pattern": "[A-Za-z][A-Za-z0-9\\-\\_]+"
            }
          }
        ],
        "security": [],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/",
                [
                  "Sys.Audit"
                ]
              ]
            }
          ]
        }
      },
      "post": {
        "operationId": "post-cluster-firewall-groups-group",
        "summary": "create_rule",
        "description": "Create new rule.",
        "tags": [
          "/cluster/firewall/groups/{group}"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "post-cluster-firewall-groups-group",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "group",
            "in": "path",
            "required": true,
            "description": "Security Group name.",
            "schema": {
              "type": "string",
              "description": "Security Group name.",
              "minLength": 2,
              "maxLength": 18,
              "pattern": "[A-Za-z][A-Za-z0-9\\-\\_]+"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "action": {
                    "type": "string",
                    "description": "Rule action ('ACCEPT', 'DROP', 'REJECT') or security group name.",
                    "minLength": 2,
                    "maxLength": 20,
                    "pattern": "[A-Za-z][A-Za-z0-9\\-\\_]+",
                    "x-proxmox-optional": false
                  },
                  "comment": {
                    "type": "string",
                    "description": "Descriptive comment.",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "dest": {
                    "type": "string",
                    "description": "Restrict packet destination address. This can refer to a single IP address, an IP set ('+ipsetname') or an IP alias definition. You can also specify an address range like '20.34.101.207-201.3.9.99', or a list of IP addresses and networks (entries are separated by comma). Please do not mix IPv4 and IPv6 addresses inside such lists.",
                    "maxLength": 512,
                    "format": "pve-fw-addr-spec",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "digest": {
                    "type": "string",
                    "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
                    "maxLength": 64,
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "dport": {
                    "type": "string",
                    "description": "Restrict TCP/UDP destination port. You can use service names or simple numbers (0-65535), as defined in '/etc/services'. Port ranges can be specified with '\\d+:\\d+', for example '80:85', and you can use comma separated list to match several ports or ranges.",
                    "format": "pve-fw-dport-spec",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "enable": {
                    "type": "integer",
                    "description": "Flag to enable/disable a rule.",
                    "minimum": 0,
                    "x-proxmox-typetext": "<integer> (0 - N)",
                    "x-proxmox-optional": true
                  },
                  "icmp-type": {
                    "type": "string",
                    "description": "Specify icmp-type. Only valid if proto equals 'icmp' or 'icmpv6'/'ipv6-icmp'.",
                    "format": "pve-fw-icmp-type-spec",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "iface": {
                    "type": "string",
                    "description": "Network interface name. You have to use network configuration key names for VMs and containers ('net\\d+'). Host related rules can use arbitrary strings.",
                    "minLength": 2,
                    "maxLength": 20,
                    "format": "pve-iface",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "log": {
                    "type": "string",
                    "description": "Log level for firewall rule.",
                    "enum": [
                      "emerg",
                      "alert",
                      "crit",
                      "err",
                      "warning",
                      "notice",
                      "info",
                      "debug",
                      "nolog"
                    ],
                    "x-proxmox-optional": true
                  },
                  "macro": {
                    "type": "string",
                    "description": "Use predefined standard macro.",
                    "maxLength": 128,
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "pos": {
                    "type": "integer",
                    "description": "Update rule at position <pos>.",
                    "minimum": 0,
                    "x-proxmox-typetext": "<integer> (0 - N)",
                    "x-proxmox-optional": true
                  },
                  "proto": {
                    "type": "string",
                    "description": "IP protocol. You can use protocol names ('tcp'/'udp') or simple numbers, as defined in '/etc/protocols'.",
                    "format": "pve-fw-protocol-spec",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "source": {
                    "type": "string",
                    "description": "Restrict packet source address. This can refer to a single IP address, an IP set ('+ipsetname') or an IP alias definition. You can also specify an address range like '20.34.101.207-201.3.9.99', or a list of IP addresses and networks (entries are separated by comma). Please do not mix IPv4 and IPv6 addresses inside such lists.",
                    "maxLength": 512,
                    "format": "pve-fw-addr-spec",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "sport": {
                    "type": "string",
                    "description": "Restrict TCP/UDP source port. You can use service names or simple numbers (0-65535), as defined in '/etc/services'. Port ranges can be specified with '\\d+:\\d+', for example '80:85', and you can use comma separated list to match several ports or ranges.",
                    "format": "pve-fw-sport-spec",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "type": {
                    "type": "string",
                    "description": "Rule type.",
                    "enum": [
                      "in",
                      "out",
                      "forward",
                      "group"
                    ],
                    "x-proxmox-optional": false
                  }
                },
                "required": [
                  "action",
                  "type"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/",
                [
                  "Sys.Modify"
                ]
              ]
            }
          ]
        }
      }
    },
    "/cluster/firewall/groups/{group}/{pos}": {
      "delete": {
        "operationId": "delete-cluster-firewall-groups-group-pos",
        "summary": "delete_rule",
        "description": "Delete rule.",
        "tags": [
          "/cluster/firewall/groups/{group}/{pos}"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "delete-cluster-firewall-groups-group-pos",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "digest",
            "in": "query",
            "required": false,
            "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
            "schema": {
              "type": "string",
              "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
              "maxLength": 64,
              "x-proxmox-typetext": "<string>",
              "x-proxmox-optional": true
            }
          },
          {
            "name": "group",
            "in": "path",
            "required": true,
            "description": "Security Group name.",
            "schema": {
              "type": "string",
              "description": "Security Group name.",
              "minLength": 2,
              "maxLength": 18,
              "pattern": "[A-Za-z][A-Za-z0-9\\-\\_]+"
            }
          },
          {
            "name": "pos",
            "in": "path",
            "required": true,
            "description": "Update rule at position <pos>.",
            "schema": {
              "type": "integer",
              "description": "Update rule at position <pos>.",
              "minimum": 0,
              "x-proxmox-typetext": "<integer> (0 - N)",
              "x-proxmox-optional": true
            }
          }
        ],
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/",
                [
                  "Sys.Modify"
                ]
              ]
            }
          ]
        }
      },
      "get": {
        "operationId": "get-cluster-firewall-groups-group-pos",
        "summary": "get_rule",
        "description": "Get single rule data.",
        "tags": [
          "/cluster/firewall/groups/{group}/{pos}"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "action": {
                      "type": "string"
                    },
                    "comment": {
                      "type": "string",
                      "x-proxmox-optional": true
                    },
                    "dest": {
                      "type": "string",
                      "x-proxmox-optional": true
                    },
                    "dport": {
                      "type": "string",
                      "x-proxmox-optional": true
                    },
                    "enable": {
                      "type": "integer",
                      "x-proxmox-optional": true
                    },
                    "icmp-type": {
                      "type": "string",
                      "x-proxmox-optional": true
                    },
                    "iface": {
                      "type": "string",
                      "x-proxmox-optional": true
                    },
                    "ipversion": {
                      "type": "integer",
                      "x-proxmox-optional": true
                    },
                    "log": {
                      "type": "string",
                      "description": "Log level for firewall rule",
                      "enum": [
                        "emerg",
                        "alert",
                        "crit",
                        "err",
                        "warning",
                        "notice",
                        "info",
                        "debug",
                        "nolog"
                      ],
                      "x-proxmox-optional": true
                    },
                    "macro": {
                      "type": "string",
                      "x-proxmox-optional": true
                    },
                    "pos": {
                      "type": "integer"
                    },
                    "proto": {
                      "type": "string",
                      "x-proxmox-optional": true
                    },
                    "source": {
                      "type": "string",
                      "x-proxmox-optional": true
                    },
                    "sport": {
                      "type": "string",
                      "x-proxmox-optional": true
                    },
                    "type": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "action",
                    "pos",
                    "type"
                  ]
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-cluster-firewall-groups-group-pos",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "group",
            "in": "path",
            "required": true,
            "description": "Security Group name.",
            "schema": {
              "type": "string",
              "description": "Security Group name.",
              "minLength": 2,
              "maxLength": 18,
              "pattern": "[A-Za-z][A-Za-z0-9\\-\\_]+"
            }
          },
          {
            "name": "pos",
            "in": "path",
            "required": true,
            "description": "Update rule at position <pos>.",
            "schema": {
              "type": "integer",
              "description": "Update rule at position <pos>.",
              "minimum": 0,
              "x-proxmox-typetext": "<integer> (0 - N)",
              "x-proxmox-optional": true
            }
          }
        ],
        "security": [],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/",
                [
                  "Sys.Audit"
                ]
              ]
            }
          ]
        }
      },
      "put": {
        "operationId": "put-cluster-firewall-groups-group-pos",
        "summary": "update_rule",
        "description": "Modify rule data.",
        "tags": [
          "/cluster/firewall/groups/{group}/{pos}"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "put-cluster-firewall-groups-group-pos",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "group",
            "in": "path",
            "required": true,
            "description": "Security Group name.",
            "schema": {
              "type": "string",
              "description": "Security Group name.",
              "minLength": 2,
              "maxLength": 18,
              "pattern": "[A-Za-z][A-Za-z0-9\\-\\_]+"
            }
          },
          {
            "name": "pos",
            "in": "path",
            "required": true,
            "description": "Update rule at position <pos>.",
            "schema": {
              "type": "integer",
              "description": "Update rule at position <pos>.",
              "minimum": 0,
              "x-proxmox-typetext": "<integer> (0 - N)",
              "x-proxmox-optional": true
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "action": {
                    "type": "string",
                    "description": "Rule action ('ACCEPT', 'DROP', 'REJECT') or security group name.",
                    "minLength": 2,
                    "maxLength": 20,
                    "pattern": "[A-Za-z][A-Za-z0-9\\-\\_]+",
                    "x-proxmox-optional": true
                  },
                  "comment": {
                    "type": "string",
                    "description": "Descriptive comment.",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "delete": {
                    "type": "string",
                    "description": "A list of settings you want to delete.",
                    "format": "pve-configid-list",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "dest": {
                    "type": "string",
                    "description": "Restrict packet destination address. This can refer to a single IP address, an IP set ('+ipsetname') or an IP alias definition. You can also specify an address range like '20.34.101.207-201.3.9.99', or a list of IP addresses and networks (entries are separated by comma). Please do not mix IPv4 and IPv6 addresses inside such lists.",
                    "maxLength": 512,
                    "format": "pve-fw-addr-spec",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "digest": {
                    "type": "string",
                    "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
                    "maxLength": 64,
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "dport": {
                    "type": "string",
                    "description": "Restrict TCP/UDP destination port. You can use service names or simple numbers (0-65535), as defined in '/etc/services'. Port ranges can be specified with '\\d+:\\d+', for example '80:85', and you can use comma separated list to match several ports or ranges.",
                    "format": "pve-fw-dport-spec",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "enable": {
                    "type": "integer",
                    "description": "Flag to enable/disable a rule.",
                    "minimum": 0,
                    "x-proxmox-typetext": "<integer> (0 - N)",
                    "x-proxmox-optional": true
                  },
                  "icmp-type": {
                    "type": "string",
                    "description": "Specify icmp-type. Only valid if proto equals 'icmp' or 'icmpv6'/'ipv6-icmp'.",
                    "format": "pve-fw-icmp-type-spec",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "iface": {
                    "type": "string",
                    "description": "Network interface name. You have to use network configuration key names for VMs and containers ('net\\d+'). Host related rules can use arbitrary strings.",
                    "minLength": 2,
                    "maxLength": 20,
                    "format": "pve-iface",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "log": {
                    "type": "string",
                    "description": "Log level for firewall rule.",
                    "enum": [
                      "emerg",
                      "alert",
                      "crit",
                      "err",
                      "warning",
                      "notice",
                      "info",
                      "debug",
                      "nolog"
                    ],
                    "x-proxmox-optional": true
                  },
                  "macro": {
                    "type": "string",
                    "description": "Use predefined standard macro.",
                    "maxLength": 128,
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "moveto": {
                    "type": "integer",
                    "description": "Move rule to new position <moveto>. Other arguments are ignored.",
                    "minimum": 0,
                    "x-proxmox-typetext": "<integer> (0 - N)",
                    "x-proxmox-optional": true
                  },
                  "proto": {
                    "type": "string",
                    "description": "IP protocol. You can use protocol names ('tcp'/'udp') or simple numbers, as defined in '/etc/protocols'.",
                    "format": "pve-fw-protocol-spec",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "source": {
                    "type": "string",
                    "description": "Restrict packet source address. This can refer to a single IP address, an IP set ('+ipsetname') or an IP alias definition. You can also specify an address range like '20.34.101.207-201.3.9.99', or a list of IP addresses and networks (entries are separated by comma). Please do not mix IPv4 and IPv6 addresses inside such lists.",
                    "maxLength": 512,
                    "format": "pve-fw-addr-spec",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "sport": {
                    "type": "string",
                    "description": "Restrict TCP/UDP source port. You can use service names or simple numbers (0-65535), as defined in '/etc/services'. Port ranges can be specified with '\\d+:\\d+', for example '80:85', and you can use comma separated list to match several ports or ranges.",
                    "format": "pve-fw-sport-spec",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "type": {
                    "type": "string",
                    "description": "Rule type.",
                    "enum": [
                      "in",
                      "out",
                      "forward",
                      "group"
                    ],
                    "x-proxmox-optional": true
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/",
                [
                  "Sys.Modify"
                ]
              ]
            }
          ]
        }
      }
    },
    "/cluster/firewall/ipset": {
      "get": {
        "operationId": "get-cluster-firewall-ipset",
        "summary": "ipset_index",
        "description": "List IPSets",
        "tags": [
          "/cluster/firewall/ipset"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "comment": {
                        "type": "string",
                        "x-proxmox-optional": true
                      },
                      "digest": {
                        "type": "string",
                        "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
                        "maxLength": 64,
                        "x-proxmox-optional": false
                      },
                      "name": {
                        "type": "string",
                        "description": "IP set name.",
                        "minLength": 2,
                        "maxLength": 64,
                        "pattern": "[A-Za-z][A-Za-z0-9\\-\\_]+"
                      }
                    },
                    "required": [
                      "digest",
                      "name"
                    ]
                  },
                  "x-proxmox-metadata": {
                    "links": [
                      {
                        "href": "{name}",
                        "rel": "child"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-cluster-firewall-ipset",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "security": [],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/",
                [
                  "Sys.Audit"
                ]
              ]
            }
          ]
        }
      },
      "post": {
        "operationId": "post-cluster-firewall-ipset",
        "summary": "create_ipset",
        "description": "Create new IPSet",
        "tags": [
          "/cluster/firewall/ipset"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "post-cluster-firewall-ipset",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "comment": {
                    "type": "string",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "digest": {
                    "type": "string",
                    "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
                    "maxLength": 64,
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "name": {
                    "type": "string",
                    "description": "IP set name.",
                    "minLength": 2,
                    "maxLength": 64,
                    "pattern": "[A-Za-z][A-Za-z0-9\\-\\_]+"
                  },
                  "rename": {
                    "type": "string",
                    "description": "Rename an existing IPSet. You can set 'rename' to the same value as 'name' to update the 'comment' of an existing IPSet.",
                    "minLength": 2,
                    "maxLength": 64,
                    "pattern": "[A-Za-z][A-Za-z0-9\\-\\_]+",
                    "x-proxmox-optional": true
                  }
                },
                "required": [
                  "name"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/",
                [
                  "Sys.Modify"
                ]
              ]
            }
          ]
        }
      }
    },
    "/cluster/firewall/ipset/{name}": {
      "delete": {
        "operationId": "delete-cluster-firewall-ipset-name",
        "summary": "delete_ipset",
        "description": "Delete IPSet",
        "tags": [
          "/cluster/firewall/ipset/{name}"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "delete-cluster-firewall-ipset-name",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "force",
            "in": "query",
            "required": false,
            "description": "Delete all members of the IPSet, if there are any.",
            "schema": {
              "type": "boolean",
              "description": "Delete all members of the IPSet, if there are any.",
              "x-proxmox-typetext": "<boolean>",
              "x-proxmox-optional": true
            }
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "description": "IP set name.",
            "schema": {
              "type": "string",
              "description": "IP set name.",
              "minLength": 2,
              "maxLength": 64,
              "pattern": "[A-Za-z][A-Za-z0-9\\-\\_]+"
            }
          }
        ],
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/",
                [
                  "Sys.Modify"
                ]
              ]
            }
          ]
        }
      },
      "get": {
        "operationId": "get-cluster-firewall-ipset-name",
        "summary": "get_ipset",
        "description": "List IPSet content",
        "tags": [
          "/cluster/firewall/ipset/{name}"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "cidr": {
                        "type": "string"
                      },
                      "comment": {
                        "type": "string",
                        "x-proxmox-optional": true
                      },
                      "digest": {
                        "type": "string",
                        "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
                        "maxLength": 64,
                        "x-proxmox-optional": false
                      },
                      "nomatch": {
                        "type": "boolean",
                        "x-proxmox-optional": true
                      }
                    },
                    "required": [
                      "cidr",
                      "digest"
                    ]
                  },
                  "x-proxmox-metadata": {
                    "links": [
                      {
                        "href": "{cidr}",
                        "rel": "child"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-cluster-firewall-ipset-name",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "description": "IP set name.",
            "schema": {
              "type": "string",
              "description": "IP set name.",
              "minLength": 2,
              "maxLength": 64,
              "pattern": "[A-Za-z][A-Za-z0-9\\-\\_]+"
            }
          }
        ],
        "security": [],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/",
                [
                  "Sys.Audit"
                ]
              ]
            }
          ]
        }
      },
      "post": {
        "operationId": "post-cluster-firewall-ipset-name",
        "summary": "create_ip",
        "description": "Add IP or Network to IPSet.",
        "tags": [
          "/cluster/firewall/ipset/{name}"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "post-cluster-firewall-ipset-name",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "description": "IP set name.",
            "schema": {
              "type": "string",
              "description": "IP set name.",
              "minLength": 2,
              "maxLength": 64,
              "pattern": "[A-Za-z][A-Za-z0-9\\-\\_]+"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "cidr": {
                    "type": "string",
                    "description": "Network/IP specification in CIDR format.",
                    "format": "IPorCIDRorAlias",
                    "x-proxmox-typetext": "<string>"
                  },
                  "comment": {
                    "type": "string",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "nomatch": {
                    "type": "boolean",
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  }
                },
                "required": [
                  "cidr"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/",
                [
                  "Sys.Modify"
                ]
              ]
            }
          ]
        }
      }
    },
    "/cluster/firewall/ipset/{name}/{cidr}": {
      "delete": {
        "operationId": "delete-cluster-firewall-ipset-name-cidr",
        "summary": "remove_ip",
        "description": "Remove IP or Network from IPSet.",
        "tags": [
          "/cluster/firewall/ipset/{name}/{cidr}"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "delete-cluster-firewall-ipset-name-cidr",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "cidr",
            "in": "path",
            "required": true,
            "description": "Network/IP specification in CIDR format.",
            "schema": {
              "type": "string",
              "description": "Network/IP specification in CIDR format.",
              "format": "IPorCIDRorAlias",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "digest",
            "in": "query",
            "required": false,
            "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
            "schema": {
              "type": "string",
              "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
              "maxLength": 64,
              "x-proxmox-typetext": "<string>",
              "x-proxmox-optional": true
            }
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "description": "IP set name.",
            "schema": {
              "type": "string",
              "description": "IP set name.",
              "minLength": 2,
              "maxLength": 64,
              "pattern": "[A-Za-z][A-Za-z0-9\\-\\_]+"
            }
          }
        ],
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/",
                [
                  "Sys.Modify"
                ]
              ]
            }
          ]
        }
      },
      "get": {
        "operationId": "get-cluster-firewall-ipset-name-cidr",
        "summary": "read_ip",
        "description": "Read IP or Network settings from IPSet.",
        "tags": [
          "/cluster/firewall/ipset/{name}/{cidr}"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-cluster-firewall-ipset-name-cidr",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "cidr",
            "in": "path",
            "required": true,
            "description": "Network/IP specification in CIDR format.",
            "schema": {
              "type": "string",
              "description": "Network/IP specification in CIDR format.",
              "format": "IPorCIDRorAlias",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "description": "IP set name.",
            "schema": {
              "type": "string",
              "description": "IP set name.",
              "minLength": 2,
              "maxLength": 64,
              "pattern": "[A-Za-z][A-Za-z0-9\\-\\_]+"
            }
          }
        ],
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/",
                [
                  "Sys.Audit"
                ]
              ]
            }
          ]
        }
      },
      "put": {
        "operationId": "put-cluster-firewall-ipset-name-cidr",
        "summary": "update_ip",
        "description": "Update IP or Network settings",
        "tags": [
          "/cluster/firewall/ipset/{name}/{cidr}"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "put-cluster-firewall-ipset-name-cidr",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "cidr",
            "in": "path",
            "required": true,
            "description": "Network/IP specification in CIDR format.",
            "schema": {
              "type": "string",
              "description": "Network/IP specification in CIDR format.",
              "format": "IPorCIDRorAlias",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "description": "IP set name.",
            "schema": {
              "type": "string",
              "description": "IP set name.",
              "minLength": 2,
              "maxLength": 64,
              "pattern": "[A-Za-z][A-Za-z0-9\\-\\_]+"
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "comment": {
                    "type": "string",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "digest": {
                    "type": "string",
                    "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
                    "maxLength": 64,
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "nomatch": {
                    "type": "boolean",
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/",
                [
                  "Sys.Modify"
                ]
              ]
            }
          ]
        }
      }
    },
    "/cluster/firewall/macros": {
      "get": {
        "operationId": "get-cluster-firewall-macros",
        "summary": "get_macros",
        "description": "List available macros",
        "tags": [
          "/cluster/firewall/macros"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "descr": {
                        "type": "string",
                        "description": "More verbose description (if available)."
                      },
                      "macro": {
                        "type": "string",
                        "description": "Macro name."
                      }
                    },
                    "required": [
                      "descr",
                      "macro"
                    ]
                  }
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-cluster-firewall-macros",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "security": [],
        "x-proxmox-permissions": {
          "all": [
            {
              "user": "all"
            }
          ]
        }
      }
    },
    "/cluster/firewall/options": {
      "get": {
        "operationId": "get-cluster-firewall-options",
        "summary": "get_options",
        "description": "Get Firewall options.",
        "tags": [
          "/cluster/firewall/options"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ebtables": {
                      "type": "boolean",
                      "description": "Enable ebtables rules cluster wide.",
                      "default": true,
                      "x-proxmox-optional": true
                    },
                    "enable": {
                      "type": "integer",
                      "description": "Enable or disable the firewall cluster wide.",
                      "minimum": 0,
                      "x-proxmox-optional": true
                    },
                    "log_ratelimit": {
                      "type": "string",
                      "description": "Log ratelimiting settings",
                      "x-proxmox-optional": true
                    },
                    "policy_forward": {
                      "type": "string",
                      "description": "Forward policy.",
                      "enum": [
                        "ACCEPT",
                        "DROP"
                      ],
                      "x-proxmox-optional": true
                    },
                    "policy_in": {
                      "type": "string",
                      "description": "Input policy.",
                      "enum": [
                        "ACCEPT",
                        "REJECT",
                        "DROP"
                      ],
                      "x-proxmox-optional": true
                    },
                    "policy_out": {
                      "type": "string",
                      "description": "Output policy.",
                      "enum": [
                        "ACCEPT",
                        "REJECT",
                        "DROP"
                      ],
                      "x-proxmox-optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-cluster-firewall-options",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "security": [],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/",
                [
                  "Sys.Audit"
                ]
              ]
            }
          ]
        }
      },
      "put": {
        "operationId": "put-cluster-firewall-options",
        "summary": "set_options",
        "description": "Set Firewall options.",
        "tags": [
          "/cluster/firewall/options"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "put-cluster-firewall-options",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "delete": {
                    "type": "string",
                    "description": "A list of settings you want to delete.",
                    "format": "pve-configid-list",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "digest": {
                    "type": "string",
                    "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
                    "maxLength": 64,
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "ebtables": {
                    "type": "boolean",
                    "description": "Enable ebtables rules cluster wide.",
                    "default": true,
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "enable": {
                    "type": "integer",
                    "description": "Enable or disable the firewall cluster wide.",
                    "minimum": 0,
                    "x-proxmox-typetext": "<integer> (0 - N)",
                    "x-proxmox-optional": true
                  },
                  "log_ratelimit": {
                    "type": "string",
                    "description": "Log ratelimiting settings",
                    "x-proxmox-typetext": "[enable=]<1|0> [,burst=<integer>] [,rate=<rate>]",
                    "x-proxmox-optional": true
                  },
                  "policy_forward": {
                    "type": "string",
                    "description": "Forward policy.",
                    "enum": [
                      "ACCEPT",
                      "DROP"
                    ],
                    "x-proxmox-optional": true
                  },
                  "policy_in": {
                    "type": "string",
                    "description": "Input policy.",
                    "enum": [
                      "ACCEPT",
                      "REJECT",
                      "DROP"
                    ],
                    "x-proxmox-optional": true
                  },
                  "policy_out": {
                    "type": "string",
                    "description": "Output policy.",
                    "enum": [
                      "ACCEPT",
                      "REJECT",
                      "DROP"
                    ],
                    "x-proxmox-optional": true
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/",
                [
                  "Sys.Modify"
                ]
              ]
            }
          ]
        }
      }
    },
    "/cluster/firewall/refs": {
      "get": {
        "operationId": "get-cluster-firewall-refs",
        "summary": "refs",
        "description": "Lists possible IPSet/Alias reference which are allowed in source/dest properties.",
        "tags": [
          "/cluster/firewall/refs"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "comment": {
                        "type": "string",
                        "x-proxmox-optional": true
                      },
                      "name": {
                        "type": "string"
                      },
                      "ref": {
                        "type": "string"
                      },
                      "scope": {
                        "type": "string"
                      },
                      "type": {
                        "type": "string",
                        "enum": [
                          "alias",
                          "ipset"
                        ]
                      }
                    },
                    "required": [
                      "name",
                      "ref",
                      "scope",
                      "type"
                    ]
                  }
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-cluster-firewall-refs",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "required": false,
            "description": "Only list references of specified type.",
            "schema": {
              "type": "string",
              "description": "Only list references of specified type.",
              "enum": [
                "alias",
                "ipset"
              ],
              "x-proxmox-optional": true
            }
          }
        ],
        "security": [],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/",
                [
                  "Sys.Audit"
                ]
              ]
            }
          ]
        }
      }
    },
    "/cluster/firewall/rules": {
      "get": {
        "operationId": "get-cluster-firewall-rules",
        "summary": "get_rules",
        "description": "List rules.",
        "tags": [
          "/cluster/firewall/rules"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "pos": {
                        "type": "integer"
                      }
                    },
                    "required": [
                      "pos"
                    ]
                  },
                  "x-proxmox-metadata": {
                    "links": [
                      {
                        "href": "{pos}",
                        "rel": "child"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-cluster-firewall-rules",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "security": [],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/",
                [
                  "Sys.Audit"
                ]
              ]
            }
          ]
        }
      },
      "post": {
        "operationId": "post-cluster-firewall-rules",
        "summary": "create_rule",
        "description": "Create new rule.",
        "tags": [
          "/cluster/firewall/rules"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "post-cluster-firewall-rules",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "action": {
                    "type": "string",
                    "description": "Rule action ('ACCEPT', 'DROP', 'REJECT') or security group name.",
                    "minLength": 2,
                    "maxLength": 20,
                    "pattern": "[A-Za-z][A-Za-z0-9\\-\\_]+",
                    "x-proxmox-optional": false
                  },
                  "comment": {
                    "type": "string",
                    "description": "Descriptive comment.",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "dest": {
                    "type": "string",
                    "description": "Restrict packet destination address. This can refer to a single IP address, an IP set ('+ipsetname') or an IP alias definition. You can also specify an address range like '20.34.101.207-201.3.9.99', or a list of IP addresses and networks (entries are separated by comma). Please do not mix IPv4 and IPv6 addresses inside such lists.",
                    "maxLength": 512,
                    "format": "pve-fw-addr-spec",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "digest": {
                    "type": "string",
                    "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
                    "maxLength": 64,
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "dport": {
                    "type": "string",
                    "description": "Restrict TCP/UDP destination port. You can use service names or simple numbers (0-65535), as defined in '/etc/services'. Port ranges can be specified with '\\d+:\\d+', for example '80:85', and you can use comma separated list to match several ports or ranges.",
                    "format": "pve-fw-dport-spec",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "enable": {
                    "type": "integer",
                    "description": "Flag to enable/disable a rule.",
                    "minimum": 0,
                    "x-proxmox-typetext": "<integer> (0 - N)",
                    "x-proxmox-optional": true
                  },
                  "icmp-type": {
                    "type": "string",
                    "description": "Specify icmp-type. Only valid if proto equals 'icmp' or 'icmpv6'/'ipv6-icmp'.",
                    "format": "pve-fw-icmp-type-spec",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "iface": {
                    "type": "string",
                    "description": "Network interface name. You have to use network configuration key names for VMs and containers ('net\\d+'). Host related rules can use arbitrary strings.",
                    "minLength": 2,
                    "maxLength": 20,
                    "format": "pve-iface",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "log": {
                    "type": "string",
                    "description": "Log level for firewall rule.",
                    "enum": [
                      "emerg",
                      "alert",
                      "crit",
                      "err",
                      "warning",
                      "notice",
                      "info",
                      "debug",
                      "nolog"
                    ],
                    "x-proxmox-optional": true
                  },
                  "macro": {
                    "type": "string",
                    "description": "Use predefined standard macro.",
                    "maxLength": 128,
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "pos": {
                    "type": "integer",
                    "description": "Update rule at position <pos>.",
                    "minimum": 0,
                    "x-proxmox-typetext": "<integer> (0 - N)",
                    "x-proxmox-optional": true
                  },
                  "proto": {
                    "type": "string",
                    "description": "IP protocol. You can use protocol names ('tcp'/'udp') or simple numbers, as defined in '/etc/protocols'.",
                    "format": "pve-fw-protocol-spec",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "source": {
                    "type": "string",
                    "description": "Restrict packet source address. This can refer to a single IP address, an IP set ('+ipsetname') or an IP alias definition. You can also specify an address range like '20.34.101.207-201.3.9.99', or a list of IP addresses and networks (entries are separated by comma). Please do not mix IPv4 and IPv6 addresses inside such lists.",
                    "maxLength": 512,
                    "format": "pve-fw-addr-spec",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "sport": {
                    "type": "string",
                    "description": "Restrict TCP/UDP source port. You can use service names or simple numbers (0-65535), as defined in '/etc/services'. Port ranges can be specified with '\\d+:\\d+', for example '80:85', and you can use comma separated list to match several ports or ranges.",
                    "format": "pve-fw-sport-spec",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "type": {
                    "type": "string",
                    "description": "Rule type.",
                    "enum": [
                      "in",
                      "out",
                      "forward",
                      "group"
                    ],
                    "x-proxmox-optional": false
                  }
                },
                "required": [
                  "action",
                  "type"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/",
                [
                  "Sys.Modify"
                ]
              ]
            }
          ]
        }
      }
    },
    "/cluster/firewall/rules/{pos}": {
      "delete": {
        "operationId": "delete-cluster-firewall-rules-pos",
        "summary": "delete_rule",
        "description": "Delete rule.",
        "tags": [
          "/cluster/firewall/rules/{pos}"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "delete-cluster-firewall-rules-pos",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "digest",
            "in": "query",
            "required": false,
            "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
            "schema": {
              "type": "string",
              "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
              "maxLength": 64,
              "x-proxmox-typetext": "<string>",
              "x-proxmox-optional": true
            }
          },
          {
            "name": "pos",
            "in": "path",
            "required": true,
            "description": "Update rule at position <pos>.",
            "schema": {
              "type": "integer",
              "description": "Update rule at position <pos>.",
              "minimum": 0,
              "x-proxmox-typetext": "<integer> (0 - N)",
              "x-proxmox-optional": true
            }
          }
        ],
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/",
                [
                  "Sys.Modify"
                ]
              ]
            }
          ]
        }
      },
      "get": {
        "operationId": "get-cluster-firewall-rules-pos",
        "summary": "get_rule",
        "description": "Get single rule data.",
        "tags": [
          "/cluster/firewall/rules/{pos}"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "action": {
                      "type": "string"
                    },
                    "comment": {
                      "type": "string",
                      "x-proxmox-optional": true
                    },
                    "dest": {
                      "type": "string",
                      "x-proxmox-optional": true
                    },
                    "dport": {
                      "type": "string",
                      "x-proxmox-optional": true
                    },
                    "enable": {
                      "type": "integer",
                      "x-proxmox-optional": true
                    },
                    "icmp-type": {
                      "type": "string",
                      "x-proxmox-optional": true
                    },
                    "iface": {
                      "type": "string",
                      "x-proxmox-optional": true
                    },
                    "ipversion": {
                      "type": "integer",
                      "x-proxmox-optional": true
                    },
                    "log": {
                      "type": "string",
                      "description": "Log level for firewall rule",
                      "enum": [
                        "emerg",
                        "alert",
                        "crit",
                        "err",
                        "warning",
                        "notice",
                        "info",
                        "debug",
                        "nolog"
                      ],
                      "x-proxmox-optional": true
                    },
                    "macro": {
                      "type": "string",
                      "x-proxmox-optional": true
                    },
                    "pos": {
                      "type": "integer"
                    },
                    "proto": {
                      "type": "string",
                      "x-proxmox-optional": true
                    },
                    "source": {
                      "type": "string",
                      "x-proxmox-optional": true
                    },
                    "sport": {
                      "type": "string",
                      "x-proxmox-optional": true
                    },
                    "type": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "action",
                    "pos",
                    "type"
                  ]
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-cluster-firewall-rules-pos",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "pos",
            "in": "path",
            "required": true,
            "description": "Update rule at position <pos>.",
            "schema": {
              "type": "integer",
              "description": "Update rule at position <pos>.",
              "minimum": 0,
              "x-proxmox-typetext": "<integer> (0 - N)",
              "x-proxmox-optional": true
            }
          }
        ],
        "security": [],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/",
                [
                  "Sys.Audit"
                ]
              ]
            }
          ]
        }
      },
      "put": {
        "operationId": "put-cluster-firewall-rules-pos",
        "summary": "update_rule",
        "description": "Modify rule data.",
        "tags": [
          "/cluster/firewall/rules/{pos}"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "put-cluster-firewall-rules-pos",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "pos",
            "in": "path",
            "required": true,
            "description": "Update rule at position <pos>.",
            "schema": {
              "type": "integer",
              "description": "Update rule at position <pos>.",
              "minimum": 0,
              "x-proxmox-typetext": "<integer> (0 - N)",
              "x-proxmox-optional": true
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "action": {
                    "type": "string",
                    "description": "Rule action ('ACCEPT', 'DROP', 'REJECT') or security group name.",
                    "minLength": 2,
                    "maxLength": 20,
                    "pattern": "[A-Za-z][A-Za-z0-9\\-\\_]+",
                    "x-proxmox-optional": true
                  },
                  "comment": {
                    "type": "string",
                    "description": "Descriptive comment.",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "delete": {
                    "type": "string",
                    "description": "A list of settings you want to delete.",
                    "format": "pve-configid-list",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "dest": {
                    "type": "string",
                    "description": "Restrict packet destination address. This can refer to a single IP address, an IP set ('+ipsetname') or an IP alias definition. You can also specify an address range like '20.34.101.207-201.3.9.99', or a list of IP addresses and networks (entries are separated by comma). Please do not mix IPv4 and IPv6 addresses inside such lists.",
                    "maxLength": 512,
                    "format": "pve-fw-addr-spec",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "digest": {
                    "type": "string",
                    "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
                    "maxLength": 64,
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "dport": {
                    "type": "string",
                    "description": "Restrict TCP/UDP destination port. You can use service names or simple numbers (0-65535), as defined in '/etc/services'. Port ranges can be specified with '\\d+:\\d+', for example '80:85', and you can use comma separated list to match several ports or ranges.",
                    "format": "pve-fw-dport-spec",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "enable": {
                    "type": "integer",
                    "description": "Flag to enable/disable a rule.",
                    "minimum": 0,
                    "x-proxmox-typetext": "<integer> (0 - N)",
                    "x-proxmox-optional": true
                  },
                  "icmp-type": {
                    "type": "string",
                    "description": "Specify icmp-type. Only valid if proto equals 'icmp' or 'icmpv6'/'ipv6-icmp'.",
                    "format": "pve-fw-icmp-type-spec",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "iface": {
                    "type": "string",
                    "description": "Network interface name. You have to use network configuration key names for VMs and containers ('net\\d+'). Host related rules can use arbitrary strings.",
                    "minLength": 2,
                    "maxLength": 20,
                    "format": "pve-iface",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "log": {
                    "type": "string",
                    "description": "Log level for firewall rule.",
                    "enum": [
                      "emerg",
                      "alert",
                      "crit",
                      "err",
                      "warning",
                      "notice",
                      "info",
                      "debug",
                      "nolog"
                    ],
                    "x-proxmox-optional": true
                  },
                  "macro": {
                    "type": "string",
                    "description": "Use predefined standard macro.",
                    "maxLength": 128,
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "moveto": {
                    "type": "integer",
                    "description": "Move rule to new position <moveto>. Other arguments are ignored.",
                    "minimum": 0,
                    "x-proxmox-typetext": "<integer> (0 - N)",
                    "x-proxmox-optional": true
                  },
                  "proto": {
                    "type": "string",
                    "description": "IP protocol. You can use protocol names ('tcp'/'udp') or simple numbers, as defined in '/etc/protocols'.",
                    "format": "pve-fw-protocol-spec",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "source": {
                    "type": "string",
                    "description": "Restrict packet source address. This can refer to a single IP address, an IP set ('+ipsetname') or an IP alias definition. You can also specify an address range like '20.34.101.207-201.3.9.99', or a list of IP addresses and networks (entries are separated by comma). Please do not mix IPv4 and IPv6 addresses inside such lists.",
                    "maxLength": 512,
                    "format": "pve-fw-addr-spec",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "sport": {
                    "type": "string",
                    "description": "Restrict TCP/UDP source port. You can use service names or simple numbers (0-65535), as defined in '/etc/services'. Port ranges can be specified with '\\d+:\\d+', for example '80:85', and you can use comma separated list to match several ports or ranges.",
                    "format": "pve-fw-sport-spec",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "type": {
                    "type": "string",
                    "description": "Rule type.",
                    "enum": [
                      "in",
                      "out",
                      "forward",
                      "group"
                    ],
                    "x-proxmox-optional": true
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/",
                [
                  "Sys.Modify"
                ]
              ]
            }
          ]
        }
      }
    },
    "/cluster/ha": {
      "get": {
        "operationId": "get-cluster-ha",
        "summary": "index",
        "description": "Directory index.",
        "tags": [
          "/cluster/ha"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id"
                    ]
                  },
                  "x-proxmox-metadata": {
                    "links": [
                      {
                        "href": "{id}",
                        "rel": "child"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-cluster-ha",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "security": [],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/",
                [
                  "Sys.Audit"
                ]
              ]
            }
          ]
        }
      }
    },
    "/cluster/ha/groups": {
      "get": {
        "operationId": "get-cluster-ha-groups",
        "summary": "index",
        "description": "Get HA groups. (deprecated in favor of HA rules)",
        "tags": [
          "/cluster/ha/groups"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "group": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "group"
                    ]
                  },
                  "x-proxmox-metadata": {
                    "links": [
                      {
                        "href": "{group}",
                        "rel": "child"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-cluster-ha-groups",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "security": [],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/",
                [
                  "Sys.Audit"
                ]
              ]
            }
          ]
        }
      },
      "post": {
        "operationId": "post-cluster-ha-groups",
        "summary": "create",
        "description": "Create a new HA group. (deprecated in favor of HA rules)",
        "tags": [
          "/cluster/ha/groups"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "post-cluster-ha-groups",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "comment": {
                    "type": "string",
                    "description": "Description.",
                    "maxLength": 4096,
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "group": {
                    "type": "string",
                    "description": "The HA group identifier.",
                    "format": "pve-configid",
                    "x-proxmox-typetext": "<string>"
                  },
                  "nodes": {
                    "type": "string",
                    "description": "List of cluster node names with optional priority.\n\nList of cluster node members, where a priority can be given to each node. A resource bound to a group will run on the available nodes with the highest priority. If there are more nodes in the highest priority class, the services will get distributed to those nodes. The priorities have a relative meaning only. The higher the number, the higher the priority.",
                    "format": "pve-ha-group-node-list",
                    "x-proxmox-typetext": "<node>[:<pri>]{,<node>[:<pri>]}*",
                    "x-proxmox-optional": false
                  },
                  "nofailback": {
                    "type": "boolean",
                    "description": "The CRM tries to run services on the node with the highest priority. If a node with higher priority comes online, the CRM migrates the service to that node. Enabling nofailback prevents that behavior.",
                    "default": false,
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "restricted": {
                    "type": "boolean",
                    "description": "Resources bound to restricted groups may only run on nodes defined by the group.\n\nResources bound to restricted groups may only run on nodes defined by the group. The resource will be placed in the stopped state if no group node member is online. Resources on unrestricted groups may run on any cluster node if all group members are offline, but they will migrate back as soon as a group member comes online. One can implement a 'preferred node' behavior using an unrestricted group with only one member.",
                    "default": false,
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "type": {
                    "type": "string",
                    "description": "Group type.",
                    "enum": [
                      "group"
                    ],
                    "x-proxmox-optional": true
                  }
                },
                "required": [
                  "group",
                  "nodes"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/",
                [
                  "Sys.Console"
                ]
              ]
            }
          ]
        }
      }
    },
    "/cluster/ha/groups/{group}": {
      "delete": {
        "operationId": "delete-cluster-ha-groups-group",
        "summary": "delete",
        "description": "Delete ha group configuration. (deprecated in favor of HA rules)",
        "tags": [
          "/cluster/ha/groups/{group}"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "delete-cluster-ha-groups-group",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "group",
            "in": "path",
            "required": true,
            "description": "The HA group identifier.",
            "schema": {
              "type": "string",
              "description": "The HA group identifier.",
              "format": "pve-configid",
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/",
                [
                  "Sys.Console"
                ]
              ]
            }
          ]
        }
      },
      "get": {
        "operationId": "get-cluster-ha-groups-group",
        "summary": "read",
        "description": "Read ha group configuration. (deprecated in favor of HA rules)",
        "tags": [
          "/cluster/ha/groups/{group}"
        ],
        "responses": {
          "200": {
            "description": "Successful response"
          }
        },
        "x-proxmox-endpoint-id": "get-cluster-ha-groups-group",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "group",
            "in": "path",
            "required": true,
            "description": "The HA group identifier.",
            "schema": {
              "type": "string",
              "description": "The HA group identifier.",
              "format": "pve-configid",
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "security": [],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/",
                [
                  "Sys.Audit"
                ]
              ]
            }
          ]
        }
      },
      "put": {
        "operationId": "put-cluster-ha-groups-group",
        "summary": "update",
        "description": "Update ha group configuration. (deprecated in favor of HA rules)",
        "tags": [
          "/cluster/ha/groups/{group}"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "put-cluster-ha-groups-group",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "group",
            "in": "path",
            "required": true,
            "description": "The HA group identifier.",
            "schema": {
              "type": "string",
              "description": "The HA group identifier.",
              "format": "pve-configid",
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "comment": {
                    "type": "string",
                    "description": "Description.",
                    "maxLength": 4096,
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "delete": {
                    "type": "string",
                    "description": "A list of settings you want to delete.",
                    "maxLength": 4096,
                    "format": "pve-configid-list",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "digest": {
                    "type": "string",
                    "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
                    "maxLength": 64,
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "nodes": {
                    "type": "string",
                    "description": "List of cluster node names with optional priority.\n\nList of cluster node members, where a priority can be given to each node. A resource bound to a group will run on the available nodes with the highest priority. If there are more nodes in the highest priority class, the services will get distributed to those nodes. The priorities have a relative meaning only. The higher the number, the higher the priority.",
                    "format": "pve-ha-group-node-list",
                    "x-proxmox-typetext": "<node>[:<pri>]{,<node>[:<pri>]}*",
                    "x-proxmox-optional": true
                  },
                  "nofailback": {
                    "type": "boolean",
                    "description": "The CRM tries to run services on the node with the highest priority. If a node with higher priority comes online, the CRM migrates the service to that node. Enabling nofailback prevents that behavior.",
                    "default": false,
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "restricted": {
                    "type": "boolean",
                    "description": "Resources bound to restricted groups may only run on nodes defined by the group.\n\nResources bound to restricted groups may only run on nodes defined by the group. The resource will be placed in the stopped state if no group node member is online. Resources on unrestricted groups may run on any cluster node if all group members are offline, but they will migrate back as soon as a group member comes online. One can implement a 'preferred node' behavior using an unrestricted group with only one member.",
                    "default": false,
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/",
                [
                  "Sys.Console"
                ]
              ]
            }
          ]
        }
      }
    },
    "/cluster/ha/resources": {
      "get": {
        "operationId": "get-cluster-ha-resources",
        "summary": "index",
        "description": "List HA resources.",
        "tags": [
          "/cluster/ha/resources"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "sid": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "sid"
                    ]
                  },
                  "x-proxmox-metadata": {
                    "links": [
                      {
                        "href": "{sid}",
                        "rel": "child"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-cluster-ha-resources",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "required": false,
            "description": "Only list resources of specific type",
            "schema": {
              "type": "string",
              "description": "Only list resources of specific type",
              "enum": [
                "ct",
                "vm"
              ],
              "x-proxmox-optional": true
            }
          }
        ],
        "security": [],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/",
                [
                  "Sys.Audit"
                ]
              ]
            }
          ]
        }
      },
      "post": {
        "operationId": "post-cluster-ha-resources",
        "summary": "create",
        "description": "Create a new HA resource.",
        "tags": [
          "/cluster/ha/resources"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "post-cluster-ha-resources",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "comment": {
                    "type": "string",
                    "description": "Description.",
                    "maxLength": 4096,
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "failback": {
                    "type": "boolean",
                    "description": "Automatically migrate HA resource to the node with the highest priority according to their node affinity  rules, if a node with a higher priority than the current node comes online.",
                    "default": true,
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "group": {
                    "type": "string",
                    "description": "The HA group identifier.",
                    "format": "pve-configid",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "max_relocate": {
                    "type": "integer",
                    "description": "Maximal number of service relocate tries when a service failes to start.",
                    "default": 1,
                    "minimum": 0,
                    "x-proxmox-typetext": "<integer> (0 - N)",
                    "x-proxmox-optional": true
                  },
                  "max_restart": {
                    "type": "integer",
                    "description": "Maximal number of tries to restart the service on a node after its start failed.",
                    "default": 1,
                    "minimum": 0,
                    "x-proxmox-typetext": "<integer> (0 - N)",
                    "x-proxmox-optional": true
                  },
                  "sid": {
                    "type": "string",
                    "description": "HA resource ID. This consists of a resource type followed by a resource specific name, separated with colon (example: vm:100 / ct:100). For virtual machines and containers, you can simply use the VM or CT id as a shortcut (example: 100).",
                    "format": "pve-ha-resource-or-vm-id",
                    "x-proxmox-typetext": "<type>:<name>"
                  },
                  "state": {
                    "type": "string",
                    "description": "Requested resource state.\n\nRequested resource state. The CRM reads this state and acts accordingly.\nPlease note that `enabled` is just an alias for `started`.\n\n`started`;;\n\nThe CRM tries to start the resource. Service state is\nset to `started` after successful start. On node failures, or when start\nfails, it tries to recover the resource.  If everything fails, service\nstate it set to `error`.\n\n`stopped`;;\n\nThe CRM tries to keep the resource in `stopped` state, but it\nstill tries to relocate the resources on node failures.\n\n`disabled`;;\n\nThe CRM tries to put the resource in `stopped` state, but does not try\nto relocate the resources on node failures. The main purpose of this\nstate is error recovery, because it is the only way to move a resource out\nof the `error` state.\n\n`ignored`;;\n\nThe resource gets removed from the manager status and so the CRM and the LRM do\nnot touch the resource anymore. All {pve} API calls affecting this resource\nwill be executed, directly bypassing the HA stack. CRM commands will be thrown\naway while there source is in this state. The resource will not get relocated\non node failures.\n\n",
                    "enum": [
                      "started",
                      "stopped",
                      "enabled",
                      "disabled",
                      "ignored"
                    ],
                    "default": "started",
                    "x-proxmox-optional": true
                  },
                  "type": {
                    "type": "string",
                    "description": "Resource type.",
                    "enum": [
                      "ct",
                      "vm"
                    ],
                    "x-proxmox-optional": true
                  }
                },
                "required": [
                  "sid"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/",
                [
                  "Sys.Console"
                ]
              ]
            }
          ]
        }
      }
    },
    "/cluster/ha/resources/{sid}": {
      "delete": {
        "operationId": "delete-cluster-ha-resources-sid",
        "summary": "delete",
        "description": "Delete resource configuration.",
        "tags": [
          "/cluster/ha/resources/{sid}"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "delete-cluster-ha-resources-sid",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "sid",
            "in": "path",
            "required": true,
            "description": "HA resource ID. This consists of a resource type followed by a resource specific name, separated with colon (example: vm:100 / ct:100). For virtual machines and containers, you can simply use the VM or CT id as a shortcut (example: 100).",
            "schema": {
              "type": "string",
              "description": "HA resource ID. This consists of a resource type followed by a resource specific name, separated with colon (example: vm:100 / ct:100). For virtual machines and containers, you can simply use the VM or CT id as a shortcut (example: 100).",
              "format": "pve-ha-resource-or-vm-id",
              "x-proxmox-typetext": "<type>:<name>"
            }
          }
        ],
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/",
                [
                  "Sys.Console"
                ]
              ]
            }
          ]
        }
      },
      "get": {
        "operationId": "get-cluster-ha-resources-sid",
        "summary": "read",
        "description": "Read resource configuration.",
        "tags": [
          "/cluster/ha/resources/{sid}"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "comment": {
                      "type": "string",
                      "description": "Description.",
                      "x-proxmox-optional": true
                    },
                    "digest": {
                      "type": "string",
                      "description": "Can be used to prevent concurrent modifications."
                    },
                    "failback": {
                      "type": "boolean",
                      "description": "The HA resource is automatically migrated to the node with the highest priority according to their node affinity rule, if a node with a higher priority than the current node comes online.",
                      "default": true,
                      "x-proxmox-optional": true
                    },
                    "group": {
                      "type": "string",
                      "description": "The HA group identifier.",
                      "format": "pve-configid",
                      "x-proxmox-optional": true
                    },
                    "max_relocate": {
                      "type": "integer",
                      "description": "Maximal number of service relocate tries when a service failes to start.",
                      "x-proxmox-optional": true
                    },
                    "max_restart": {
                      "type": "integer",
                      "description": "Maximal number of tries to restart the service on a node after its start failed.",
                      "x-proxmox-optional": true
                    },
                    "sid": {
                      "type": "string",
                      "description": "HA resource ID. This consists of a resource type followed by a resource specific name, separated with colon (example: vm:100 / ct:100). For virtual machines and containers, you can simply use the VM or CT id as a shortcut (example: 100).",
                      "format": "pve-ha-resource-or-vm-id",
                      "x-proxmox-typetext": "<type>:<name>"
                    },
                    "state": {
                      "type": "string",
                      "description": "Requested resource state.",
                      "enum": [
                        "started",
                        "stopped",
                        "enabled",
                        "disabled",
                        "ignored"
                      ],
                      "x-proxmox-optional": true
                    },
                    "type": {
                      "type": "string",
                      "description": "The type of the resources."
                    }
                  },
                  "required": [
                    "digest",
                    "sid",
                    "type"
                  ]
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-cluster-ha-resources-sid",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "sid",
            "in": "path",
            "required": true,
            "description": "HA resource ID. This consists of a resource type followed by a resource specific name, separated with colon (example: vm:100 / ct:100). For virtual machines and containers, you can simply use the VM or CT id as a shortcut (example: 100).",
            "schema": {
              "type": "string",
              "description": "HA resource ID. This consists of a resource type followed by a resource specific name, separated with colon (example: vm:100 / ct:100). For virtual machines and containers, you can simply use the VM or CT id as a shortcut (example: 100).",
              "format": "pve-ha-resource-or-vm-id",
              "x-proxmox-typetext": "<type>:<name>"
            }
          }
        ],
        "security": [],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/",
                [
                  "Sys.Audit"
                ]
              ]
            }
          ]
        }
      },
      "put": {
        "operationId": "put-cluster-ha-resources-sid",
        "summary": "update",
        "description": "Update resource configuration.",
        "tags": [
          "/cluster/ha/resources/{sid}"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "put-cluster-ha-resources-sid",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "sid",
            "in": "path",
            "required": true,
            "description": "HA resource ID. This consists of a resource type followed by a resource specific name, separated with colon (example: vm:100 / ct:100). For virtual machines and containers, you can simply use the VM or CT id as a shortcut (example: 100).",
            "schema": {
              "type": "string",
              "description": "HA resource ID. This consists of a resource type followed by a resource specific name, separated with colon (example: vm:100 / ct:100). For virtual machines and containers, you can simply use the VM or CT id as a shortcut (example: 100).",
              "format": "pve-ha-resource-or-vm-id",
              "x-proxmox-typetext": "<type>:<name>"
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "comment": {
                    "type": "string",
                    "description": "Description.",
                    "maxLength": 4096,
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "delete": {
                    "type": "string",
                    "description": "A list of settings you want to delete.",
                    "maxLength": 4096,
                    "format": "pve-configid-list",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "digest": {
                    "type": "string",
                    "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
                    "maxLength": 64,
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "failback": {
                    "type": "boolean",
                    "description": "Automatically migrate HA resource to the node with the highest priority according to their node affinity  rules, if a node with a higher priority than the current node comes online.",
                    "default": true,
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "group": {
                    "type": "string",
                    "description": "The HA group identifier.",
                    "format": "pve-configid",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "max_relocate": {
                    "type": "integer",
                    "description": "Maximal number of service relocate tries when a service failes to start.",
                    "default": 1,
                    "minimum": 0,
                    "x-proxmox-typetext": "<integer> (0 - N)",
                    "x-proxmox-optional": true
                  },
                  "max_restart": {
                    "type": "integer",
                    "description": "Maximal number of tries to restart the service on a node after its start failed.",
                    "default": 1,
                    "minimum": 0,
                    "x-proxmox-typetext": "<integer> (0 - N)",
                    "x-proxmox-optional": true
                  },
                  "state": {
                    "type": "string",
                    "description": "Requested resource state.\n\nRequested resource state. The CRM reads this state and acts accordingly.\nPlease note that `enabled` is just an alias for `started`.\n\n`started`;;\n\nThe CRM tries to start the resource. Service state is\nset to `started` after successful start. On node failures, or when start\nfails, it tries to recover the resource.  If everything fails, service\nstate it set to `error`.\n\n`stopped`;;\n\nThe CRM tries to keep the resource in `stopped` state, but it\nstill tries to relocate the resources on node failures.\n\n`disabled`;;\n\nThe CRM tries to put the resource in `stopped` state, but does not try\nto relocate the resources on node failures. The main purpose of this\nstate is error recovery, because it is the only way to move a resource out\nof the `error` state.\n\n`ignored`;;\n\nThe resource gets removed from the manager status and so the CRM and the LRM do\nnot touch the resource anymore. All {pve} API calls affecting this resource\nwill be executed, directly bypassing the HA stack. CRM commands will be thrown\naway while there source is in this state. The resource will not get relocated\non node failures.\n\n",
                    "enum": [
                      "started",
                      "stopped",
                      "enabled",
                      "disabled",
                      "ignored"
                    ],
                    "default": "started",
                    "x-proxmox-optional": true
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/",
                [
                  "Sys.Console"
                ]
              ]
            }
          ]
        }
      }
    },
    "/cluster/ha/resources/{sid}/migrate": {
      "post": {
        "operationId": "post-cluster-ha-resources-sid-migrate",
        "summary": "migrate",
        "description": "Request resource migration (online) to another node.",
        "tags": [
          "/cluster/ha/resources/{sid}/migrate"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "blocking-resources": {
                      "type": "array",
                      "description": "HA resources, which are blocking the given HA resource from being migrated to the requested target node.",
                      "items": {
                        "type": "object",
                        "description": "A blocking HA resource",
                        "properties": {
                          "cause": {
                            "type": "string",
                            "description": "The reason why the HA resource is blocking the migration.",
                            "enum": [
                              "resource-affinity"
                            ]
                          },
                          "sid": {
                            "type": "string",
                            "description": "The blocking HA resource id"
                          }
                        },
                        "required": [
                          "cause",
                          "sid"
                        ]
                      },
                      "x-proxmox-optional": true
                    },
                    "comigrated-resources": {
                      "type": "array",
                      "description": "HA resources, which are migrated to the same requested target node as the given HA resource, because these are in positive affinity with the HA resource.",
                      "x-proxmox-optional": true
                    },
                    "requested-node": {
                      "type": "string",
                      "description": "Node, which was requested to be migrated to.",
                      "x-proxmox-optional": false
                    },
                    "sid": {
                      "type": "string",
                      "description": "HA resource, which is requested to be migrated.",
                      "x-proxmox-optional": false
                    }
                  },
                  "required": [
                    "requested-node",
                    "sid"
                  ]
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "post-cluster-ha-resources-sid-migrate",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "sid",
            "in": "path",
            "required": true,
            "description": "HA resource ID. This consists of a resource type followed by a resource specific name, separated with colon (example: vm:100 / ct:100). For virtual machines and containers, you can simply use the VM or CT id as a shortcut (example: 100).",
            "schema": {
              "type": "string",
              "description": "HA resource ID. This consists of a resource type followed by a resource specific name, separated with colon (example: vm:100 / ct:100). For virtual machines and containers, you can simply use the VM or CT id as a shortcut (example: 100).",
              "format": "pve-ha-resource-or-vm-id",
              "x-proxmox-typetext": "<type>:<name>"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "node": {
                    "type": "string",
                    "description": "Target node.",
                    "format": "pve-node",
                    "x-proxmox-typetext": "<string>"
                  }
                },
                "required": [
                  "node"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/",
                [
                  "Sys.Console"
                ]
              ]
            }
          ]
        }
      }
    },
    "/cluster/ha/resources/{sid}/relocate": {
      "post": {
        "operationId": "post-cluster-ha-resources-sid-relocate",
        "summary": "relocate",
        "description": "Request resource relocatzion to another node. This stops the service on the old node, and restarts it on the target node.",
        "tags": [
          "/cluster/ha/resources/{sid}/relocate"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "blocking-resources": {
                      "type": "array",
                      "description": "HA resources, which are blocking the given HA resource from being relocated to the requested target node.",
                      "items": {
                        "type": "object",
                        "description": "A blocking HA resource",
                        "properties": {
                          "cause": {
                            "type": "string",
                            "description": "The reason why the HA resource is blocking the relocation.",
                            "enum": [
                              "resource-affinity"
                            ]
                          },
                          "sid": {
                            "type": "string",
                            "description": "The blocking HA resource id"
                          }
                        },
                        "required": [
                          "cause",
                          "sid"
                        ]
                      },
                      "x-proxmox-optional": true
                    },
                    "comigrated-resources": {
                      "type": "array",
                      "description": "HA resources, which are relocated to the same requested target node as the given HA resource, because these are in positive affinity with the HA resource.",
                      "items": {
                        "type": "string",
                        "description": "A comigrated HA resource"
                      },
                      "x-proxmox-optional": true
                    },
                    "requested-node": {
                      "type": "string",
                      "description": "Node, which was requested to be relocated to.",
                      "x-proxmox-optional": false
                    },
                    "sid": {
                      "type": "string",
                      "description": "HA resource, which is requested to be relocated.",
                      "x-proxmox-optional": false
                    }
                  },
                  "required": [
                    "requested-node",
                    "sid"
                  ]
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "post-cluster-ha-resources-sid-relocate",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "sid",
            "in": "path",
            "required": true,
            "description": "HA resource ID. This consists of a resource type followed by a resource specific name, separated with colon (example: vm:100 / ct:100). For virtual machines and containers, you can simply use the VM or CT id as a shortcut (example: 100).",
            "schema": {
              "type": "string",
              "description": "HA resource ID. This consists of a resource type followed by a resource specific name, separated with colon (example: vm:100 / ct:100). For virtual machines and containers, you can simply use the VM or CT id as a shortcut (example: 100).",
              "format": "pve-ha-resource-or-vm-id",
              "x-proxmox-typetext": "<type>:<name>"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "node": {
                    "type": "string",
                    "description": "Target node.",
                    "format": "pve-node",
                    "x-proxmox-typetext": "<string>"
                  }
                },
                "required": [
                  "node"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/",
                [
                  "Sys.Console"
                ]
              ]
            }
          ]
        }
      }
    },
    "/cluster/ha/rules": {
      "get": {
        "operationId": "get-cluster-ha-rules",
        "summary": "index",
        "description": "Get HA rules.",
        "tags": [
          "/cluster/ha/rules"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "rule": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "rule"
                    ],
                    "x-proxmox-metadata": {
                      "links": [
                        {
                          "href": "{rule}",
                          "rel": "child"
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-cluster-ha-rules",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "resource",
            "in": "query",
            "required": false,
            "description": "Limit the returned list to rules affecting the specified resource.",
            "schema": {
              "type": "string",
              "description": "Limit the returned list to rules affecting the specified resource.",
              "x-proxmox-typetext": "<string>",
              "x-proxmox-optional": true
            }
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "description": "Limit the returned list to the specified rule type.",
            "schema": {
              "type": "string",
              "description": "Limit the returned list to the specified rule type.",
              "enum": [
                "node-affinity",
                "resource-affinity"
              ],
              "x-proxmox-optional": true
            }
          }
        ],
        "security": [],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/",
                [
                  "Sys.Audit"
                ]
              ]
            }
          ]
        }
      },
      "post": {
        "operationId": "post-cluster-ha-rules",
        "summary": "create_rule",
        "description": "Create HA rule.",
        "tags": [
          "/cluster/ha/rules"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "post-cluster-ha-rules",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "affinity": {
                    "type": "string",
                    "description": "Describes whether the HA resources are supposed to be kept on the same node ('positive'), or are supposed to be kept on separate nodes ('negative').",
                    "enum": [
                      "positive",
                      "negative"
                    ],
                    "x-proxmox-optional": true,
                    "x-proxmox-metadata": {
                      "instanceTypes": [
                        "resource-affinity"
                      ]
                    }
                  },
                  "comment": {
                    "type": "string",
                    "description": "HA rule description.",
                    "maxLength": 4096,
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "disable": {
                    "type": "boolean",
                    "description": "Whether the HA rule is disabled.",
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "nodes": {
                    "type": "string",
                    "description": "List of cluster node names with optional priority.\n\nList of cluster node members, where a priority can be given to each node. A resource bound to a group will run on the available nodes with the highest priority. If there are more nodes in the highest priority class, the services will get distributed to those nodes. The priorities have a relative meaning only. The higher the number, the higher the priority.",
                    "format": "pve-ha-group-node-list",
                    "x-proxmox-typetext": "<node>[:<pri>]{,<node>[:<pri>]}*",
                    "x-proxmox-optional": true,
                    "x-proxmox-metadata": {
                      "instanceTypes": [
                        "node-affinity"
                      ]
                    }
                  },
                  "resources": {
                    "type": "string",
                    "description": "List of HA resource IDs. This consists of a list of resource types followed by a resource specific name separated with a colon (example: vm:100,ct:101).",
                    "format": "pve-ha-resource-id-list",
                    "x-proxmox-typetext": "<type>:<name>{,<type>:<name>}*",
                    "x-proxmox-optional": false
                  },
                  "rule": {
                    "type": "string",
                    "description": "HA rule identifier.",
                    "format": "pve-configid",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": false
                  },
                  "strict": {
                    "type": "boolean",
                    "description": "Describes whether the node affinity rule is strict or non-strict.\n\nDescribes whether the node affinity rule is strict or non-strict.\n\nA non-strict node affinity rule makes resources prefer to be on the defined nodes.\nIf none of the defined nodes are available, the resource may run on any other node.\n\nA strict node affinity rule makes resources be restricted to the defined nodes. If\nnone of the defined nodes are available, the resource will be stopped.\n",
                    "default": false,
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true,
                    "x-proxmox-metadata": {
                      "instanceTypes": [
                        "node-affinity"
                      ]
                    }
                  },
                  "type": {
                    "type": "string",
                    "description": "HA rule type.",
                    "enum": [
                      "node-affinity",
                      "resource-affinity"
                    ]
                  }
                },
                "required": [
                  "resources",
                  "rule",
                  "type"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/",
                [
                  "Sys.Console"
                ]
              ]
            }
          ]
        }
      }
    },
    "/cluster/ha/rules/{rule}": {
      "delete": {
        "operationId": "delete-cluster-ha-rules-rule",
        "summary": "delete_rule",
        "description": "Delete HA rule.",
        "tags": [
          "/cluster/ha/rules/{rule}"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "delete-cluster-ha-rules-rule",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "rule",
            "in": "path",
            "required": true,
            "description": "HA rule identifier.",
            "schema": {
              "type": "string",
              "description": "HA rule identifier.",
              "format": "pve-configid",
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/",
                [
                  "Sys.Console"
                ]
              ]
            }
          ]
        }
      },
      "get": {
        "operationId": "get-cluster-ha-rules-rule",
        "summary": "read_rule",
        "description": "Read HA rule.",
        "tags": [
          "/cluster/ha/rules/{rule}"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "rule": {
                      "type": "string",
                      "description": "HA rule identifier.",
                      "format": "pve-configid"
                    },
                    "type": {
                      "type": "string",
                      "description": "HA rule type.",
                      "enum": [
                        "node-affinity",
                        "resource-affinity"
                      ]
                    }
                  },
                  "required": [
                    "rule",
                    "type"
                  ]
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-cluster-ha-rules-rule",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "rule",
            "in": "path",
            "required": true,
            "description": "HA rule identifier.",
            "schema": {
              "type": "string",
              "description": "HA rule identifier.",
              "format": "pve-configid",
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "security": [],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/",
                [
                  "Sys.Audit"
                ]
              ]
            }
          ]
        }
      },
      "put": {
        "operationId": "put-cluster-ha-rules-rule",
        "summary": "update_rule",
        "description": "Update HA rule.",
        "tags": [
          "/cluster/ha/rules/{rule}"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "put-cluster-ha-rules-rule",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "rule",
            "in": "path",
            "required": true,
            "description": "HA rule identifier.",
            "schema": {
              "type": "string",
              "description": "HA rule identifier.",
              "format": "pve-configid",
              "x-proxmox-typetext": "<string>",
              "x-proxmox-optional": false
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "affinity": {
                    "type": "string",
                    "description": "Describes whether the HA resources are supposed to be kept on the same node ('positive'), or are supposed to be kept on separate nodes ('negative').",
                    "enum": [
                      "positive",
                      "negative"
                    ],
                    "x-proxmox-optional": true,
                    "x-proxmox-metadata": {
                      "instanceTypes": [
                        "resource-affinity"
                      ]
                    }
                  },
                  "comment": {
                    "type": "string",
                    "description": "HA rule description.",
                    "maxLength": 4096,
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "delete": {
                    "type": "string",
                    "description": "A list of settings you want to delete.",
                    "maxLength": 4096,
                    "format": "pve-configid-list",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "digest": {
                    "type": "string",
                    "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
                    "maxLength": 64,
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "disable": {
                    "type": "boolean",
                    "description": "Whether the HA rule is disabled.",
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "nodes": {
                    "type": "string",
                    "description": "List of cluster node names with optional priority.\n\nList of cluster node members, where a priority can be given to each node. A resource bound to a group will run on the available nodes with the highest priority. If there are more nodes in the highest priority class, the services will get distributed to those nodes. The priorities have a relative meaning only. The higher the number, the higher the priority.",
                    "format": "pve-ha-group-node-list",
                    "x-proxmox-typetext": "<node>[:<pri>]{,<node>[:<pri>]}*",
                    "x-proxmox-optional": true,
                    "x-proxmox-metadata": {
                      "instanceTypes": [
                        "node-affinity"
                      ]
                    }
                  },
                  "resources": {
                    "type": "string",
                    "description": "List of HA resource IDs. This consists of a list of resource types followed by a resource specific name separated with a colon (example: vm:100,ct:101).",
                    "format": "pve-ha-resource-id-list",
                    "x-proxmox-typetext": "<type>:<name>{,<type>:<name>}*",
                    "x-proxmox-optional": true
                  },
                  "strict": {
                    "type": "boolean",
                    "description": "Describes whether the node affinity rule is strict or non-strict.\n\nDescribes whether the node affinity rule is strict or non-strict.\n\nA non-strict node affinity rule makes resources prefer to be on the defined nodes.\nIf none of the defined nodes are available, the resource may run on any other node.\n\nA strict node affinity rule makes resources be restricted to the defined nodes. If\nnone of the defined nodes are available, the resource will be stopped.\n",
                    "default": false,
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true,
                    "x-proxmox-metadata": {
                      "instanceTypes": [
                        "node-affinity"
                      ]
                    }
                  },
                  "type": {
                    "type": "string",
                    "description": "HA rule type.",
                    "enum": [
                      "node-affinity",
                      "resource-affinity"
                    ]
                  }
                },
                "required": [
                  "type"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/",
                [
                  "Sys.Console"
                ]
              ]
            }
          ]
        }
      }
    },
    "/cluster/ha/status": {
      "get": {
        "operationId": "get-cluster-ha-status",
        "summary": "index",
        "description": "Directory index.",
        "tags": [
          "/cluster/ha/status"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  },
                  "x-proxmox-metadata": {
                    "links": [
                      {
                        "href": "{name}",
                        "rel": "child"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-cluster-ha-status",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "security": [],
        "x-proxmox-permissions": {
          "all": [
            {
              "user": "all"
            }
          ]
        }
      }
    },
    "/cluster/ha/status/current": {
      "get": {
        "operationId": "get-cluster-ha-status-current",
        "summary": "status",
        "description": "Get HA manger status.",
        "tags": [
          "/cluster/ha/status/current"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "crm_state": {
                        "type": "string",
                        "description": "For type 'service'. Service state as seen by the CRM.",
                        "x-proxmox-optional": true
                      },
                      "failback": {
                        "type": "boolean",
                        "description": "The HA resource is automatically migrated to the node with the highest priority according to their node affinity rule, if a node with a higher priority than the current node comes online.",
                        "default": true,
                        "x-proxmox-optional": true
                      },
                      "id": {
                        "type": "string",
                        "description": "Status entry ID (quorum, master, lrm:<node>, service:<sid>)."
                      },
                      "max_relocate": {
                        "type": "integer",
                        "description": "For type 'service'.",
                        "x-proxmox-optional": true
                      },
                      "max_restart": {
                        "type": "integer",
                        "description": "For type 'service'.",
                        "x-proxmox-optional": true
                      },
                      "node": {
                        "type": "string",
                        "description": "Node associated to status entry."
                      },
                      "quorate": {
                        "type": "boolean",
                        "description": "For type 'quorum'. Whether the cluster is quorate or not.",
                        "x-proxmox-optional": true
                      },
                      "request_state": {
                        "type": "string",
                        "description": "For type 'service'. Requested service state.",
                        "x-proxmox-optional": true
                      },
                      "sid": {
                        "type": "string",
                        "description": "For type 'service'. Service ID.",
                        "x-proxmox-optional": true
                      },
                      "state": {
                        "type": "string",
                        "description": "For type 'service'. Verbose service state.",
                        "x-proxmox-optional": true
                      },
                      "status": {
                        "type": "string",
                        "description": "Status of the entry (value depends on type)."
                      },
                      "timestamp": {
                        "type": "integer",
                        "description": "For type 'lrm','master'. Timestamp of the status information.",
                        "x-proxmox-optional": true
                      },
                      "type": {
                        "description": "Type of status entry.",
                        "enum": [
                          "quorum",
                          "master",
                          "lrm",
                          "service"
                        ]
                      }
                    },
                    "required": [
                      "id",
                      "node",
                      "status",
                      "type"
                    ]
                  }
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-cluster-ha-status-current",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "security": [],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/",
                [
                  "Sys.Audit"
                ]
              ]
            }
          ]
        }
      }
    },
    "/cluster/ha/status/manager_status": {
      "get": {
        "operationId": "get-cluster-ha-status-manager-status",
        "summary": "manager_status",
        "description": "Get full HA manger status, including LRM status.",
        "tags": [
          "/cluster/ha/status/manager_status"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-cluster-ha-status-manager-status",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "security": [],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/",
                [
                  "Sys.Audit"
                ]
              ]
            }
          ]
        }
      }
    },
    "/cluster/jobs": {
      "get": {
        "operationId": "get-cluster-jobs",
        "summary": "index",
        "description": "Index for jobs related endpoints.",
        "tags": [
          "/cluster/jobs"
        ],
        "responses": {
          "200": {
            "description": "Directory index.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "Directory index.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "subdir": {
                        "type": "string",
                        "description": "API sub-directory endpoint"
                      }
                    },
                    "required": [
                      "subdir"
                    ]
                  },
                  "x-proxmox-metadata": {
                    "links": [
                      {
                        "href": "{subdir}",
                        "rel": "child"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-cluster-jobs",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "security": [],
        "x-proxmox-permissions": {
          "all": [
            {
              "user": "all"
            }
          ]
        }
      }
    },
    "/cluster/jobs/realm-sync": {
      "get": {
        "operationId": "get-cluster-jobs-realm-sync",
        "summary": "syncjob_index",
        "description": "List configured realm-sync-jobs.",
        "tags": [
          "/cluster/jobs/realm-sync"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "comment": {
                        "type": "string",
                        "description": "A comment for the job.",
                        "x-proxmox-optional": true
                      },
                      "enabled": {
                        "type": "boolean",
                        "description": "If the job is enabled or not."
                      },
                      "id": {
                        "type": "string",
                        "description": "The ID of the entry."
                      },
                      "last-run": {
                        "type": "integer",
                        "description": "Last execution time of the job in seconds since the beginning of the UNIX epoch",
                        "x-proxmox-optional": true
                      },
                      "next-run": {
                        "type": "integer",
                        "description": "Next planned execution time of the job in seconds since the beginning of the UNIX epoch.",
                        "x-proxmox-optional": true
                      },
                      "realm": {
                        "type": "string",
                        "description": "Authentication domain ID",
                        "maxLength": 32,
                        "format": "pve-realm"
                      },
                      "remove-vanished": {
                        "type": "string",
                        "description": "A semicolon-separated list of things to remove when they or the user vanishes during a sync. The following values are possible: 'entry' removes the user/group when not returned from the sync. 'properties' removes the set properties on existing user/group that do not appear in the source (even custom ones). 'acl' removes acls when the user/group is not returned from the sync. Instead of a list it also can be 'none' (the default).",
                        "default": "none",
                        "pattern": "(?:(?:(?:acl|properties|entry);)*(?:acl|properties|entry))|none",
                        "x-proxmox-typetext": "([acl];[properties];[entry])|none",
                        "x-proxmox-optional": true
                      },
                      "schedule": {
                        "type": "string",
                        "description": "The configured sync schedule."
                      },
                      "scope": {
                        "type": "string",
                        "description": "Select what to sync.",
                        "enum": [
                          "users",
                          "groups",
                          "both"
                        ],
                        "x-proxmox-optional": true
                      }
                    },
                    "required": [
                      "enabled",
                      "id",
                      "realm",
                      "schedule"
                    ]
                  },
                  "x-proxmox-metadata": {
                    "links": [
                      {
                        "href": "{id}",
                        "rel": "child"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-cluster-jobs-realm-sync",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "security": [],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/",
                [
                  "Sys.Audit"
                ]
              ]
            }
          ]
        }
      }
    },
    "/cluster/jobs/realm-sync/{id}": {
      "delete": {
        "operationId": "delete-cluster-jobs-realm-sync-id",
        "summary": "delete_job",
        "description": "Delete realm-sync job definition.",
        "tags": [
          "/cluster/jobs/realm-sync/{id}"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "delete-cluster-jobs-realm-sync-id",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "pve-configid",
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/",
                [
                  "Sys.Modify"
                ]
              ]
            }
          ]
        }
      },
      "get": {
        "operationId": "get-cluster-jobs-realm-sync-id",
        "summary": "read_job",
        "description": "Read realm-sync job definition.",
        "tags": [
          "/cluster/jobs/realm-sync/{id}"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-cluster-jobs-realm-sync-id",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "pve-configid",
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "security": [],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/",
                [
                  "Sys.Audit"
                ]
              ]
            }
          ]
        }
      },
      "post": {
        "operationId": "post-cluster-jobs-realm-sync-id",
        "summary": "create_job",
        "description": "Create new realm-sync job.",
        "tags": [
          "/cluster/jobs/realm-sync/{id}"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "post-cluster-jobs-realm-sync-id",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The ID of the job.",
            "schema": {
              "type": "string",
              "description": "The ID of the job.",
              "maxLength": 64,
              "format": "pve-configid",
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "comment": {
                    "type": "string",
                    "description": "Description for the Job.",
                    "maxLength": 512,
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "enable-new": {
                    "type": "boolean",
                    "description": "Enable newly synced users immediately.",
                    "default": "1",
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "enabled": {
                    "type": "boolean",
                    "description": "Determines if the job is enabled.",
                    "default": true,
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "realm": {
                    "type": "string",
                    "description": "Authentication domain ID",
                    "maxLength": 32,
                    "format": "pve-realm",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "remove-vanished": {
                    "type": "string",
                    "description": "A semicolon-separated list of things to remove when they or the user vanishes during a sync. The following values are possible: 'entry' removes the user/group when not returned from the sync. 'properties' removes the set properties on existing user/group that do not appear in the source (even custom ones). 'acl' removes acls when the user/group is not returned from the sync. Instead of a list it also can be 'none' (the default).",
                    "default": "none",
                    "pattern": "(?:(?:(?:acl|properties|entry);)*(?:acl|properties|entry))|none",
                    "x-proxmox-typetext": "([acl];[properties];[entry])|none",
                    "x-proxmox-optional": true
                  },
                  "schedule": {
                    "type": "string",
                    "description": "Backup schedule. The format is a subset of `systemd` calendar events.",
                    "maxLength": 128,
                    "format": "pve-calendar-event",
                    "x-proxmox-typetext": "<string>"
                  },
                  "scope": {
                    "type": "string",
                    "description": "Select what to sync.",
                    "enum": [
                      "users",
                      "groups",
                      "both"
                    ],
                    "x-proxmox-optional": true
                  }
                },
                "required": [
                  "schedule"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "description": "'Realm.AllocateUser' on '/access/realm/<realm>' and 'User.Modify' permissions to '/access/groups/'.",
              "check": [
                "and",
                [
                  "perm",
                  "/access/realm/{realm}",
                  [
                    "Realm.AllocateUser"
                  ]
                ],
                [
                  "perm",
                  "/access/groups",
                  [
                    "User.Modify"
                  ]
                ]
              ]
            }
          ]
        }
      },
      "put": {
        "operationId": "put-cluster-jobs-realm-sync-id",
        "summary": "update_job",
        "description": "Update realm-sync job definition.",
        "tags": [
          "/cluster/jobs/realm-sync/{id}"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "put-cluster-jobs-realm-sync-id",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The ID of the job.",
            "schema": {
              "type": "string",
              "description": "The ID of the job.",
              "maxLength": 64,
              "format": "pve-configid",
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "comment": {
                    "type": "string",
                    "description": "Description for the Job.",
                    "maxLength": 512,
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "delete": {
                    "type": "string",
                    "description": "A list of settings you want to delete.",
                    "maxLength": 4096,
                    "format": "pve-configid-list",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "enable-new": {
                    "type": "boolean",
                    "description": "Enable newly synced users immediately.",
                    "default": "1",
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "enabled": {
                    "type": "boolean",
                    "description": "Determines if the job is enabled.",
                    "default": true,
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "remove-vanished": {
                    "type": "string",
                    "description": "A semicolon-separated list of things to remove when they or the user vanishes during a sync. The following values are possible: 'entry' removes the user/group when not returned from the sync. 'properties' removes the set properties on existing user/group that do not appear in the source (even custom ones). 'acl' removes acls when the user/group is not returned from the sync. Instead of a list it also can be 'none' (the default).",
                    "default": "none",
                    "pattern": "(?:(?:(?:acl|properties|entry);)*(?:acl|properties|entry))|none",
                    "x-proxmox-typetext": "([acl];[properties];[entry])|none",
                    "x-proxmox-optional": true
                  },
                  "schedule": {
                    "type": "string",
                    "description": "Backup schedule. The format is a subset of `systemd` calendar events.",
                    "maxLength": 128,
                    "format": "pve-calendar-event",
                    "x-proxmox-typetext": "<string>"
                  },
                  "scope": {
                    "type": "string",
                    "description": "Select what to sync.",
                    "enum": [
                      "users",
                      "groups",
                      "both"
                    ],
                    "x-proxmox-optional": true
                  }
                },
                "required": [
                  "schedule"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "description": "'Realm.AllocateUser' on '/access/realm/<realm>' and 'User.Modify' permissions to '/access/groups/'.",
              "check": [
                "and",
                [
                  "perm",
                  "/access/realm/{realm}",
                  [
                    "Realm.AllocateUser"
                  ]
                ],
                [
                  "perm",
                  "/access/groups",
                  [
                    "User.Modify"
                  ]
                ]
              ]
            }
          ]
        }
      }
    },
    "/cluster/jobs/schedule-analyze": {
      "get": {
        "operationId": "get-cluster-jobs-schedule-analyze",
        "summary": "schedule-analyze",
        "description": "Returns a list of future schedule runtimes.",
        "tags": [
          "/cluster/jobs/schedule-analyze"
        ],
        "responses": {
          "200": {
            "description": "An array of the next <iterations> events since <starttime>.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "An array of the next <iterations> events since <starttime>.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "timestamp": {
                        "type": "integer",
                        "description": "UNIX timestamp for the run."
                      },
                      "utc": {
                        "type": "string",
                        "description": "UTC timestamp for the run."
                      }
                    },
                    "required": [
                      "timestamp",
                      "utc"
                    ]
                  }
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-cluster-jobs-schedule-analyze",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "iterations",
            "in": "query",
            "required": false,
            "description": "Number of event-iteration to simulate and return.",
            "schema": {
              "type": "integer",
              "description": "Number of event-iteration to simulate and return.",
              "default": 10,
              "minimum": 1,
              "maximum": 100,
              "x-proxmox-typetext": "<integer> (1 - 100)",
              "x-proxmox-optional": true
            }
          },
          {
            "name": "schedule",
            "in": "query",
            "required": true,
            "description": "Job schedule. The format is a subset of `systemd` calendar events.",
            "schema": {
              "type": "string",
              "description": "Job schedule. The format is a subset of `systemd` calendar events.",
              "maxLength": 128,
              "format": "pve-calendar-event",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "starttime",
            "in": "query",
            "required": false,
            "description": "UNIX timestamp to start the calculation from. Defaults to the current time.",
            "schema": {
              "type": "integer",
              "description": "UNIX timestamp to start the calculation from. Defaults to the current time.",
              "x-proxmox-typetext": "<integer>",
              "x-proxmox-optional": true
            }
          }
        ],
        "security": [],
        "x-proxmox-permissions": {
          "all": [
            {
              "user": "all"
            }
          ]
        }
      }
    },
    "/cluster/log": {
      "get": {
        "operationId": "get-cluster-log",
        "summary": "log",
        "description": "Read cluster log",
        "tags": [
          "/cluster/log"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  }
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-cluster-log",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "max",
            "in": "query",
            "required": false,
            "description": "Maximum number of entries.",
            "schema": {
              "type": "integer",
              "description": "Maximum number of entries.",
              "minimum": 1,
              "x-proxmox-typetext": "<integer> (1 - N)",
              "x-proxmox-optional": true
            }
          }
        ],
        "security": [],
        "x-proxmox-permissions": {
          "all": [
            {
              "user": "all"
            }
          ]
        }
      }
    },
    "/cluster/mapping": {
      "get": {
        "operationId": "get-cluster-mapping",
        "summary": "index",
        "description": "List resource types.",
        "tags": [
          "/cluster/mapping"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  },
                  "x-proxmox-metadata": {
                    "links": [
                      {
                        "href": "{name}",
                        "rel": "child"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-cluster-mapping",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "security": [],
        "x-proxmox-permissions": {
          "all": [
            {
              "user": "all"
            }
          ]
        }
      }
    },
    "/cluster/mapping/dir": {
      "get": {
        "operationId": "get-cluster-mapping-dir",
        "summary": "index",
        "description": "List directory mapping",
        "tags": [
          "/cluster/mapping/dir"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "checks": {
                        "type": "array",
                        "description": "A list of checks, only present if 'check-node' is set.",
                        "items": {
                          "type": "object",
                          "properties": {
                            "message": {
                              "type": "string",
                              "description": "The message of the error"
                            },
                            "severity": {
                              "type": "string",
                              "description": "The severity of the error",
                              "enum": [
                                "warning",
                                "error"
                              ]
                            }
                          },
                          "required": [
                            "message",
                            "severity"
                          ]
                        },
                        "x-proxmox-optional": true
                      },
                      "description": {
                        "type": "string",
                        "description": "A description of the logical mapping."
                      },
                      "id": {
                        "type": "string",
                        "description": "The logical ID of the mapping."
                      },
                      "map": {
                        "type": "array",
                        "description": "The entries of the mapping.",
                        "items": {
                          "type": "string",
                          "description": "A mapping for a node."
                        }
                      }
                    },
                    "required": [
                      "description",
                      "id",
                      "map"
                    ]
                  },
                  "x-proxmox-metadata": {
                    "links": [
                      {
                        "href": "{id}",
                        "rel": "child"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-cluster-mapping-dir",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "check-node",
            "in": "query",
            "required": false,
            "description": "If given, checks the configurations on the given node for correctness, and adds relevant diagnostics for the directory to the response.",
            "schema": {
              "type": "string",
              "description": "If given, checks the configurations on the given node for correctness, and adds relevant diagnostics for the directory to the response.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>",
              "x-proxmox-optional": true
            }
          }
        ],
        "security": [],
        "x-proxmox-permissions": {
          "all": [
            {
              "description": "Only lists entries where you have 'Mapping.Modify', 'Mapping.Use' or 'Mapping.Audit' permissions on '/mapping/dir/<id>'.",
              "user": "all"
            }
          ]
        }
      },
      "post": {
        "operationId": "post-cluster-mapping-dir",
        "summary": "create",
        "description": "Create a new directory mapping.",
        "tags": [
          "/cluster/mapping/dir"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "post-cluster-mapping-dir",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "description": {
                    "type": "string",
                    "description": "Description of the directory mapping",
                    "maxLength": 4096,
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "id": {
                    "type": "string",
                    "description": "The ID of the directory mapping",
                    "format": "pve-configid",
                    "x-proxmox-typetext": "<string>"
                  },
                  "map": {
                    "type": "array",
                    "description": "A list of maps for the cluster nodes.",
                    "items": {
                      "type": "string"
                    },
                    "x-proxmox-typetext": "<array>",
                    "x-proxmox-optional": false
                  }
                },
                "required": [
                  "id",
                  "map"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/mapping/dir",
                [
                  "Mapping.Modify"
                ]
              ]
            }
          ]
        }
      }
    },
    "/cluster/mapping/dir/{id}": {
      "delete": {
        "operationId": "delete-cluster-mapping-dir-id",
        "summary": "delete",
        "description": "Remove directory mapping.",
        "tags": [
          "/cluster/mapping/dir/{id}"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "delete-cluster-mapping-dir-id",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "pve-configid",
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/mapping/dir",
                [
                  "Mapping.Modify"
                ]
              ]
            }
          ]
        }
      },
      "get": {
        "operationId": "get-cluster-mapping-dir-id",
        "summary": "get",
        "description": "Get directory mapping.",
        "tags": [
          "/cluster/mapping/dir/{id}"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-cluster-mapping-dir-id",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "pve-configid",
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "or",
                [
                  "perm",
                  "/mapping/dir/{id}",
                  [
                    "Mapping.Use"
                  ]
                ],
                [
                  "perm",
                  "/mapping/dir/{id}",
                  [
                    "Mapping.Modify"
                  ]
                ],
                [
                  "perm",
                  "/mapping/dir/{id}",
                  [
                    "Mapping.Audit"
                  ]
                ]
              ]
            }
          ]
        }
      },
      "put": {
        "operationId": "put-cluster-mapping-dir-id",
        "summary": "update",
        "description": "Update a directory mapping.",
        "tags": [
          "/cluster/mapping/dir/{id}"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "put-cluster-mapping-dir-id",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The ID of the directory mapping",
            "schema": {
              "type": "string",
              "description": "The ID of the directory mapping",
              "format": "pve-configid",
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "delete": {
                    "type": "string",
                    "description": "A list of settings you want to delete.",
                    "maxLength": 4096,
                    "format": "pve-configid-list",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "description": {
                    "type": "string",
                    "description": "Description of the directory mapping",
                    "maxLength": 4096,
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "digest": {
                    "type": "string",
                    "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
                    "maxLength": 64,
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "map": {
                    "type": "array",
                    "description": "A list of maps for the cluster nodes.",
                    "items": {
                      "type": "string"
                    },
                    "x-proxmox-typetext": "<array>",
                    "x-proxmox-optional": true
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/mapping/dir/{id}",
                [
                  "Mapping.Modify"
                ]
              ]
            }
          ]
        }
      }
    },
    "/cluster/mapping/pci": {
      "get": {
        "operationId": "get-cluster-mapping-pci",
        "summary": "index",
        "description": "List PCI Hardware Mapping",
        "tags": [
          "/cluster/mapping/pci"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "checks": {
                        "type": "array",
                        "description": "A list of checks, only present if 'check_node' is set.",
                        "items": {
                          "type": "object",
                          "properties": {
                            "message": {
                              "type": "string",
                              "description": "The message of the error"
                            },
                            "severity": {
                              "type": "string",
                              "description": "The severity of the error",
                              "enum": [
                                "warning",
                                "error"
                              ]
                            }
                          },
                          "required": [
                            "message",
                            "severity"
                          ]
                        },
                        "x-proxmox-optional": true
                      },
                      "description": {
                        "type": "string",
                        "description": "A description of the logical mapping."
                      },
                      "id": {
                        "type": "string",
                        "description": "The logical ID of the mapping."
                      },
                      "map": {
                        "type": "array",
                        "description": "The entries of the mapping.",
                        "items": {
                          "type": "string",
                          "description": "A mapping for a node."
                        }
                      }
                    },
                    "required": [
                      "description",
                      "id",
                      "map"
                    ]
                  },
                  "x-proxmox-metadata": {
                    "links": [
                      {
                        "href": "{id}",
                        "rel": "child"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-cluster-mapping-pci",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "check-node",
            "in": "query",
            "required": false,
            "description": "If given, checks the configurations on the given node for correctness, and adds relevant diagnostics for the devices to the response.",
            "schema": {
              "type": "string",
              "description": "If given, checks the configurations on the given node for correctness, and adds relevant diagnostics for the devices to the response.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>",
              "x-proxmox-optional": true
            }
          }
        ],
        "security": [],
        "x-proxmox-permissions": {
          "all": [
            {
              "description": "Only lists entries where you have 'Mapping.Modify', 'Mapping.Use' or 'Mapping.Audit' permissions on '/mapping/pci/<id>'.",
              "user": "all"
            }
          ]
        }
      },
      "post": {
        "operationId": "post-cluster-mapping-pci",
        "summary": "create",
        "description": "Create a new hardware mapping.",
        "tags": [
          "/cluster/mapping/pci"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "post-cluster-mapping-pci",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "description": {
                    "type": "string",
                    "description": "Description of the logical PCI device.",
                    "maxLength": 4096,
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "id": {
                    "type": "string",
                    "description": "The ID of the logical PCI mapping.",
                    "format": "pve-configid",
                    "x-proxmox-typetext": "<string>"
                  },
                  "live-migration-capable": {
                    "type": "boolean",
                    "description": "Marks the device(s) as being able to be live-migrated (Experimental). This needs hardware and driver support to work.",
                    "default": false,
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "map": {
                    "type": "array",
                    "description": "A list of maps for the cluster nodes.",
                    "items": {
                      "type": "string"
                    },
                    "x-proxmox-typetext": "<array>",
                    "x-proxmox-optional": false
                  },
                  "mdev": {
                    "type": "boolean",
                    "description": "Marks the device(s) as being capable of providing mediated devices.",
                    "default": false,
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  }
                },
                "required": [
                  "id",
                  "map"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/mapping/pci",
                [
                  "Mapping.Modify"
                ]
              ]
            }
          ]
        }
      }
    },
    "/cluster/mapping/pci/{id}": {
      "delete": {
        "operationId": "delete-cluster-mapping-pci-id",
        "summary": "delete",
        "description": "Remove Hardware Mapping.",
        "tags": [
          "/cluster/mapping/pci/{id}"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "delete-cluster-mapping-pci-id",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "pve-configid",
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/mapping/pci",
                [
                  "Mapping.Modify"
                ]
              ]
            }
          ]
        }
      },
      "get": {
        "operationId": "get-cluster-mapping-pci-id",
        "summary": "get",
        "description": "Get PCI Mapping.",
        "tags": [
          "/cluster/mapping/pci/{id}"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-cluster-mapping-pci-id",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "pve-configid",
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "or",
                [
                  "perm",
                  "/mapping/pci/{id}",
                  [
                    "Mapping.Use"
                  ]
                ],
                [
                  "perm",
                  "/mapping/pci/{id}",
                  [
                    "Mapping.Modify"
                  ]
                ],
                [
                  "perm",
                  "/mapping/pci/{id}",
                  [
                    "Mapping.Audit"
                  ]
                ]
              ]
            }
          ]
        }
      },
      "put": {
        "operationId": "put-cluster-mapping-pci-id",
        "summary": "update",
        "description": "Update a hardware mapping.",
        "tags": [
          "/cluster/mapping/pci/{id}"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "put-cluster-mapping-pci-id",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The ID of the logical PCI mapping.",
            "schema": {
              "type": "string",
              "description": "The ID of the logical PCI mapping.",
              "format": "pve-configid",
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "delete": {
                    "type": "string",
                    "description": "A list of settings you want to delete.",
                    "maxLength": 4096,
                    "format": "pve-configid-list",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "description": {
                    "type": "string",
                    "description": "Description of the logical PCI device.",
                    "maxLength": 4096,
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "digest": {
                    "type": "string",
                    "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
                    "maxLength": 64,
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "live-migration-capable": {
                    "type": "boolean",
                    "description": "Marks the device(s) as being able to be live-migrated (Experimental). This needs hardware and driver support to work.",
                    "default": false,
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "map": {
                    "type": "array",
                    "description": "A list of maps for the cluster nodes.",
                    "items": {
                      "type": "string"
                    },
                    "x-proxmox-typetext": "<array>",
                    "x-proxmox-optional": true
                  },
                  "mdev": {
                    "type": "boolean",
                    "description": "Marks the device(s) as being capable of providing mediated devices.",
                    "default": false,
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/mapping/pci/{id}",
                [
                  "Mapping.Modify"
                ]
              ]
            }
          ]
        }
      }
    },
    "/cluster/mapping/usb": {
      "get": {
        "operationId": "get-cluster-mapping-usb",
        "summary": "index",
        "description": "List USB Hardware Mappings",
        "tags": [
          "/cluster/mapping/usb"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "description": {
                        "type": "string",
                        "description": "A description of the logical mapping."
                      },
                      "error": {
                        "description": "A list of errors when 'check_node' is given.",
                        "items": {
                          "type": "object",
                          "properties": {
                            "message": {
                              "type": "string",
                              "description": "The message of the error"
                            },
                            "severity": {
                              "type": "string",
                              "description": "The severity of the error"
                            }
                          },
                          "required": [
                            "message",
                            "severity"
                          ]
                        }
                      },
                      "id": {
                        "type": "string",
                        "description": "The logical ID of the mapping."
                      },
                      "map": {
                        "type": "array",
                        "description": "The entries of the mapping.",
                        "items": {
                          "type": "string",
                          "description": "A mapping for a node."
                        }
                      }
                    },
                    "required": [
                      "description",
                      "error",
                      "id",
                      "map"
                    ]
                  },
                  "x-proxmox-metadata": {
                    "links": [
                      {
                        "href": "{id}",
                        "rel": "child"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-cluster-mapping-usb",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "check-node",
            "in": "query",
            "required": false,
            "description": "If given, checks the configurations on the given node for correctness, and adds relevant errors to the devices.",
            "schema": {
              "type": "string",
              "description": "If given, checks the configurations on the given node for correctness, and adds relevant errors to the devices.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>",
              "x-proxmox-optional": true
            }
          }
        ],
        "security": [],
        "x-proxmox-permissions": {
          "all": [
            {
              "description": "Only lists entries where you have 'Mapping.Modify', 'Mapping.Use' or 'Mapping.Audit' permissions on '/mapping/usb/<id>'.",
              "user": "all"
            }
          ]
        }
      },
      "post": {
        "operationId": "post-cluster-mapping-usb",
        "summary": "create",
        "description": "Create a new hardware mapping.",
        "tags": [
          "/cluster/mapping/usb"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "post-cluster-mapping-usb",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "description": {
                    "type": "string",
                    "description": "Description of the logical USB device.",
                    "maxLength": 4096,
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "id": {
                    "type": "string",
                    "description": "The ID of the logical USB mapping.",
                    "format": "pve-configid",
                    "x-proxmox-typetext": "<string>"
                  },
                  "map": {
                    "type": "array",
                    "description": "A list of maps for the cluster nodes.",
                    "items": {
                      "type": "string"
                    },
                    "x-proxmox-typetext": "<array>"
                  }
                },
                "required": [
                  "id",
                  "map"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/mapping/usb",
                [
                  "Mapping.Modify"
                ]
              ]
            }
          ]
        }
      }
    },
    "/cluster/mapping/usb/{id}": {
      "delete": {
        "operationId": "delete-cluster-mapping-usb-id",
        "summary": "delete",
        "description": "Remove Hardware Mapping.",
        "tags": [
          "/cluster/mapping/usb/{id}"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "delete-cluster-mapping-usb-id",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "pve-configid",
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/mapping/usb",
                [
                  "Mapping.Modify"
                ]
              ]
            }
          ]
        }
      },
      "get": {
        "operationId": "get-cluster-mapping-usb-id",
        "summary": "get",
        "description": "Get USB Mapping.",
        "tags": [
          "/cluster/mapping/usb/{id}"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-cluster-mapping-usb-id",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "pve-configid",
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "or",
                [
                  "perm",
                  "/mapping/usb/{id}",
                  [
                    "Mapping.Audit"
                  ]
                ],
                [
                  "perm",
                  "/mapping/usb/{id}",
                  [
                    "Mapping.Use"
                  ]
                ],
                [
                  "perm",
                  "/mapping/usb/{id}",
                  [
                    "Mapping.Modify"
                  ]
                ]
              ]
            }
          ]
        }
      },
      "put": {
        "operationId": "put-cluster-mapping-usb-id",
        "summary": "update",
        "description": "Update a hardware mapping.",
        "tags": [
          "/cluster/mapping/usb/{id}"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "put-cluster-mapping-usb-id",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The ID of the logical USB mapping.",
            "schema": {
              "type": "string",
              "description": "The ID of the logical USB mapping.",
              "format": "pve-configid",
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "delete": {
                    "type": "string",
                    "description": "A list of settings you want to delete.",
                    "maxLength": 4096,
                    "format": "pve-configid-list",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "description": {
                    "type": "string",
                    "description": "Description of the logical USB device.",
                    "maxLength": 4096,
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "digest": {
                    "type": "string",
                    "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
                    "maxLength": 64,
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "map": {
                    "type": "array",
                    "description": "A list of maps for the cluster nodes.",
                    "items": {
                      "type": "string"
                    },
                    "x-proxmox-typetext": "<array>"
                  }
                },
                "required": [
                  "map"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/mapping/usb/{id}",
                [
                  "Mapping.Modify"
                ]
              ]
            }
          ]
        }
      }
    },
    "/cluster/metrics": {
      "get": {
        "operationId": "get-cluster-metrics",
        "summary": "index",
        "description": "Metrics index.",
        "tags": [
          "/cluster/metrics"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  },
                  "x-proxmox-metadata": {
                    "links": [
                      {
                        "href": "{name}",
                        "rel": "child"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-cluster-metrics",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "security": [],
        "x-proxmox-permissions": {
          "all": [
            {
              "user": "all"
            }
          ]
        }
      }
    },
    "/cluster/metrics/export": {
      "get": {
        "operationId": "get-cluster-metrics-export",
        "summary": "export",
        "description": "Retrieve metrics of the cluster.",
        "tags": [
          "/cluster/metrics/export"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "description": "Array of system metrics. Metrics are sorted by their timestamp.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "Unique identifier for this metric object, for instance 'node/<nodename>' or 'qemu/<vmid>'."
                          },
                          "metric": {
                            "type": "string",
                            "description": "Name of the metric."
                          },
                          "timestamp": {
                            "type": "integer",
                            "description": "Time at which this metric was observed"
                          },
                          "type": {
                            "type": "string",
                            "description": "Type of the metric.",
                            "enum": [
                              "gauge",
                              "counter",
                              "derive"
                            ]
                          },
                          "value": {
                            "type": "number",
                            "description": "Metric value."
                          }
                        },
                        "required": [
                          "id",
                          "metric",
                          "timestamp",
                          "type",
                          "value"
                        ],
                        "additionalProperties": false
                      }
                    }
                  },
                  "required": [
                    "data"
                  ],
                  "additionalProperties": false
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-cluster-metrics-export",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "history",
            "in": "query",
            "required": false,
            "description": "Also return historic values. Returns full available metric history unless `start-time` is also set",
            "schema": {
              "type": "boolean",
              "description": "Also return historic values. Returns full available metric history unless `start-time` is also set",
              "default": false,
              "x-proxmox-typetext": "<boolean>",
              "x-proxmox-optional": true
            }
          },
          {
            "name": "local-only",
            "in": "query",
            "required": false,
            "description": "Only return metrics for the current node instead of the whole cluster",
            "schema": {
              "type": "boolean",
              "description": "Only return metrics for the current node instead of the whole cluster",
              "default": false,
              "x-proxmox-typetext": "<boolean>",
              "x-proxmox-optional": true
            }
          },
          {
            "name": "start-time",
            "in": "query",
            "required": false,
            "description": "Only include metrics with a timestamp > start-time.",
            "schema": {
              "type": "integer",
              "description": "Only include metrics with a timestamp > start-time.",
              "default": 0,
              "x-proxmox-typetext": "<integer>",
              "x-proxmox-optional": true
            }
          }
        ],
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/",
                [
                  "Sys.Audit"
                ]
              ]
            }
          ]
        }
      }
    },
    "/cluster/metrics/server": {
      "get": {
        "operationId": "get-cluster-metrics-server",
        "summary": "server_index",
        "description": "List configured metric servers.",
        "tags": [
          "/cluster/metrics/server"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "disable": {
                        "type": "boolean",
                        "description": "Flag to disable the plugin."
                      },
                      "id": {
                        "type": "string",
                        "description": "The ID of the entry."
                      },
                      "port": {
                        "type": "integer",
                        "description": "Server network port"
                      },
                      "server": {
                        "type": "string",
                        "description": "Server dns name or IP address"
                      },
                      "type": {
                        "type": "string",
                        "description": "Plugin type."
                      }
                    },
                    "required": [
                      "disable",
                      "id",
                      "port",
                      "server",
                      "type"
                    ]
                  },
                  "x-proxmox-metadata": {
                    "links": [
                      {
                        "href": "{id}",
                        "rel": "child"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-cluster-metrics-server",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "security": [],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/",
                [
                  "Sys.Audit"
                ]
              ]
            }
          ]
        }
      }
    },
    "/cluster/metrics/server/{id}": {
      "delete": {
        "operationId": "delete-cluster-metrics-server-id",
        "summary": "delete",
        "description": "Remove Metric server.",
        "tags": [
          "/cluster/metrics/server/{id}"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "delete-cluster-metrics-server-id",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "pve-configid",
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/",
                [
                  "Sys.Modify"
                ]
              ]
            }
          ]
        }
      },
      "get": {
        "operationId": "get-cluster-metrics-server-id",
        "summary": "read",
        "description": "Read metric server configuration.",
        "tags": [
          "/cluster/metrics/server/{id}"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-cluster-metrics-server-id",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "pve-configid",
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "security": [],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/",
                [
                  "Sys.Audit"
                ]
              ]
            }
          ]
        }
      },
      "post": {
        "operationId": "post-cluster-metrics-server-id",
        "summary": "create",
        "description": "Create a new external metric server config",
        "tags": [
          "/cluster/metrics/server/{id}"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "post-cluster-metrics-server-id",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The ID of the entry.",
            "schema": {
              "type": "string",
              "description": "The ID of the entry.",
              "format": "pve-configid",
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "api-path-prefix": {
                    "type": "string",
                    "description": "An API path prefix inserted between '<host>:<port>/' and '/api2/'. Can be useful if the InfluxDB service runs behind a reverse proxy.",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "bucket": {
                    "type": "string",
                    "description": "The InfluxDB bucket/db. Only necessary when using the http v2 api.",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "disable": {
                    "type": "boolean",
                    "description": "Flag to disable the plugin.",
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "influxdbproto": {
                    "type": "string",
                    "enum": [
                      "udp",
                      "http",
                      "https"
                    ],
                    "default": "udp",
                    "x-proxmox-optional": true
                  },
                  "max-body-size": {
                    "type": "integer",
                    "description": "InfluxDB max-body-size in bytes. Requests are batched up to this size.",
                    "default": 25000000,
                    "minimum": 1,
                    "x-proxmox-typetext": "<integer> (1 - N)",
                    "x-proxmox-optional": true
                  },
                  "mtu": {
                    "type": "integer",
                    "description": "MTU for metrics transmission over UDP",
                    "default": 1500,
                    "minimum": 512,
                    "maximum": 65536,
                    "x-proxmox-typetext": "<integer> (512 - 65536)",
                    "x-proxmox-optional": true
                  },
                  "organization": {
                    "type": "string",
                    "description": "The InfluxDB organization. Only necessary when using the http v2 api. Has no meaning when using v2 compatibility api.",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "otel-compression": {
                    "type": "string",
                    "description": "Compression algorithm for requests",
                    "enum": [
                      "none",
                      "gzip"
                    ],
                    "default": "gzip",
                    "x-proxmox-optional": true
                  },
                  "otel-headers": {
                    "type": "string",
                    "description": "Custom HTTP headers (JSON format, base64 encoded)",
                    "maxLength": 1024,
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "otel-max-body-size": {
                    "type": "integer",
                    "description": "Maximum request body size in bytes",
                    "default": 10000000,
                    "minimum": 1024,
                    "x-proxmox-typetext": "<integer> (1024 - N)",
                    "x-proxmox-optional": true
                  },
                  "otel-path": {
                    "type": "string",
                    "description": "OTLP endpoint path",
                    "default": "/v1/metrics",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "otel-protocol": {
                    "type": "string",
                    "description": "HTTP protocol",
                    "enum": [
                      "http",
                      "https"
                    ],
                    "default": "https",
                    "x-proxmox-optional": true
                  },
                  "otel-resource-attributes": {
                    "type": "string",
                    "description": "Additional resource attributes as JSON, base64 encoded",
                    "maxLength": 1024,
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "otel-timeout": {
                    "type": "integer",
                    "description": "HTTP request timeout in seconds",
                    "default": 5,
                    "minimum": 1,
                    "maximum": 10,
                    "x-proxmox-typetext": "<integer> (1 - 10)",
                    "x-proxmox-optional": true
                  },
                  "otel-verify-ssl": {
                    "type": "boolean",
                    "description": "Verify SSL certificates",
                    "default": true,
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "path": {
                    "type": "string",
                    "description": "root graphite path (ex: proxmox.mycluster.mykey)",
                    "format": "graphite-path",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "port": {
                    "type": "integer",
                    "description": "server network port",
                    "minimum": 1,
                    "maximum": 65536,
                    "x-proxmox-typetext": "<integer> (1 - 65536)"
                  },
                  "proto": {
                    "type": "string",
                    "description": "Protocol to send graphite data. TCP or UDP (default)",
                    "enum": [
                      "udp",
                      "tcp"
                    ],
                    "x-proxmox-optional": true
                  },
                  "server": {
                    "type": "string",
                    "description": "server dns name or IP address",
                    "format": "address",
                    "x-proxmox-typetext": "<string>"
                  },
                  "timeout": {
                    "type": "integer",
                    "description": "graphite TCP socket timeout (default=1)",
                    "default": 1,
                    "minimum": 0,
                    "x-proxmox-typetext": "<integer> (0 - N)",
                    "x-proxmox-optional": true
                  },
                  "token": {
                    "type": "string",
                    "description": "The InfluxDB access token. Only necessary when using the http v2 api. If the v2 compatibility api is used, use 'user:password' instead.",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "type": {
                    "type": "string",
                    "description": "Plugin type.",
                    "enum": [
                      "graphite",
                      "influxdb",
                      "opentelemetry"
                    ],
                    "format": "pve-configid"
                  },
                  "verify-certificate": {
                    "type": "boolean",
                    "description": "Set to 0 to disable certificate verification for https endpoints.",
                    "default": true,
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  }
                },
                "required": [
                  "port",
                  "server",
                  "type"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/",
                [
                  "Sys.Modify"
                ]
              ]
            }
          ]
        }
      },
      "put": {
        "operationId": "put-cluster-metrics-server-id",
        "summary": "update",
        "description": "Update metric server configuration.",
        "tags": [
          "/cluster/metrics/server/{id}"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "put-cluster-metrics-server-id",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The ID of the entry.",
            "schema": {
              "type": "string",
              "description": "The ID of the entry.",
              "format": "pve-configid",
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "api-path-prefix": {
                    "type": "string",
                    "description": "An API path prefix inserted between '<host>:<port>/' and '/api2/'. Can be useful if the InfluxDB service runs behind a reverse proxy.",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "bucket": {
                    "type": "string",
                    "description": "The InfluxDB bucket/db. Only necessary when using the http v2 api.",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "delete": {
                    "type": "string",
                    "description": "A list of settings you want to delete.",
                    "maxLength": 4096,
                    "format": "pve-configid-list",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "digest": {
                    "type": "string",
                    "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
                    "maxLength": 64,
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "disable": {
                    "type": "boolean",
                    "description": "Flag to disable the plugin.",
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "influxdbproto": {
                    "type": "string",
                    "enum": [
                      "udp",
                      "http",
                      "https"
                    ],
                    "default": "udp",
                    "x-proxmox-optional": true
                  },
                  "max-body-size": {
                    "type": "integer",
                    "description": "InfluxDB max-body-size in bytes. Requests are batched up to this size.",
                    "default": 25000000,
                    "minimum": 1,
                    "x-proxmox-typetext": "<integer> (1 - N)",
                    "x-proxmox-optional": true
                  },
                  "mtu": {
                    "type": "integer",
                    "description": "MTU for metrics transmission over UDP",
                    "default": 1500,
                    "minimum": 512,
                    "maximum": 65536,
                    "x-proxmox-typetext": "<integer> (512 - 65536)",
                    "x-proxmox-optional": true
                  },
                  "organization": {
                    "type": "string",
                    "description": "The InfluxDB organization. Only necessary when using the http v2 api. Has no meaning when using v2 compatibility api.",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "otel-compression": {
                    "type": "string",
                    "description": "Compression algorithm for requests",
                    "enum": [
                      "none",
                      "gzip"
                    ],
                    "default": "gzip",
                    "x-proxmox-optional": true
                  },
                  "otel-headers": {
                    "type": "string",
                    "description": "Custom HTTP headers (JSON format, base64 encoded)",
                    "maxLength": 1024,
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "otel-max-body-size": {
                    "type": "integer",
                    "description": "Maximum request body size in bytes",
                    "default": 10000000,
                    "minimum": 1024,
                    "x-proxmox-typetext": "<integer> (1024 - N)",
                    "x-proxmox-optional": true
                  },
                  "otel-path": {
                    "type": "string",
                    "description": "OTLP endpoint path",
                    "default": "/v1/metrics",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "otel-protocol": {
                    "type": "string",
                    "description": "HTTP protocol",
                    "enum": [
                      "http",
                      "https"
                    ],
                    "default": "https",
                    "x-proxmox-optional": true
                  },
                  "otel-resource-attributes": {
                    "type": "string",
                    "description": "Additional resource attributes as JSON, base64 encoded",
                    "maxLength": 1024,
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "otel-timeout": {
                    "type": "integer",
                    "description": "HTTP request timeout in seconds",
                    "default": 5,
                    "minimum": 1,
                    "maximum": 10,
                    "x-proxmox-typetext": "<integer> (1 - 10)",
                    "x-proxmox-optional": true
                  },
                  "otel-verify-ssl": {
                    "type": "boolean",
                    "description": "Verify SSL certificates",
                    "default": true,
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "path": {
                    "type": "string",
                    "description": "root graphite path (ex: proxmox.mycluster.mykey)",
                    "format": "graphite-path",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "port": {
                    "type": "integer",
                    "description": "server network port",
                    "minimum": 1,
                    "maximum": 65536,
                    "x-proxmox-typetext": "<integer> (1 - 65536)"
                  },
                  "proto": {
                    "type": "string",
                    "description": "Protocol to send graphite data. TCP or UDP (default)",
                    "enum": [
                      "udp",
                      "tcp"
                    ],
                    "x-proxmox-optional": true
                  },
                  "server": {
                    "type": "string",
                    "description": "server dns name or IP address",
                    "format": "address",
                    "x-proxmox-typetext": "<string>"
                  },
                  "timeout": {
                    "type": "integer",
                    "description": "graphite TCP socket timeout (default=1)",
                    "default": 1,
                    "minimum": 0,
                    "x-proxmox-typetext": "<integer> (0 - N)",
                    "x-proxmox-optional": true
                  },
                  "token": {
                    "type": "string",
                    "description": "The InfluxDB access token. Only necessary when using the http v2 api. If the v2 compatibility api is used, use 'user:password' instead.",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "verify-certificate": {
                    "type": "boolean",
                    "description": "Set to 0 to disable certificate verification for https endpoints.",
                    "default": true,
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  }
                },
                "required": [
                  "port",
                  "server"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/",
                [
                  "Sys.Modify"
                ]
              ]
            }
          ]
        }
      }
    },
    "/cluster/nextid": {
      "get": {
        "operationId": "get-cluster-nextid",
        "summary": "nextid",
        "description": "Get next free VMID. Pass a VMID to assert that its free (at time of check).",
        "tags": [
          "/cluster/nextid"
        ],
        "responses": {
          "200": {
            "description": "The next free VMID.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "description": "The next free VMID."
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-cluster-nextid",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "vmid",
            "in": "query",
            "required": false,
            "description": "The (unique) ID of the VM.",
            "schema": {
              "type": "integer",
              "description": "The (unique) ID of the VM.",
              "minimum": 100,
              "maximum": 999999999,
              "format": "pve-vmid",
              "x-proxmox-typetext": "<integer> (100 - 999999999)",
              "x-proxmox-optional": true
            }
          }
        ],
        "security": [],
        "x-proxmox-permissions": {
          "all": [
            {
              "user": "all"
            }
          ]
        }
      }
    },
    "/cluster/notifications": {
      "get": {
        "operationId": "get-cluster-notifications",
        "summary": "index",
        "description": "Index for notification-related API endpoints.",
        "tags": [
          "/cluster/notifications"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  },
                  "x-proxmox-metadata": {
                    "links": [
                      {
                        "href": "{name}",
                        "rel": "child"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-cluster-notifications",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "security": [],
        "x-proxmox-permissions": {
          "all": [
            {
              "user": "all"
            }
          ]
        }
      }
    },
    "/cluster/notifications/endpoints": {
      "get": {
        "operationId": "get-cluster-notifications-endpoints",
        "summary": "endpoints_index",
        "description": "Index for all available endpoint types.",
        "tags": [
          "/cluster/notifications/endpoints"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  },
                  "x-proxmox-metadata": {
                    "links": [
                      {
                        "href": "{name}",
                        "rel": "child"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-cluster-notifications-endpoints",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "security": [],
        "x-proxmox-permissions": {
          "all": [
            {
              "user": "all"
            }
          ]
        }
      }
    },
    "/cluster/notifications/endpoints/gotify": {
      "get": {
        "operationId": "get-cluster-notifications-endpoints-gotify",
        "summary": "get_gotify_endpoints",
        "description": "Returns a list of all gotify endpoints",
        "tags": [
          "/cluster/notifications/endpoints/gotify"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "comment": {
                        "type": "string",
                        "description": "Comment",
                        "x-proxmox-optional": true
                      },
                      "disable": {
                        "type": "boolean",
                        "description": "Disable this target",
                        "default": false,
                        "x-proxmox-optional": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the endpoint.",
                        "format": "pve-configid"
                      },
                      "origin": {
                        "type": "string",
                        "description": "Show if this entry was created by a user or was built-in",
                        "enum": [
                          "user-created",
                          "builtin",
                          "modified-builtin"
                        ]
                      },
                      "server": {
                        "type": "string",
                        "description": "Server URL"
                      }
                    },
                    "required": [
                      "name",
                      "origin",
                      "server"
                    ]
                  },
                  "x-proxmox-metadata": {
                    "links": [
                      {
                        "href": "{name}",
                        "rel": "child"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-cluster-notifications-endpoints-gotify",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/mapping/notifications",
                [
                  "Mapping.Audit"
                ]
              ]
            }
          ]
        }
      },
      "post": {
        "operationId": "post-cluster-notifications-endpoints-gotify",
        "summary": "create_gotify_endpoint",
        "description": "Create a new gotify endpoint",
        "tags": [
          "/cluster/notifications/endpoints/gotify"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "post-cluster-notifications-endpoints-gotify",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "comment": {
                    "type": "string",
                    "description": "Comment",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "disable": {
                    "type": "boolean",
                    "description": "Disable this target",
                    "default": false,
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "name": {
                    "type": "string",
                    "description": "The name of the endpoint.",
                    "format": "pve-configid",
                    "x-proxmox-typetext": "<string>"
                  },
                  "server": {
                    "type": "string",
                    "description": "Server URL",
                    "x-proxmox-typetext": "<string>"
                  },
                  "token": {
                    "type": "string",
                    "description": "Secret token",
                    "x-proxmox-typetext": "<string>"
                  }
                },
                "required": [
                  "name",
                  "server",
                  "token"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "and",
                [
                  "perm",
                  "/mapping/notifications",
                  [
                    "Mapping.Modify"
                  ]
                ],
                [
                  "or",
                  [
                    "perm",
                    "/",
                    [
                      "Sys.Audit",
                      "Sys.Modify"
                    ]
                  ],
                  [
                    "perm",
                    "/",
                    [
                      "Sys.AccessNetwork"
                    ]
                  ]
                ]
              ]
            }
          ]
        }
      }
    },
    "/cluster/notifications/endpoints/gotify/{name}": {
      "delete": {
        "operationId": "delete-cluster-notifications-endpoints-gotify-name",
        "summary": "delete_gotify_endpoint",
        "description": "Remove gotify endpoint",
        "tags": [
          "/cluster/notifications/endpoints/gotify/{name}"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "delete-cluster-notifications-endpoints-gotify-name",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "pve-configid",
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/mapping/notifications",
                [
                  "Mapping.Modify"
                ]
              ]
            }
          ]
        }
      },
      "get": {
        "operationId": "get-cluster-notifications-endpoints-gotify-name",
        "summary": "get_gotify_endpoint",
        "description": "Return a specific gotify endpoint",
        "tags": [
          "/cluster/notifications/endpoints/gotify/{name}"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "comment": {
                      "type": "string",
                      "description": "Comment",
                      "x-proxmox-optional": true
                    },
                    "digest": {
                      "type": "string",
                      "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
                      "maxLength": 64,
                      "x-proxmox-optional": true
                    },
                    "disable": {
                      "type": "boolean",
                      "description": "Disable this target",
                      "default": false,
                      "x-proxmox-optional": true
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of the endpoint.",
                      "format": "pve-configid"
                    },
                    "server": {
                      "type": "string",
                      "description": "Server URL"
                    }
                  },
                  "required": [
                    "name",
                    "server"
                  ]
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-cluster-notifications-endpoints-gotify-name",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "description": "Name of the endpoint.",
            "schema": {
              "type": "string",
              "description": "Name of the endpoint.",
              "format": "pve-configid",
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "or",
                [
                  "perm",
                  "/mapping/notifications",
                  [
                    "Mapping.Modify"
                  ]
                ],
                [
                  "perm",
                  "/mapping/notifications",
                  [
                    "Mapping.Audit"
                  ]
                ]
              ]
            }
          ]
        }
      },
      "put": {
        "operationId": "put-cluster-notifications-endpoints-gotify-name",
        "summary": "update_gotify_endpoint",
        "description": "Update existing gotify endpoint",
        "tags": [
          "/cluster/notifications/endpoints/gotify/{name}"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "put-cluster-notifications-endpoints-gotify-name",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "description": "The name of the endpoint.",
            "schema": {
              "type": "string",
              "description": "The name of the endpoint.",
              "format": "pve-configid",
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "comment": {
                    "type": "string",
                    "description": "Comment",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "delete": {
                    "type": "array",
                    "description": "A list of settings you want to delete.",
                    "items": {
                      "type": "string",
                      "format": "pve-configid"
                    },
                    "x-proxmox-typetext": "<array>",
                    "x-proxmox-optional": true
                  },
                  "digest": {
                    "type": "string",
                    "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
                    "maxLength": 64,
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "disable": {
                    "type": "boolean",
                    "description": "Disable this target",
                    "default": false,
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "server": {
                    "type": "string",
                    "description": "Server URL",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "token": {
                    "type": "string",
                    "description": "Secret token",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "and",
                [
                  "perm",
                  "/mapping/notifications",
                  [
                    "Mapping.Modify"
                  ]
                ],
                [
                  "or",
                  [
                    "perm",
                    "/",
                    [
                      "Sys.Audit",
                      "Sys.Modify"
                    ]
                  ],
                  [
                    "perm",
                    "/",
                    [
                      "Sys.AccessNetwork"
                    ]
                  ]
                ]
              ]
            }
          ]
        }
      }
    },
    "/cluster/notifications/endpoints/sendmail": {
      "get": {
        "operationId": "get-cluster-notifications-endpoints-sendmail",
        "summary": "get_sendmail_endpoints",
        "description": "Returns a list of all sendmail endpoints",
        "tags": [
          "/cluster/notifications/endpoints/sendmail"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "author": {
                        "type": "string",
                        "description": "Author of the mail",
                        "x-proxmox-optional": true
                      },
                      "comment": {
                        "type": "string",
                        "description": "Comment",
                        "x-proxmox-optional": true
                      },
                      "disable": {
                        "type": "boolean",
                        "description": "Disable this target",
                        "default": false,
                        "x-proxmox-optional": true
                      },
                      "from-address": {
                        "type": "string",
                        "description": "`From` address for the mail",
                        "x-proxmox-optional": true
                      },
                      "mailto": {
                        "type": "array",
                        "description": "List of email recipients",
                        "items": {
                          "type": "string",
                          "format": "email-or-username"
                        },
                        "x-proxmox-optional": true
                      },
                      "mailto-user": {
                        "type": "array",
                        "description": "List of users",
                        "items": {
                          "type": "string",
                          "format": "pve-userid"
                        },
                        "x-proxmox-optional": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the endpoint.",
                        "format": "pve-configid"
                      },
                      "origin": {
                        "type": "string",
                        "description": "Show if this entry was created by a user or was built-in",
                        "enum": [
                          "user-created",
                          "builtin",
                          "modified-builtin"
                        ]
                      }
                    },
                    "required": [
                      "name",
                      "origin"
                    ]
                  },
                  "x-proxmox-metadata": {
                    "links": [
                      {
                        "href": "{name}",
                        "rel": "child"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-cluster-notifications-endpoints-sendmail",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "or",
                [
                  "perm",
                  "/mapping/notifications",
                  [
                    "Mapping.Modify"
                  ]
                ],
                [
                  "perm",
                  "/mapping/notifications",
                  [
                    "Mapping.Audit"
                  ]
                ]
              ]
            }
          ]
        }
      },
      "post": {
        "operationId": "post-cluster-notifications-endpoints-sendmail",
        "summary": "create_sendmail_endpoint",
        "description": "Create a new sendmail endpoint",
        "tags": [
          "/cluster/notifications/endpoints/sendmail"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "post-cluster-notifications-endpoints-sendmail",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "author": {
                    "type": "string",
                    "description": "Author of the mail",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "comment": {
                    "type": "string",
                    "description": "Comment",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "disable": {
                    "type": "boolean",
                    "description": "Disable this target",
                    "default": false,
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "from-address": {
                    "type": "string",
                    "description": "`From` address for the mail",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "mailto": {
                    "type": "array",
                    "description": "List of email recipients",
                    "items": {
                      "type": "string",
                      "format": "email-or-username"
                    },
                    "x-proxmox-typetext": "<array>",
                    "x-proxmox-optional": true
                  },
                  "mailto-user": {
                    "type": "array",
                    "description": "List of users",
                    "items": {
                      "type": "string",
                      "format": "pve-userid"
                    },
                    "x-proxmox-typetext": "<array>",
                    "x-proxmox-optional": true
                  },
                  "name": {
                    "type": "string",
                    "description": "The name of the endpoint.",
                    "format": "pve-configid",
                    "x-proxmox-typetext": "<string>"
                  }
                },
                "required": [
                  "name"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "and",
                [
                  "perm",
                  "/mapping/notifications",
                  [
                    "Mapping.Modify"
                  ]
                ],
                [
                  "or",
                  [
                    "perm",
                    "/",
                    [
                      "Sys.Audit",
                      "Sys.Modify"
                    ]
                  ],
                  [
                    "perm",
                    "/",
                    [
                      "Sys.AccessNetwork"
                    ]
                  ]
                ]
              ]
            }
          ]
        }
      }
    },
    "/cluster/notifications/endpoints/sendmail/{name}": {
      "delete": {
        "operationId": "delete-cluster-notifications-endpoints-sendmail-name",
        "summary": "delete_sendmail_endpoint",
        "description": "Remove sendmail endpoint",
        "tags": [
          "/cluster/notifications/endpoints/sendmail/{name}"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "delete-cluster-notifications-endpoints-sendmail-name",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "pve-configid",
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/mapping/notifications",
                [
                  "Mapping.Modify"
                ]
              ]
            }
          ]
        }
      },
      "get": {
        "operationId": "get-cluster-notifications-endpoints-sendmail-name",
        "summary": "get_sendmail_endpoint",
        "description": "Return a specific sendmail endpoint",
        "tags": [
          "/cluster/notifications/endpoints/sendmail/{name}"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "author": {
                      "type": "string",
                      "description": "Author of the mail",
                      "x-proxmox-optional": true
                    },
                    "comment": {
                      "type": "string",
                      "description": "Comment",
                      "x-proxmox-optional": true
                    },
                    "digest": {
                      "type": "string",
                      "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
                      "maxLength": 64,
                      "x-proxmox-optional": true
                    },
                    "disable": {
                      "type": "boolean",
                      "description": "Disable this target",
                      "default": false,
                      "x-proxmox-optional": true
                    },
                    "from-address": {
                      "type": "string",
                      "description": "`From` address for the mail",
                      "x-proxmox-optional": true
                    },
                    "mailto": {
                      "type": "array",
                      "description": "List of email recipients",
                      "items": {
                        "type": "string",
                        "format": "email-or-username"
                      },
                      "x-proxmox-optional": true
                    },
                    "mailto-user": {
                      "type": "array",
                      "description": "List of users",
                      "items": {
                        "type": "string",
                        "format": "pve-userid"
                      },
                      "x-proxmox-optional": true
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of the endpoint.",
                      "format": "pve-configid"
                    }
                  },
                  "required": [
                    "name"
                  ]
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-cluster-notifications-endpoints-sendmail-name",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "pve-configid",
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "or",
                [
                  "perm",
                  "/mapping/notifications",
                  [
                    "Mapping.Modify"
                  ]
                ],
                [
                  "perm",
                  "/mapping/notifications",
                  [
                    "Mapping.Audit"
                  ]
                ]
              ]
            }
          ]
        }
      },
      "put": {
        "operationId": "put-cluster-notifications-endpoints-sendmail-name",
        "summary": "update_sendmail_endpoint",
        "description": "Update existing sendmail endpoint",
        "tags": [
          "/cluster/notifications/endpoints/sendmail/{name}"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "put-cluster-notifications-endpoints-sendmail-name",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "description": "The name of the endpoint.",
            "schema": {
              "type": "string",
              "description": "The name of the endpoint.",
              "format": "pve-configid",
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "author": {
                    "type": "string",
                    "description": "Author of the mail",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "comment": {
                    "type": "string",
                    "description": "Comment",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "delete": {
                    "type": "array",
                    "description": "A list of settings you want to delete.",
                    "items": {
                      "type": "string",
                      "format": "pve-configid"
                    },
                    "x-proxmox-typetext": "<array>",
                    "x-proxmox-optional": true
                  },
                  "digest": {
                    "type": "string",
                    "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
                    "maxLength": 64,
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "disable": {
                    "type": "boolean",
                    "description": "Disable this target",
                    "default": false,
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "from-address": {
                    "type": "string",
                    "description": "`From` address for the mail",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "mailto": {
                    "type": "array",
                    "description": "List of email recipients",
                    "items": {
                      "type": "string",
                      "format": "email-or-username"
                    },
                    "x-proxmox-typetext": "<array>",
                    "x-proxmox-optional": true
                  },
                  "mailto-user": {
                    "type": "array",
                    "description": "List of users",
                    "items": {
                      "type": "string",
                      "format": "pve-userid"
                    },
                    "x-proxmox-typetext": "<array>",
                    "x-proxmox-optional": true
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "and",
                [
                  "perm",
                  "/mapping/notifications",
                  [
                    "Mapping.Modify"
                  ]
                ],
                [
                  "or",
                  [
                    "perm",
                    "/",
                    [
                      "Sys.Audit",
                      "Sys.Modify"
                    ]
                  ],
                  [
                    "perm",
                    "/",
                    [
                      "Sys.AccessNetwork"
                    ]
                  ]
                ]
              ]
            }
          ]
        }
      }
    },
    "/cluster/notifications/endpoints/smtp": {
      "get": {
        "operationId": "get-cluster-notifications-endpoints-smtp",
        "summary": "get_smtp_endpoints",
        "description": "Returns a list of all smtp endpoints",
        "tags": [
          "/cluster/notifications/endpoints/smtp"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "author": {
                        "type": "string",
                        "description": "Author of the mail. Defaults to 'Proxmox VE'.",
                        "x-proxmox-optional": true
                      },
                      "comment": {
                        "type": "string",
                        "description": "Comment",
                        "x-proxmox-optional": true
                      },
                      "disable": {
                        "type": "boolean",
                        "description": "Disable this target",
                        "default": false,
                        "x-proxmox-optional": true
                      },
                      "from-address": {
                        "type": "string",
                        "description": "`From` address for the mail"
                      },
                      "mailto": {
                        "type": "array",
                        "description": "List of email recipients",
                        "items": {
                          "type": "string",
                          "format": "email-or-username"
                        },
                        "x-proxmox-optional": true
                      },
                      "mailto-user": {
                        "type": "array",
                        "description": "List of users",
                        "items": {
                          "type": "string",
                          "format": "pve-userid"
                        },
                        "x-proxmox-optional": true
                      },
                      "mode": {
                        "type": "string",
                        "description": "Determine which encryption method shall be used for the connection.",
                        "enum": [
                          "insecure",
                          "starttls",
                          "tls"
                        ],
                        "default": "tls",
                        "x-proxmox-optional": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the endpoint.",
                        "format": "pve-configid"
                      },
                      "origin": {
                        "type": "string",
                        "description": "Show if this entry was created by a user or was built-in",
                        "enum": [
                          "user-created",
                          "builtin",
                          "modified-builtin"
                        ]
                      },
                      "port": {
                        "type": "integer",
                        "description": "The port to be used. Defaults to 465 for TLS based connections, 587 for STARTTLS based connections and port 25 for insecure plain-text connections.",
                        "x-proxmox-optional": true
                      },
                      "server": {
                        "type": "string",
                        "description": "The address of the SMTP server."
                      },
                      "username": {
                        "type": "string",
                        "description": "Username for SMTP authentication",
                        "x-proxmox-optional": true
                      }
                    },
                    "required": [
                      "from-address",
                      "name",
                      "origin",
                      "server"
                    ]
                  },
                  "x-proxmox-metadata": {
                    "links": [
                      {
                        "href": "{name}",
                        "rel": "child"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-cluster-notifications-endpoints-smtp",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "or",
                [
                  "perm",
                  "/mapping/notifications",
                  [
                    "Mapping.Modify"
                  ]
                ],
                [
                  "perm",
                  "/mapping/notifications",
                  [
                    "Mapping.Audit"
                  ]
                ]
              ]
            }
          ]
        }
      },
      "post": {
        "operationId": "post-cluster-notifications-endpoints-smtp",
        "summary": "create_smtp_endpoint",
        "description": "Create a new smtp endpoint",
        "tags": [
          "/cluster/notifications/endpoints/smtp"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "post-cluster-notifications-endpoints-smtp",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "author": {
                    "type": "string",
                    "description": "Author of the mail. Defaults to 'Proxmox VE'.",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "comment": {
                    "type": "string",
                    "description": "Comment",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "disable": {
                    "type": "boolean",
                    "description": "Disable this target",
                    "default": false,
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "from-address": {
                    "type": "string",
                    "description": "`From` address for the mail",
                    "x-proxmox-typetext": "<string>"
                  },
                  "mailto": {
                    "type": "array",
                    "description": "List of email recipients",
                    "items": {
                      "type": "string",
                      "format": "email-or-username"
                    },
                    "x-proxmox-typetext": "<array>",
                    "x-proxmox-optional": true
                  },
                  "mailto-user": {
                    "type": "array",
                    "description": "List of users",
                    "items": {
                      "type": "string",
                      "format": "pve-userid"
                    },
                    "x-proxmox-typetext": "<array>",
                    "x-proxmox-optional": true
                  },
                  "mode": {
                    "type": "string",
                    "description": "Determine which encryption method shall be used for the connection.",
                    "enum": [
                      "insecure",
                      "starttls",
                      "tls"
                    ],
                    "default": "tls",
                    "x-proxmox-optional": true
                  },
                  "name": {
                    "type": "string",
                    "description": "The name of the endpoint.",
                    "format": "pve-configid",
                    "x-proxmox-typetext": "<string>"
                  },
                  "password": {
                    "type": "string",
                    "description": "Password for SMTP authentication",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "port": {
                    "type": "integer",
                    "description": "The port to be used. Defaults to 465 for TLS based connections, 587 for STARTTLS based connections and port 25 for insecure plain-text connections.",
                    "x-proxmox-typetext": "<integer>",
                    "x-proxmox-optional": true
                  },
                  "server": {
                    "type": "string",
                    "description": "The address of the SMTP server.",
                    "x-proxmox-typetext": "<string>"
                  },
                  "username": {
                    "type": "string",
                    "description": "Username for SMTP authentication",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  }
                },
                "required": [
                  "from-address",
                  "name",
                  "server"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "and",
                [
                  "perm",
                  "/mapping/notifications",
                  [
                    "Mapping.Modify"
                  ]
                ],
                [
                  "or",
                  [
                    "perm",
                    "/",
                    [
                      "Sys.Audit",
                      "Sys.Modify"
                    ]
                  ],
                  [
                    "perm",
                    "/",
                    [
                      "Sys.AccessNetwork"
                    ]
                  ]
                ]
              ]
            }
          ]
        }
      }
    },
    "/cluster/notifications/endpoints/smtp/{name}": {
      "delete": {
        "operationId": "delete-cluster-notifications-endpoints-smtp-name",
        "summary": "delete_smtp_endpoint",
        "description": "Remove smtp endpoint",
        "tags": [
          "/cluster/notifications/endpoints/smtp/{name}"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "delete-cluster-notifications-endpoints-smtp-name",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "pve-configid",
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/mapping/notifications",
                [
                  "Mapping.Modify"
                ]
              ]
            }
          ]
        }
      },
      "get": {
        "operationId": "get-cluster-notifications-endpoints-smtp-name",
        "summary": "get_smtp_endpoint",
        "description": "Return a specific smtp endpoint",
        "tags": [
          "/cluster/notifications/endpoints/smtp/{name}"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "author": {
                      "type": "string",
                      "description": "Author of the mail. Defaults to 'Proxmox VE'.",
                      "x-proxmox-optional": true
                    },
                    "comment": {
                      "type": "string",
                      "description": "Comment",
                      "x-proxmox-optional": true
                    },
                    "digest": {
                      "type": "string",
                      "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
                      "maxLength": 64,
                      "x-proxmox-optional": true
                    },
                    "disable": {
                      "type": "boolean",
                      "description": "Disable this target",
                      "default": false,
                      "x-proxmox-optional": true
                    },
                    "from-address": {
                      "type": "string",
                      "description": "`From` address for the mail"
                    },
                    "mailto": {
                      "type": "array",
                      "description": "List of email recipients",
                      "items": {
                        "type": "string",
                        "format": "email-or-username"
                      },
                      "x-proxmox-optional": true
                    },
                    "mailto-user": {
                      "type": "array",
                      "description": "List of users",
                      "items": {
                        "type": "string",
                        "format": "pve-userid"
                      },
                      "x-proxmox-optional": true
                    },
                    "mode": {
                      "type": "string",
                      "description": "Determine which encryption method shall be used for the connection.",
                      "enum": [
                        "insecure",
                        "starttls",
                        "tls"
                      ],
                      "default": "tls",
                      "x-proxmox-optional": true
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of the endpoint.",
                      "format": "pve-configid"
                    },
                    "port": {
                      "type": "integer",
                      "description": "The port to be used. Defaults to 465 for TLS based connections, 587 for STARTTLS based connections and port 25 for insecure plain-text connections.",
                      "x-proxmox-optional": true
                    },
                    "server": {
                      "type": "string",
                      "description": "The address of the SMTP server."
                    },
                    "username": {
                      "type": "string",
                      "description": "Username for SMTP authentication",
                      "x-proxmox-optional": true
                    }
                  },
                  "required": [
                    "from-address",
                    "name",
                    "server"
                  ]
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-cluster-notifications-endpoints-smtp-name",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "pve-configid",
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "or",
                [
                  "perm",
                  "/mapping/notifications",
                  [
                    "Mapping.Modify"
                  ]
                ],
                [
                  "perm",
                  "/mapping/notifications",
                  [
                    "Mapping.Audit"
                  ]
                ]
              ]
            }
          ]
        }
      },
      "put": {
        "operationId": "put-cluster-notifications-endpoints-smtp-name",
        "summary": "update_smtp_endpoint",
        "description": "Update existing smtp endpoint",
        "tags": [
          "/cluster/notifications/endpoints/smtp/{name}"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "put-cluster-notifications-endpoints-smtp-name",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "description": "The name of the endpoint.",
            "schema": {
              "type": "string",
              "description": "The name of the endpoint.",
              "format": "pve-configid",
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "author": {
                    "type": "string",
                    "description": "Author of the mail. Defaults to 'Proxmox VE'.",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "comment": {
                    "type": "string",
                    "description": "Comment",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "delete": {
                    "type": "array",
                    "description": "A list of settings you want to delete.",
                    "items": {
                      "type": "string",
                      "format": "pve-configid"
                    },
                    "x-proxmox-typetext": "<array>",
                    "x-proxmox-optional": true
                  },
                  "digest": {
                    "type": "string",
                    "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
                    "maxLength": 64,
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "disable": {
                    "type": "boolean",
                    "description": "Disable this target",
                    "default": false,
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "from-address": {
                    "type": "string",
                    "description": "`From` address for the mail",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "mailto": {
                    "type": "array",
                    "description": "List of email recipients",
                    "items": {
                      "type": "string",
                      "format": "email-or-username"
                    },
                    "x-proxmox-typetext": "<array>",
                    "x-proxmox-optional": true
                  },
                  "mailto-user": {
                    "type": "array",
                    "description": "List of users",
                    "items": {
                      "type": "string",
                      "format": "pve-userid"
                    },
                    "x-proxmox-typetext": "<array>",
                    "x-proxmox-optional": true
                  },
                  "mode": {
                    "type": "string",
                    "description": "Determine which encryption method shall be used for the connection.",
                    "enum": [
                      "insecure",
                      "starttls",
                      "tls"
                    ],
                    "default": "tls",
                    "x-proxmox-optional": true
                  },
                  "password": {
                    "type": "string",
                    "description": "Password for SMTP authentication",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "port": {
                    "type": "integer",
                    "description": "The port to be used. Defaults to 465 for TLS based connections, 587 for STARTTLS based connections and port 25 for insecure plain-text connections.",
                    "x-proxmox-typetext": "<integer>",
                    "x-proxmox-optional": true
                  },
                  "server": {
                    "type": "string",
                    "description": "The address of the SMTP server.",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "username": {
                    "type": "string",
                    "description": "Username for SMTP authentication",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "and",
                [
                  "perm",
                  "/mapping/notifications",
                  [
                    "Mapping.Modify"
                  ]
                ],
                [
                  "or",
                  [
                    "perm",
                    "/",
                    [
                      "Sys.Audit",
                      "Sys.Modify"
                    ]
                  ],
                  [
                    "perm",
                    "/",
                    [
                      "Sys.AccessNetwork"
                    ]
                  ]
                ]
              ]
            }
          ]
        }
      }
    },
    "/cluster/notifications/endpoints/webhook": {
      "get": {
        "operationId": "get-cluster-notifications-endpoints-webhook",
        "summary": "get_webhook_endpoints",
        "description": "Returns a list of all webhook endpoints",
        "tags": [
          "/cluster/notifications/endpoints/webhook"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "body": {
                        "type": "string",
                        "description": "HTTP body, base64 encoded",
                        "x-proxmox-optional": true
                      },
                      "comment": {
                        "type": "string",
                        "description": "Comment",
                        "x-proxmox-optional": true
                      },
                      "disable": {
                        "type": "boolean",
                        "description": "Disable this target",
                        "default": false,
                        "x-proxmox-optional": true
                      },
                      "header": {
                        "type": "array",
                        "description": "HTTP headers to set. These have to be formatted as a property string in the format name=<name>,value=<base64 of value>",
                        "items": {
                          "type": "string"
                        },
                        "x-proxmox-optional": true
                      },
                      "method": {
                        "type": "string",
                        "description": "HTTP method",
                        "enum": [
                          "post",
                          "put",
                          "get"
                        ]
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the endpoint.",
                        "format": "pve-configid"
                      },
                      "origin": {
                        "type": "string",
                        "description": "Show if this entry was created by a user or was built-in",
                        "enum": [
                          "user-created",
                          "builtin",
                          "modified-builtin"
                        ]
                      },
                      "secret": {
                        "type": "array",
                        "description": "Secrets to set. These have to be formatted as a property string in the format name=<name>,value=<base64 of value>",
                        "items": {
                          "type": "string"
                        },
                        "x-proxmox-optional": true
                      },
                      "url": {
                        "type": "string",
                        "description": "Server URL"
                      }
                    },
                    "required": [
                      "method",
                      "name",
                      "origin",
                      "url"
                    ]
                  },
                  "x-proxmox-metadata": {
                    "links": [
                      {
                        "href": "{name}",
                        "rel": "child"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-cluster-notifications-endpoints-webhook",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/mapping/notifications",
                [
                  "Mapping.Audit"
                ]
              ]
            }
          ]
        }
      },
      "post": {
        "operationId": "post-cluster-notifications-endpoints-webhook",
        "summary": "create_webhook_endpoint",
        "description": "Create a new webhook endpoint",
        "tags": [
          "/cluster/notifications/endpoints/webhook"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "post-cluster-notifications-endpoints-webhook",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "body": {
                    "type": "string",
                    "description": "HTTP body, base64 encoded",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "comment": {
                    "type": "string",
                    "description": "Comment",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "disable": {
                    "type": "boolean",
                    "description": "Disable this target",
                    "default": false,
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "header": {
                    "type": "array",
                    "description": "HTTP headers to set. These have to be formatted as a property string in the format name=<name>,value=<base64 of value>",
                    "items": {
                      "type": "string"
                    },
                    "x-proxmox-typetext": "<array>",
                    "x-proxmox-optional": true
                  },
                  "method": {
                    "type": "string",
                    "description": "HTTP method",
                    "enum": [
                      "post",
                      "put",
                      "get"
                    ]
                  },
                  "name": {
                    "type": "string",
                    "description": "The name of the endpoint.",
                    "format": "pve-configid",
                    "x-proxmox-typetext": "<string>"
                  },
                  "secret": {
                    "type": "array",
                    "description": "Secrets to set. These have to be formatted as a property string in the format name=<name>,value=<base64 of value>",
                    "items": {
                      "type": "string"
                    },
                    "x-proxmox-typetext": "<array>",
                    "x-proxmox-optional": true
                  },
                  "url": {
                    "type": "string",
                    "description": "Server URL",
                    "x-proxmox-typetext": "<string>"
                  }
                },
                "required": [
                  "method",
                  "name",
                  "url"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "and",
                [
                  "perm",
                  "/mapping/notifications",
                  [
                    "Mapping.Modify"
                  ]
                ],
                [
                  "or",
                  [
                    "perm",
                    "/",
                    [
                      "Sys.Audit",
                      "Sys.Modify"
                    ]
                  ],
                  [
                    "perm",
                    "/",
                    [
                      "Sys.AccessNetwork"
                    ]
                  ]
                ]
              ]
            }
          ]
        }
      }
    },
    "/cluster/notifications/endpoints/webhook/{name}": {
      "delete": {
        "operationId": "delete-cluster-notifications-endpoints-webhook-name",
        "summary": "delete_webhook_endpoint",
        "description": "Remove webhook endpoint",
        "tags": [
          "/cluster/notifications/endpoints/webhook/{name}"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "delete-cluster-notifications-endpoints-webhook-name",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "pve-configid",
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/mapping/notifications",
                [
                  "Mapping.Modify"
                ]
              ]
            }
          ]
        }
      },
      "get": {
        "operationId": "get-cluster-notifications-endpoints-webhook-name",
        "summary": "get_webhook_endpoint",
        "description": "Return a specific webhook endpoint",
        "tags": [
          "/cluster/notifications/endpoints/webhook/{name}"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "body": {
                      "type": "string",
                      "description": "HTTP body, base64 encoded",
                      "x-proxmox-optional": true
                    },
                    "comment": {
                      "type": "string",
                      "description": "Comment",
                      "x-proxmox-optional": true
                    },
                    "digest": {
                      "type": "string",
                      "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
                      "maxLength": 64,
                      "x-proxmox-optional": true
                    },
                    "disable": {
                      "type": "boolean",
                      "description": "Disable this target",
                      "default": false,
                      "x-proxmox-optional": true
                    },
                    "header": {
                      "type": "array",
                      "description": "HTTP headers to set. These have to be formatted as a property string in the format name=<name>,value=<base64 of value>",
                      "items": {
                        "type": "string"
                      },
                      "x-proxmox-optional": true
                    },
                    "method": {
                      "type": "string",
                      "description": "HTTP method",
                      "enum": [
                        "post",
                        "put",
                        "get"
                      ]
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of the endpoint.",
                      "format": "pve-configid"
                    },
                    "secret": {
                      "type": "array",
                      "description": "Secrets to set. These have to be formatted as a property string in the format name=<name>,value=<base64 of value>",
                      "items": {
                        "type": "string"
                      },
                      "x-proxmox-optional": true
                    },
                    "url": {
                      "type": "string",
                      "description": "Server URL"
                    }
                  },
                  "required": [
                    "method",
                    "name",
                    "url"
                  ]
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-cluster-notifications-endpoints-webhook-name",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "description": "Name of the endpoint.",
            "schema": {
              "type": "string",
              "description": "Name of the endpoint.",
              "format": "pve-configid",
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "or",
                [
                  "perm",
                  "/mapping/notifications",
                  [
                    "Mapping.Modify"
                  ]
                ],
                [
                  "perm",
                  "/mapping/notifications",
                  [
                    "Mapping.Audit"
                  ]
                ]
              ]
            }
          ]
        }
      },
      "put": {
        "operationId": "put-cluster-notifications-endpoints-webhook-name",
        "summary": "update_webhook_endpoint",
        "description": "Update existing webhook endpoint",
        "tags": [
          "/cluster/notifications/endpoints/webhook/{name}"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "put-cluster-notifications-endpoints-webhook-name",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "description": "The name of the endpoint.",
            "schema": {
              "type": "string",
              "description": "The name of the endpoint.",
              "format": "pve-configid",
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "body": {
                    "type": "string",
                    "description": "HTTP body, base64 encoded",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "comment": {
                    "type": "string",
                    "description": "Comment",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "delete": {
                    "type": "array",
                    "description": "A list of settings you want to delete.",
                    "items": {
                      "type": "string",
                      "format": "pve-configid"
                    },
                    "x-proxmox-typetext": "<array>",
                    "x-proxmox-optional": true
                  },
                  "digest": {
                    "type": "string",
                    "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
                    "maxLength": 64,
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "disable": {
                    "type": "boolean",
                    "description": "Disable this target",
                    "default": false,
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "header": {
                    "type": "array",
                    "description": "HTTP headers to set. These have to be formatted as a property string in the format name=<name>,value=<base64 of value>",
                    "items": {
                      "type": "string"
                    },
                    "x-proxmox-typetext": "<array>",
                    "x-proxmox-optional": true
                  },
                  "method": {
                    "type": "string",
                    "description": "HTTP method",
                    "enum": [
                      "post",
                      "put",
                      "get"
                    ],
                    "x-proxmox-optional": true
                  },
                  "secret": {
                    "type": "array",
                    "description": "Secrets to set. These have to be formatted as a property string in the format name=<name>,value=<base64 of value>",
                    "items": {
                      "type": "string"
                    },
                    "x-proxmox-typetext": "<array>",
                    "x-proxmox-optional": true
                  },
                  "url": {
                    "type": "string",
                    "description": "Server URL",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "and",
                [
                  "perm",
                  "/mapping/notifications",
                  [
                    "Mapping.Modify"
                  ]
                ],
                [
                  "or",
                  [
                    "perm",
                    "/",
                    [
                      "Sys.Audit",
                      "Sys.Modify"
                    ]
                  ],
                  [
                    "perm",
                    "/",
                    [
                      "Sys.AccessNetwork"
                    ]
                  ]
                ]
              ]
            }
          ]
        }
      }
    },
    "/cluster/notifications/matcher-field-values": {
      "get": {
        "operationId": "get-cluster-notifications-matcher-field-values",
        "summary": "get_matcher_field_values",
        "description": "Returns known notification metadata fields and their known values",
        "tags": [
          "/cluster/notifications/matcher-field-values"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "comment": {
                        "type": "string",
                        "description": "Additional comment for this value.",
                        "x-proxmox-optional": true
                      },
                      "field": {
                        "type": "string",
                        "description": "Field this value belongs to."
                      },
                      "value": {
                        "type": "string",
                        "description": "Notification metadata value known by the system."
                      }
                    },
                    "required": [
                      "field",
                      "value"
                    ]
                  }
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-cluster-notifications-matcher-field-values",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "or",
                [
                  "perm",
                  "/mapping/notifications",
                  [
                    "Mapping.Modify"
                  ]
                ],
                [
                  "perm",
                  "/mapping/notifications",
                  [
                    "Mapping.Audit"
                  ]
                ]
              ]
            }
          ]
        }
      }
    },
    "/cluster/notifications/matcher-fields": {
      "get": {
        "operationId": "get-cluster-notifications-matcher-fields",
        "summary": "get_matcher_fields",
        "description": "Returns known notification metadata fields",
        "tags": [
          "/cluster/notifications/matcher-fields"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "Name of the field."
                      }
                    },
                    "required": [
                      "name"
                    ]
                  },
                  "x-proxmox-metadata": {
                    "links": [
                      {
                        "href": "{name}",
                        "rel": "child"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-cluster-notifications-matcher-fields",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "security": [],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "or",
                [
                  "perm",
                  "/mapping/notifications",
                  [
                    "Mapping.Modify"
                  ]
                ],
                [
                  "perm",
                  "/mapping/notifications",
                  [
                    "Mapping.Audit"
                  ]
                ]
              ]
            }
          ]
        }
      }
    },
    "/cluster/notifications/matchers": {
      "get": {
        "operationId": "get-cluster-notifications-matchers",
        "summary": "get_matchers",
        "description": "Returns a list of all matchers",
        "tags": [
          "/cluster/notifications/matchers"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "comment": {
                        "type": "string",
                        "description": "Comment",
                        "x-proxmox-optional": true
                      },
                      "disable": {
                        "type": "boolean",
                        "description": "Disable this matcher",
                        "default": false,
                        "x-proxmox-optional": true
                      },
                      "invert-match": {
                        "type": "boolean",
                        "description": "Invert match of the whole matcher",
                        "x-proxmox-optional": true
                      },
                      "match-calendar": {
                        "type": "array",
                        "description": "Match notification timestamp",
                        "items": {
                          "type": "string"
                        },
                        "x-proxmox-optional": true
                      },
                      "match-field": {
                        "type": "array",
                        "description": "Metadata fields to match (regex or exact match). Must be in the form (regex|exact):<field>=<value>",
                        "items": {
                          "type": "string"
                        },
                        "x-proxmox-optional": true
                      },
                      "match-severity": {
                        "type": "array",
                        "description": "Notification severities to match",
                        "items": {
                          "type": "string"
                        },
                        "x-proxmox-optional": true
                      },
                      "mode": {
                        "type": "string",
                        "description": "Choose between 'all' and 'any' for when multiple properties are specified",
                        "enum": [
                          "all",
                          "any"
                        ],
                        "default": "all",
                        "x-proxmox-optional": true
                      },
                      "name": {
                        "type": "string",
                        "description": "Name of the matcher.",
                        "format": "pve-configid"
                      },
                      "origin": {
                        "type": "string",
                        "description": "Show if this entry was created by a user or was built-in",
                        "enum": [
                          "user-created",
                          "builtin",
                          "modified-builtin"
                        ]
                      },
                      "target": {
                        "type": "array",
                        "description": "Targets to notify on match",
                        "items": {
                          "type": "string",
                          "format": "pve-configid"
                        },
                        "x-proxmox-optional": true
                      }
                    },
                    "required": [
                      "name",
                      "origin"
                    ]
                  },
                  "x-proxmox-metadata": {
                    "links": [
                      {
                        "href": "{name}",
                        "rel": "child"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-cluster-notifications-matchers",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "or",
                [
                  "perm",
                  "/mapping/notifications",
                  [
                    "Mapping.Modify"
                  ]
                ],
                [
                  "perm",
                  "/mapping/notifications",
                  [
                    "Mapping.Audit"
                  ]
                ],
                [
                  "perm",
                  "/mapping/notifications",
                  [
                    "Mapping.Use"
                  ]
                ]
              ]
            }
          ]
        }
      },
      "post": {
        "operationId": "post-cluster-notifications-matchers",
        "summary": "create_matcher",
        "description": "Create a new matcher",
        "tags": [
          "/cluster/notifications/matchers"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "post-cluster-notifications-matchers",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "comment": {
                    "type": "string",
                    "description": "Comment",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "disable": {
                    "type": "boolean",
                    "description": "Disable this matcher",
                    "default": false,
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "invert-match": {
                    "type": "boolean",
                    "description": "Invert match of the whole matcher",
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "match-calendar": {
                    "type": "array",
                    "description": "Match notification timestamp",
                    "items": {
                      "type": "string"
                    },
                    "x-proxmox-typetext": "<array>",
                    "x-proxmox-optional": true
                  },
                  "match-field": {
                    "type": "array",
                    "description": "Metadata fields to match (regex or exact match). Must be in the form (regex|exact):<field>=<value>",
                    "items": {
                      "type": "string"
                    },
                    "x-proxmox-typetext": "<array>",
                    "x-proxmox-optional": true
                  },
                  "match-severity": {
                    "type": "array",
                    "description": "Notification severities to match",
                    "items": {
                      "type": "string"
                    },
                    "x-proxmox-typetext": "<array>",
                    "x-proxmox-optional": true
                  },
                  "mode": {
                    "type": "string",
                    "description": "Choose between 'all' and 'any' for when multiple properties are specified",
                    "enum": [
                      "all",
                      "any"
                    ],
                    "default": "all",
                    "x-proxmox-optional": true
                  },
                  "name": {
                    "type": "string",
                    "description": "Name of the matcher.",
                    "format": "pve-configid",
                    "x-proxmox-typetext": "<string>"
                  },
                  "target": {
                    "type": "array",
                    "description": "Targets to notify on match",
                    "items": {
                      "type": "string",
                      "format": "pve-configid"
                    },
                    "x-proxmox-typetext": "<array>",
                    "x-proxmox-optional": true
                  }
                },
                "required": [
                  "name"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/mapping/notifications",
                [
                  "Mapping.Modify"
                ]
              ]
            }
          ]
        }
      }
    },
    "/cluster/notifications/matchers/{name}": {
      "delete": {
        "operationId": "delete-cluster-notifications-matchers-name",
        "summary": "delete_matcher",
        "description": "Remove matcher",
        "tags": [
          "/cluster/notifications/matchers/{name}"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "delete-cluster-notifications-matchers-name",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "pve-configid",
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/mapping/notifications",
                [
                  "Mapping.Modify"
                ]
              ]
            }
          ]
        }
      },
      "get": {
        "operationId": "get-cluster-notifications-matchers-name",
        "summary": "get_matcher",
        "description": "Return a specific matcher",
        "tags": [
          "/cluster/notifications/matchers/{name}"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "comment": {
                      "type": "string",
                      "description": "Comment",
                      "x-proxmox-optional": true
                    },
                    "digest": {
                      "type": "string",
                      "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
                      "maxLength": 64,
                      "x-proxmox-optional": true
                    },
                    "disable": {
                      "type": "boolean",
                      "description": "Disable this matcher",
                      "default": false,
                      "x-proxmox-optional": true
                    },
                    "invert-match": {
                      "type": "boolean",
                      "description": "Invert match of the whole matcher",
                      "x-proxmox-optional": true
                    },
                    "match-calendar": {
                      "type": "array",
                      "description": "Match notification timestamp",
                      "items": {
                        "type": "string"
                      },
                      "x-proxmox-optional": true
                    },
                    "match-field": {
                      "type": "array",
                      "description": "Metadata fields to match (regex or exact match). Must be in the form (regex|exact):<field>=<value>",
                      "items": {
                        "type": "string"
                      },
                      "x-proxmox-optional": true
                    },
                    "match-severity": {
                      "type": "array",
                      "description": "Notification severities to match",
                      "items": {
                        "type": "string"
                      },
                      "x-proxmox-optional": true
                    },
                    "mode": {
                      "type": "string",
                      "description": "Choose between 'all' and 'any' for when multiple properties are specified",
                      "enum": [
                        "all",
                        "any"
                      ],
                      "default": "all",
                      "x-proxmox-optional": true
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of the matcher.",
                      "format": "pve-configid"
                    },
                    "target": {
                      "type": "array",
                      "description": "Targets to notify on match",
                      "items": {
                        "type": "string",
                        "format": "pve-configid"
                      },
                      "x-proxmox-optional": true
                    }
                  },
                  "required": [
                    "name"
                  ]
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-cluster-notifications-matchers-name",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "pve-configid",
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "or",
                [
                  "perm",
                  "/mapping/notifications",
                  [
                    "Mapping.Modify"
                  ]
                ],
                [
                  "perm",
                  "/mapping/notifications",
                  [
                    "Mapping.Audit"
                  ]
                ]
              ]
            }
          ]
        }
      },
      "put": {
        "operationId": "put-cluster-notifications-matchers-name",
        "summary": "update_matcher",
        "description": "Update existing matcher",
        "tags": [
          "/cluster/notifications/matchers/{name}"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "put-cluster-notifications-matchers-name",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "description": "Name of the matcher.",
            "schema": {
              "type": "string",
              "description": "Name of the matcher.",
              "format": "pve-configid",
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "comment": {
                    "type": "string",
                    "description": "Comment",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "delete": {
                    "type": "array",
                    "description": "A list of settings you want to delete.",
                    "items": {
                      "type": "string",
                      "format": "pve-configid"
                    },
                    "x-proxmox-typetext": "<array>",
                    "x-proxmox-optional": true
                  },
                  "digest": {
                    "type": "string",
                    "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
                    "maxLength": 64,
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "disable": {
                    "type": "boolean",
                    "description": "Disable this matcher",
                    "default": false,
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "invert-match": {
                    "type": "boolean",
                    "description": "Invert match of the whole matcher",
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "match-calendar": {
                    "type": "array",
                    "description": "Match notification timestamp",
                    "items": {
                      "type": "string"
                    },
                    "x-proxmox-typetext": "<array>",
                    "x-proxmox-optional": true
                  },
                  "match-field": {
                    "type": "array",
                    "description": "Metadata fields to match (regex or exact match). Must be in the form (regex|exact):<field>=<value>",
                    "items": {
                      "type": "string"
                    },
                    "x-proxmox-typetext": "<array>",
                    "x-proxmox-optional": true
                  },
                  "match-severity": {
                    "type": "array",
                    "description": "Notification severities to match",
                    "items": {
                      "type": "string"
                    },
                    "x-proxmox-typetext": "<array>",
                    "x-proxmox-optional": true
                  },
                  "mode": {
                    "type": "string",
                    "description": "Choose between 'all' and 'any' for when multiple properties are specified",
                    "enum": [
                      "all",
                      "any"
                    ],
                    "default": "all",
                    "x-proxmox-optional": true
                  },
                  "target": {
                    "type": "array",
                    "description": "Targets to notify on match",
                    "items": {
                      "type": "string",
                      "format": "pve-configid"
                    },
                    "x-proxmox-typetext": "<array>",
                    "x-proxmox-optional": true
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/mapping/notifications",
                [
                  "Mapping.Modify"
                ]
              ]
            }
          ]
        }
      }
    },
    "/cluster/notifications/targets": {
      "get": {
        "operationId": "get-cluster-notifications-targets",
        "summary": "get_all_targets",
        "description": "Returns a list of all entities that can be used as notification targets.",
        "tags": [
          "/cluster/notifications/targets"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "comment": {
                        "type": "string",
                        "description": "Comment",
                        "x-proxmox-optional": true
                      },
                      "disable": {
                        "type": "boolean",
                        "description": "Show if this target is disabled",
                        "default": false,
                        "x-proxmox-optional": true
                      },
                      "name": {
                        "type": "string",
                        "description": "Name of the target.",
                        "format": "pve-configid"
                      },
                      "origin": {
                        "type": "string",
                        "description": "Show if this entry was created by a user or was built-in",
                        "enum": [
                          "user-created",
                          "builtin",
                          "modified-builtin"
                        ]
                      },
                      "type": {
                        "type": "string",
                        "description": "Type of the target.",
                        "enum": [
                          "sendmail",
                          "gotify",
                          "smtp",
                          "webhook"
                        ]
                      }
                    },
                    "required": [
                      "name",
                      "origin",
                      "type"
                    ]
                  },
                  "x-proxmox-metadata": {
                    "links": [
                      {
                        "href": "{name}",
                        "rel": "child"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-cluster-notifications-targets",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "or",
                [
                  "perm",
                  "/mapping/notifications",
                  [
                    "Mapping.Modify"
                  ]
                ],
                [
                  "perm",
                  "/mapping/notifications",
                  [
                    "Mapping.Audit"
                  ]
                ],
                [
                  "perm",
                  "/mapping/notifications",
                  [
                    "Mapping.Use"
                  ]
                ]
              ]
            }
          ]
        }
      }
    },
    "/cluster/notifications/targets/{name}/test": {
      "post": {
        "operationId": "post-cluster-notifications-targets-name-test",
        "summary": "test_target",
        "description": "Send a test notification to a provided target.",
        "tags": [
          "/cluster/notifications/targets/{name}/test"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "post-cluster-notifications-targets-name-test",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "description": "Name of the target.",
            "schema": {
              "type": "string",
              "description": "Name of the target.",
              "format": "pve-configid",
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "or",
                [
                  "perm",
                  "/mapping/notifications",
                  [
                    "Mapping.Modify"
                  ]
                ],
                [
                  "perm",
                  "/mapping/notifications",
                  [
                    "Mapping.Audit"
                  ]
                ],
                [
                  "perm",
                  "/mapping/notifications",
                  [
                    "Mapping.Use"
                  ]
                ]
              ]
            }
          ]
        }
      }
    },
    "/cluster/options": {
      "get": {
        "operationId": "get-cluster-options",
        "summary": "get_options",
        "description": "Get datacenter options. Without 'Sys.Audit' on '/' not all options are returned.",
        "tags": [
          "/cluster/options"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-cluster-options",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "security": [],
        "x-proxmox-permissions": {
          "all": [
            {
              "user": "all",
              "check": [
                "perm",
                "/",
                [
                  "Sys.Audit"
                ]
              ]
            }
          ]
        }
      },
      "put": {
        "operationId": "put-cluster-options",
        "summary": "set_options",
        "description": "Set datacenter options.",
        "tags": [
          "/cluster/options"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "put-cluster-options",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "bwlimit": {
                    "type": "string",
                    "description": "Set I/O bandwidth limit for various operations (in KiB/s).",
                    "x-proxmox-typetext": "[clone=<LIMIT>] [,default=<LIMIT>] [,migration=<LIMIT>] [,move=<LIMIT>] [,restore=<LIMIT>]",
                    "x-proxmox-optional": true
                  },
                  "consent-text": {
                    "type": "string",
                    "description": "Consent text that is displayed before logging in.",
                    "maxLength": 65536,
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "console": {
                    "type": "string",
                    "description": "Select the default Console viewer. You can either use the builtin java applet (VNC; deprecated and maps to html5), an external virt-viewer comtatible application (SPICE), an HTML5 based vnc viewer (noVNC), or an HTML5 based console client (xtermjs). If the selected viewer is not available (e.g. SPICE not activated for the VM), the fallback is noVNC.",
                    "enum": [
                      "applet",
                      "vv",
                      "html5",
                      "xtermjs"
                    ],
                    "x-proxmox-optional": true
                  },
                  "crs": {
                    "type": "string",
                    "description": "Cluster resource scheduling settings.",
                    "x-proxmox-typetext": "[ha=<basic|static>] [,ha-rebalance-on-start=<1|0>]",
                    "x-proxmox-optional": true
                  },
                  "delete": {
                    "type": "string",
                    "description": "A list of settings you want to delete.",
                    "format": "pve-configid-list",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "description": {
                    "type": "string",
                    "description": "Datacenter description. Shown in the web-interface datacenter notes panel. This is saved as comment inside the configuration file.",
                    "maxLength": 65536,
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "email_from": {
                    "type": "string",
                    "description": "Specify email address to send notification from (default is root@$hostname)",
                    "format": "email-opt",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "fencing": {
                    "type": "string",
                    "description": "Set the fencing mode of the HA cluster. Hardware mode needs a valid configuration of fence devices in /etc/pve/ha/fence.cfg. With both all two modes are used.\n\nWARNING: 'hardware' and 'both' are EXPERIMENTAL & WIP",
                    "enum": [
                      "watchdog",
                      "hardware",
                      "both"
                    ],
                    "default": "watchdog",
                    "x-proxmox-optional": true
                  },
                  "ha": {
                    "type": "string",
                    "description": "Cluster wide HA settings.",
                    "x-proxmox-typetext": "shutdown_policy=<enum>",
                    "x-proxmox-optional": true
                  },
                  "http_proxy": {
                    "type": "string",
                    "description": "Specify external http proxy which is used for downloads (example: 'http://username:password@host:port/')",
                    "pattern": "http://.*",
                    "x-proxmox-optional": true
                  },
                  "keyboard": {
                    "type": "string",
                    "description": "Default keybord layout for vnc server.",
                    "enum": [
                      "de",
                      "de-ch",
                      "da",
                      "en-gb",
                      "en-us",
                      "es",
                      "fi",
                      "fr",
                      "fr-be",
                      "fr-ca",
                      "fr-ch",
                      "hu",
                      "is",
                      "it",
                      "ja",
                      "lt",
                      "mk",
                      "nl",
                      "no",
                      "pl",
                      "pt",
                      "pt-br",
                      "sv",
                      "sl",
                      "tr"
                    ],
                    "x-proxmox-optional": true
                  },
                  "language": {
                    "type": "string",
                    "description": "Default GUI language.",
                    "enum": [
                      "ar",
                      "ca",
                      "da",
                      "de",
                      "en",
                      "es",
                      "eu",
                      "fa",
                      "fr",
                      "hr",
                      "he",
                      "it",
                      "ja",
                      "ka",
                      "kr",
                      "nb",
                      "nl",
                      "nn",
                      "pl",
                      "pt_BR",
                      "ru",
                      "sl",
                      "sv",
                      "tr",
                      "ukr",
                      "zh_CN",
                      "zh_TW"
                    ],
                    "x-proxmox-optional": true
                  },
                  "mac_prefix": {
                    "type": "string",
                    "description": "Prefix for the auto-generated MAC addresses of virtual guests. The default 'BC:24:11' is the OUI assigned by the IEEE to Proxmox Server Solutions GmbH for a 24-bit large MAC block. You're allowed to use this in local networks, i.e., those not directly reachable by the public (e.g., in a LAN or behind NAT).\n\nPrefix for the auto-generated MAC addresses of virtual guests. The default `BC:24:11` is the Organizationally Unique Identifier (OUI) assigned by the IEEE to Proxmox Server Solutions GmbH for a MAC Address Block Large (MA-L). You're allowed to use this in local networks, i.e., those not directly reachable by the public (e.g., in a LAN or NAT/Masquerading).\n \nNote that when you run multiple cluster that (partially) share the networks of their virtual guests, it's highly recommended that you extend the default MAC prefix, or generate a custom (valid) one, to reduce the chance of MAC collisions. For example, add a separate extra hexadecimal to the Proxmox OUI for each cluster, like `BC:24:11:0` for the first, `BC:24:11:1` for the second, and so on.\n Alternatively, you can also separate the networks of the guests logically, e.g., by using VLANs.\n\nFor publicly accessible guests it's recommended that you get your own https://standards.ieee.org/products-programs/regauth/[OUI from the IEEE] registered or coordinate with your, or your hosting providers, network admins.",
                    "default": "BC:24:11",
                    "format": "mac-prefix",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "max_workers": {
                    "type": "integer",
                    "description": "Defines how many workers (per node) are maximal started  on actions like 'stopall VMs' or task from the ha-manager.",
                    "minimum": 1,
                    "x-proxmox-typetext": "<integer> (1 - N)",
                    "x-proxmox-optional": true
                  },
                  "migration": {
                    "type": "string",
                    "description": "For cluster wide migration settings.",
                    "x-proxmox-typetext": "[type=]<secure|insecure> [,network=<CIDR>]",
                    "x-proxmox-optional": true
                  },
                  "migration_unsecure": {
                    "type": "boolean",
                    "description": "Migration is secure using SSH tunnel by default. For secure private networks you can disable it to speed up migration. Deprecated, use the 'migration' property instead!",
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "next-id": {
                    "type": "string",
                    "description": "Control the range for the free VMID auto-selection pool.",
                    "x-proxmox-typetext": "[lower=<integer>] [,upper=<integer>]",
                    "x-proxmox-optional": true
                  },
                  "notify": {
                    "type": "string",
                    "description": "Cluster-wide notification settings.",
                    "x-proxmox-typetext": "[fencing=<always|never>] [,package-updates=<auto|always|never>] [,replication=<always|never>] [,target-fencing=<TARGET>] [,target-package-updates=<TARGET>] [,target-replication=<TARGET>]",
                    "x-proxmox-optional": true
                  },
                  "registered-tags": {
                    "type": "string",
                    "description": "A list of tags that require a `Sys.Modify` on '/' to set and delete. Tags set here that are also in 'user-tag-access' also require `Sys.Modify`.",
                    "pattern": "(?:(?^i:[a-z0-9_][a-z0-9_\\-\\+\\.]*);)*(?^i:[a-z0-9_][a-z0-9_\\-\\+\\.]*)",
                    "x-proxmox-typetext": "<tag>[;<tag>...]",
                    "x-proxmox-optional": true
                  },
                  "replication": {
                    "type": "string",
                    "description": "For cluster wide replication settings.",
                    "x-proxmox-typetext": "[type=]<secure|insecure> [,network=<CIDR>]",
                    "x-proxmox-optional": true
                  },
                  "tag-style": {
                    "type": "string",
                    "description": "Tag style options.",
                    "x-proxmox-typetext": "[case-sensitive=<1|0>] [,color-map=<tag>:<hex-color>[:<hex-color-for-text>][;<tag>=...]] [,ordering=<config|alphabetical>] [,shape=<enum>]",
                    "x-proxmox-optional": true
                  },
                  "u2f": {
                    "type": "string",
                    "description": "u2f",
                    "x-proxmox-typetext": "[appid=<APPID>] [,origin=<URL>]",
                    "x-proxmox-optional": true
                  },
                  "user-tag-access": {
                    "type": "string",
                    "description": "Privilege options for user-settable tags",
                    "x-proxmox-typetext": "[user-allow=<enum>] [,user-allow-list=<tag>[;<tag>...]]",
                    "x-proxmox-optional": true
                  },
                  "webauthn": {
                    "type": "string",
                    "description": "webauthn configuration",
                    "x-proxmox-typetext": "[allow-subdomains=<1|0>] [,id=<DOMAINNAME>] [,origin=<URL>] [,rp=<RELYING_PARTY>]",
                    "x-proxmox-optional": true
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/",
                [
                  "Sys.Modify"
                ]
              ]
            }
          ]
        }
      }
    },
    "/cluster/replication": {
      "get": {
        "operationId": "get-cluster-replication",
        "summary": "index",
        "description": "List replication jobs.",
        "tags": [
          "/cluster/replication"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  },
                  "x-proxmox-metadata": {
                    "links": [
                      {
                        "href": "{id}",
                        "rel": "child"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-cluster-replication",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "security": [],
        "x-proxmox-permissions": {
          "all": [
            {
              "description": "Will only return replication jobs for which the calling user has VM.Audit permission on /vms/<vmid>.",
              "user": "all"
            }
          ]
        }
      },
      "post": {
        "operationId": "post-cluster-replication",
        "summary": "create",
        "description": "Create a new replication job",
        "tags": [
          "/cluster/replication"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "post-cluster-replication",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "comment": {
                    "type": "string",
                    "description": "Description.",
                    "maxLength": 4096,
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "disable": {
                    "type": "boolean",
                    "description": "Flag to disable/deactivate the entry.",
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "id": {
                    "type": "string",
                    "description": "Replication Job ID. The ID is composed of a Guest ID and a job number, separated by a hyphen, i.e. '<GUEST>-<JOBNUM>'.",
                    "pattern": "[1-9][0-9]{2,8}-\\d{1,9}",
                    "format": "pve-replication-job-id"
                  },
                  "rate": {
                    "type": "number",
                    "description": "Rate limit in mbps (megabytes per second) as floating point number.",
                    "minimum": 1,
                    "x-proxmox-typetext": "<number> (1 - N)",
                    "x-proxmox-optional": true
                  },
                  "remove_job": {
                    "type": "string",
                    "description": "Mark the replication job for removal. The job will remove all local replication snapshots. When set to 'full', it also tries to remove replicated volumes on the target. The job then removes itself from the configuration file.",
                    "enum": [
                      "local",
                      "full"
                    ],
                    "x-proxmox-optional": true
                  },
                  "schedule": {
                    "type": "string",
                    "description": "Storage replication schedule. The format is a subset of `systemd` calendar events.",
                    "default": "*/15",
                    "maxLength": 128,
                    "format": "pve-calendar-event",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "source": {
                    "type": "string",
                    "description": "For internal use, to detect if the guest was stolen.",
                    "format": "pve-node",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "target": {
                    "type": "string",
                    "description": "Target node.",
                    "format": "pve-node",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": false
                  },
                  "type": {
                    "type": "string",
                    "description": "Section type.",
                    "enum": [
                      "local"
                    ]
                  }
                },
                "required": [
                  "id",
                  "target",
                  "type"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "description": "Requires the VM.Replicate permission on /vms/<vmid>.",
              "user": "all"
            }
          ]
        }
      }
    },
    "/cluster/replication/{id}": {
      "delete": {
        "operationId": "delete-cluster-replication-id",
        "summary": "delete",
        "description": "Mark replication job for removal.",
        "tags": [
          "/cluster/replication/{id}"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "delete-cluster-replication-id",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "force",
            "in": "query",
            "required": false,
            "description": "Will remove the jobconfig entry, but will not cleanup.",
            "schema": {
              "type": "boolean",
              "description": "Will remove the jobconfig entry, but will not cleanup.",
              "default": false,
              "x-proxmox-typetext": "<boolean>",
              "x-proxmox-optional": true
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Replication Job ID. The ID is composed of a Guest ID and a job number, separated by a hyphen, i.e. '<GUEST>-<JOBNUM>'.",
            "schema": {
              "type": "string",
              "description": "Replication Job ID. The ID is composed of a Guest ID and a job number, separated by a hyphen, i.e. '<GUEST>-<JOBNUM>'.",
              "pattern": "[1-9][0-9]{2,8}-\\d{1,9}",
              "format": "pve-replication-job-id"
            }
          },
          {
            "name": "keep",
            "in": "query",
            "required": false,
            "description": "Keep replicated data at target (do not remove).",
            "schema": {
              "type": "boolean",
              "description": "Keep replicated data at target (do not remove).",
              "default": false,
              "x-proxmox-typetext": "<boolean>",
              "x-proxmox-optional": true
            }
          }
        ],
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "description": "Requires the VM.Replicate permission on /vms/<vmid>.",
              "user": "all"
            }
          ]
        }
      },
      "get": {
        "operationId": "get-cluster-replication-id",
        "summary": "read",
        "description": "Read replication job configuration.",
        "tags": [
          "/cluster/replication/{id}"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-cluster-replication-id",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Replication Job ID. The ID is composed of a Guest ID and a job number, separated by a hyphen, i.e. '<GUEST>-<JOBNUM>'.",
            "schema": {
              "type": "string",
              "description": "Replication Job ID. The ID is composed of a Guest ID and a job number, separated by a hyphen, i.e. '<GUEST>-<JOBNUM>'.",
              "pattern": "[1-9][0-9]{2,8}-\\d{1,9}",
              "format": "pve-replication-job-id"
            }
          }
        ],
        "security": [],
        "x-proxmox-permissions": {
          "all": [
            {
              "description": "Requires the VM.Audit permission on /vms/<vmid>.",
              "user": "all"
            }
          ]
        }
      },
      "put": {
        "operationId": "put-cluster-replication-id",
        "summary": "update",
        "description": "Update replication job configuration.",
        "tags": [
          "/cluster/replication/{id}"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "put-cluster-replication-id",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Replication Job ID. The ID is composed of a Guest ID and a job number, separated by a hyphen, i.e. '<GUEST>-<JOBNUM>'.",
            "schema": {
              "type": "string",
              "description": "Replication Job ID. The ID is composed of a Guest ID and a job number, separated by a hyphen, i.e. '<GUEST>-<JOBNUM>'.",
              "pattern": "[1-9][0-9]{2,8}-\\d{1,9}",
              "format": "pve-replication-job-id"
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "comment": {
                    "type": "string",
                    "description": "Description.",
                    "maxLength": 4096,
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "delete": {
                    "type": "string",
                    "description": "A list of settings you want to delete.",
                    "maxLength": 4096,
                    "format": "pve-configid-list",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "digest": {
                    "type": "string",
                    "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
                    "maxLength": 64,
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "disable": {
                    "type": "boolean",
                    "description": "Flag to disable/deactivate the entry.",
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "rate": {
                    "type": "number",
                    "description": "Rate limit in mbps (megabytes per second) as floating point number.",
                    "minimum": 1,
                    "x-proxmox-typetext": "<number> (1 - N)",
                    "x-proxmox-optional": true
                  },
                  "remove_job": {
                    "type": "string",
                    "description": "Mark the replication job for removal. The job will remove all local replication snapshots. When set to 'full', it also tries to remove replicated volumes on the target. The job then removes itself from the configuration file.",
                    "enum": [
                      "local",
                      "full"
                    ],
                    "x-proxmox-optional": true
                  },
                  "schedule": {
                    "type": "string",
                    "description": "Storage replication schedule. The format is a subset of `systemd` calendar events.",
                    "default": "*/15",
                    "maxLength": 128,
                    "format": "pve-calendar-event",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "source": {
                    "type": "string",
                    "description": "For internal use, to detect if the guest was stolen.",
                    "format": "pve-node",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "description": "Requires the VM.Replicate permission on /vms/<vmid>.",
              "user": "all"
            }
          ]
        }
      }
    },
    "/cluster/resources": {
      "get": {
        "operationId": "get-cluster-resources",
        "summary": "resources",
        "description": "Resources index (cluster wide).",
        "tags": [
          "/cluster/resources"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "cgroup-mode": {
                        "type": "integer",
                        "description": "The cgroup mode the node operates under (for type 'node').",
                        "x-proxmox-optional": true
                      },
                      "content": {
                        "type": "string",
                        "description": "Allowed storage content types (for type 'storage').",
                        "format": "pve-storage-content-list",
                        "x-proxmox-optional": true
                      },
                      "cpu": {
                        "type": "number",
                        "description": "CPU utilization (for types 'node', 'qemu' and 'lxc').",
                        "minimum": 0,
                        "x-proxmox-optional": true,
                        "x-proxmox-metadata": {
                          "renderer": "fraction_as_percentage"
                        }
                      },
                      "disk": {
                        "type": "integer",
                        "description": "Used disk space in bytes (for type 'storage'), used root image space for VMs (for types 'qemu' and 'lxc').",
                        "minimum": 0,
                        "x-proxmox-optional": true,
                        "x-proxmox-metadata": {
                          "renderer": "bytes"
                        }
                      },
                      "diskread": {
                        "type": "integer",
                        "description": "The amount of bytes the guest read from its block devices since the guest was started. This info is not available for all storage types. (for types 'qemu' and 'lxc')",
                        "x-proxmox-optional": true,
                        "x-proxmox-metadata": {
                          "renderer": "bytes"
                        }
                      },
                      "diskwrite": {
                        "type": "integer",
                        "description": "The amount of bytes the guest wrote to its block devices since the guest was started. This info is not available for all storage types. (for types 'qemu' and 'lxc')",
                        "x-proxmox-optional": true,
                        "x-proxmox-metadata": {
                          "renderer": "bytes"
                        }
                      },
                      "hastate": {
                        "type": "string",
                        "description": "HA service status (for HA managed VMs).",
                        "x-proxmox-optional": true
                      },
                      "id": {
                        "type": "string",
                        "description": "Resource id."
                      },
                      "level": {
                        "type": "string",
                        "description": "Support level (for type 'node').",
                        "x-proxmox-optional": true
                      },
                      "lock": {
                        "type": "string",
                        "description": "The guest's current config lock (for types 'qemu' and 'lxc')",
                        "x-proxmox-optional": true
                      },
                      "maxcpu": {
                        "type": "number",
                        "description": "Number of available CPUs (for types 'node', 'qemu' and 'lxc').",
                        "minimum": 0,
                        "x-proxmox-optional": true
                      },
                      "maxdisk": {
                        "type": "integer",
                        "description": "Storage size in bytes (for type 'storage'), root image size for VMs (for types 'qemu' and 'lxc').",
                        "minimum": 0,
                        "x-proxmox-optional": true,
                        "x-proxmox-metadata": {
                          "renderer": "bytes"
                        }
                      },
                      "maxmem": {
                        "type": "integer",
                        "description": "Number of available memory in bytes (for types 'node', 'qemu' and 'lxc').",
                        "x-proxmox-optional": true,
                        "x-proxmox-metadata": {
                          "renderer": "bytes"
                        }
                      },
                      "mem": {
                        "type": "integer",
                        "description": "Used memory in bytes (for types 'node', 'qemu' and 'lxc').",
                        "minimum": 0,
                        "x-proxmox-optional": true,
                        "x-proxmox-metadata": {
                          "renderer": "bytes"
                        }
                      },
                      "memhost": {
                        "type": "integer",
                        "description": "Used memory in bytes from the point of view of the host (for types 'qemu').",
                        "minimum": 0,
                        "x-proxmox-optional": true,
                        "x-proxmox-metadata": {
                          "renderer": "bytes"
                        }
                      },
                      "name": {
                        "type": "string",
                        "description": "Name of the resource.",
                        "x-proxmox-optional": true
                      },
                      "netin": {
                        "type": "integer",
                        "description": "The amount of traffic in bytes that was sent to the guest over the network since it was started. (for types 'qemu' and 'lxc')",
                        "x-proxmox-optional": true,
                        "x-proxmox-metadata": {
                          "renderer": "bytes"
                        }
                      },
                      "netout": {
                        "type": "integer",
                        "description": "The amount of traffic in bytes that was sent from the guest over the network since it was started. (for types 'qemu' and 'lxc')",
                        "x-proxmox-optional": true,
                        "x-proxmox-metadata": {
                          "renderer": "bytes"
                        }
                      },
                      "node": {
                        "type": "string",
                        "description": "The cluster node name (for types 'node', 'storage', 'qemu', and 'lxc').",
                        "format": "pve-node",
                        "x-proxmox-optional": true
                      },
                      "plugintype": {
                        "type": "string",
                        "description": "More specific type, if available.",
                        "x-proxmox-optional": true
                      },
                      "pool": {
                        "type": "string",
                        "description": "The pool name (for types 'pool', 'qemu' and 'lxc').",
                        "x-proxmox-optional": true
                      },
                      "status": {
                        "type": "string",
                        "description": "Resource type dependent status.",
                        "x-proxmox-optional": true
                      },
                      "storage": {
                        "type": "string",
                        "description": "The storage identifier (for type 'storage').",
                        "format": "pve-storage-id",
                        "x-proxmox-format-description": "storage ID",
                        "x-proxmox-optional": true
                      },
                      "tags": {
                        "type": "string",
                        "description": "The guest's tags (for types 'qemu' and 'lxc')",
                        "x-proxmox-optional": true
                      },
                      "template": {
                        "type": "boolean",
                        "description": "Determines if the guest is a template. (for types 'qemu' and 'lxc')",
                        "default": false,
                        "x-proxmox-optional": true
                      },
                      "type": {
                        "type": "string",
                        "description": "Resource type.",
                        "enum": [
                          "node",
                          "storage",
                          "pool",
                          "qemu",
                          "lxc",
                          "openvz",
                          "sdn"
                        ]
                      },
                      "uptime": {
                        "type": "integer",
                        "description": "Uptime of node or virtual guest in seconds (for types 'node', 'qemu' and 'lxc').",
                        "x-proxmox-optional": true,
                        "x-proxmox-metadata": {
                          "renderer": "duration"
                        }
                      },
                      "vmid": {
                        "type": "integer",
                        "description": "The numerical vmid (for types 'qemu' and 'lxc').",
                        "minimum": 100,
                        "maximum": 999999999,
                        "format": "pve-vmid",
                        "x-proxmox-optional": true
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ]
                  }
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-cluster-resources",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "required": false,
            "description": "Resource type.",
            "schema": {
              "type": "string",
              "description": "Resource type.",
              "enum": [
                "vm",
                "storage",
                "node",
                "sdn"
              ],
              "x-proxmox-optional": true
            }
          }
        ],
        "security": [],
        "x-proxmox-permissions": {
          "all": [
            {
              "user": "all"
            }
          ]
        }
      }
    },
    "/cluster/sdn": {
      "get": {
        "operationId": "get-cluster-sdn",
        "summary": "index",
        "description": "Directory index.",
        "tags": [
          "/cluster/sdn"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id"
                    ]
                  },
                  "x-proxmox-metadata": {
                    "links": [
                      {
                        "href": "{id}",
                        "rel": "child"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-cluster-sdn",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "security": [],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/sdn",
                [
                  "SDN.Audit"
                ]
              ]
            }
          ]
        }
      },
      "put": {
        "operationId": "put-cluster-sdn",
        "summary": "reload",
        "description": "Apply sdn controller changes && reload.",
        "tags": [
          "/cluster/sdn"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "put-cluster-sdn",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "lock-token": {
                    "type": "string",
                    "description": "the token for unlocking the global SDN configuration",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "release-lock": {
                    "type": "boolean",
                    "description": "When lock-token has been provided and configuration successfully commited, release the lock automatically afterwards",
                    "default": true,
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/sdn",
                [
                  "SDN.Allocate"
                ]
              ]
            }
          ]
        }
      }
    },
    "/cluster/sdn/controllers": {
      "get": {
        "operationId": "get-cluster-sdn-controllers",
        "summary": "index",
        "description": "SDN controllers index.",
        "tags": [
          "/cluster/sdn/controllers"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "controller": {
                        "type": "string"
                      },
                      "pending": {
                        "type": "boolean",
                        "x-proxmox-optional": true
                      },
                      "state": {
                        "type": "string",
                        "x-proxmox-optional": true
                      },
                      "type": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "controller",
                      "type"
                    ]
                  },
                  "x-proxmox-metadata": {
                    "links": [
                      {
                        "href": "{controller}",
                        "rel": "child"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-cluster-sdn-controllers",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "pending",
            "in": "query",
            "required": false,
            "description": "Display pending config.",
            "schema": {
              "type": "boolean",
              "description": "Display pending config.",
              "x-proxmox-typetext": "<boolean>",
              "x-proxmox-optional": true
            }
          },
          {
            "name": "running",
            "in": "query",
            "required": false,
            "description": "Display running config.",
            "schema": {
              "type": "boolean",
              "description": "Display running config.",
              "x-proxmox-typetext": "<boolean>",
              "x-proxmox-optional": true
            }
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "description": "Only list sdn controllers of specific type",
            "schema": {
              "type": "string",
              "description": "Only list sdn controllers of specific type",
              "enum": [
                "bgp",
                "evpn",
                "faucet",
                "isis"
              ],
              "x-proxmox-optional": true
            }
          }
        ],
        "security": [],
        "x-proxmox-permissions": {
          "all": [
            {
              "description": "Only list entries where you have 'SDN.Audit' or 'SDN.Allocate' permissions on '/sdn/controllers/<controller>'",
              "user": "all"
            }
          ]
        }
      },
      "post": {
        "operationId": "post-cluster-sdn-controllers",
        "summary": "create",
        "description": "Create a new sdn controller object.",
        "tags": [
          "/cluster/sdn/controllers"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "post-cluster-sdn-controllers",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "asn": {
                    "type": "integer",
                    "description": "autonomous system number",
                    "minimum": 0,
                    "maximum": 4294967296,
                    "x-proxmox-typetext": "<integer> (0 - 4294967296)",
                    "x-proxmox-optional": true
                  },
                  "bgp-multipath-as-path-relax": {
                    "type": "boolean",
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "controller": {
                    "type": "string",
                    "description": "The SDN controller object identifier.",
                    "format": "pve-sdn-controller-id",
                    "x-proxmox-typetext": "<string>"
                  },
                  "ebgp": {
                    "type": "boolean",
                    "description": "Enable ebgp. (remote-as external)",
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "ebgp-multihop": {
                    "type": "integer",
                    "x-proxmox-typetext": "<integer>",
                    "x-proxmox-optional": true
                  },
                  "fabric": {
                    "type": "string",
                    "description": "SDN fabric to use as underlay for this EVPN controller.",
                    "format": "pve-sdn-fabric-id",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "isis-domain": {
                    "type": "string",
                    "description": "ISIS domain.",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "isis-ifaces": {
                    "type": "string",
                    "description": "ISIS interface.",
                    "format": "pve-iface-list",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "isis-net": {
                    "type": "string",
                    "description": "ISIS network entity title.",
                    "format": "pve-sdn-isis-net",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "lock-token": {
                    "type": "string",
                    "description": "the token for unlocking the global SDN configuration",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "loopback": {
                    "type": "string",
                    "description": "source loopback interface.",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "node": {
                    "type": "string",
                    "description": "The cluster node name.",
                    "format": "pve-node",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "peers": {
                    "type": "string",
                    "description": "peers address list.",
                    "format": "ip-list",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "type": {
                    "type": "string",
                    "description": "Plugin type.",
                    "enum": [
                      "bgp",
                      "evpn",
                      "faucet",
                      "isis"
                    ],
                    "format": "pve-configid"
                  }
                },
                "required": [
                  "controller",
                  "type"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/sdn/controllers",
                [
                  "SDN.Allocate"
                ]
              ]
            }
          ]
        }
      }
    },
    "/cluster/sdn/controllers/{controller}": {
      "delete": {
        "operationId": "delete-cluster-sdn-controllers-controller",
        "summary": "delete",
        "description": "Delete sdn controller object configuration.",
        "tags": [
          "/cluster/sdn/controllers/{controller}"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "delete-cluster-sdn-controllers-controller",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "controller",
            "in": "path",
            "required": true,
            "description": "The SDN controller object identifier.",
            "schema": {
              "type": "string",
              "description": "The SDN controller object identifier.",
              "format": "pve-sdn-controller-id",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "lock-token",
            "in": "query",
            "required": false,
            "description": "the token for unlocking the global SDN configuration",
            "schema": {
              "type": "string",
              "description": "the token for unlocking the global SDN configuration",
              "x-proxmox-typetext": "<string>",
              "x-proxmox-optional": true
            }
          }
        ],
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/sdn/controllers",
                [
                  "SDN.Allocate"
                ]
              ]
            }
          ]
        }
      },
      "get": {
        "operationId": "get-cluster-sdn-controllers-controller",
        "summary": "read",
        "description": "Read sdn controller configuration.",
        "tags": [
          "/cluster/sdn/controllers/{controller}"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-cluster-sdn-controllers-controller",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "controller",
            "in": "path",
            "required": true,
            "description": "The SDN controller object identifier.",
            "schema": {
              "type": "string",
              "description": "The SDN controller object identifier.",
              "format": "pve-sdn-controller-id",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "pending",
            "in": "query",
            "required": false,
            "description": "Display pending config.",
            "schema": {
              "type": "boolean",
              "description": "Display pending config.",
              "x-proxmox-typetext": "<boolean>",
              "x-proxmox-optional": true
            }
          },
          {
            "name": "running",
            "in": "query",
            "required": false,
            "description": "Display running config.",
            "schema": {
              "type": "boolean",
              "description": "Display running config.",
              "x-proxmox-typetext": "<boolean>",
              "x-proxmox-optional": true
            }
          }
        ],
        "security": [],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/sdn/controllers/{controller}",
                [
                  "SDN.Allocate"
                ]
              ]
            }
          ]
        }
      },
      "put": {
        "operationId": "put-cluster-sdn-controllers-controller",
        "summary": "update",
        "description": "Update sdn controller object configuration.",
        "tags": [
          "/cluster/sdn/controllers/{controller}"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "put-cluster-sdn-controllers-controller",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "controller",
            "in": "path",
            "required": true,
            "description": "The SDN controller object identifier.",
            "schema": {
              "type": "string",
              "description": "The SDN controller object identifier.",
              "format": "pve-sdn-controller-id",
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "asn": {
                    "type": "integer",
                    "description": "autonomous system number",
                    "minimum": 0,
                    "maximum": 4294967296,
                    "x-proxmox-typetext": "<integer> (0 - 4294967296)",
                    "x-proxmox-optional": true
                  },
                  "bgp-multipath-as-path-relax": {
                    "type": "boolean",
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "delete": {
                    "type": "string",
                    "description": "A list of settings you want to delete.",
                    "maxLength": 4096,
                    "format": "pve-configid-list",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "digest": {
                    "type": "string",
                    "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
                    "maxLength": 64,
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "ebgp": {
                    "type": "boolean",
                    "description": "Enable ebgp. (remote-as external)",
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "ebgp-multihop": {
                    "type": "integer",
                    "x-proxmox-typetext": "<integer>",
                    "x-proxmox-optional": true
                  },
                  "fabric": {
                    "type": "string",
                    "description": "SDN fabric to use as underlay for this EVPN controller.",
                    "format": "pve-sdn-fabric-id",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "isis-domain": {
                    "type": "string",
                    "description": "ISIS domain.",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "isis-ifaces": {
                    "type": "string",
                    "description": "ISIS interface.",
                    "format": "pve-iface-list",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "isis-net": {
                    "type": "string",
                    "description": "ISIS network entity title.",
                    "format": "pve-sdn-isis-net",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "lock-token": {
                    "type": "string",
                    "description": "the token for unlocking the global SDN configuration",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "loopback": {
                    "type": "string",
                    "description": "source loopback interface.",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "node": {
                    "type": "string",
                    "description": "The cluster node name.",
                    "format": "pve-node",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "peers": {
                    "type": "string",
                    "description": "peers address list.",
                    "format": "ip-list",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/sdn/controllers",
                [
                  "SDN.Allocate"
                ]
              ]
            }
          ]
        }
      }
    },
    "/cluster/sdn/dns": {
      "get": {
        "operationId": "get-cluster-sdn-dns",
        "summary": "index",
        "description": "SDN dns index.",
        "tags": [
          "/cluster/sdn/dns"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "dns": {
                        "type": "string"
                      },
                      "type": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "dns",
                      "type"
                    ]
                  },
                  "x-proxmox-metadata": {
                    "links": [
                      {
                        "href": "{dns}",
                        "rel": "child"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-cluster-sdn-dns",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "required": false,
            "description": "Only list sdn dns of specific type",
            "schema": {
              "type": "string",
              "description": "Only list sdn dns of specific type",
              "enum": [
                "powerdns"
              ],
              "x-proxmox-optional": true
            }
          }
        ],
        "security": [],
        "x-proxmox-permissions": {
          "all": [
            {
              "description": "Only list entries where you have 'SDN.Audit' or 'SDN.Allocate' permissions on '/sdn/dns/<dns>'",
              "user": "all"
            }
          ]
        }
      },
      "post": {
        "operationId": "post-cluster-sdn-dns",
        "summary": "create",
        "description": "Create a new sdn dns object.",
        "tags": [
          "/cluster/sdn/dns"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "post-cluster-sdn-dns",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "dns": {
                    "type": "string",
                    "description": "The SDN dns object identifier.",
                    "format": "pve-sdn-dns-id",
                    "x-proxmox-typetext": "<string>"
                  },
                  "fingerprint": {
                    "type": "string",
                    "description": "Certificate SHA 256 fingerprint.",
                    "pattern": "([A-Fa-f0-9]{2}:){31}[A-Fa-f0-9]{2}",
                    "x-proxmox-optional": true
                  },
                  "key": {
                    "type": "string",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": false
                  },
                  "lock-token": {
                    "type": "string",
                    "description": "the token for unlocking the global SDN configuration",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "reversemaskv6": {
                    "type": "integer",
                    "x-proxmox-typetext": "<integer>",
                    "x-proxmox-optional": true
                  },
                  "reversev6mask": {
                    "type": "integer",
                    "x-proxmox-typetext": "<integer>",
                    "x-proxmox-optional": true
                  },
                  "ttl": {
                    "type": "integer",
                    "x-proxmox-typetext": "<integer>",
                    "x-proxmox-optional": true
                  },
                  "type": {
                    "type": "string",
                    "description": "Plugin type.",
                    "enum": [
                      "powerdns"
                    ],
                    "format": "pve-configid"
                  },
                  "url": {
                    "type": "string",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": false
                  }
                },
                "required": [
                  "dns",
                  "key",
                  "type",
                  "url"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/sdn/dns",
                [
                  "SDN.Allocate"
                ]
              ]
            }
          ]
        }
      }
    },
    "/cluster/sdn/dns/{dns}": {
      "delete": {
        "operationId": "delete-cluster-sdn-dns-dns",
        "summary": "delete",
        "description": "Delete sdn dns object configuration.",
        "tags": [
          "/cluster/sdn/dns/{dns}"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "delete-cluster-sdn-dns-dns",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "dns",
            "in": "path",
            "required": true,
            "description": "The SDN dns object identifier.",
            "schema": {
              "type": "string",
              "description": "The SDN dns object identifier.",
              "format": "pve-sdn-dns-id",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "lock-token",
            "in": "query",
            "required": false,
            "description": "the token for unlocking the global SDN configuration",
            "schema": {
              "type": "string",
              "description": "the token for unlocking the global SDN configuration",
              "x-proxmox-typetext": "<string>",
              "x-proxmox-optional": true
            }
          }
        ],
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/sdn/dns",
                [
                  "SDN.Allocate"
                ]
              ]
            }
          ]
        }
      },
      "get": {
        "operationId": "get-cluster-sdn-dns-dns",
        "summary": "read",
        "description": "Read sdn dns configuration.",
        "tags": [
          "/cluster/sdn/dns/{dns}"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-cluster-sdn-dns-dns",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "dns",
            "in": "path",
            "required": true,
            "description": "The SDN dns object identifier.",
            "schema": {
              "type": "string",
              "description": "The SDN dns object identifier.",
              "format": "pve-sdn-dns-id",
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "security": [],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/sdn/dns/{dns}",
                [
                  "SDN.Allocate"
                ]
              ]
            }
          ]
        }
      },
      "put": {
        "operationId": "put-cluster-sdn-dns-dns",
        "summary": "update",
        "description": "Update sdn dns object configuration.",
        "tags": [
          "/cluster/sdn/dns/{dns}"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "put-cluster-sdn-dns-dns",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "dns",
            "in": "path",
            "required": true,
            "description": "The SDN dns object identifier.",
            "schema": {
              "type": "string",
              "description": "The SDN dns object identifier.",
              "format": "pve-sdn-dns-id",
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "delete": {
                    "type": "string",
                    "description": "A list of settings you want to delete.",
                    "maxLength": 4096,
                    "format": "pve-configid-list",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "digest": {
                    "type": "string",
                    "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
                    "maxLength": 64,
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "fingerprint": {
                    "type": "string",
                    "description": "Certificate SHA 256 fingerprint.",
                    "pattern": "([A-Fa-f0-9]{2}:){31}[A-Fa-f0-9]{2}",
                    "x-proxmox-optional": true
                  },
                  "key": {
                    "type": "string",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "lock-token": {
                    "type": "string",
                    "description": "the token for unlocking the global SDN configuration",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "reversemaskv6": {
                    "type": "integer",
                    "x-proxmox-typetext": "<integer>",
                    "x-proxmox-optional": true
                  },
                  "ttl": {
                    "type": "integer",
                    "x-proxmox-typetext": "<integer>",
                    "x-proxmox-optional": true
                  },
                  "url": {
                    "type": "string",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/sdn/dns",
                [
                  "SDN.Allocate"
                ]
              ]
            }
          ]
        }
      }
    },
    "/cluster/sdn/fabrics": {
      "get": {
        "operationId": "get-cluster-sdn-fabrics",
        "summary": "index",
        "description": "SDN Fabrics Index",
        "tags": [
          "/cluster/sdn/fabrics"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "subdir": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "subdir"
                    ]
                  },
                  "x-proxmox-metadata": {
                    "links": [
                      {
                        "href": "{subdir}",
                        "rel": "child"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-cluster-sdn-fabrics",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "security": [],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/sdn/fabrics",
                [
                  "SDN.Audit"
                ]
              ]
            }
          ]
        }
      }
    },
    "/cluster/sdn/fabrics/all": {
      "get": {
        "operationId": "get-cluster-sdn-fabrics-all",
        "summary": "list_all",
        "description": "SDN Fabrics Index",
        "tags": [
          "/cluster/sdn/fabrics/all"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "fabrics": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "area": {
                            "type": "string",
                            "description": "OSPF area. Either a IPv4 address or a 32-bit number. Gets validated in rust.",
                            "x-proxmox-optional": true,
                            "x-proxmox-metadata": {
                              "instanceTypes": [
                                "ospf"
                              ]
                            }
                          },
                          "csnp_interval": {
                            "type": "number",
                            "description": "The csnp_interval property for Openfabric",
                            "minimum": 1,
                            "maximum": 600,
                            "x-proxmox-optional": true,
                            "x-proxmox-metadata": {
                              "instanceTypes": [
                                "openfabric"
                              ]
                            }
                          },
                          "digest": {
                            "type": "string",
                            "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
                            "maxLength": 64,
                            "x-proxmox-optional": true
                          },
                          "hello_interval": {
                            "type": "number",
                            "description": "The hello_interval property for Openfabric",
                            "minimum": 1,
                            "maximum": 600,
                            "x-proxmox-optional": true,
                            "x-proxmox-metadata": {
                              "instanceTypes": [
                                "openfabric"
                              ]
                            }
                          },
                          "id": {
                            "type": "string",
                            "description": "Identifier for SDN fabrics",
                            "format": "pve-sdn-fabric-id"
                          },
                          "ip6_prefix": {
                            "type": "string",
                            "description": "The IP prefix for Node IPs",
                            "format": "CIDR",
                            "x-proxmox-optional": true
                          },
                          "ip_prefix": {
                            "type": "string",
                            "description": "The IP prefix for Node IPs",
                            "format": "CIDR",
                            "x-proxmox-optional": true
                          },
                          "lock-token": {
                            "type": "string",
                            "description": "the token for unlocking the global SDN configuration",
                            "x-proxmox-optional": true
                          },
                          "protocol": {
                            "type": "string",
                            "description": "Type of configuration entry in an SDN Fabric section config",
                            "enum": [
                              "openfabric",
                              "ospf"
                            ]
                          }
                        },
                        "required": [
                          "id",
                          "protocol"
                        ]
                      }
                    },
                    "nodes": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "digest": {
                            "type": "string",
                            "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
                            "maxLength": 64,
                            "x-proxmox-optional": true
                          },
                          "fabric_id": {
                            "type": "string",
                            "description": "Identifier for SDN fabrics",
                            "format": "pve-sdn-fabric-id"
                          },
                          "interfaces": {
                            "type": "array"
                          },
                          "ip": {
                            "type": "string",
                            "description": "IPv4 address for this node",
                            "format": "ipv4",
                            "x-proxmox-optional": true
                          },
                          "ip6": {
                            "type": "string",
                            "description": "IPv6 address for this node",
                            "format": "ipv6",
                            "x-proxmox-optional": true
                          },
                          "lock-token": {
                            "type": "string",
                            "description": "the token for unlocking the global SDN configuration",
                            "x-proxmox-optional": true
                          },
                          "node_id": {
                            "type": "string",
                            "description": "Identifier for nodes in an SDN fabric",
                            "format": "pve-node"
                          },
                          "protocol": {
                            "type": "string",
                            "description": "Type of configuration entry in an SDN Fabric section config",
                            "enum": [
                              "openfabric",
                              "ospf"
                            ]
                          }
                        },
                        "required": [
                          "fabric_id",
                          "interfaces",
                          "node_id",
                          "protocol"
                        ]
                      }
                    }
                  },
                  "required": [
                    "fabrics",
                    "nodes"
                  ]
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-cluster-sdn-fabrics-all",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "pending",
            "in": "query",
            "required": false,
            "description": "Display pending config.",
            "schema": {
              "type": "boolean",
              "description": "Display pending config.",
              "x-proxmox-typetext": "<boolean>",
              "x-proxmox-optional": true
            }
          },
          {
            "name": "running",
            "in": "query",
            "required": false,
            "description": "Display running config.",
            "schema": {
              "type": "boolean",
              "description": "Display running config.",
              "x-proxmox-typetext": "<boolean>",
              "x-proxmox-optional": true
            }
          }
        ],
        "security": [],
        "x-proxmox-permissions": {
          "all": [
            {
              "description": "Only list fabrics where you have 'SDN.Audit' or 'SDN.Allocate' permissions on\n'/sdn/fabrics/<fabric>', only list nodes where you have 'Sys.Audit' or 'Sys.Modify' on /nodes/<node_id>",
              "user": "all"
            }
          ]
        }
      }
    },
    "/cluster/sdn/fabrics/fabric": {
      "get": {
        "operationId": "get-cluster-sdn-fabrics-fabric",
        "summary": "index",
        "description": "SDN Fabrics Index",
        "tags": [
          "/cluster/sdn/fabrics/fabric"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "area": {
                        "type": "string",
                        "description": "OSPF area. Either a IPv4 address or a 32-bit number. Gets validated in rust.",
                        "x-proxmox-optional": true,
                        "x-proxmox-metadata": {
                          "instanceTypes": [
                            "ospf"
                          ]
                        }
                      },
                      "csnp_interval": {
                        "type": "number",
                        "description": "The csnp_interval property for Openfabric",
                        "minimum": 1,
                        "maximum": 600,
                        "x-proxmox-optional": true,
                        "x-proxmox-metadata": {
                          "instanceTypes": [
                            "openfabric"
                          ]
                        }
                      },
                      "digest": {
                        "type": "string",
                        "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
                        "maxLength": 64,
                        "x-proxmox-optional": true
                      },
                      "hello_interval": {
                        "type": "number",
                        "description": "The hello_interval property for Openfabric",
                        "minimum": 1,
                        "maximum": 600,
                        "x-proxmox-optional": true,
                        "x-proxmox-metadata": {
                          "instanceTypes": [
                            "openfabric"
                          ]
                        }
                      },
                      "id": {
                        "type": "string",
                        "description": "Identifier for SDN fabrics",
                        "format": "pve-sdn-fabric-id"
                      },
                      "ip6_prefix": {
                        "type": "string",
                        "description": "The IP prefix for Node IPs",
                        "format": "CIDR",
                        "x-proxmox-optional": true
                      },
                      "ip_prefix": {
                        "type": "string",
                        "description": "The IP prefix for Node IPs",
                        "format": "CIDR",
                        "x-proxmox-optional": true
                      },
                      "lock-token": {
                        "type": "string",
                        "description": "the token for unlocking the global SDN configuration",
                        "x-proxmox-optional": true
                      },
                      "protocol": {
                        "type": "string",
                        "description": "Type of configuration entry in an SDN Fabric section config",
                        "enum": [
                          "openfabric",
                          "ospf"
                        ]
                      }
                    },
                    "required": [
                      "id",
                      "protocol"
                    ]
                  },
                  "x-proxmox-metadata": {
                    "links": [
                      {
                        "href": "{id}",
                        "rel": "child"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-cluster-sdn-fabrics-fabric",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "pending",
            "in": "query",
            "required": false,
            "description": "Display pending config.",
            "schema": {
              "type": "boolean",
              "description": "Display pending config.",
              "x-proxmox-typetext": "<boolean>",
              "x-proxmox-optional": true
            }
          },
          {
            "name": "running",
            "in": "query",
            "required": false,
            "description": "Display running config.",
            "schema": {
              "type": "boolean",
              "description": "Display running config.",
              "x-proxmox-typetext": "<boolean>",
              "x-proxmox-optional": true
            }
          }
        ],
        "security": [],
        "x-proxmox-permissions": {
          "all": [
            {
              "description": "Only list entries where you have 'SDN.Audit' or 'SDN.Allocate' permissions on '/sdn/fabrics/<fabric>'",
              "user": "all"
            }
          ]
        }
      },
      "post": {
        "operationId": "post-cluster-sdn-fabrics-fabric",
        "summary": "add_fabric",
        "description": "Add a fabric",
        "tags": [
          "/cluster/sdn/fabrics/fabric"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "post-cluster-sdn-fabrics-fabric",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "area": {
                    "type": "string",
                    "description": "OSPF area. Either a IPv4 address or a 32-bit number. Gets validated in rust.",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true,
                    "x-proxmox-metadata": {
                      "instanceTypes": [
                        "ospf"
                      ]
                    }
                  },
                  "csnp_interval": {
                    "type": "number",
                    "description": "The csnp_interval property for Openfabric",
                    "minimum": 1,
                    "maximum": 600,
                    "x-proxmox-typetext": "<number> (1 - 600)",
                    "x-proxmox-optional": true,
                    "x-proxmox-metadata": {
                      "instanceTypes": [
                        "openfabric"
                      ]
                    }
                  },
                  "digest": {
                    "type": "string",
                    "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
                    "maxLength": 64,
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "hello_interval": {
                    "type": "number",
                    "description": "The hello_interval property for Openfabric",
                    "minimum": 1,
                    "maximum": 600,
                    "x-proxmox-typetext": "<number> (1 - 600)",
                    "x-proxmox-optional": true,
                    "x-proxmox-metadata": {
                      "instanceTypes": [
                        "openfabric"
                      ]
                    }
                  },
                  "id": {
                    "type": "string",
                    "description": "Identifier for SDN fabrics",
                    "format": "pve-sdn-fabric-id",
                    "x-proxmox-typetext": "<string>"
                  },
                  "ip6_prefix": {
                    "type": "string",
                    "description": "The IP prefix for Node IPs",
                    "format": "CIDR",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "ip_prefix": {
                    "type": "string",
                    "description": "The IP prefix for Node IPs",
                    "format": "CIDR",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "lock-token": {
                    "type": "string",
                    "description": "the token for unlocking the global SDN configuration",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "protocol": {
                    "type": "string",
                    "description": "Type of configuration entry in an SDN Fabric section config",
                    "enum": [
                      "openfabric",
                      "ospf"
                    ]
                  }
                },
                "required": [
                  "id",
                  "protocol"
                ]
              }
            }
          }
        },
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/sdn/fabrics",
                [
                  "SDN.Allocate"
                ]
              ]
            }
          ]
        }
      }
    },
    "/cluster/sdn/fabrics/fabric/{id}": {
      "delete": {
        "operationId": "delete-cluster-sdn-fabrics-fabric-id",
        "summary": "delete_fabric",
        "description": "Add a fabric",
        "tags": [
          "/cluster/sdn/fabrics/fabric/{id}"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "delete-cluster-sdn-fabrics-fabric-id",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Identifier for SDN fabrics",
            "schema": {
              "type": "string",
              "description": "Identifier for SDN fabrics",
              "format": "pve-sdn-fabric-id",
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/sdn/fabrics/{id}",
                [
                  "SDN.Allocate"
                ]
              ]
            }
          ]
        }
      },
      "get": {
        "operationId": "get-cluster-sdn-fabrics-fabric-id",
        "summary": "get_fabric",
        "description": "Update a fabric",
        "tags": [
          "/cluster/sdn/fabrics/fabric/{id}"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "area": {
                      "type": "string",
                      "description": "OSPF area. Either a IPv4 address or a 32-bit number. Gets validated in rust.",
                      "x-proxmox-optional": true,
                      "x-proxmox-metadata": {
                        "instanceTypes": [
                          "ospf"
                        ]
                      }
                    },
                    "csnp_interval": {
                      "type": "number",
                      "description": "The csnp_interval property for Openfabric",
                      "minimum": 1,
                      "maximum": 600,
                      "x-proxmox-optional": true,
                      "x-proxmox-metadata": {
                        "instanceTypes": [
                          "openfabric"
                        ]
                      }
                    },
                    "digest": {
                      "type": "string",
                      "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
                      "maxLength": 64,
                      "x-proxmox-optional": true
                    },
                    "hello_interval": {
                      "type": "number",
                      "description": "The hello_interval property for Openfabric",
                      "minimum": 1,
                      "maximum": 600,
                      "x-proxmox-optional": true,
                      "x-proxmox-metadata": {
                        "instanceTypes": [
                          "openfabric"
                        ]
                      }
                    },
                    "id": {
                      "type": "string",
                      "description": "Identifier for SDN fabrics",
                      "format": "pve-sdn-fabric-id"
                    },
                    "ip6_prefix": {
                      "type": "string",
                      "description": "The IP prefix for Node IPs",
                      "format": "CIDR",
                      "x-proxmox-optional": true
                    },
                    "ip_prefix": {
                      "type": "string",
                      "description": "The IP prefix for Node IPs",
                      "format": "CIDR",
                      "x-proxmox-optional": true
                    },
                    "lock-token": {
                      "type": "string",
                      "description": "the token for unlocking the global SDN configuration",
                      "x-proxmox-optional": true
                    },
                    "protocol": {
                      "type": "string",
                      "description": "Type of configuration entry in an SDN Fabric section config",
                      "enum": [
                        "openfabric",
                        "ospf"
                      ]
                    }
                  },
                  "required": [
                    "id",
                    "protocol"
                  ]
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-cluster-sdn-fabrics-fabric-id",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Identifier for SDN fabrics",
            "schema": {
              "type": "string",
              "description": "Identifier for SDN fabrics",
              "format": "pve-sdn-fabric-id",
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "security": [],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/sdn/fabrics/{id}",
                [
                  "SDN.Audit",
                  "SDN.Allocate"
                ],
                "any",
                1
              ]
            }
          ]
        }
      },
      "put": {
        "operationId": "put-cluster-sdn-fabrics-fabric-id",
        "summary": "update_fabric",
        "description": "Update a fabric",
        "tags": [
          "/cluster/sdn/fabrics/fabric/{id}"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "put-cluster-sdn-fabrics-fabric-id",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Identifier for SDN fabrics",
            "schema": {
              "type": "string",
              "description": "Identifier for SDN fabrics",
              "format": "pve-sdn-fabric-id",
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "area": {
                    "type": "string",
                    "description": "OSPF area. Either a IPv4 address or a 32-bit number. Gets validated in rust.",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true,
                    "x-proxmox-metadata": {
                      "instanceTypes": [
                        "ospf"
                      ]
                    }
                  },
                  "csnp_interval": {
                    "type": "number",
                    "description": "The csnp_interval property for Openfabric",
                    "minimum": 1,
                    "maximum": 600,
                    "x-proxmox-typetext": "<number> (1 - 600)",
                    "x-proxmox-optional": true,
                    "x-proxmox-metadata": {
                      "instanceTypes": [
                        "openfabric"
                      ]
                    }
                  },
                  "delete": {
                    "type": "array",
                    "x-proxmox-typetext": "<array>"
                  },
                  "digest": {
                    "type": "string",
                    "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
                    "maxLength": 64,
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "hello_interval": {
                    "type": "number",
                    "description": "The hello_interval property for Openfabric",
                    "minimum": 1,
                    "maximum": 600,
                    "x-proxmox-typetext": "<number> (1 - 600)",
                    "x-proxmox-optional": true,
                    "x-proxmox-metadata": {
                      "instanceTypes": [
                        "openfabric"
                      ]
                    }
                  },
                  "ip6_prefix": {
                    "type": "string",
                    "description": "The IP prefix for Node IPs",
                    "format": "CIDR",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "ip_prefix": {
                    "type": "string",
                    "description": "The IP prefix for Node IPs",
                    "format": "CIDR",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "lock-token": {
                    "type": "string",
                    "description": "the token for unlocking the global SDN configuration",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "protocol": {
                    "type": "string",
                    "description": "Type of configuration entry in an SDN Fabric section config",
                    "enum": [
                      "openfabric",
                      "ospf"
                    ]
                  }
                },
                "required": [
                  "delete",
                  "protocol"
                ]
              }
            }
          }
        },
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/sdn/fabrics/{id}",
                [
                  "SDN.Allocate"
                ]
              ]
            }
          ]
        }
      }
    },
    "/cluster/sdn/fabrics/node": {
      "get": {
        "operationId": "get-cluster-sdn-fabrics-node",
        "summary": "list_nodes",
        "description": "SDN Fabrics Index",
        "tags": [
          "/cluster/sdn/fabrics/node"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "digest": {
                        "type": "string",
                        "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
                        "maxLength": 64,
                        "x-proxmox-optional": true
                      },
                      "fabric_id": {
                        "type": "string",
                        "description": "Identifier for SDN fabrics",
                        "format": "pve-sdn-fabric-id"
                      },
                      "interfaces": {
                        "type": "array"
                      },
                      "ip": {
                        "type": "string",
                        "description": "IPv4 address for this node",
                        "format": "ipv4",
                        "x-proxmox-optional": true
                      },
                      "ip6": {
                        "type": "string",
                        "description": "IPv6 address for this node",
                        "format": "ipv6",
                        "x-proxmox-optional": true
                      },
                      "lock-token": {
                        "type": "string",
                        "description": "the token for unlocking the global SDN configuration",
                        "x-proxmox-optional": true
                      },
                      "node_id": {
                        "type": "string",
                        "description": "Identifier for nodes in an SDN fabric",
                        "format": "pve-node"
                      },
                      "protocol": {
                        "type": "string",
                        "description": "Type of configuration entry in an SDN Fabric section config",
                        "enum": [
                          "openfabric",
                          "ospf"
                        ]
                      }
                    },
                    "required": [
                      "fabric_id",
                      "interfaces",
                      "node_id",
                      "protocol"
                    ]
                  },
                  "x-proxmox-metadata": {
                    "links": [
                      {
                        "href": "{fabric_id}",
                        "rel": "child"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-cluster-sdn-fabrics-node",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "pending",
            "in": "query",
            "required": false,
            "description": "Display pending config.",
            "schema": {
              "type": "boolean",
              "description": "Display pending config.",
              "x-proxmox-typetext": "<boolean>",
              "x-proxmox-optional": true
            }
          },
          {
            "name": "running",
            "in": "query",
            "required": false,
            "description": "Display running config.",
            "schema": {
              "type": "boolean",
              "description": "Display running config.",
              "x-proxmox-typetext": "<boolean>",
              "x-proxmox-optional": true
            }
          }
        ],
        "security": [],
        "x-proxmox-permissions": {
          "all": [
            {
              "description": "Only list nodes where you have 'SDN.Audit' or 'SDN.Allocate' permissions on\n'/sdn/fabrics/<fabric>' and 'Sys.Audit' or 'Sys.Modify' on /nodes/<node_id>",
              "user": "all"
            }
          ]
        }
      }
    },
    "/cluster/sdn/fabrics/node/{fabric_id}": {
      "get": {
        "operationId": "get-cluster-sdn-fabrics-node-fabric-id",
        "summary": "list_nodes_fabric",
        "description": "SDN Fabrics Index",
        "tags": [
          "/cluster/sdn/fabrics/node/{fabric_id}"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "digest": {
                        "type": "string",
                        "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
                        "maxLength": 64,
                        "x-proxmox-optional": true
                      },
                      "fabric_id": {
                        "type": "string",
                        "description": "Identifier for SDN fabrics",
                        "format": "pve-sdn-fabric-id"
                      },
                      "interfaces": {
                        "type": "array"
                      },
                      "ip": {
                        "type": "string",
                        "description": "IPv4 address for this node",
                        "format": "ipv4",
                        "x-proxmox-optional": true
                      },
                      "ip6": {
                        "type": "string",
                        "description": "IPv6 address for this node",
                        "format": "ipv6",
                        "x-proxmox-optional": true
                      },
                      "lock-token": {
                        "type": "string",
                        "description": "the token for unlocking the global SDN configuration",
                        "x-proxmox-optional": true
                      },
                      "node_id": {
                        "type": "string",
                        "description": "Identifier for nodes in an SDN fabric",
                        "format": "pve-node"
                      },
                      "protocol": {
                        "type": "string",
                        "description": "Type of configuration entry in an SDN Fabric section config",
                        "enum": [
                          "openfabric",
                          "ospf"
                        ]
                      }
                    },
                    "required": [
                      "fabric_id",
                      "interfaces",
                      "node_id",
                      "protocol"
                    ]
                  },
                  "x-proxmox-metadata": {
                    "links": [
                      {
                        "href": "{node_id}",
                        "rel": "child"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-cluster-sdn-fabrics-node-fabric-id",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "fabric_id",
            "in": "path",
            "required": true,
            "description": "Identifier for SDN fabrics",
            "schema": {
              "type": "string",
              "description": "Identifier for SDN fabrics",
              "format": "pve-sdn-fabric-id",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "pending",
            "in": "query",
            "required": false,
            "description": "Display pending config.",
            "schema": {
              "type": "boolean",
              "description": "Display pending config.",
              "x-proxmox-typetext": "<boolean>",
              "x-proxmox-optional": true
            }
          },
          {
            "name": "running",
            "in": "query",
            "required": false,
            "description": "Display running config.",
            "schema": {
              "type": "boolean",
              "description": "Display running config.",
              "x-proxmox-typetext": "<boolean>",
              "x-proxmox-optional": true
            }
          }
        ],
        "security": [],
        "x-proxmox-permissions": {
          "all": [
            {
              "description": "Only returns nodes where you have 'Sys.Audit' or 'Sys.Modify' permissions.",
              "check": [
                "perm",
                "/sdn/fabrics/{fabric_id}",
                [
                  "SDN.Audit"
                ]
              ]
            }
          ]
        }
      },
      "post": {
        "operationId": "post-cluster-sdn-fabrics-node-fabric-id",
        "summary": "add_node",
        "description": "Add a node",
        "tags": [
          "/cluster/sdn/fabrics/node/{fabric_id}"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "post-cluster-sdn-fabrics-node-fabric-id",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "fabric_id",
            "in": "path",
            "required": true,
            "description": "Identifier for SDN fabrics",
            "schema": {
              "type": "string",
              "description": "Identifier for SDN fabrics",
              "format": "pve-sdn-fabric-id",
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "digest": {
                    "type": "string",
                    "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
                    "maxLength": 64,
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "interfaces": {
                    "type": "array",
                    "x-proxmox-typetext": "<array>"
                  },
                  "ip": {
                    "type": "string",
                    "description": "IPv4 address for this node",
                    "format": "ipv4",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "ip6": {
                    "type": "string",
                    "description": "IPv6 address for this node",
                    "format": "ipv6",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "lock-token": {
                    "type": "string",
                    "description": "the token for unlocking the global SDN configuration",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "node_id": {
                    "type": "string",
                    "description": "Identifier for nodes in an SDN fabric",
                    "format": "pve-node",
                    "x-proxmox-typetext": "<string>"
                  },
                  "protocol": {
                    "type": "string",
                    "description": "Type of configuration entry in an SDN Fabric section config",
                    "enum": [
                      "openfabric",
                      "ospf"
                    ]
                  }
                },
                "required": [
                  "interfaces",
                  "node_id",
                  "protocol"
                ]
              }
            }
          }
        },
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "and",
                [
                  "perm",
                  "/sdn/fabrics/{fabric_id}",
                  [
                    "SDN.Allocate"
                  ]
                ],
                [
                  "perm",
                  "/nodes/{node_id}",
                  [
                    "Sys.Modify"
                  ]
                ]
              ]
            }
          ]
        }
      }
    },
    "/cluster/sdn/fabrics/node/{fabric_id}/{node_id}": {
      "delete": {
        "operationId": "delete-cluster-sdn-fabrics-node-fabric-id-node-id",
        "summary": "delete_node",
        "description": "Add a node",
        "tags": [
          "/cluster/sdn/fabrics/node/{fabric_id}/{node_id}"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "delete-cluster-sdn-fabrics-node-fabric-id-node-id",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "fabric_id",
            "in": "path",
            "required": true,
            "description": "Identifier for SDN fabrics",
            "schema": {
              "type": "string",
              "description": "Identifier for SDN fabrics",
              "format": "pve-sdn-fabric-id",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "node_id",
            "in": "path",
            "required": true,
            "description": "Identifier for nodes in an SDN fabric",
            "schema": {
              "type": "string",
              "description": "Identifier for nodes in an SDN fabric",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "and",
                [
                  "perm",
                  "/sdn/fabrics/{fabric_id}",
                  [
                    "SDN.Allocate"
                  ]
                ],
                [
                  "perm",
                  "/nodes/{node_id}",
                  [
                    "Sys.Modify"
                  ]
                ]
              ]
            }
          ]
        }
      },
      "get": {
        "operationId": "get-cluster-sdn-fabrics-node-fabric-id-node-id",
        "summary": "get_node",
        "description": "Get a node",
        "tags": [
          "/cluster/sdn/fabrics/node/{fabric_id}/{node_id}"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "digest": {
                      "type": "string",
                      "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
                      "maxLength": 64,
                      "x-proxmox-optional": true
                    },
                    "fabric_id": {
                      "type": "string",
                      "description": "Identifier for SDN fabrics",
                      "format": "pve-sdn-fabric-id"
                    },
                    "interfaces": {
                      "type": "array"
                    },
                    "ip": {
                      "type": "string",
                      "description": "IPv4 address for this node",
                      "format": "ipv4",
                      "x-proxmox-optional": true
                    },
                    "ip6": {
                      "type": "string",
                      "description": "IPv6 address for this node",
                      "format": "ipv6",
                      "x-proxmox-optional": true
                    },
                    "lock-token": {
                      "type": "string",
                      "description": "the token for unlocking the global SDN configuration",
                      "x-proxmox-optional": true
                    },
                    "node_id": {
                      "type": "string",
                      "description": "Identifier for nodes in an SDN fabric",
                      "format": "pve-node"
                    },
                    "protocol": {
                      "type": "string",
                      "description": "Type of configuration entry in an SDN Fabric section config",
                      "enum": [
                        "openfabric",
                        "ospf"
                      ]
                    }
                  },
                  "required": [
                    "fabric_id",
                    "interfaces",
                    "node_id",
                    "protocol"
                  ]
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-cluster-sdn-fabrics-node-fabric-id-node-id",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "fabric_id",
            "in": "path",
            "required": true,
            "description": "Identifier for SDN fabrics",
            "schema": {
              "type": "string",
              "description": "Identifier for SDN fabrics",
              "format": "pve-sdn-fabric-id",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "node_id",
            "in": "path",
            "required": true,
            "description": "Identifier for nodes in an SDN fabric",
            "schema": {
              "type": "string",
              "description": "Identifier for nodes in an SDN fabric",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "security": [],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "and",
                [
                  "perm",
                  "/sdn/fabrics/{fabric_id}",
                  [
                    "SDN.Audit",
                    "SDN.Allocate"
                  ],
                  "any",
                  1
                ],
                [
                  "perm",
                  "/nodes/{node_id}",
                  [
                    "Sys.Audit",
                    "Sys.Modify"
                  ],
                  "any",
                  1
                ]
              ]
            }
          ]
        }
      },
      "put": {
        "operationId": "put-cluster-sdn-fabrics-node-fabric-id-node-id",
        "summary": "update_node",
        "description": "Update a node",
        "tags": [
          "/cluster/sdn/fabrics/node/{fabric_id}/{node_id}"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "put-cluster-sdn-fabrics-node-fabric-id-node-id",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "fabric_id",
            "in": "path",
            "required": true,
            "description": "Identifier for SDN fabrics",
            "schema": {
              "type": "string",
              "description": "Identifier for SDN fabrics",
              "format": "pve-sdn-fabric-id",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "node_id",
            "in": "path",
            "required": true,
            "description": "Identifier for nodes in an SDN fabric",
            "schema": {
              "type": "string",
              "description": "Identifier for nodes in an SDN fabric",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "delete": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "enum": [
                        "interfaces",
                        "ip",
                        "ip6"
                      ]
                    },
                    "x-proxmox-typetext": "<array>",
                    "x-proxmox-optional": true
                  },
                  "digest": {
                    "type": "string",
                    "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
                    "maxLength": 64,
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "interfaces": {
                    "type": "array",
                    "x-proxmox-typetext": "<array>"
                  },
                  "ip": {
                    "type": "string",
                    "description": "IPv4 address for this node",
                    "format": "ipv4",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "ip6": {
                    "type": "string",
                    "description": "IPv6 address for this node",
                    "format": "ipv6",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "lock-token": {
                    "type": "string",
                    "description": "the token for unlocking the global SDN configuration",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "protocol": {
                    "type": "string",
                    "description": "Type of configuration entry in an SDN Fabric section config",
                    "enum": [
                      "openfabric",
                      "ospf"
                    ]
                  }
                },
                "required": [
                  "interfaces",
                  "protocol"
                ]
              }
            }
          }
        },
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "and",
                [
                  "perm",
                  "/sdn/fabrics/{fabric_id}",
                  [
                    "SDN.Allocate"
                  ]
                ],
                [
                  "perm",
                  "/nodes/{node_id}",
                  [
                    "Sys.Modify"
                  ]
                ]
              ]
            }
          ]
        }
      }
    },
    "/cluster/sdn/ipams": {
      "get": {
        "operationId": "get-cluster-sdn-ipams",
        "summary": "index",
        "description": "SDN ipams index.",
        "tags": [
          "/cluster/sdn/ipams"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "ipam": {
                        "type": "string"
                      },
                      "type": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "ipam",
                      "type"
                    ]
                  },
                  "x-proxmox-metadata": {
                    "links": [
                      {
                        "href": "{ipam}",
                        "rel": "child"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-cluster-sdn-ipams",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "required": false,
            "description": "Only list sdn ipams of specific type",
            "schema": {
              "type": "string",
              "description": "Only list sdn ipams of specific type",
              "enum": [
                "netbox",
                "phpipam",
                "pve"
              ],
              "x-proxmox-optional": true
            }
          }
        ],
        "security": [],
        "x-proxmox-permissions": {
          "all": [
            {
              "description": "Only list entries where you have 'SDN.Audit' or 'SDN.Allocate' permissions on '/sdn/ipams/<ipam>'",
              "user": "all"
            }
          ]
        }
      },
      "post": {
        "operationId": "post-cluster-sdn-ipams",
        "summary": "create",
        "description": "Create a new sdn ipam object.",
        "tags": [
          "/cluster/sdn/ipams"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "post-cluster-sdn-ipams",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "fingerprint": {
                    "type": "string",
                    "description": "Certificate SHA 256 fingerprint.",
                    "pattern": "([A-Fa-f0-9]{2}:){31}[A-Fa-f0-9]{2}",
                    "x-proxmox-optional": true
                  },
                  "ipam": {
                    "type": "string",
                    "description": "The SDN ipam object identifier.",
                    "format": "pve-sdn-ipam-id",
                    "x-proxmox-typetext": "<string>"
                  },
                  "lock-token": {
                    "type": "string",
                    "description": "the token for unlocking the global SDN configuration",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "section": {
                    "type": "integer",
                    "x-proxmox-typetext": "<integer>",
                    "x-proxmox-optional": true
                  },
                  "token": {
                    "type": "string",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "type": {
                    "type": "string",
                    "description": "Plugin type.",
                    "enum": [
                      "netbox",
                      "phpipam",
                      "pve"
                    ],
                    "format": "pve-configid"
                  },
                  "url": {
                    "type": "string",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  }
                },
                "required": [
                  "ipam",
                  "type"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/sdn/ipams",
                [
                  "SDN.Allocate"
                ]
              ]
            }
          ]
        }
      }
    },
    "/cluster/sdn/ipams/{ipam}": {
      "delete": {
        "operationId": "delete-cluster-sdn-ipams-ipam",
        "summary": "delete",
        "description": "Delete sdn ipam object configuration.",
        "tags": [
          "/cluster/sdn/ipams/{ipam}"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "delete-cluster-sdn-ipams-ipam",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "ipam",
            "in": "path",
            "required": true,
            "description": "The SDN ipam object identifier.",
            "schema": {
              "type": "string",
              "description": "The SDN ipam object identifier.",
              "format": "pve-sdn-ipam-id",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "lock-token",
            "in": "query",
            "required": false,
            "description": "the token for unlocking the global SDN configuration",
            "schema": {
              "type": "string",
              "description": "the token for unlocking the global SDN configuration",
              "x-proxmox-typetext": "<string>",
              "x-proxmox-optional": true
            }
          }
        ],
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/sdn/ipams",
                [
                  "SDN.Allocate"
                ]
              ]
            }
          ]
        }
      },
      "get": {
        "operationId": "get-cluster-sdn-ipams-ipam",
        "summary": "read",
        "description": "Read sdn ipam configuration.",
        "tags": [
          "/cluster/sdn/ipams/{ipam}"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-cluster-sdn-ipams-ipam",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "ipam",
            "in": "path",
            "required": true,
            "description": "The SDN ipam object identifier.",
            "schema": {
              "type": "string",
              "description": "The SDN ipam object identifier.",
              "format": "pve-sdn-ipam-id",
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "security": [],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/sdn/ipams/{ipam}",
                [
                  "SDN.Allocate"
                ]
              ]
            }
          ]
        }
      },
      "put": {
        "operationId": "put-cluster-sdn-ipams-ipam",
        "summary": "update",
        "description": "Update sdn ipam object configuration.",
        "tags": [
          "/cluster/sdn/ipams/{ipam}"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "put-cluster-sdn-ipams-ipam",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "ipam",
            "in": "path",
            "required": true,
            "description": "The SDN ipam object identifier.",
            "schema": {
              "type": "string",
              "description": "The SDN ipam object identifier.",
              "format": "pve-sdn-ipam-id",
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "delete": {
                    "type": "string",
                    "description": "A list of settings you want to delete.",
                    "maxLength": 4096,
                    "format": "pve-configid-list",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "digest": {
                    "type": "string",
                    "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
                    "maxLength": 64,
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "fingerprint": {
                    "type": "string",
                    "description": "Certificate SHA 256 fingerprint.",
                    "pattern": "([A-Fa-f0-9]{2}:){31}[A-Fa-f0-9]{2}",
                    "x-proxmox-optional": true
                  },
                  "lock-token": {
                    "type": "string",
                    "description": "the token for unlocking the global SDN configuration",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "section": {
                    "type": "integer",
                    "x-proxmox-typetext": "<integer>",
                    "x-proxmox-optional": true
                  },
                  "token": {
                    "type": "string",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "url": {
                    "type": "string",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/sdn/ipams",
                [
                  "SDN.Allocate"
                ]
              ]
            }
          ]
        }
      }
    },
    "/cluster/sdn/ipams/{ipam}/status": {
      "get": {
        "operationId": "get-cluster-sdn-ipams-ipam-status",
        "summary": "ipamindex",
        "description": "List PVE IPAM Entries",
        "tags": [
          "/cluster/sdn/ipams/{ipam}/status"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-cluster-sdn-ipams-ipam-status",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "ipam",
            "in": "path",
            "required": true,
            "description": "The SDN ipam object identifier.",
            "schema": {
              "type": "string",
              "description": "The SDN ipam object identifier.",
              "format": "pve-sdn-ipam-id",
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "description": "Only list entries where you have 'SDN.Audit' or 'SDN.Allocate' permissions on '/sdn/zones/<zone>/<vnet>'",
              "user": "all"
            }
          ]
        }
      }
    },
    "/cluster/sdn/lock": {
      "delete": {
        "operationId": "delete-cluster-sdn-lock",
        "summary": "release_lock",
        "description": "Release global lock for SDN configuration",
        "tags": [
          "/cluster/sdn/lock"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "delete-cluster-sdn-lock",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "force",
            "in": "query",
            "required": false,
            "description": "if true, allow releasing lock without providing the token",
            "schema": {
              "type": "boolean",
              "description": "if true, allow releasing lock without providing the token",
              "default": false,
              "x-proxmox-typetext": "<boolean>",
              "x-proxmox-optional": true
            }
          },
          {
            "name": "lock-token",
            "in": "query",
            "required": false,
            "description": "the token for unlocking the global SDN configuration",
            "schema": {
              "type": "string",
              "description": "the token for unlocking the global SDN configuration",
              "x-proxmox-typetext": "<string>",
              "x-proxmox-optional": true
            }
          }
        ],
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/sdn",
                [
                  "SDN.Allocate"
                ]
              ]
            }
          ]
        }
      },
      "post": {
        "operationId": "post-cluster-sdn-lock",
        "summary": "lock",
        "description": "Acquire global lock for SDN configuration",
        "tags": [
          "/cluster/sdn/lock"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "post-cluster-sdn-lock",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "allow-pending": {
                    "type": "boolean",
                    "description": "if true, allow acquiring lock even though there are pending changes",
                    "default": false,
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/sdn",
                [
                  "SDN.Allocate"
                ]
              ]
            }
          ]
        }
      }
    },
    "/cluster/sdn/rollback": {
      "post": {
        "operationId": "post-cluster-sdn-rollback",
        "summary": "rollback",
        "description": "Rollback pending changes to SDN configuration",
        "tags": [
          "/cluster/sdn/rollback"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "post-cluster-sdn-rollback",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "lock-token": {
                    "type": "string",
                    "description": "the token for unlocking the global SDN configuration",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "release-lock": {
                    "type": "boolean",
                    "description": "When lock-token has been provided and configuration successfully rollbacked, release the lock automatically afterwards",
                    "default": true,
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/sdn",
                [
                  "SDN.Allocate"
                ]
              ]
            }
          ]
        }
      }
    },
    "/cluster/sdn/vnets": {
      "get": {
        "operationId": "get-cluster-sdn-vnets",
        "summary": "index",
        "description": "SDN vnets index.",
        "tags": [
          "/cluster/sdn/vnets"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  },
                  "x-proxmox-metadata": {
                    "links": [
                      {
                        "href": "{vnet}",
                        "rel": "child"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-cluster-sdn-vnets",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "pending",
            "in": "query",
            "required": false,
            "description": "Display pending config.",
            "schema": {
              "type": "boolean",
              "description": "Display pending config.",
              "x-proxmox-typetext": "<boolean>",
              "x-proxmox-optional": true
            }
          },
          {
            "name": "running",
            "in": "query",
            "required": false,
            "description": "Display running config.",
            "schema": {
              "type": "boolean",
              "description": "Display running config.",
              "x-proxmox-typetext": "<boolean>",
              "x-proxmox-optional": true
            }
          }
        ],
        "security": [],
        "x-proxmox-permissions": {
          "all": [
            {
              "description": "Only list entries where you have 'SDN.Audit' or 'SDN.Allocate' permissions on '/sdn/zones/<zone>/<vnet>'",
              "user": "all"
            }
          ]
        }
      },
      "post": {
        "operationId": "post-cluster-sdn-vnets",
        "summary": "create",
        "description": "Create a new sdn vnet object.",
        "tags": [
          "/cluster/sdn/vnets"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "post-cluster-sdn-vnets",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "alias": {
                    "type": "string",
                    "description": "alias name of the vnet",
                    "maxLength": 256,
                    "pattern": "(?^i:[\\(\\)-_.\\w\\d\\s]{0,256})",
                    "x-proxmox-optional": true
                  },
                  "isolate-ports": {
                    "type": "boolean",
                    "description": "If true, sets the isolated property for all members of this VNet",
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "lock-token": {
                    "type": "string",
                    "description": "the token for unlocking the global SDN configuration",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "tag": {
                    "type": "integer",
                    "description": "vlan or vxlan id",
                    "x-proxmox-typetext": "<integer>",
                    "x-proxmox-optional": true
                  },
                  "type": {
                    "type": "string",
                    "description": "Type",
                    "enum": [
                      "vnet"
                    ],
                    "x-proxmox-optional": true
                  },
                  "vlanaware": {
                    "type": "boolean",
                    "description": "Allow vm VLANs to pass through this vnet.",
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "vnet": {
                    "type": "string",
                    "description": "The SDN vnet object identifier.",
                    "format": "pve-sdn-vnet-id",
                    "x-proxmox-typetext": "<string>"
                  },
                  "zone": {
                    "type": "string",
                    "description": "zone id",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": false
                  }
                },
                "required": [
                  "vnet",
                  "zone"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/sdn/zones/{zone}",
                [
                  "SDN.Allocate"
                ]
              ]
            }
          ]
        }
      }
    },
    "/cluster/sdn/vnets/{vnet}": {
      "delete": {
        "operationId": "delete-cluster-sdn-vnets-vnet",
        "summary": "delete",
        "description": "Delete sdn vnet object configuration.",
        "tags": [
          "/cluster/sdn/vnets/{vnet}"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "delete-cluster-sdn-vnets-vnet",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "lock-token",
            "in": "query",
            "required": false,
            "description": "the token for unlocking the global SDN configuration",
            "schema": {
              "type": "string",
              "description": "the token for unlocking the global SDN configuration",
              "x-proxmox-typetext": "<string>",
              "x-proxmox-optional": true
            }
          },
          {
            "name": "vnet",
            "in": "path",
            "required": true,
            "description": "The SDN vnet object identifier.",
            "schema": {
              "type": "string",
              "description": "The SDN vnet object identifier.",
              "format": "pve-sdn-vnet-id",
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "description": "Require 'SDN.Allocate' permission on '/sdn/zones/<zone>/<vnet>'",
              "user": "all"
            }
          ]
        }
      },
      "get": {
        "operationId": "get-cluster-sdn-vnets-vnet",
        "summary": "read",
        "description": "Read sdn vnet configuration.",
        "tags": [
          "/cluster/sdn/vnets/{vnet}"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-cluster-sdn-vnets-vnet",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "pending",
            "in": "query",
            "required": false,
            "description": "Display pending config.",
            "schema": {
              "type": "boolean",
              "description": "Display pending config.",
              "x-proxmox-typetext": "<boolean>",
              "x-proxmox-optional": true
            }
          },
          {
            "name": "running",
            "in": "query",
            "required": false,
            "description": "Display running config.",
            "schema": {
              "type": "boolean",
              "description": "Display running config.",
              "x-proxmox-typetext": "<boolean>",
              "x-proxmox-optional": true
            }
          },
          {
            "name": "vnet",
            "in": "path",
            "required": true,
            "description": "The SDN vnet object identifier.",
            "schema": {
              "type": "string",
              "description": "The SDN vnet object identifier.",
              "format": "pve-sdn-vnet-id",
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "security": [],
        "x-proxmox-permissions": {
          "all": [
            {
              "description": "Require 'SDN.Audit' or 'SDN.Allocate' permissions on '/sdn/zones/<zone>/<vnet>'",
              "user": "all"
            }
          ]
        }
      },
      "put": {
        "operationId": "put-cluster-sdn-vnets-vnet",
        "summary": "update",
        "description": "Update sdn vnet object configuration.",
        "tags": [
          "/cluster/sdn/vnets/{vnet}"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "put-cluster-sdn-vnets-vnet",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "vnet",
            "in": "path",
            "required": true,
            "description": "The SDN vnet object identifier.",
            "schema": {
              "type": "string",
              "description": "The SDN vnet object identifier.",
              "format": "pve-sdn-vnet-id",
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "alias": {
                    "type": "string",
                    "description": "alias name of the vnet",
                    "maxLength": 256,
                    "pattern": "(?^i:[\\(\\)-_.\\w\\d\\s]{0,256})",
                    "x-proxmox-optional": true
                  },
                  "delete": {
                    "type": "string",
                    "description": "A list of settings you want to delete.",
                    "maxLength": 4096,
                    "format": "pve-configid-list",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "digest": {
                    "type": "string",
                    "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
                    "maxLength": 64,
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "isolate-ports": {
                    "type": "boolean",
                    "description": "If true, sets the isolated property for all members of this VNet",
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "lock-token": {
                    "type": "string",
                    "description": "the token for unlocking the global SDN configuration",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "tag": {
                    "type": "integer",
                    "description": "vlan or vxlan id",
                    "x-proxmox-typetext": "<integer>",
                    "x-proxmox-optional": true
                  },
                  "vlanaware": {
                    "type": "boolean",
                    "description": "Allow vm VLANs to pass through this vnet.",
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "zone": {
                    "type": "string",
                    "description": "zone id",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "description": "Require 'SDN.Allocate' permission on '/sdn/zones/<zone>/<vnet>'",
              "user": "all"
            }
          ]
        }
      }
    },
    "/cluster/sdn/vnets/{vnet}/firewall": {
      "get": {
        "operationId": "get-cluster-sdn-vnets-vnet-firewall",
        "summary": "index",
        "description": "Directory index.",
        "tags": [
          "/cluster/sdn/vnets/{vnet}/firewall"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  },
                  "x-proxmox-metadata": {
                    "links": [
                      {
                        "href": "{name}",
                        "rel": "child"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-cluster-sdn-vnets-vnet-firewall",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "vnet",
            "in": "path",
            "required": true,
            "description": "The SDN vnet object identifier.",
            "schema": {
              "type": "string",
              "description": "The SDN vnet object identifier.",
              "format": "pve-sdn-vnet-id",
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "security": []
      }
    },
    "/cluster/sdn/vnets/{vnet}/firewall/options": {
      "get": {
        "operationId": "get-cluster-sdn-vnets-vnet-firewall-options",
        "summary": "get_options",
        "description": "Get vnet firewall options.",
        "tags": [
          "/cluster/sdn/vnets/{vnet}/firewall/options"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "enable": {
                      "type": "boolean",
                      "description": "Enable/disable firewall rules.",
                      "default": false,
                      "x-proxmox-optional": true
                    },
                    "log_level_forward": {
                      "type": "string",
                      "description": "Log level for forwarded traffic.",
                      "enum": [
                        "emerg",
                        "alert",
                        "crit",
                        "err",
                        "warning",
                        "notice",
                        "info",
                        "debug",
                        "nolog"
                      ],
                      "x-proxmox-optional": true
                    },
                    "policy_forward": {
                      "type": "string",
                      "description": "Forward policy.",
                      "enum": [
                        "ACCEPT",
                        "DROP"
                      ],
                      "x-proxmox-optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-cluster-sdn-vnets-vnet-firewall-options",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "vnet",
            "in": "path",
            "required": true,
            "description": "The SDN vnet object identifier.",
            "schema": {
              "type": "string",
              "description": "The SDN vnet object identifier.",
              "format": "pve-sdn-vnet-id",
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "security": [],
        "x-proxmox-permissions": {
          "all": [
            {
              "description": "Needs SDN.Audit or SDN.Allocate permissions on '/sdn/zones/<zone>/<vnet>'",
              "user": "all"
            }
          ]
        }
      },
      "put": {
        "operationId": "put-cluster-sdn-vnets-vnet-firewall-options",
        "summary": "set_options",
        "description": "Set Firewall options.",
        "tags": [
          "/cluster/sdn/vnets/{vnet}/firewall/options"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "put-cluster-sdn-vnets-vnet-firewall-options",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "vnet",
            "in": "path",
            "required": true,
            "description": "The SDN vnet object identifier.",
            "schema": {
              "type": "string",
              "description": "The SDN vnet object identifier.",
              "format": "pve-sdn-vnet-id",
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "delete": {
                    "type": "string",
                    "description": "A list of settings you want to delete.",
                    "format": "pve-configid-list",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "digest": {
                    "type": "string",
                    "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
                    "maxLength": 64,
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "enable": {
                    "type": "boolean",
                    "description": "Enable/disable firewall rules.",
                    "default": false,
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "log_level_forward": {
                    "type": "string",
                    "description": "Log level for forwarded traffic.",
                    "enum": [
                      "emerg",
                      "alert",
                      "crit",
                      "err",
                      "warning",
                      "notice",
                      "info",
                      "debug",
                      "nolog"
                    ],
                    "x-proxmox-optional": true
                  },
                  "policy_forward": {
                    "type": "string",
                    "description": "Forward policy.",
                    "enum": [
                      "ACCEPT",
                      "DROP"
                    ],
                    "x-proxmox-optional": true
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "description": "Needs SDN.Allocate permissions on '/sdn/zones/<zone>/<vnet>'",
              "user": "all"
            }
          ]
        }
      }
    },
    "/cluster/sdn/vnets/{vnet}/firewall/rules": {
      "get": {
        "operationId": "get-cluster-sdn-vnets-vnet-firewall-rules",
        "summary": "get_rules",
        "description": "List rules.",
        "tags": [
          "/cluster/sdn/vnets/{vnet}/firewall/rules"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "pos": {
                        "type": "integer"
                      }
                    },
                    "required": [
                      "pos"
                    ]
                  },
                  "x-proxmox-metadata": {
                    "links": [
                      {
                        "href": "{pos}",
                        "rel": "child"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-cluster-sdn-vnets-vnet-firewall-rules",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "vnet",
            "in": "path",
            "required": true,
            "description": "The SDN vnet object identifier.",
            "schema": {
              "type": "string",
              "description": "The SDN vnet object identifier.",
              "format": "pve-sdn-vnet-id",
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "security": [],
        "x-proxmox-permissions": {
          "all": [
            {
              "description": "Needs SDN.Audit or SDN.Allocate permissions on '/sdn/zones/<zone>/<vnet>'",
              "user": "all"
            }
          ]
        }
      },
      "post": {
        "operationId": "post-cluster-sdn-vnets-vnet-firewall-rules",
        "summary": "create_rule",
        "description": "Create new rule.",
        "tags": [
          "/cluster/sdn/vnets/{vnet}/firewall/rules"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "post-cluster-sdn-vnets-vnet-firewall-rules",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "vnet",
            "in": "path",
            "required": true,
            "description": "The SDN vnet object identifier.",
            "schema": {
              "type": "string",
              "description": "The SDN vnet object identifier.",
              "format": "pve-sdn-vnet-id",
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "action": {
                    "type": "string",
                    "description": "Rule action ('ACCEPT', 'DROP', 'REJECT') or security group name.",
                    "minLength": 2,
                    "maxLength": 20,
                    "pattern": "[A-Za-z][A-Za-z0-9\\-\\_]+",
                    "x-proxmox-optional": false
                  },
                  "comment": {
                    "type": "string",
                    "description": "Descriptive comment.",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "dest": {
                    "type": "string",
                    "description": "Restrict packet destination address. This can refer to a single IP address, an IP set ('+ipsetname') or an IP alias definition. You can also specify an address range like '20.34.101.207-201.3.9.99', or a list of IP addresses and networks (entries are separated by comma). Please do not mix IPv4 and IPv6 addresses inside such lists.",
                    "maxLength": 512,
                    "format": "pve-fw-addr-spec",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "digest": {
                    "type": "string",
                    "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
                    "maxLength": 64,
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "dport": {
                    "type": "string",
                    "description": "Restrict TCP/UDP destination port. You can use service names or simple numbers (0-65535), as defined in '/etc/services'. Port ranges can be specified with '\\d+:\\d+', for example '80:85', and you can use comma separated list to match several ports or ranges.",
                    "format": "pve-fw-dport-spec",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "enable": {
                    "type": "integer",
                    "description": "Flag to enable/disable a rule.",
                    "minimum": 0,
                    "x-proxmox-typetext": "<integer> (0 - N)",
                    "x-proxmox-optional": true
                  },
                  "icmp-type": {
                    "type": "string",
                    "description": "Specify icmp-type. Only valid if proto equals 'icmp' or 'icmpv6'/'ipv6-icmp'.",
                    "format": "pve-fw-icmp-type-spec",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "iface": {
                    "type": "string",
                    "description": "Network interface name. You have to use network configuration key names for VMs and containers ('net\\d+'). Host related rules can use arbitrary strings.",
                    "minLength": 2,
                    "maxLength": 20,
                    "format": "pve-iface",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "log": {
                    "type": "string",
                    "description": "Log level for firewall rule.",
                    "enum": [
                      "emerg",
                      "alert",
                      "crit",
                      "err",
                      "warning",
                      "notice",
                      "info",
                      "debug",
                      "nolog"
                    ],
                    "x-proxmox-optional": true
                  },
                  "macro": {
                    "type": "string",
                    "description": "Use predefined standard macro.",
                    "maxLength": 128,
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "pos": {
                    "type": "integer",
                    "description": "Update rule at position <pos>.",
                    "minimum": 0,
                    "x-proxmox-typetext": "<integer> (0 - N)",
                    "x-proxmox-optional": true
                  },
                  "proto": {
                    "type": "string",
                    "description": "IP protocol. You can use protocol names ('tcp'/'udp') or simple numbers, as defined in '/etc/protocols'.",
                    "format": "pve-fw-protocol-spec",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "source": {
                    "type": "string",
                    "description": "Restrict packet source address. This can refer to a single IP address, an IP set ('+ipsetname') or an IP alias definition. You can also specify an address range like '20.34.101.207-201.3.9.99', or a list of IP addresses and networks (entries are separated by comma). Please do not mix IPv4 and IPv6 addresses inside such lists.",
                    "maxLength": 512,
                    "format": "pve-fw-addr-spec",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "sport": {
                    "type": "string",
                    "description": "Restrict TCP/UDP source port. You can use service names or simple numbers (0-65535), as defined in '/etc/services'. Port ranges can be specified with '\\d+:\\d+', for example '80:85', and you can use comma separated list to match several ports or ranges.",
                    "format": "pve-fw-sport-spec",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "type": {
                    "type": "string",
                    "description": "Rule type.",
                    "enum": [
                      "in",
                      "out",
                      "forward",
                      "group"
                    ],
                    "x-proxmox-optional": false
                  }
                },
                "required": [
                  "action",
                  "type"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "description": "Needs SDN.Allocate permissions on '/sdn/zones/<zone>/<vnet>'",
              "user": "all"
            }
          ]
        }
      }
    },
    "/cluster/sdn/vnets/{vnet}/firewall/rules/{pos}": {
      "delete": {
        "operationId": "delete-cluster-sdn-vnets-vnet-firewall-rules-pos",
        "summary": "delete_rule",
        "description": "Delete rule.",
        "tags": [
          "/cluster/sdn/vnets/{vnet}/firewall/rules/{pos}"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "delete-cluster-sdn-vnets-vnet-firewall-rules-pos",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "digest",
            "in": "query",
            "required": false,
            "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
            "schema": {
              "type": "string",
              "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
              "maxLength": 64,
              "x-proxmox-typetext": "<string>",
              "x-proxmox-optional": true
            }
          },
          {
            "name": "pos",
            "in": "path",
            "required": true,
            "description": "Update rule at position <pos>.",
            "schema": {
              "type": "integer",
              "description": "Update rule at position <pos>.",
              "minimum": 0,
              "x-proxmox-typetext": "<integer> (0 - N)",
              "x-proxmox-optional": true
            }
          },
          {
            "name": "vnet",
            "in": "path",
            "required": true,
            "description": "The SDN vnet object identifier.",
            "schema": {
              "type": "string",
              "description": "The SDN vnet object identifier.",
              "format": "pve-sdn-vnet-id",
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "description": "Needs SDN.Allocate permissions on '/sdn/zones/<zone>/<vnet>'",
              "user": "all"
            }
          ]
        }
      },
      "get": {
        "operationId": "get-cluster-sdn-vnets-vnet-firewall-rules-pos",
        "summary": "get_rule",
        "description": "Get single rule data.",
        "tags": [
          "/cluster/sdn/vnets/{vnet}/firewall/rules/{pos}"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "action": {
                      "type": "string"
                    },
                    "comment": {
                      "type": "string",
                      "x-proxmox-optional": true
                    },
                    "dest": {
                      "type": "string",
                      "x-proxmox-optional": true
                    },
                    "dport": {
                      "type": "string",
                      "x-proxmox-optional": true
                    },
                    "enable": {
                      "type": "integer",
                      "x-proxmox-optional": true
                    },
                    "icmp-type": {
                      "type": "string",
                      "x-proxmox-optional": true
                    },
                    "iface": {
                      "type": "string",
                      "x-proxmox-optional": true
                    },
                    "ipversion": {
                      "type": "integer",
                      "x-proxmox-optional": true
                    },
                    "log": {
                      "type": "string",
                      "description": "Log level for firewall rule",
                      "enum": [
                        "emerg",
                        "alert",
                        "crit",
                        "err",
                        "warning",
                        "notice",
                        "info",
                        "debug",
                        "nolog"
                      ],
                      "x-proxmox-optional": true
                    },
                    "macro": {
                      "type": "string",
                      "x-proxmox-optional": true
                    },
                    "pos": {
                      "type": "integer"
                    },
                    "proto": {
                      "type": "string",
                      "x-proxmox-optional": true
                    },
                    "source": {
                      "type": "string",
                      "x-proxmox-optional": true
                    },
                    "sport": {
                      "type": "string",
                      "x-proxmox-optional": true
                    },
                    "type": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "action",
                    "pos",
                    "type"
                  ]
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-cluster-sdn-vnets-vnet-firewall-rules-pos",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "pos",
            "in": "path",
            "required": true,
            "description": "Update rule at position <pos>.",
            "schema": {
              "type": "integer",
              "description": "Update rule at position <pos>.",
              "minimum": 0,
              "x-proxmox-typetext": "<integer> (0 - N)",
              "x-proxmox-optional": true
            }
          },
          {
            "name": "vnet",
            "in": "path",
            "required": true,
            "description": "The SDN vnet object identifier.",
            "schema": {
              "type": "string",
              "description": "The SDN vnet object identifier.",
              "format": "pve-sdn-vnet-id",
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "security": [],
        "x-proxmox-permissions": {
          "all": [
            {
              "description": "Needs SDN.Audit or SDN.Allocate permissions on '/sdn/zones/<zone>/<vnet>'",
              "user": "all"
            }
          ]
        }
      },
      "put": {
        "operationId": "put-cluster-sdn-vnets-vnet-firewall-rules-pos",
        "summary": "update_rule",
        "description": "Modify rule data.",
        "tags": [
          "/cluster/sdn/vnets/{vnet}/firewall/rules/{pos}"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "put-cluster-sdn-vnets-vnet-firewall-rules-pos",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "pos",
            "in": "path",
            "required": true,
            "description": "Update rule at position <pos>.",
            "schema": {
              "type": "integer",
              "description": "Update rule at position <pos>.",
              "minimum": 0,
              "x-proxmox-typetext": "<integer> (0 - N)",
              "x-proxmox-optional": true
            }
          },
          {
            "name": "vnet",
            "in": "path",
            "required": true,
            "description": "The SDN vnet object identifier.",
            "schema": {
              "type": "string",
              "description": "The SDN vnet object identifier.",
              "format": "pve-sdn-vnet-id",
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "action": {
                    "type": "string",
                    "description": "Rule action ('ACCEPT', 'DROP', 'REJECT') or security group name.",
                    "minLength": 2,
                    "maxLength": 20,
                    "pattern": "[A-Za-z][A-Za-z0-9\\-\\_]+",
                    "x-proxmox-optional": true
                  },
                  "comment": {
                    "type": "string",
                    "description": "Descriptive comment.",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "delete": {
                    "type": "string",
                    "description": "A list of settings you want to delete.",
                    "format": "pve-configid-list",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "dest": {
                    "type": "string",
                    "description": "Restrict packet destination address. This can refer to a single IP address, an IP set ('+ipsetname') or an IP alias definition. You can also specify an address range like '20.34.101.207-201.3.9.99', or a list of IP addresses and networks (entries are separated by comma). Please do not mix IPv4 and IPv6 addresses inside such lists.",
                    "maxLength": 512,
                    "format": "pve-fw-addr-spec",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "digest": {
                    "type": "string",
                    "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
                    "maxLength": 64,
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "dport": {
                    "type": "string",
                    "description": "Restrict TCP/UDP destination port. You can use service names or simple numbers (0-65535), as defined in '/etc/services'. Port ranges can be specified with '\\d+:\\d+', for example '80:85', and you can use comma separated list to match several ports or ranges.",
                    "format": "pve-fw-dport-spec",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "enable": {
                    "type": "integer",
                    "description": "Flag to enable/disable a rule.",
                    "minimum": 0,
                    "x-proxmox-typetext": "<integer> (0 - N)",
                    "x-proxmox-optional": true
                  },
                  "icmp-type": {
                    "type": "string",
                    "description": "Specify icmp-type. Only valid if proto equals 'icmp' or 'icmpv6'/'ipv6-icmp'.",
                    "format": "pve-fw-icmp-type-spec",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "iface": {
                    "type": "string",
                    "description": "Network interface name. You have to use network configuration key names for VMs and containers ('net\\d+'). Host related rules can use arbitrary strings.",
                    "minLength": 2,
                    "maxLength": 20,
                    "format": "pve-iface",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "log": {
                    "type": "string",
                    "description": "Log level for firewall rule.",
                    "enum": [
                      "emerg",
                      "alert",
                      "crit",
                      "err",
                      "warning",
                      "notice",
                      "info",
                      "debug",
                      "nolog"
                    ],
                    "x-proxmox-optional": true
                  },
                  "macro": {
                    "type": "string",
                    "description": "Use predefined standard macro.",
                    "maxLength": 128,
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "moveto": {
                    "type": "integer",
                    "description": "Move rule to new position <moveto>. Other arguments are ignored.",
                    "minimum": 0,
                    "x-proxmox-typetext": "<integer> (0 - N)",
                    "x-proxmox-optional": true
                  },
                  "proto": {
                    "type": "string",
                    "description": "IP protocol. You can use protocol names ('tcp'/'udp') or simple numbers, as defined in '/etc/protocols'.",
                    "format": "pve-fw-protocol-spec",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "source": {
                    "type": "string",
                    "description": "Restrict packet source address. This can refer to a single IP address, an IP set ('+ipsetname') or an IP alias definition. You can also specify an address range like '20.34.101.207-201.3.9.99', or a list of IP addresses and networks (entries are separated by comma). Please do not mix IPv4 and IPv6 addresses inside such lists.",
                    "maxLength": 512,
                    "format": "pve-fw-addr-spec",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "sport": {
                    "type": "string",
                    "description": "Restrict TCP/UDP source port. You can use service names or simple numbers (0-65535), as defined in '/etc/services'. Port ranges can be specified with '\\d+:\\d+', for example '80:85', and you can use comma separated list to match several ports or ranges.",
                    "format": "pve-fw-sport-spec",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "type": {
                    "type": "string",
                    "description": "Rule type.",
                    "enum": [
                      "in",
                      "out",
                      "forward",
                      "group"
                    ],
                    "x-proxmox-optional": true
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "description": "Needs SDN.Allocate permissions on '/sdn/zones/<zone>/<vnet>'",
              "user": "all"
            }
          ]
        }
      }
    },
    "/cluster/sdn/vnets/{vnet}/ips": {
      "delete": {
        "operationId": "delete-cluster-sdn-vnets-vnet-ips",
        "summary": "ipdelete",
        "description": "Delete IP Mappings in a VNet",
        "tags": [
          "/cluster/sdn/vnets/{vnet}/ips"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "delete-cluster-sdn-vnets-vnet-ips",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "ip",
            "in": "query",
            "required": true,
            "description": "The IP address to delete",
            "schema": {
              "type": "string",
              "description": "The IP address to delete",
              "format": "ip",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "mac",
            "in": "query",
            "required": false,
            "description": "Unicast MAC address.\n\nA common MAC address with the I/G (Individual/Group) bit not set.",
            "schema": {
              "type": "string",
              "description": "Unicast MAC address.\n\nA common MAC address with the I/G (Individual/Group) bit not set.",
              "format": "mac-addr",
              "x-proxmox-format-description": "XX:XX:XX:XX:XX:XX",
              "x-proxmox-typetext": "<XX:XX:XX:XX:XX:XX>",
              "x-proxmox-optional": true
            }
          },
          {
            "name": "vnet",
            "in": "path",
            "required": true,
            "description": "The SDN vnet object identifier.",
            "schema": {
              "type": "string",
              "description": "The SDN vnet object identifier.",
              "format": "pve-sdn-vnet-id",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "zone",
            "in": "query",
            "required": true,
            "description": "The SDN zone object identifier.",
            "schema": {
              "type": "string",
              "description": "The SDN zone object identifier.",
              "format": "pve-sdn-zone-id",
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/sdn/zones/{zone}/{vnet}",
                [
                  "SDN.Allocate"
                ]
              ]
            }
          ]
        }
      },
      "post": {
        "operationId": "post-cluster-sdn-vnets-vnet-ips",
        "summary": "ipcreate",
        "description": "Create IP Mapping in a VNet",
        "tags": [
          "/cluster/sdn/vnets/{vnet}/ips"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "post-cluster-sdn-vnets-vnet-ips",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "vnet",
            "in": "path",
            "required": true,
            "description": "The SDN vnet object identifier.",
            "schema": {
              "type": "string",
              "description": "The SDN vnet object identifier.",
              "format": "pve-sdn-vnet-id",
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "ip": {
                    "type": "string",
                    "description": "The IP address to associate with the given MAC address",
                    "format": "ip",
                    "x-proxmox-typetext": "<string>"
                  },
                  "mac": {
                    "type": "string",
                    "description": "Unicast MAC address.\n\nA common MAC address with the I/G (Individual/Group) bit not set.",
                    "format": "mac-addr",
                    "x-proxmox-format-description": "XX:XX:XX:XX:XX:XX",
                    "x-proxmox-typetext": "<XX:XX:XX:XX:XX:XX>",
                    "x-proxmox-optional": true
                  },
                  "zone": {
                    "type": "string",
                    "description": "The SDN zone object identifier.",
                    "format": "pve-sdn-zone-id",
                    "x-proxmox-typetext": "<string>"
                  }
                },
                "required": [
                  "ip",
                  "zone"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/sdn/zones/{zone}/{vnet}",
                [
                  "SDN.Allocate"
                ]
              ]
            }
          ]
        }
      },
      "put": {
        "operationId": "put-cluster-sdn-vnets-vnet-ips",
        "summary": "ipupdate",
        "description": "Update IP Mapping in a VNet",
        "tags": [
          "/cluster/sdn/vnets/{vnet}/ips"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "put-cluster-sdn-vnets-vnet-ips",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "vnet",
            "in": "path",
            "required": true,
            "description": "The SDN vnet object identifier.",
            "schema": {
              "type": "string",
              "description": "The SDN vnet object identifier.",
              "format": "pve-sdn-vnet-id",
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "ip": {
                    "type": "string",
                    "description": "The IP address to associate with the given MAC address",
                    "format": "ip",
                    "x-proxmox-typetext": "<string>"
                  },
                  "mac": {
                    "type": "string",
                    "description": "Unicast MAC address.\n\nA common MAC address with the I/G (Individual/Group) bit not set.",
                    "format": "mac-addr",
                    "x-proxmox-format-description": "XX:XX:XX:XX:XX:XX",
                    "x-proxmox-typetext": "<XX:XX:XX:XX:XX:XX>",
                    "x-proxmox-optional": true
                  },
                  "vmid": {
                    "type": "integer",
                    "description": "The (unique) ID of the VM.",
                    "minimum": 100,
                    "maximum": 999999999,
                    "format": "pve-vmid",
                    "x-proxmox-typetext": "<integer> (100 - 999999999)",
                    "x-proxmox-optional": true
                  },
                  "zone": {
                    "type": "string",
                    "description": "The SDN zone object identifier.",
                    "format": "pve-sdn-zone-id",
                    "x-proxmox-typetext": "<string>"
                  }
                },
                "required": [
                  "ip",
                  "zone"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/sdn/zones/{zone}/{vnet}",
                [
                  "SDN.Allocate"
                ]
              ]
            }
          ]
        }
      }
    },
    "/cluster/sdn/vnets/{vnet}/subnets": {
      "get": {
        "operationId": "get-cluster-sdn-vnets-vnet-subnets",
        "summary": "index",
        "description": "SDN subnets index.",
        "tags": [
          "/cluster/sdn/vnets/{vnet}/subnets"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  },
                  "x-proxmox-metadata": {
                    "links": [
                      {
                        "href": "{subnet}",
                        "rel": "child"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-cluster-sdn-vnets-vnet-subnets",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "pending",
            "in": "query",
            "required": false,
            "description": "Display pending config.",
            "schema": {
              "type": "boolean",
              "description": "Display pending config.",
              "x-proxmox-typetext": "<boolean>",
              "x-proxmox-optional": true
            }
          },
          {
            "name": "running",
            "in": "query",
            "required": false,
            "description": "Display running config.",
            "schema": {
              "type": "boolean",
              "description": "Display running config.",
              "x-proxmox-typetext": "<boolean>",
              "x-proxmox-optional": true
            }
          },
          {
            "name": "vnet",
            "in": "path",
            "required": true,
            "description": "The SDN vnet object identifier.",
            "schema": {
              "type": "string",
              "description": "The SDN vnet object identifier.",
              "format": "pve-sdn-vnet-id",
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "security": [],
        "x-proxmox-permissions": {
          "all": [
            {
              "description": "Only list entries where you have 'SDN.Audit' or 'SDN.Allocate' permissions on '/sdn/zones/<zone>/<vnet>'",
              "user": "all"
            }
          ]
        }
      },
      "post": {
        "operationId": "post-cluster-sdn-vnets-vnet-subnets",
        "summary": "create",
        "description": "Create a new sdn subnet object.",
        "tags": [
          "/cluster/sdn/vnets/{vnet}/subnets"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "post-cluster-sdn-vnets-vnet-subnets",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "vnet",
            "in": "path",
            "required": true,
            "description": "associated vnet",
            "schema": {
              "type": "string",
              "description": "associated vnet",
              "x-proxmox-typetext": "<string>",
              "x-proxmox-optional": false
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "dhcp-dns-server": {
                    "type": "string",
                    "description": "IP address for the DNS server",
                    "format": "ip",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "dhcp-range": {
                    "type": "array",
                    "description": "A list of DHCP ranges for this subnet",
                    "items": {
                      "type": "string",
                      "format": "pve-sdn-dhcp-range"
                    },
                    "x-proxmox-typetext": "<array>",
                    "x-proxmox-optional": true
                  },
                  "dnszoneprefix": {
                    "type": "string",
                    "description": "dns domain zone prefix  ex: 'adm' -> <hostname>.adm.mydomain.com",
                    "format": "dns-name",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "gateway": {
                    "type": "string",
                    "description": "Subnet Gateway: Will be assign on vnet for layer3 zones",
                    "format": "ip",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "lock-token": {
                    "type": "string",
                    "description": "the token for unlocking the global SDN configuration",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "snat": {
                    "type": "boolean",
                    "description": "enable masquerade for this subnet if pve-firewall",
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "subnet": {
                    "type": "string",
                    "description": "The SDN subnet object identifier.",
                    "format": "pve-sdn-subnet-id",
                    "x-proxmox-typetext": "<string>"
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "subnet"
                    ]
                  }
                },
                "required": [
                  "subnet",
                  "type"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "description": "Require 'SDN.Allocate' permission on '/sdn/zones/<zone>/<vnet>'",
              "user": "all"
            }
          ]
        }
      }
    },
    "/cluster/sdn/vnets/{vnet}/subnets/{subnet}": {
      "delete": {
        "operationId": "delete-cluster-sdn-vnets-vnet-subnets-subnet",
        "summary": "delete",
        "description": "Delete sdn subnet object configuration.",
        "tags": [
          "/cluster/sdn/vnets/{vnet}/subnets/{subnet}"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "delete-cluster-sdn-vnets-vnet-subnets-subnet",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "lock-token",
            "in": "query",
            "required": false,
            "description": "the token for unlocking the global SDN configuration",
            "schema": {
              "type": "string",
              "description": "the token for unlocking the global SDN configuration",
              "x-proxmox-typetext": "<string>",
              "x-proxmox-optional": true
            }
          },
          {
            "name": "subnet",
            "in": "path",
            "required": true,
            "description": "The SDN subnet object identifier.",
            "schema": {
              "type": "string",
              "description": "The SDN subnet object identifier.",
              "format": "pve-sdn-subnet-id",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "vnet",
            "in": "path",
            "required": true,
            "description": "The SDN vnet object identifier.",
            "schema": {
              "type": "string",
              "description": "The SDN vnet object identifier.",
              "format": "pve-sdn-vnet-id",
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "description": "Require 'SDN.Allocate' permission on '/sdn/zones/<zone>/<vnet>'",
              "user": "all"
            }
          ]
        }
      },
      "get": {
        "operationId": "get-cluster-sdn-vnets-vnet-subnets-subnet",
        "summary": "read",
        "description": "Read sdn subnet configuration.",
        "tags": [
          "/cluster/sdn/vnets/{vnet}/subnets/{subnet}"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-cluster-sdn-vnets-vnet-subnets-subnet",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "pending",
            "in": "query",
            "required": false,
            "description": "Display pending config.",
            "schema": {
              "type": "boolean",
              "description": "Display pending config.",
              "x-proxmox-typetext": "<boolean>",
              "x-proxmox-optional": true
            }
          },
          {
            "name": "running",
            "in": "query",
            "required": false,
            "description": "Display running config.",
            "schema": {
              "type": "boolean",
              "description": "Display running config.",
              "x-proxmox-typetext": "<boolean>",
              "x-proxmox-optional": true
            }
          },
          {
            "name": "subnet",
            "in": "path",
            "required": true,
            "description": "The SDN subnet object identifier.",
            "schema": {
              "type": "string",
              "description": "The SDN subnet object identifier.",
              "format": "pve-sdn-subnet-id",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "vnet",
            "in": "path",
            "required": true,
            "description": "The SDN vnet object identifier.",
            "schema": {
              "type": "string",
              "description": "The SDN vnet object identifier.",
              "format": "pve-sdn-vnet-id",
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "security": [],
        "x-proxmox-permissions": {
          "all": [
            {
              "description": "Require 'SDN.Audit' or 'SDN.Allocate' permissions on '/sdn/zones/<zone>/<vnet>'",
              "user": "all"
            }
          ]
        }
      },
      "put": {
        "operationId": "put-cluster-sdn-vnets-vnet-subnets-subnet",
        "summary": "update",
        "description": "Update sdn subnet object configuration.",
        "tags": [
          "/cluster/sdn/vnets/{vnet}/subnets/{subnet}"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "put-cluster-sdn-vnets-vnet-subnets-subnet",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "subnet",
            "in": "path",
            "required": true,
            "description": "The SDN subnet object identifier.",
            "schema": {
              "type": "string",
              "description": "The SDN subnet object identifier.",
              "format": "pve-sdn-subnet-id",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "vnet",
            "in": "path",
            "required": true,
            "description": "associated vnet",
            "schema": {
              "type": "string",
              "description": "associated vnet",
              "x-proxmox-typetext": "<string>",
              "x-proxmox-optional": true
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "delete": {
                    "type": "string",
                    "description": "A list of settings you want to delete.",
                    "maxLength": 4096,
                    "format": "pve-configid-list",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "dhcp-dns-server": {
                    "type": "string",
                    "description": "IP address for the DNS server",
                    "format": "ip",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "dhcp-range": {
                    "type": "array",
                    "description": "A list of DHCP ranges for this subnet",
                    "items": {
                      "type": "string",
                      "format": "pve-sdn-dhcp-range"
                    },
                    "x-proxmox-typetext": "<array>",
                    "x-proxmox-optional": true
                  },
                  "digest": {
                    "type": "string",
                    "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
                    "maxLength": 64,
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "dnszoneprefix": {
                    "type": "string",
                    "description": "dns domain zone prefix  ex: 'adm' -> <hostname>.adm.mydomain.com",
                    "format": "dns-name",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "gateway": {
                    "type": "string",
                    "description": "Subnet Gateway: Will be assign on vnet for layer3 zones",
                    "format": "ip",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "lock-token": {
                    "type": "string",
                    "description": "the token for unlocking the global SDN configuration",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "snat": {
                    "type": "boolean",
                    "description": "enable masquerade for this subnet if pve-firewall",
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "description": "Require 'SDN.Allocate' permission on '/sdn/zones/<zone>/<vnet>'",
              "user": "all"
            }
          ]
        }
      }
    },
    "/cluster/sdn/zones": {
      "get": {
        "operationId": "get-cluster-sdn-zones",
        "summary": "index",
        "description": "SDN zones index.",
        "tags": [
          "/cluster/sdn/zones"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "dhcp": {
                        "type": "string",
                        "x-proxmox-optional": true
                      },
                      "dns": {
                        "type": "string",
                        "x-proxmox-optional": true
                      },
                      "dnszone": {
                        "type": "string",
                        "x-proxmox-optional": true
                      },
                      "ipam": {
                        "type": "string",
                        "x-proxmox-optional": true
                      },
                      "mtu": {
                        "type": "integer",
                        "x-proxmox-optional": true
                      },
                      "nodes": {
                        "type": "string",
                        "x-proxmox-optional": true
                      },
                      "pending": {
                        "type": "boolean",
                        "x-proxmox-optional": true
                      },
                      "reversedns": {
                        "type": "string",
                        "x-proxmox-optional": true
                      },
                      "state": {
                        "type": "string",
                        "x-proxmox-optional": true
                      },
                      "type": {
                        "type": "string"
                      },
                      "zone": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "type",
                      "zone"
                    ]
                  },
                  "x-proxmox-metadata": {
                    "links": [
                      {
                        "href": "{zone}",
                        "rel": "child"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-cluster-sdn-zones",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "pending",
            "in": "query",
            "required": false,
            "description": "Display pending config.",
            "schema": {
              "type": "boolean",
              "description": "Display pending config.",
              "x-proxmox-typetext": "<boolean>",
              "x-proxmox-optional": true
            }
          },
          {
            "name": "running",
            "in": "query",
            "required": false,
            "description": "Display running config.",
            "schema": {
              "type": "boolean",
              "description": "Display running config.",
              "x-proxmox-typetext": "<boolean>",
              "x-proxmox-optional": true
            }
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "description": "Only list SDN zones of specific type",
            "schema": {
              "type": "string",
              "description": "Only list SDN zones of specific type",
              "enum": [
                "evpn",
                "faucet",
                "qinq",
                "simple",
                "vlan",
                "vxlan"
              ],
              "x-proxmox-optional": true
            }
          }
        ],
        "security": [],
        "x-proxmox-permissions": {
          "all": [
            {
              "description": "Only list entries where you have 'SDN.Audit' or 'SDN.Allocate' permissions on '/sdn/zones/<zone>'",
              "user": "all"
            }
          ]
        }
      },
      "post": {
        "operationId": "post-cluster-sdn-zones",
        "summary": "create",
        "description": "Create a new sdn zone object.",
        "tags": [
          "/cluster/sdn/zones"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "post-cluster-sdn-zones",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "advertise-subnets": {
                    "type": "boolean",
                    "description": "Advertise evpn subnets if you have silent hosts",
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "bridge": {
                    "type": "string",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "bridge-disable-mac-learning": {
                    "type": "boolean",
                    "description": "Disable auto mac learning.",
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "controller": {
                    "type": "string",
                    "description": "Frr router name",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "dhcp": {
                    "type": "string",
                    "description": "Type of the DHCP backend for this zone",
                    "enum": [
                      "dnsmasq"
                    ],
                    "x-proxmox-optional": true
                  },
                  "disable-arp-nd-suppression": {
                    "type": "boolean",
                    "description": "Disable ipv4 arp && ipv6 neighbour discovery suppression",
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "dns": {
                    "type": "string",
                    "description": "dns api server",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "dnszone": {
                    "type": "string",
                    "description": "dns domain zone  ex: mydomain.com",
                    "format": "dns-name",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "dp-id": {
                    "type": "integer",
                    "description": "Faucet dataplane id",
                    "x-proxmox-typetext": "<integer>",
                    "x-proxmox-optional": true
                  },
                  "exitnodes": {
                    "type": "string",
                    "description": "List of cluster node names.",
                    "format": "pve-node-list",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "exitnodes-local-routing": {
                    "type": "boolean",
                    "description": "Allow exitnodes to connect to evpn guests",
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "exitnodes-primary": {
                    "type": "string",
                    "description": "Force traffic to this exitnode first.",
                    "format": "pve-node",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "fabric": {
                    "type": "string",
                    "description": "SDN fabric to use as underlay for this VXLAN zone.",
                    "format": "pve-sdn-fabric-id",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "ipam": {
                    "type": "string",
                    "description": "use a specific ipam",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "lock-token": {
                    "type": "string",
                    "description": "the token for unlocking the global SDN configuration",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "mac": {
                    "type": "string",
                    "description": "Anycast logical router mac address",
                    "format": "mac-addr",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "mtu": {
                    "type": "integer",
                    "description": "MTU",
                    "x-proxmox-typetext": "<integer>",
                    "x-proxmox-optional": true
                  },
                  "nodes": {
                    "type": "string",
                    "description": "List of cluster node names.",
                    "format": "pve-node-list",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "peers": {
                    "type": "string",
                    "description": "peers address list.",
                    "format": "ip-list",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "reversedns": {
                    "type": "string",
                    "description": "reverse dns api server",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "rt-import": {
                    "type": "string",
                    "description": "Route-Target import",
                    "format": "pve-sdn-bgp-rt-list",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "tag": {
                    "type": "integer",
                    "description": "Service-VLAN Tag",
                    "minimum": 0,
                    "x-proxmox-typetext": "<integer> (0 - N)",
                    "x-proxmox-optional": true
                  },
                  "type": {
                    "type": "string",
                    "description": "Plugin type.",
                    "enum": [
                      "evpn",
                      "faucet",
                      "qinq",
                      "simple",
                      "vlan",
                      "vxlan"
                    ],
                    "format": "pve-configid"
                  },
                  "vlan-protocol": {
                    "type": "string",
                    "enum": [
                      "802.1q",
                      "802.1ad"
                    ],
                    "default": "802.1q",
                    "x-proxmox-optional": true
                  },
                  "vrf-vxlan": {
                    "type": "integer",
                    "description": "l3vni.",
                    "x-proxmox-typetext": "<integer>",
                    "x-proxmox-optional": true
                  },
                  "vxlan-port": {
                    "type": "integer",
                    "description": "Vxlan tunnel udp port (default 4789).",
                    "minimum": 1,
                    "maximum": 65536,
                    "x-proxmox-typetext": "<integer> (1 - 65536)",
                    "x-proxmox-optional": true
                  },
                  "zone": {
                    "type": "string",
                    "description": "The SDN zone object identifier.",
                    "format": "pve-sdn-zone-id",
                    "x-proxmox-typetext": "<string>"
                  }
                },
                "required": [
                  "type",
                  "zone"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/sdn/zones",
                [
                  "SDN.Allocate"
                ]
              ]
            }
          ]
        }
      }
    },
    "/cluster/sdn/zones/{zone}": {
      "delete": {
        "operationId": "delete-cluster-sdn-zones-zone",
        "summary": "delete",
        "description": "Delete sdn zone object configuration.",
        "tags": [
          "/cluster/sdn/zones/{zone}"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "delete-cluster-sdn-zones-zone",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "lock-token",
            "in": "query",
            "required": false,
            "description": "the token for unlocking the global SDN configuration",
            "schema": {
              "type": "string",
              "description": "the token for unlocking the global SDN configuration",
              "x-proxmox-typetext": "<string>",
              "x-proxmox-optional": true
            }
          },
          {
            "name": "zone",
            "in": "path",
            "required": true,
            "description": "The SDN zone object identifier.",
            "schema": {
              "type": "string",
              "description": "The SDN zone object identifier.",
              "format": "pve-sdn-zone-id",
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/sdn/zones/{zone}",
                [
                  "SDN.Allocate"
                ]
              ]
            }
          ]
        }
      },
      "get": {
        "operationId": "get-cluster-sdn-zones-zone",
        "summary": "read",
        "description": "Read sdn zone configuration.",
        "tags": [
          "/cluster/sdn/zones/{zone}"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-cluster-sdn-zones-zone",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "pending",
            "in": "query",
            "required": false,
            "description": "Display pending config.",
            "schema": {
              "type": "boolean",
              "description": "Display pending config.",
              "x-proxmox-typetext": "<boolean>",
              "x-proxmox-optional": true
            }
          },
          {
            "name": "running",
            "in": "query",
            "required": false,
            "description": "Display running config.",
            "schema": {
              "type": "boolean",
              "description": "Display running config.",
              "x-proxmox-typetext": "<boolean>",
              "x-proxmox-optional": true
            }
          },
          {
            "name": "zone",
            "in": "path",
            "required": true,
            "description": "The SDN zone object identifier.",
            "schema": {
              "type": "string",
              "description": "The SDN zone object identifier.",
              "format": "pve-sdn-zone-id",
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "security": [],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/sdn/zones/{zone}",
                [
                  "SDN.Allocate"
                ]
              ]
            }
          ]
        }
      },
      "put": {
        "operationId": "put-cluster-sdn-zones-zone",
        "summary": "update",
        "description": "Update sdn zone object configuration.",
        "tags": [
          "/cluster/sdn/zones/{zone}"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "put-cluster-sdn-zones-zone",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "zone",
            "in": "path",
            "required": true,
            "description": "The SDN zone object identifier.",
            "schema": {
              "type": "string",
              "description": "The SDN zone object identifier.",
              "format": "pve-sdn-zone-id",
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "advertise-subnets": {
                    "type": "boolean",
                    "description": "Advertise evpn subnets if you have silent hosts",
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "bridge": {
                    "type": "string",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "bridge-disable-mac-learning": {
                    "type": "boolean",
                    "description": "Disable auto mac learning.",
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "controller": {
                    "type": "string",
                    "description": "Frr router name",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "delete": {
                    "type": "string",
                    "description": "A list of settings you want to delete.",
                    "maxLength": 4096,
                    "format": "pve-configid-list",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "dhcp": {
                    "type": "string",
                    "description": "Type of the DHCP backend for this zone",
                    "enum": [
                      "dnsmasq"
                    ],
                    "x-proxmox-optional": true
                  },
                  "digest": {
                    "type": "string",
                    "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
                    "maxLength": 64,
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "disable-arp-nd-suppression": {
                    "type": "boolean",
                    "description": "Disable ipv4 arp && ipv6 neighbour discovery suppression",
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "dns": {
                    "type": "string",
                    "description": "dns api server",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "dnszone": {
                    "type": "string",
                    "description": "dns domain zone  ex: mydomain.com",
                    "format": "dns-name",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "dp-id": {
                    "type": "integer",
                    "description": "Faucet dataplane id",
                    "x-proxmox-typetext": "<integer>",
                    "x-proxmox-optional": true
                  },
                  "exitnodes": {
                    "type": "string",
                    "description": "List of cluster node names.",
                    "format": "pve-node-list",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "exitnodes-local-routing": {
                    "type": "boolean",
                    "description": "Allow exitnodes to connect to evpn guests",
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "exitnodes-primary": {
                    "type": "string",
                    "description": "Force traffic to this exitnode first.",
                    "format": "pve-node",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "fabric": {
                    "type": "string",
                    "description": "SDN fabric to use as underlay for this VXLAN zone.",
                    "format": "pve-sdn-fabric-id",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "ipam": {
                    "type": "string",
                    "description": "use a specific ipam",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "lock-token": {
                    "type": "string",
                    "description": "the token for unlocking the global SDN configuration",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "mac": {
                    "type": "string",
                    "description": "Anycast logical router mac address",
                    "format": "mac-addr",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "mtu": {
                    "type": "integer",
                    "description": "MTU",
                    "x-proxmox-typetext": "<integer>",
                    "x-proxmox-optional": true
                  },
                  "nodes": {
                    "type": "string",
                    "description": "List of cluster node names.",
                    "format": "pve-node-list",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "peers": {
                    "type": "string",
                    "description": "peers address list.",
                    "format": "ip-list",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "reversedns": {
                    "type": "string",
                    "description": "reverse dns api server",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "rt-import": {
                    "type": "string",
                    "description": "Route-Target import",
                    "format": "pve-sdn-bgp-rt-list",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "tag": {
                    "type": "integer",
                    "description": "Service-VLAN Tag",
                    "minimum": 0,
                    "x-proxmox-typetext": "<integer> (0 - N)",
                    "x-proxmox-optional": true
                  },
                  "vlan-protocol": {
                    "type": "string",
                    "enum": [
                      "802.1q",
                      "802.1ad"
                    ],
                    "default": "802.1q",
                    "x-proxmox-optional": true
                  },
                  "vrf-vxlan": {
                    "type": "integer",
                    "description": "l3vni.",
                    "x-proxmox-typetext": "<integer>",
                    "x-proxmox-optional": true
                  },
                  "vxlan-port": {
                    "type": "integer",
                    "description": "Vxlan tunnel udp port (default 4789).",
                    "minimum": 1,
                    "maximum": 65536,
                    "x-proxmox-typetext": "<integer> (1 - 65536)",
                    "x-proxmox-optional": true
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/sdn/zones/{zone}",
                [
                  "SDN.Allocate"
                ]
              ]
            }
          ]
        }
      }
    },
    "/cluster/status": {
      "get": {
        "operationId": "get-cluster-status",
        "summary": "get_status",
        "description": "Get cluster status information.",
        "tags": [
          "/cluster/status"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "ip": {
                        "type": "string",
                        "description": "[node] IP of the resolved nodename.",
                        "x-proxmox-optional": true
                      },
                      "level": {
                        "type": "string",
                        "description": "[node] Proxmox VE Subscription level, indicates if eligible for enterprise support as well as access to the stable Proxmox VE Enterprise Repository.",
                        "x-proxmox-optional": true
                      },
                      "local": {
                        "type": "boolean",
                        "description": "[node] Indicates if this is the responding node.",
                        "x-proxmox-optional": true
                      },
                      "name": {
                        "type": "string"
                      },
                      "nodeid": {
                        "type": "integer",
                        "description": "[node] ID of the node from the corosync configuration.",
                        "x-proxmox-optional": true
                      },
                      "nodes": {
                        "type": "integer",
                        "description": "[cluster] Nodes count, including offline nodes.",
                        "x-proxmox-optional": true
                      },
                      "online": {
                        "type": "boolean",
                        "description": "[node] Indicates if the node is online or offline.",
                        "x-proxmox-optional": true
                      },
                      "quorate": {
                        "type": "boolean",
                        "description": "[cluster] Indicates if there is a majority of nodes online to make decisions",
                        "x-proxmox-optional": true
                      },
                      "type": {
                        "type": "string",
                        "description": "Indicates the type, either cluster or node. The type defines the object properties e.g. quorate available for type cluster.",
                        "enum": [
                          "cluster",
                          "node"
                        ]
                      },
                      "version": {
                        "type": "integer",
                        "description": "[cluster] Current version of the corosync configuration file.",
                        "x-proxmox-optional": true
                      }
                    },
                    "required": [
                      "id",
                      "name",
                      "type"
                    ]
                  }
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-cluster-status",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/",
                [
                  "Sys.Audit"
                ]
              ]
            }
          ]
        }
      }
    },
    "/cluster/tasks": {
      "get": {
        "operationId": "get-cluster-tasks",
        "summary": "tasks",
        "description": "List recent tasks (cluster wide).",
        "tags": [
          "/cluster/tasks"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "upid": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "upid"
                    ]
                  }
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-cluster-tasks",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "security": [],
        "x-proxmox-permissions": {
          "all": [
            {
              "user": "all"
            }
          ]
        }
      }
    },
    "/nodes": {
      "get": {
        "operationId": "get-nodes",
        "summary": "index",
        "description": "Cluster node index.",
        "tags": [
          "/nodes"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "cpu": {
                        "type": "number",
                        "description": "CPU utilization.",
                        "x-proxmox-optional": true,
                        "x-proxmox-metadata": {
                          "renderer": "fraction_as_percentage"
                        }
                      },
                      "level": {
                        "type": "string",
                        "description": "Support level.",
                        "x-proxmox-optional": true
                      },
                      "maxcpu": {
                        "type": "integer",
                        "description": "Number of available CPUs.",
                        "x-proxmox-optional": true
                      },
                      "maxmem": {
                        "type": "integer",
                        "description": "Number of available memory in bytes.",
                        "x-proxmox-optional": true,
                        "x-proxmox-metadata": {
                          "renderer": "bytes"
                        }
                      },
                      "mem": {
                        "type": "integer",
                        "description": "Used memory in bytes.",
                        "x-proxmox-optional": true,
                        "x-proxmox-metadata": {
                          "renderer": "bytes"
                        }
                      },
                      "node": {
                        "type": "string",
                        "description": "The cluster node name.",
                        "format": "pve-node"
                      },
                      "ssl_fingerprint": {
                        "type": "string",
                        "description": "The SSL fingerprint for the node certificate.",
                        "x-proxmox-optional": true
                      },
                      "status": {
                        "type": "string",
                        "description": "Node status.",
                        "enum": [
                          "unknown",
                          "online",
                          "offline"
                        ]
                      },
                      "uptime": {
                        "type": "integer",
                        "description": "Node uptime in seconds.",
                        "x-proxmox-optional": true,
                        "x-proxmox-metadata": {
                          "renderer": "duration"
                        }
                      }
                    },
                    "required": [
                      "node",
                      "status"
                    ]
                  },
                  "x-proxmox-metadata": {
                    "links": [
                      {
                        "href": "{node}",
                        "rel": "child"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-nodes",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "security": [],
        "x-proxmox-permissions": {
          "all": [
            {
              "user": "all"
            }
          ]
        }
      }
    },
    "/nodes/{node}": {
      "get": {
        "operationId": "get-nodes-node",
        "summary": "index",
        "description": "Node index.",
        "tags": [
          "/nodes/{node}"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  },
                  "x-proxmox-metadata": {
                    "links": [
                      {
                        "href": "{name}",
                        "rel": "child"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-nodes-node",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "security": [],
        "x-proxmox-permissions": {
          "all": [
            {
              "user": "all"
            }
          ]
        }
      }
    },
    "/nodes/{node}/aplinfo": {
      "get": {
        "operationId": "get-nodes-node-aplinfo",
        "summary": "aplinfo",
        "description": "Get list of appliances.",
        "tags": [
          "/nodes/{node}/aplinfo"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  }
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-nodes-node-aplinfo",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "security": [],
        "x-proxmox-permissions": {
          "all": [
            {
              "user": "all"
            }
          ]
        }
      },
      "post": {
        "operationId": "post-nodes-node-aplinfo",
        "summary": "apl_download",
        "description": "Download appliance templates.",
        "tags": [
          "/nodes/{node}/aplinfo"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "post-nodes-node-aplinfo",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "storage": {
                    "type": "string",
                    "description": "The storage where the template will be stored",
                    "format": "pve-storage-id",
                    "x-proxmox-format-description": "storage ID",
                    "x-proxmox-typetext": "<storage ID>"
                  },
                  "template": {
                    "type": "string",
                    "description": "The template which will downloaded",
                    "maxLength": 255,
                    "x-proxmox-typetext": "<string>"
                  }
                },
                "required": [
                  "storage",
                  "template"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/storage/{storage}",
                [
                  "Datastore.AllocateTemplate"
                ]
              ]
            }
          ]
        }
      }
    },
    "/nodes/{node}/apt": {
      "get": {
        "operationId": "get-nodes-node-apt",
        "summary": "index",
        "description": "Directory index for apt (Advanced Package Tool).",
        "tags": [
          "/nodes/{node}/apt"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id"
                    ]
                  },
                  "x-proxmox-metadata": {
                    "links": [
                      {
                        "href": "{id}",
                        "rel": "child"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-nodes-node-apt",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "security": [],
        "x-proxmox-permissions": {
          "all": [
            {
              "user": "all"
            }
          ]
        }
      }
    },
    "/nodes/{node}/apt/changelog": {
      "get": {
        "operationId": "get-nodes-node-apt-changelog",
        "summary": "changelog",
        "description": "Get package changelogs.",
        "tags": [
          "/nodes/{node}/apt/changelog"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-nodes-node-apt-changelog",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "required": true,
            "description": "Package name.",
            "schema": {
              "type": "string",
              "description": "Package name.",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "version",
            "in": "query",
            "required": false,
            "description": "Package version.",
            "schema": {
              "type": "string",
              "description": "Package version.",
              "x-proxmox-typetext": "<string>",
              "x-proxmox-optional": true
            }
          }
        ],
        "security": [],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/nodes/{node}",
                [
                  "Sys.Modify"
                ]
              ]
            }
          ]
        }
      }
    },
    "/nodes/{node}/apt/repositories": {
      "get": {
        "operationId": "get-nodes-node-apt-repositories",
        "summary": "repositories",
        "description": "Get APT repository information.",
        "tags": [
          "/nodes/{node}/apt/repositories"
        ],
        "responses": {
          "200": {
            "description": "Result from parsing the APT repository files in /etc/apt/.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Result from parsing the APT repository files in /etc/apt/.",
                  "properties": {
                    "digest": {
                      "type": "string",
                      "description": "Common digest of all files."
                    },
                    "errors": {
                      "type": "array",
                      "description": "List of problematic repository files.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "error": {
                            "type": "string",
                            "description": "The error message"
                          },
                          "path": {
                            "type": "string",
                            "description": "Path to the problematic file."
                          }
                        },
                        "required": [
                          "error",
                          "path"
                        ]
                      }
                    },
                    "files": {
                      "type": "array",
                      "description": "List of parsed repository files.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "digest": {
                            "type": "array",
                            "description": "Digest of the file as bytes.",
                            "items": {
                              "type": "integer"
                            }
                          },
                          "file-type": {
                            "type": "string",
                            "description": "Format of the file.",
                            "enum": [
                              "list",
                              "sources"
                            ]
                          },
                          "path": {
                            "type": "string",
                            "description": "Path to the problematic file."
                          },
                          "repositories": {
                            "type": "array",
                            "description": "The parsed repositories.",
                            "items": {
                              "type": "object",
                              "properties": {
                                "Comment": {
                                  "type": "string",
                                  "description": "Associated comment",
                                  "x-proxmox-optional": true
                                },
                                "Components": {
                                  "type": "array",
                                  "description": "List of repository components",
                                  "items": {
                                    "type": "string"
                                  },
                                  "x-proxmox-optional": true
                                },
                                "Enabled": {
                                  "type": "boolean",
                                  "description": "Whether the repository is enabled or not"
                                },
                                "FileType": {
                                  "type": "string",
                                  "description": "Format of the defining file.",
                                  "enum": [
                                    "list",
                                    "sources"
                                  ]
                                },
                                "Options": {
                                  "type": "array",
                                  "description": "Additional options",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "Key": {
                                        "type": "string"
                                      },
                                      "Values": {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "required": [
                                      "Key",
                                      "Values"
                                    ]
                                  },
                                  "x-proxmox-optional": true
                                },
                                "Suites": {
                                  "type": "array",
                                  "description": "List of package distribuitions",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "Types": {
                                  "type": "array",
                                  "description": "List of package types.",
                                  "items": {
                                    "type": "string",
                                    "enum": [
                                      "deb",
                                      "deb-src"
                                    ]
                                  }
                                },
                                "URIs": {
                                  "type": "array",
                                  "description": "List of repository URIs.",
                                  "items": {
                                    "type": "string"
                                  }
                                }
                              },
                              "required": [
                                "Enabled",
                                "FileType",
                                "Suites",
                                "Types",
                                "URIs"
                              ]
                            }
                          }
                        },
                        "required": [
                          "digest",
                          "file-type",
                          "path",
                          "repositories"
                        ]
                      }
                    },
                    "infos": {
                      "type": "array",
                      "description": "Additional information/warnings for APT repositories.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "index": {
                            "type": "string",
                            "description": "Index of the associated repository within the file."
                          },
                          "kind": {
                            "type": "string",
                            "description": "Kind of the information (e.g. warning)."
                          },
                          "message": {
                            "type": "string",
                            "description": "Information message."
                          },
                          "path": {
                            "type": "string",
                            "description": "Path to the associated file."
                          },
                          "property": {
                            "type": "string",
                            "description": "Property from which the info originates.",
                            "x-proxmox-optional": true
                          }
                        },
                        "required": [
                          "index",
                          "kind",
                          "message",
                          "path"
                        ]
                      }
                    },
                    "standard-repos": {
                      "type": "array",
                      "description": "List of standard repositories and their configuration status",
                      "items": {
                        "type": "object",
                        "properties": {
                          "handle": {
                            "type": "string",
                            "description": "Handle to identify the repository."
                          },
                          "name": {
                            "type": "string",
                            "description": "Full name of the repository."
                          },
                          "status": {
                            "type": "boolean",
                            "description": "Indicating enabled/disabled status, if the repository is configured.",
                            "x-proxmox-optional": true
                          }
                        },
                        "required": [
                          "handle",
                          "name"
                        ]
                      }
                    }
                  },
                  "required": [
                    "digest",
                    "errors",
                    "files",
                    "infos",
                    "standard-repos"
                  ]
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-nodes-node-apt-repositories",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "security": [],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/nodes/{node}",
                [
                  "Sys.Audit"
                ]
              ]
            }
          ]
        }
      },
      "post": {
        "operationId": "post-nodes-node-apt-repositories",
        "summary": "change_repository",
        "description": "Change the properties of a repository. Currently only allows enabling/disabling.",
        "tags": [
          "/nodes/{node}/apt/repositories"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "post-nodes-node-apt-repositories",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "digest": {
                    "type": "string",
                    "description": "Digest to detect modifications.",
                    "maxLength": 80,
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "enabled": {
                    "type": "boolean",
                    "description": "Whether the repository should be enabled or not.",
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "index": {
                    "type": "integer",
                    "description": "Index within the file (starting from 0).",
                    "x-proxmox-typetext": "<integer>"
                  },
                  "path": {
                    "type": "string",
                    "description": "Path to the containing file.",
                    "x-proxmox-typetext": "<string>"
                  }
                },
                "required": [
                  "index",
                  "path"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/nodes/{node}",
                [
                  "Sys.Modify"
                ]
              ]
            }
          ]
        }
      },
      "put": {
        "operationId": "put-nodes-node-apt-repositories",
        "summary": "add_repository",
        "description": "Add a standard repository to the configuration",
        "tags": [
          "/nodes/{node}/apt/repositories"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "put-nodes-node-apt-repositories",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "digest": {
                    "type": "string",
                    "description": "Digest to detect modifications.",
                    "maxLength": 80,
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "handle": {
                    "type": "string",
                    "description": "Handle that identifies a repository.",
                    "x-proxmox-typetext": "<string>"
                  }
                },
                "required": [
                  "handle"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/nodes/{node}",
                [
                  "Sys.Modify"
                ]
              ]
            }
          ]
        }
      }
    },
    "/nodes/{node}/apt/update": {
      "get": {
        "operationId": "get-nodes-node-apt-update",
        "summary": "list_updates",
        "description": "List available updates.",
        "tags": [
          "/nodes/{node}/apt/update"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  }
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-nodes-node-apt-update",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/nodes/{node}",
                [
                  "Sys.Modify"
                ]
              ]
            }
          ]
        }
      },
      "post": {
        "operationId": "post-nodes-node-apt-update",
        "summary": "update_database",
        "description": "This is used to resynchronize the package index files from their sources (apt-get update).",
        "tags": [
          "/nodes/{node}/apt/update"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "post-nodes-node-apt-update",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "notify": {
                    "type": "boolean",
                    "description": "Send notification about new packages.",
                    "default": false,
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "quiet": {
                    "type": "boolean",
                    "description": "Only produces output suitable for logging, omitting progress indicators.",
                    "default": false,
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/nodes/{node}",
                [
                  "Sys.Modify"
                ]
              ]
            }
          ]
        }
      }
    },
    "/nodes/{node}/apt/versions": {
      "get": {
        "operationId": "get-nodes-node-apt-versions",
        "summary": "versions",
        "description": "Get package information for important Proxmox packages.",
        "tags": [
          "/nodes/{node}/apt/versions"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  }
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-nodes-node-apt-versions",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "security": [],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/nodes/{node}",
                [
                  "Sys.Audit"
                ]
              ]
            }
          ]
        }
      }
    },
    "/nodes/{node}/capabilities": {
      "get": {
        "operationId": "get-nodes-node-capabilities",
        "summary": "index",
        "description": "Node capabilities index.",
        "tags": [
          "/nodes/{node}/capabilities"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  },
                  "x-proxmox-metadata": {
                    "links": [
                      {
                        "href": "{name}",
                        "rel": "child"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-nodes-node-capabilities",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "security": [],
        "x-proxmox-permissions": {
          "all": [
            {
              "user": "all"
            }
          ]
        }
      }
    },
    "/nodes/{node}/capabilities/qemu": {
      "get": {
        "operationId": "get-nodes-node-capabilities-qemu",
        "summary": "qemu_caps_index",
        "description": "QEMU capabilities index.",
        "tags": [
          "/nodes/{node}/capabilities/qemu"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  },
                  "x-proxmox-metadata": {
                    "links": [
                      {
                        "href": "{name}",
                        "rel": "child"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-nodes-node-capabilities-qemu",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "security": [],
        "x-proxmox-permissions": {
          "all": [
            {
              "user": "all"
            }
          ]
        }
      }
    },
    "/nodes/{node}/capabilities/qemu/cpu": {
      "get": {
        "operationId": "get-nodes-node-capabilities-qemu-cpu",
        "summary": "index",
        "description": "List all custom and default CPU models.",
        "tags": [
          "/nodes/{node}/capabilities/qemu/cpu"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "custom": {
                        "type": "boolean",
                        "description": "True if this is a custom CPU model."
                      },
                      "name": {
                        "type": "string",
                        "description": "Name of the CPU model. Identifies it for subsequent API calls. Prefixed with 'custom-' for custom models."
                      },
                      "vendor": {
                        "type": "string",
                        "description": "CPU vendor visible to the guest when this model is selected. Vendor of 'reported-model' in case of custom models."
                      }
                    },
                    "required": [
                      "custom",
                      "name",
                      "vendor"
                    ]
                  },
                  "x-proxmox-metadata": {
                    "links": [
                      {
                        "href": "{name}",
                        "rel": "child"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-nodes-node-capabilities-qemu-cpu",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "security": [],
        "x-proxmox-permissions": {
          "all": [
            {
              "description": "Only returns custom models when the current user has Sys.Audit on /nodes.",
              "user": "all"
            }
          ]
        }
      }
    },
    "/nodes/{node}/capabilities/qemu/machines": {
      "get": {
        "operationId": "get-nodes-node-capabilities-qemu-machines",
        "summary": "types",
        "description": "Get available QEMU/KVM machine types.",
        "tags": [
          "/nodes/{node}/capabilities/qemu/machines"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "changes": {
                        "type": "string",
                        "description": "Notable changes of a version, currently only set for +pveX versions.",
                        "x-proxmox-optional": true
                      },
                      "id": {
                        "type": "string",
                        "description": "Full name of machine type and version."
                      },
                      "type": {
                        "type": "string",
                        "description": "The machine type.",
                        "enum": [
                          "q35",
                          "i440fx"
                        ]
                      },
                      "version": {
                        "type": "string",
                        "description": "The machine version."
                      }
                    },
                    "required": [
                      "id",
                      "type",
                      "version"
                    ],
                    "additionalProperties": true
                  }
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-nodes-node-capabilities-qemu-machines",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "security": [],
        "x-proxmox-permissions": {
          "all": [
            {
              "user": "all"
            }
          ]
        }
      }
    },
    "/nodes/{node}/capabilities/qemu/migration": {
      "get": {
        "operationId": "get-nodes-node-capabilities-qemu-migration",
        "summary": "capabilities",
        "description": "Get node-specific QEMU migration capabilities of the node. Requires the 'Sys.Audit' permission on '/nodes/<node>'.",
        "tags": [
          "/nodes/{node}/capabilities/qemu/migration"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "dbus-vmstate": {
                      "type": "boolean",
                      "description": "Whether the host supports live-migrating additional VM state via the dbus-vmstate helper."
                    }
                  },
                  "required": [
                    "dbus-vmstate"
                  ],
                  "additionalProperties": false
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-nodes-node-capabilities-qemu-migration",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "security": [],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/nodes/{node}",
                [
                  "Sys.Audit"
                ]
              ]
            }
          ]
        }
      }
    },
    "/nodes/{node}/ceph": {
      "get": {
        "operationId": "get-nodes-node-ceph",
        "summary": "index",
        "description": "Directory index.",
        "tags": [
          "/nodes/{node}/ceph"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  },
                  "x-proxmox-metadata": {
                    "links": [
                      {
                        "href": "{name}",
                        "rel": "child"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-nodes-node-ceph",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "security": [],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/",
                [
                  "Sys.Audit",
                  "Datastore.Audit"
                ],
                "any",
                1
              ]
            }
          ]
        }
      }
    },
    "/nodes/{node}/ceph/cfg": {
      "get": {
        "operationId": "get-nodes-node-ceph-cfg",
        "summary": "index",
        "description": "Directory index.",
        "tags": [
          "/nodes/{node}/ceph/cfg"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  },
                  "x-proxmox-metadata": {
                    "links": [
                      {
                        "href": "{name}",
                        "rel": "child"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-nodes-node-ceph-cfg",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "security": [],
        "x-proxmox-permissions": {
          "all": [
            {
              "user": "all"
            }
          ]
        }
      }
    },
    "/nodes/{node}/ceph/cfg/db": {
      "get": {
        "operationId": "get-nodes-node-ceph-cfg-db",
        "summary": "db",
        "description": "Get the Ceph configuration database.",
        "tags": [
          "/nodes/{node}/ceph/cfg/db"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "can_update_at_runtime": {
                        "type": "boolean"
                      },
                      "level": {
                        "type": "string"
                      },
                      "mask": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "section": {
                        "type": "string"
                      },
                      "value": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "can_update_at_runtime",
                      "level",
                      "mask",
                      "name",
                      "section",
                      "value"
                    ]
                  }
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-nodes-node-ceph-cfg-db",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/",
                [
                  "Sys.Audit",
                  "Datastore.Audit"
                ],
                "any",
                1
              ]
            }
          ]
        }
      }
    },
    "/nodes/{node}/ceph/cfg/raw": {
      "get": {
        "operationId": "get-nodes-node-ceph-cfg-raw",
        "summary": "raw",
        "description": "Get the Ceph configuration file.",
        "tags": [
          "/nodes/{node}/ceph/cfg/raw"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-nodes-node-ceph-cfg-raw",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "security": [],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/",
                [
                  "Sys.Audit",
                  "Datastore.Audit"
                ],
                "any",
                1
              ]
            }
          ]
        }
      }
    },
    "/nodes/{node}/ceph/cfg/value": {
      "get": {
        "operationId": "get-nodes-node-ceph-cfg-value",
        "summary": "value",
        "description": "Get configured values from either the config file or config DB.",
        "tags": [
          "/nodes/{node}/ceph/cfg/value"
        ],
        "responses": {
          "200": {
            "description": "Contains {section}->{key} children with the values",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Contains {section}->{key} children with the values"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-nodes-node-ceph-cfg-value",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "config-keys",
            "in": "query",
            "required": true,
            "description": "List of <section>:<config key> items.",
            "schema": {
              "type": "string",
              "description": "List of <section>:<config key> items.",
              "pattern": "(?^:^(:?(?^i:[0-9a-z\\-_\\.]+:[0-9a-zA-Z\\-_]+))(:?[;, ](?^i:[0-9a-z\\-_\\.]+:[0-9a-zA-Z\\-_]+))*$)",
              "x-proxmox-typetext": "<section>:<config key>[;<section>:<config key>]"
            }
          },
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/",
                [
                  "Sys.Audit"
                ]
              ]
            }
          ]
        }
      }
    },
    "/nodes/{node}/ceph/cmd-safety": {
      "get": {
        "operationId": "get-nodes-node-ceph-cmd-safety",
        "summary": "cmd_safety",
        "description": "Heuristical check if it is safe to perform an action.",
        "tags": [
          "/nodes/{node}/ceph/cmd-safety"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "safe": {
                      "type": "boolean",
                      "description": "If it is safe to run the command."
                    },
                    "status": {
                      "type": "string",
                      "description": "Status message given by Ceph.",
                      "x-proxmox-optional": true
                    }
                  },
                  "required": [
                    "safe"
                  ]
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-nodes-node-ceph-cmd-safety",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "action",
            "in": "query",
            "required": true,
            "description": "Action to check",
            "schema": {
              "type": "string",
              "description": "Action to check",
              "enum": [
                "stop",
                "destroy"
              ]
            }
          },
          {
            "name": "id",
            "in": "query",
            "required": true,
            "description": "ID of the service",
            "schema": {
              "type": "string",
              "description": "ID of the service",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "service",
            "in": "query",
            "required": true,
            "description": "Service type",
            "schema": {
              "type": "string",
              "description": "Service type",
              "enum": [
                "osd",
                "mon",
                "mds"
              ]
            }
          }
        ],
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/",
                [
                  "Sys.Audit"
                ]
              ]
            }
          ]
        }
      }
    },
    "/nodes/{node}/ceph/crush": {
      "get": {
        "operationId": "get-nodes-node-ceph-crush",
        "summary": "crush",
        "description": "Get OSD crush map",
        "tags": [
          "/nodes/{node}/ceph/crush"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-nodes-node-ceph-crush",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/",
                [
                  "Sys.Audit",
                  "Datastore.Audit"
                ],
                "any",
                1
              ]
            }
          ]
        }
      }
    },
    "/nodes/{node}/ceph/fs": {
      "get": {
        "operationId": "get-nodes-node-ceph-fs",
        "summary": "index",
        "description": "Directory index.",
        "tags": [
          "/nodes/{node}/ceph/fs"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "data_pool": {
                        "type": "string",
                        "description": "The name of the data pool."
                      },
                      "metadata_pool": {
                        "type": "string",
                        "description": "The name of the metadata pool."
                      },
                      "name": {
                        "type": "string",
                        "description": "The ceph filesystem name."
                      }
                    },
                    "required": [
                      "data_pool",
                      "metadata_pool",
                      "name"
                    ]
                  },
                  "x-proxmox-metadata": {
                    "links": [
                      {
                        "href": "{name}",
                        "rel": "child"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-nodes-node-ceph-fs",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/",
                [
                  "Sys.Audit",
                  "Datastore.Audit"
                ],
                "any",
                1
              ]
            }
          ]
        }
      }
    },
    "/nodes/{node}/ceph/fs/{name}": {
      "post": {
        "operationId": "post-nodes-node-ceph-fs-name",
        "summary": "createfs",
        "description": "Create a Ceph filesystem",
        "tags": [
          "/nodes/{node}/ceph/fs/{name}"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "post-nodes-node-ceph-fs-name",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "description": "The ceph filesystem name.",
            "schema": {
              "type": "string",
              "description": "The ceph filesystem name.",
              "default": "cephfs",
              "pattern": "(?^:^[^:/\\s]+$)",
              "x-proxmox-optional": true
            }
          },
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "add-storage": {
                    "type": "boolean",
                    "description": "Configure the created CephFS as storage for this cluster.",
                    "default": false,
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "pg_num": {
                    "type": "integer",
                    "description": "Number of placement groups for the backing data pool. The metadata pool will use a quarter of this.",
                    "default": 128,
                    "minimum": 8,
                    "maximum": 32768,
                    "x-proxmox-typetext": "<integer> (8 - 32768)",
                    "x-proxmox-optional": true
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/",
                [
                  "Sys.Modify"
                ]
              ]
            }
          ]
        }
      }
    },
    "/nodes/{node}/ceph/init": {
      "post": {
        "operationId": "post-nodes-node-ceph-init",
        "summary": "init",
        "description": "Create initial ceph default configuration and setup symlinks.",
        "tags": [
          "/nodes/{node}/ceph/init"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "post-nodes-node-ceph-init",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "cluster-network": {
                    "type": "string",
                    "description": "Declare a separate cluster network, OSDs will routeheartbeat, object replication and recovery traffic over it",
                    "maxLength": 128,
                    "format": "CIDR",
                    "x-proxmox-requires": [
                      "network"
                    ],
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "disable_cephx": {
                    "type": "boolean",
                    "description": "Disable cephx authentication.\n\nWARNING: cephx is a security feature protecting against man-in-the-middle attacks. Only consider disabling cephx if your network is private!",
                    "default": false,
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "min_size": {
                    "type": "integer",
                    "description": "Minimum number of available replicas per object to allow I/O",
                    "default": 2,
                    "minimum": 1,
                    "maximum": 7,
                    "x-proxmox-typetext": "<integer> (1 - 7)",
                    "x-proxmox-optional": true
                  },
                  "network": {
                    "type": "string",
                    "description": "Use specific network for all ceph related traffic",
                    "maxLength": 128,
                    "format": "CIDR",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "pg_bits": {
                    "type": "integer",
                    "description": "Placement group bits, used to specify the default number of placement groups.\n\nDepreacted. This setting was deprecated in recent Ceph versions.",
                    "default": 6,
                    "minimum": 6,
                    "maximum": 14,
                    "x-proxmox-typetext": "<integer> (6 - 14)",
                    "x-proxmox-optional": true
                  },
                  "size": {
                    "type": "integer",
                    "description": "Targeted number of replicas per object",
                    "default": 3,
                    "minimum": 1,
                    "maximum": 7,
                    "x-proxmox-typetext": "<integer> (1 - 7)",
                    "x-proxmox-optional": true
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/",
                [
                  "Sys.Modify"
                ]
              ]
            }
          ]
        }
      }
    },
    "/nodes/{node}/ceph/log": {
      "get": {
        "operationId": "get-nodes-node-ceph-log",
        "summary": "log",
        "description": "Read ceph log",
        "tags": [
          "/nodes/{node}/ceph/log"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "n": {
                        "type": "integer",
                        "description": "Line number"
                      },
                      "t": {
                        "type": "string",
                        "description": "Line text"
                      }
                    },
                    "required": [
                      "n",
                      "t"
                    ]
                  }
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-nodes-node-ceph-log",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "x-proxmox-typetext": "<integer> (0 - N)",
              "x-proxmox-optional": true
            }
          },
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "start",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "x-proxmox-typetext": "<integer> (0 - N)",
              "x-proxmox-optional": true
            }
          }
        ],
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/nodes/{node}",
                [
                  "Sys.Syslog"
                ]
              ]
            }
          ]
        }
      }
    },
    "/nodes/{node}/ceph/mds": {
      "get": {
        "operationId": "get-nodes-node-ceph-mds",
        "summary": "index",
        "description": "MDS directory index.",
        "tags": [
          "/nodes/{node}/ceph/mds"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "addr": {
                        "type": "string",
                        "x-proxmox-optional": true
                      },
                      "host": {
                        "type": "string",
                        "x-proxmox-optional": true
                      },
                      "name": {
                        "description": "The name (ID) for the MDS"
                      },
                      "rank": {
                        "type": "integer",
                        "x-proxmox-optional": true
                      },
                      "standby_replay": {
                        "type": "boolean",
                        "description": "If true, the standby MDS is polling the active MDS for faster recovery (hot standby).",
                        "x-proxmox-optional": true
                      },
                      "state": {
                        "type": "string",
                        "description": "State of the MDS"
                      }
                    },
                    "required": [
                      "name",
                      "state"
                    ]
                  },
                  "x-proxmox-metadata": {
                    "links": [
                      {
                        "href": "{name}",
                        "rel": "child"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-nodes-node-ceph-mds",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/",
                [
                  "Sys.Audit",
                  "Datastore.Audit"
                ],
                "any",
                1
              ]
            }
          ]
        }
      }
    },
    "/nodes/{node}/ceph/mds/{name}": {
      "delete": {
        "operationId": "delete-nodes-node-ceph-mds-name",
        "summary": "destroymds",
        "description": "Destroy Ceph Metadata Server",
        "tags": [
          "/nodes/{node}/ceph/mds/{name}"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "delete-nodes-node-ceph-mds-name",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "description": "The name (ID) of the mds",
            "schema": {
              "type": "string",
              "description": "The name (ID) of the mds",
              "pattern": "[a-zA-Z0-9]([a-zA-Z0-9\\-]*[a-zA-Z0-9])?"
            }
          },
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/",
                [
                  "Sys.Modify"
                ]
              ]
            }
          ]
        }
      },
      "post": {
        "operationId": "post-nodes-node-ceph-mds-name",
        "summary": "createmds",
        "description": "Create Ceph Metadata Server (MDS)",
        "tags": [
          "/nodes/{node}/ceph/mds/{name}"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "post-nodes-node-ceph-mds-name",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "description": "The ID for the mds, when omitted the same as the nodename",
            "schema": {
              "type": "string",
              "description": "The ID for the mds, when omitted the same as the nodename",
              "default": "nodename",
              "maxLength": 200,
              "pattern": "[a-zA-Z0-9]([a-zA-Z0-9\\-]*[a-zA-Z0-9])?",
              "x-proxmox-optional": true
            }
          },
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "hotstandby": {
                    "type": "boolean",
                    "description": "Determines whether a ceph-mds daemon should poll and replay the log of an active MDS. Faster switch on MDS failure, but needs more idle resources.",
                    "default": "0",
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/",
                [
                  "Sys.Modify"
                ]
              ]
            }
          ]
        }
      }
    },
    "/nodes/{node}/ceph/mgr": {
      "get": {
        "operationId": "get-nodes-node-ceph-mgr",
        "summary": "index",
        "description": "MGR directory index.",
        "tags": [
          "/nodes/{node}/ceph/mgr"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "addr": {
                        "type": "string",
                        "x-proxmox-optional": true
                      },
                      "host": {
                        "type": "string",
                        "x-proxmox-optional": true
                      },
                      "name": {
                        "description": "The name (ID) for the MGR"
                      },
                      "state": {
                        "type": "string",
                        "description": "State of the MGR"
                      }
                    },
                    "required": [
                      "name",
                      "state"
                    ]
                  },
                  "x-proxmox-metadata": {
                    "links": [
                      {
                        "href": "{name}",
                        "rel": "child"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-nodes-node-ceph-mgr",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/",
                [
                  "Sys.Audit",
                  "Datastore.Audit"
                ],
                "any",
                1
              ]
            }
          ]
        }
      }
    },
    "/nodes/{node}/ceph/mgr/{id}": {
      "delete": {
        "operationId": "delete-nodes-node-ceph-mgr-id",
        "summary": "destroymgr",
        "description": "Destroy Ceph Manager.",
        "tags": [
          "/nodes/{node}/ceph/mgr/{id}"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "delete-nodes-node-ceph-mgr-id",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The ID of the manager",
            "schema": {
              "type": "string",
              "description": "The ID of the manager",
              "pattern": "[a-zA-Z0-9]([a-zA-Z0-9\\-]*[a-zA-Z0-9])?"
            }
          },
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/",
                [
                  "Sys.Modify"
                ]
              ]
            }
          ]
        }
      },
      "post": {
        "operationId": "post-nodes-node-ceph-mgr-id",
        "summary": "createmgr",
        "description": "Create Ceph Manager",
        "tags": [
          "/nodes/{node}/ceph/mgr/{id}"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "post-nodes-node-ceph-mgr-id",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The ID for the manager, when omitted the same as the nodename",
            "schema": {
              "type": "string",
              "description": "The ID for the manager, when omitted the same as the nodename",
              "maxLength": 200,
              "pattern": "[a-zA-Z0-9]([a-zA-Z0-9\\-]*[a-zA-Z0-9])?",
              "x-proxmox-optional": true
            }
          },
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/",
                [
                  "Sys.Modify"
                ]
              ]
            }
          ]
        }
      }
    },
    "/nodes/{node}/ceph/mon": {
      "get": {
        "operationId": "get-nodes-node-ceph-mon",
        "summary": "listmon",
        "description": "Get Ceph monitor list.",
        "tags": [
          "/nodes/{node}/ceph/mon"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "addr": {
                        "type": "string",
                        "x-proxmox-optional": true
                      },
                      "ceph_version": {
                        "type": "string",
                        "x-proxmox-optional": true
                      },
                      "ceph_version_short": {
                        "type": "string",
                        "x-proxmox-optional": true
                      },
                      "direxists": {
                        "type": "string",
                        "x-proxmox-optional": true
                      },
                      "host": {
                        "type": "boolean",
                        "x-proxmox-optional": true
                      },
                      "name": {
                        "type": "string"
                      },
                      "quorum": {
                        "type": "boolean",
                        "x-proxmox-optional": true
                      },
                      "rank": {
                        "type": "integer",
                        "x-proxmox-optional": true
                      },
                      "service": {
                        "type": "integer",
                        "x-proxmox-optional": true
                      },
                      "state": {
                        "type": "string",
                        "x-proxmox-optional": true
                      }
                    },
                    "required": [
                      "name"
                    ]
                  },
                  "x-proxmox-metadata": {
                    "links": [
                      {
                        "href": "{name}",
                        "rel": "child"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-nodes-node-ceph-mon",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/",
                [
                  "Sys.Audit",
                  "Datastore.Audit"
                ],
                "any",
                1
              ]
            }
          ]
        }
      }
    },
    "/nodes/{node}/ceph/mon/{monid}": {
      "delete": {
        "operationId": "delete-nodes-node-ceph-mon-monid",
        "summary": "destroymon",
        "description": "Destroy Ceph Monitor and Manager.",
        "tags": [
          "/nodes/{node}/ceph/mon/{monid}"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "delete-nodes-node-ceph-mon-monid",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "monid",
            "in": "path",
            "required": true,
            "description": "Monitor ID",
            "schema": {
              "type": "string",
              "description": "Monitor ID",
              "pattern": "[a-zA-Z0-9]([a-zA-Z0-9\\-]*[a-zA-Z0-9])?"
            }
          },
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/",
                [
                  "Sys.Modify"
                ]
              ]
            }
          ]
        }
      },
      "post": {
        "operationId": "post-nodes-node-ceph-mon-monid",
        "summary": "createmon",
        "description": "Create Ceph Monitor and Manager",
        "tags": [
          "/nodes/{node}/ceph/mon/{monid}"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "post-nodes-node-ceph-mon-monid",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "monid",
            "in": "path",
            "required": true,
            "description": "The ID for the monitor, when omitted the same as the nodename",
            "schema": {
              "type": "string",
              "description": "The ID for the monitor, when omitted the same as the nodename",
              "maxLength": 200,
              "pattern": "[a-zA-Z0-9]([a-zA-Z0-9\\-]*[a-zA-Z0-9])?",
              "x-proxmox-optional": true
            }
          },
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "mon-address": {
                    "type": "string",
                    "description": "Overwrites autodetected monitor IP address(es). Must be in the public network(s) of Ceph.",
                    "format": "ip-list",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/",
                [
                  "Sys.Modify"
                ]
              ]
            }
          ]
        }
      }
    },
    "/nodes/{node}/ceph/osd": {
      "get": {
        "operationId": "get-nodes-node-ceph-osd",
        "summary": "index",
        "description": "Get Ceph osd list/tree.",
        "tags": [
          "/nodes/{node}/ceph/osd"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "items": {
                    "type": "object",
                    "properties": {
                      "flags": {
                        "type": "string"
                      },
                      "root": {
                        "type": "object",
                        "description": "Tree with OSDs in the CRUSH map structure."
                      }
                    },
                    "required": [
                      "flags",
                      "root"
                    ]
                  }
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-nodes-node-ceph-osd",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/",
                [
                  "Sys.Audit",
                  "Datastore.Audit"
                ],
                "any",
                1
              ]
            }
          ]
        }
      },
      "post": {
        "operationId": "post-nodes-node-ceph-osd",
        "summary": "createosd",
        "description": "Create OSD",
        "tags": [
          "/nodes/{node}/ceph/osd"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "post-nodes-node-ceph-osd",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "crush-device-class": {
                    "type": "string",
                    "description": "Set the device class of the OSD in crush.",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "db_dev": {
                    "type": "string",
                    "description": "Block device name for block.db.",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "db_dev_size": {
                    "type": "number",
                    "description": "Size in GiB for block.db.\n\nIf a block.db is requested but the size is not given, will be automatically selected by: bluestore_block_db_size from the ceph database (osd or global section) or config (osd or global section) in that order. If this is not available, it will be sized 10% of the size of the OSD device. Fails if the available size is not enough.",
                    "default": "bluestore_block_db_size or 10% of OSD size",
                    "minimum": 1,
                    "x-proxmox-requires": [
                      "db_dev"
                    ],
                    "x-proxmox-typetext": "<number> (1 - N)",
                    "x-proxmox-optional": true
                  },
                  "dev": {
                    "type": "string",
                    "description": "Block device name.",
                    "x-proxmox-typetext": "<string>"
                  },
                  "encrypted": {
                    "type": "boolean",
                    "description": "Enables encryption of the OSD.",
                    "default": false,
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "osds-per-device": {
                    "type": "integer",
                    "description": "OSD services per physical device. Only useful for fast NVMe devices\"\n\t\t    .\" to utilize their performance better.",
                    "x-proxmox-typetext": "<integer> (1 - N)",
                    "x-proxmox-optional": true
                  },
                  "wal_dev": {
                    "type": "string",
                    "description": "Block device name for block.wal.",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "wal_dev_size": {
                    "type": "number",
                    "description": "Size in GiB for block.wal.\n\nIf a block.wal is requested but the size is not given, will be automatically selected by: bluestore_block_wal_size from the ceph database (osd or global section) or config (osd or global section) in that order. If this is not available, it will be sized 1% of the size of the OSD device. Fails if the available size is not enough.",
                    "default": "bluestore_block_wal_size or 1% of OSD size",
                    "minimum": 0.5,
                    "x-proxmox-requires": [
                      "wal_dev"
                    ],
                    "x-proxmox-typetext": "<number> (0.5 - N)",
                    "x-proxmox-optional": true
                  }
                },
                "required": [
                  "dev"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ]
      }
    },
    "/nodes/{node}/ceph/osd/{osdid}": {
      "delete": {
        "operationId": "delete-nodes-node-ceph-osd-osdid",
        "summary": "destroyosd",
        "description": "Destroy OSD",
        "tags": [
          "/nodes/{node}/ceph/osd/{osdid}"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "delete-nodes-node-ceph-osd-osdid",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "cleanup",
            "in": "query",
            "required": false,
            "description": "If set, we remove partition table entries.",
            "schema": {
              "type": "boolean",
              "description": "If set, we remove partition table entries.",
              "default": false,
              "x-proxmox-typetext": "<boolean>",
              "x-proxmox-optional": true
            }
          },
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "osdid",
            "in": "path",
            "required": true,
            "description": "OSD ID",
            "schema": {
              "type": "integer",
              "description": "OSD ID",
              "x-proxmox-typetext": "<integer>"
            }
          }
        ],
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ]
      },
      "get": {
        "operationId": "get-nodes-node-ceph-osd-osdid",
        "summary": "osdindex",
        "description": "OSD index.",
        "tags": [
          "/nodes/{node}/ceph/osd/{osdid}"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  },
                  "x-proxmox-metadata": {
                    "links": [
                      {
                        "href": "{name}",
                        "rel": "child"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-nodes-node-ceph-osd-osdid",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "osdid",
            "in": "path",
            "required": true,
            "description": "OSD ID",
            "schema": {
              "type": "integer",
              "description": "OSD ID",
              "x-proxmox-typetext": "<integer>"
            }
          }
        ],
        "security": [],
        "x-proxmox-permissions": {
          "all": [
            {
              "user": "all"
            }
          ]
        }
      }
    },
    "/nodes/{node}/ceph/osd/{osdid}/in": {
      "post": {
        "operationId": "post-nodes-node-ceph-osd-osdid-in",
        "summary": "in",
        "description": "ceph osd in",
        "tags": [
          "/nodes/{node}/ceph/osd/{osdid}/in"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "post-nodes-node-ceph-osd-osdid-in",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "osdid",
            "in": "path",
            "required": true,
            "description": "OSD ID",
            "schema": {
              "type": "integer",
              "description": "OSD ID",
              "x-proxmox-typetext": "<integer>"
            }
          }
        ],
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/",
                [
                  "Sys.Modify"
                ]
              ]
            }
          ]
        }
      }
    },
    "/nodes/{node}/ceph/osd/{osdid}/lv-info": {
      "get": {
        "operationId": "get-nodes-node-ceph-osd-osdid-lv-info",
        "summary": "osdvolume",
        "description": "Get OSD volume details",
        "tags": [
          "/nodes/{node}/ceph/osd/{osdid}/lv-info"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "creation_time": {
                      "type": "string",
                      "description": "Creation time as reported by `lvs`."
                    },
                    "lv_name": {
                      "type": "string",
                      "description": "Name of the logical volume (LV)."
                    },
                    "lv_path": {
                      "type": "string",
                      "description": "Path to the logical volume (LV)."
                    },
                    "lv_size": {
                      "type": "integer",
                      "description": "Size of the logical volume (LV)."
                    },
                    "lv_uuid": {
                      "type": "string",
                      "description": "UUID of the logical volume (LV)."
                    },
                    "vg_name": {
                      "type": "string",
                      "description": "Name of the volume group (VG)."
                    }
                  },
                  "required": [
                    "creation_time",
                    "lv_name",
                    "lv_path",
                    "lv_size",
                    "lv_uuid",
                    "vg_name"
                  ]
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-nodes-node-ceph-osd-osdid-lv-info",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "osdid",
            "in": "path",
            "required": true,
            "description": "OSD ID",
            "schema": {
              "type": "integer",
              "description": "OSD ID",
              "x-proxmox-typetext": "<integer>"
            }
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "description": "OSD device type",
            "schema": {
              "type": "string",
              "description": "OSD device type",
              "enum": [
                "block",
                "db",
                "wal"
              ],
              "default": "block",
              "x-proxmox-optional": true
            }
          }
        ],
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/",
                [
                  "Sys.Audit"
                ],
                "any",
                1
              ]
            }
          ]
        }
      }
    },
    "/nodes/{node}/ceph/osd/{osdid}/metadata": {
      "get": {
        "operationId": "get-nodes-node-ceph-osd-osdid-metadata",
        "summary": "osddetails",
        "description": "Get OSD details",
        "tags": [
          "/nodes/{node}/ceph/osd/{osdid}/metadata"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "devices": {
                      "type": "array",
                      "description": "Array containing data about devices",
                      "items": {
                        "type": "object",
                        "properties": {
                          "dev_node": {
                            "type": "string",
                            "description": "Device node"
                          },
                          "device": {
                            "type": "string",
                            "description": "Kind of OSD device",
                            "enum": [
                              "block",
                              "db",
                              "wal"
                            ]
                          },
                          "devices": {
                            "type": "string",
                            "description": "Physical disks used"
                          },
                          "size": {
                            "type": "integer",
                            "description": "Size in bytes"
                          },
                          "support_discard": {
                            "type": "boolean",
                            "description": "Discard support of the physical device"
                          },
                          "type": {
                            "type": "string",
                            "description": "Type of device. For example, hdd or ssd"
                          }
                        },
                        "required": [
                          "dev_node",
                          "device",
                          "devices",
                          "size",
                          "support_discard",
                          "type"
                        ]
                      }
                    },
                    "osd": {
                      "type": "object",
                      "description": "General information about the OSD",
                      "properties": {
                        "back_addr": {
                          "type": "string",
                          "description": "Address and port used to talk to other OSDs."
                        },
                        "front_addr": {
                          "type": "string",
                          "description": "Address and port used to talk to clients and monitors."
                        },
                        "hb_back_addr": {
                          "type": "string",
                          "description": "Heartbeat address and port for other OSDs."
                        },
                        "hb_front_addr": {
                          "type": "string",
                          "description": "Heartbeat address and port for clients and monitors."
                        },
                        "hostname": {
                          "type": "string",
                          "description": "Name of the host containing the OSD."
                        },
                        "id": {
                          "type": "integer",
                          "description": "ID of the OSD."
                        },
                        "mem_usage": {
                          "type": "integer",
                          "description": "Memory usage of the OSD service."
                        },
                        "osd_data": {
                          "type": "string",
                          "description": "Path to the OSD's data directory."
                        },
                        "osd_objectstore": {
                          "type": "string",
                          "description": "The type of object store used."
                        },
                        "pid": {
                          "type": "integer",
                          "description": "OSD process ID."
                        },
                        "version": {
                          "type": "string",
                          "description": "Ceph version of the OSD service."
                        }
                      },
                      "required": [
                        "back_addr",
                        "front_addr",
                        "hb_back_addr",
                        "hb_front_addr",
                        "hostname",
                        "id",
                        "mem_usage",
                        "osd_data",
                        "osd_objectstore",
                        "pid",
                        "version"
                      ]
                    }
                  },
                  "required": [
                    "devices",
                    "osd"
                  ]
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-nodes-node-ceph-osd-osdid-metadata",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "osdid",
            "in": "path",
            "required": true,
            "description": "OSD ID",
            "schema": {
              "type": "integer",
              "description": "OSD ID",
              "x-proxmox-typetext": "<integer>"
            }
          }
        ],
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/",
                [
                  "Sys.Audit"
                ],
                "any",
                1
              ]
            }
          ]
        }
      }
    },
    "/nodes/{node}/ceph/osd/{osdid}/out": {
      "post": {
        "operationId": "post-nodes-node-ceph-osd-osdid-out",
        "summary": "out",
        "description": "ceph osd out",
        "tags": [
          "/nodes/{node}/ceph/osd/{osdid}/out"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "post-nodes-node-ceph-osd-osdid-out",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "osdid",
            "in": "path",
            "required": true,
            "description": "OSD ID",
            "schema": {
              "type": "integer",
              "description": "OSD ID",
              "x-proxmox-typetext": "<integer>"
            }
          }
        ],
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/",
                [
                  "Sys.Modify"
                ]
              ]
            }
          ]
        }
      }
    },
    "/nodes/{node}/ceph/osd/{osdid}/scrub": {
      "post": {
        "operationId": "post-nodes-node-ceph-osd-osdid-scrub",
        "summary": "scrub",
        "description": "Instruct the OSD to scrub.",
        "tags": [
          "/nodes/{node}/ceph/osd/{osdid}/scrub"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "post-nodes-node-ceph-osd-osdid-scrub",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "osdid",
            "in": "path",
            "required": true,
            "description": "OSD ID",
            "schema": {
              "type": "integer",
              "description": "OSD ID",
              "x-proxmox-typetext": "<integer>"
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "deep": {
                    "type": "boolean",
                    "description": "If set, instructs a deep scrub instead of a normal one.",
                    "default": false,
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/",
                [
                  "Sys.Modify"
                ]
              ]
            }
          ]
        }
      }
    },
    "/nodes/{node}/ceph/pool": {
      "get": {
        "operationId": "get-nodes-node-ceph-pool",
        "summary": "lspools",
        "description": "List all pools and their settings (which are settable by the POST/PUT endpoints).",
        "tags": [
          "/nodes/{node}/ceph/pool"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "application_metadata": {
                        "type": "object",
                        "x-proxmox-optional": true,
                        "x-proxmox-metadata": {
                          "title": "Associated Applications"
                        }
                      },
                      "autoscale_status": {
                        "type": "object",
                        "x-proxmox-optional": true,
                        "x-proxmox-metadata": {
                          "title": "Autoscale Status"
                        }
                      },
                      "bytes_used": {
                        "type": "integer",
                        "x-proxmox-metadata": {
                          "title": "Used"
                        }
                      },
                      "crush_rule": {
                        "type": "integer",
                        "x-proxmox-metadata": {
                          "title": "Crush Rule"
                        }
                      },
                      "crush_rule_name": {
                        "type": "string",
                        "x-proxmox-metadata": {
                          "title": "Crush Rule Name"
                        }
                      },
                      "min_size": {
                        "type": "integer",
                        "x-proxmox-metadata": {
                          "title": "Min Size"
                        }
                      },
                      "percent_used": {
                        "type": "number",
                        "x-proxmox-metadata": {
                          "title": "%-Used"
                        }
                      },
                      "pg_autoscale_mode": {
                        "type": "string",
                        "x-proxmox-optional": true,
                        "x-proxmox-metadata": {
                          "title": "PG Autoscale Mode"
                        }
                      },
                      "pg_num": {
                        "type": "integer",
                        "x-proxmox-metadata": {
                          "title": "PG Num"
                        }
                      },
                      "pg_num_final": {
                        "type": "integer",
                        "x-proxmox-optional": true,
                        "x-proxmox-metadata": {
                          "title": "Optimal PG Num"
                        }
                      },
                      "pg_num_min": {
                        "type": "integer",
                        "x-proxmox-optional": true,
                        "x-proxmox-metadata": {
                          "title": "min. PG Num"
                        }
                      },
                      "pool": {
                        "type": "integer",
                        "x-proxmox-metadata": {
                          "title": "ID"
                        }
                      },
                      "pool_name": {
                        "type": "string",
                        "x-proxmox-metadata": {
                          "title": "Name"
                        }
                      },
                      "size": {
                        "type": "integer",
                        "x-proxmox-metadata": {
                          "title": "Size"
                        }
                      },
                      "target_size": {
                        "type": "integer",
                        "x-proxmox-optional": true,
                        "x-proxmox-metadata": {
                          "title": "PG Autoscale Target Size"
                        }
                      },
                      "target_size_ratio": {
                        "type": "number",
                        "x-proxmox-optional": true,
                        "x-proxmox-metadata": {
                          "title": "PG Autoscale Target Ratio"
                        }
                      },
                      "type": {
                        "type": "string",
                        "enum": [
                          "replicated",
                          "erasure",
                          "unknown"
                        ],
                        "x-proxmox-metadata": {
                          "title": "Type"
                        }
                      }
                    },
                    "required": [
                      "bytes_used",
                      "crush_rule",
                      "crush_rule_name",
                      "min_size",
                      "percent_used",
                      "pg_num",
                      "pool",
                      "pool_name",
                      "size",
                      "type"
                    ]
                  },
                  "x-proxmox-metadata": {
                    "links": [
                      {
                        "href": "{pool_name}",
                        "rel": "child"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-nodes-node-ceph-pool",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/",
                [
                  "Sys.Audit",
                  "Datastore.Audit"
                ],
                "any",
                1
              ]
            }
          ]
        }
      },
      "post": {
        "operationId": "post-nodes-node-ceph-pool",
        "summary": "createpool",
        "description": "Create Ceph pool",
        "tags": [
          "/nodes/{node}/ceph/pool"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "post-nodes-node-ceph-pool",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "add_storages": {
                    "type": "boolean",
                    "description": "Configure VM and CT storage using the new pool.",
                    "default": "0; for erasure coded pools: 1",
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "application": {
                    "type": "string",
                    "description": "The application of the pool.",
                    "enum": [
                      "rbd",
                      "cephfs",
                      "rgw"
                    ],
                    "default": "rbd",
                    "x-proxmox-optional": true,
                    "x-proxmox-metadata": {
                      "title": "Application"
                    }
                  },
                  "crush_rule": {
                    "type": "string",
                    "description": "The rule to use for mapping object placement in the cluster.",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true,
                    "x-proxmox-metadata": {
                      "title": "Crush Rule Name"
                    }
                  },
                  "erasure-coding": {
                    "type": "string",
                    "description": "Create an erasure coded pool for RBD with an accompaning replicated pool for metadata storage. With EC, the common ceph options 'size', 'min_size' and 'crush_rule' parameters will be applied to the metadata pool.",
                    "x-proxmox-typetext": "k=<integer> ,m=<integer> [,device-class=<class>] [,failure-domain=<domain>] [,profile=<profile>]",
                    "x-proxmox-optional": true
                  },
                  "min_size": {
                    "type": "integer",
                    "description": "Minimum number of replicas per object",
                    "default": 2,
                    "minimum": 1,
                    "maximum": 7,
                    "x-proxmox-typetext": "<integer> (1 - 7)",
                    "x-proxmox-optional": true,
                    "x-proxmox-metadata": {
                      "title": "Min Size"
                    }
                  },
                  "name": {
                    "type": "string",
                    "description": "The name of the pool. It must be unique.",
                    "pattern": "(?^:^[^:/\\s]+$)",
                    "x-proxmox-metadata": {
                      "title": "Name"
                    }
                  },
                  "pg_autoscale_mode": {
                    "type": "string",
                    "description": "The automatic PG scaling mode of the pool.",
                    "enum": [
                      "on",
                      "off",
                      "warn"
                    ],
                    "default": "warn",
                    "x-proxmox-optional": true,
                    "x-proxmox-metadata": {
                      "title": "PG Autoscale Mode"
                    }
                  },
                  "pg_num": {
                    "type": "integer",
                    "description": "Number of placement groups.",
                    "default": 128,
                    "minimum": 1,
                    "maximum": 32768,
                    "x-proxmox-typetext": "<integer> (1 - 32768)",
                    "x-proxmox-optional": true,
                    "x-proxmox-metadata": {
                      "title": "PG Num"
                    }
                  },
                  "pg_num_min": {
                    "type": "integer",
                    "description": "Minimal number of placement groups.",
                    "maximum": 32768,
                    "x-proxmox-typetext": "<integer> (-N - 32768)",
                    "x-proxmox-optional": true,
                    "x-proxmox-metadata": {
                      "title": "min. PG Num"
                    }
                  },
                  "size": {
                    "type": "integer",
                    "description": "Number of replicas per object",
                    "default": 3,
                    "minimum": 1,
                    "maximum": 7,
                    "x-proxmox-typetext": "<integer> (1 - 7)",
                    "x-proxmox-optional": true,
                    "x-proxmox-metadata": {
                      "title": "Size"
                    }
                  },
                  "target_size": {
                    "type": "string",
                    "description": "The estimated target size of the pool for the PG autoscaler.",
                    "pattern": "^(\\d+(\\.\\d+)?)([KMGT])?$",
                    "x-proxmox-optional": true,
                    "x-proxmox-metadata": {
                      "title": "PG Autoscale Target Size"
                    }
                  },
                  "target_size_ratio": {
                    "type": "number",
                    "description": "The estimated target ratio of the pool for the PG autoscaler.",
                    "x-proxmox-typetext": "<number>",
                    "x-proxmox-optional": true,
                    "x-proxmox-metadata": {
                      "title": "PG Autoscale Target Ratio"
                    }
                  }
                },
                "required": [
                  "name"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/",
                [
                  "Sys.Modify"
                ]
              ]
            }
          ]
        }
      }
    },
    "/nodes/{node}/ceph/pool/{name}": {
      "delete": {
        "operationId": "delete-nodes-node-ceph-pool-name",
        "summary": "destroypool",
        "description": "Destroy pool",
        "tags": [
          "/nodes/{node}/ceph/pool/{name}"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "delete-nodes-node-ceph-pool-name",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "force",
            "in": "query",
            "required": false,
            "description": "If true, destroys pool even if in use",
            "schema": {
              "type": "boolean",
              "description": "If true, destroys pool even if in use",
              "default": false,
              "x-proxmox-typetext": "<boolean>",
              "x-proxmox-optional": true
            }
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "description": "The name of the pool. It must be unique.",
            "schema": {
              "type": "string",
              "description": "The name of the pool. It must be unique.",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "remove_ecprofile",
            "in": "query",
            "required": false,
            "description": "Remove the erasure code profile. Defaults to true, if applicable.",
            "schema": {
              "type": "boolean",
              "description": "Remove the erasure code profile. Defaults to true, if applicable.",
              "default": true,
              "x-proxmox-typetext": "<boolean>",
              "x-proxmox-optional": true
            }
          },
          {
            "name": "remove_storages",
            "in": "query",
            "required": false,
            "description": "Remove all pveceph-managed storages configured for this pool",
            "schema": {
              "type": "boolean",
              "description": "Remove all pveceph-managed storages configured for this pool",
              "default": false,
              "x-proxmox-typetext": "<boolean>",
              "x-proxmox-optional": true
            }
          }
        ],
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/",
                [
                  "Sys.Modify"
                ]
              ]
            }
          ]
        }
      },
      "get": {
        "operationId": "get-nodes-node-ceph-pool-name",
        "summary": "poolindex",
        "description": "Pool index.",
        "tags": [
          "/nodes/{node}/ceph/pool/{name}"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  },
                  "x-proxmox-metadata": {
                    "links": [
                      {
                        "href": "{name}",
                        "rel": "child"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-nodes-node-ceph-pool-name",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "description": "The name of the pool.",
            "schema": {
              "type": "string",
              "description": "The name of the pool.",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "security": [],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/",
                [
                  "Sys.Audit",
                  "Datastore.Audit"
                ],
                "any",
                1
              ]
            }
          ]
        }
      },
      "put": {
        "operationId": "put-nodes-node-ceph-pool-name",
        "summary": "setpool",
        "description": "Change POOL settings",
        "tags": [
          "/nodes/{node}/ceph/pool/{name}"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "put-nodes-node-ceph-pool-name",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "description": "The name of the pool. It must be unique.",
            "schema": {
              "type": "string",
              "description": "The name of the pool. It must be unique.",
              "pattern": "(?^:^[^:/\\s]+$)",
              "x-proxmox-metadata": {
                "title": "Name"
              }
            }
          },
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "application": {
                    "type": "string",
                    "description": "The application of the pool.",
                    "enum": [
                      "rbd",
                      "cephfs",
                      "rgw"
                    ],
                    "x-proxmox-optional": true,
                    "x-proxmox-metadata": {
                      "title": "Application"
                    }
                  },
                  "crush_rule": {
                    "type": "string",
                    "description": "The rule to use for mapping object placement in the cluster.",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true,
                    "x-proxmox-metadata": {
                      "title": "Crush Rule Name"
                    }
                  },
                  "min_size": {
                    "type": "integer",
                    "description": "Minimum number of replicas per object",
                    "minimum": 1,
                    "maximum": 7,
                    "x-proxmox-typetext": "<integer> (1 - 7)",
                    "x-proxmox-optional": true,
                    "x-proxmox-metadata": {
                      "title": "Min Size"
                    }
                  },
                  "pg_autoscale_mode": {
                    "type": "string",
                    "description": "The automatic PG scaling mode of the pool.",
                    "enum": [
                      "on",
                      "off",
                      "warn"
                    ],
                    "x-proxmox-optional": true,
                    "x-proxmox-metadata": {
                      "title": "PG Autoscale Mode"
                    }
                  },
                  "pg_num": {
                    "type": "integer",
                    "description": "Number of placement groups.",
                    "minimum": 1,
                    "maximum": 32768,
                    "x-proxmox-typetext": "<integer> (1 - 32768)",
                    "x-proxmox-optional": true,
                    "x-proxmox-metadata": {
                      "title": "PG Num"
                    }
                  },
                  "pg_num_min": {
                    "type": "integer",
                    "description": "Minimal number of placement groups.",
                    "maximum": 32768,
                    "x-proxmox-typetext": "<integer> (-N - 32768)",
                    "x-proxmox-optional": true,
                    "x-proxmox-metadata": {
                      "title": "min. PG Num"
                    }
                  },
                  "size": {
                    "type": "integer",
                    "description": "Number of replicas per object",
                    "minimum": 1,
                    "maximum": 7,
                    "x-proxmox-typetext": "<integer> (1 - 7)",
                    "x-proxmox-optional": true,
                    "x-proxmox-metadata": {
                      "title": "Size"
                    }
                  },
                  "target_size": {
                    "type": "string",
                    "description": "The estimated target size of the pool for the PG autoscaler.",
                    "pattern": "^(\\d+(\\.\\d+)?)([KMGT])?$",
                    "x-proxmox-optional": true,
                    "x-proxmox-metadata": {
                      "title": "PG Autoscale Target Size"
                    }
                  },
                  "target_size_ratio": {
                    "type": "number",
                    "description": "The estimated target ratio of the pool for the PG autoscaler.",
                    "x-proxmox-typetext": "<number>",
                    "x-proxmox-optional": true,
                    "x-proxmox-metadata": {
                      "title": "PG Autoscale Target Ratio"
                    }
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/",
                [
                  "Sys.Modify"
                ]
              ]
            }
          ]
        }
      }
    },
    "/nodes/{node}/ceph/pool/{name}/status": {
      "get": {
        "operationId": "get-nodes-node-ceph-pool-name-status",
        "summary": "getpool",
        "description": "Show the current pool status.",
        "tags": [
          "/nodes/{node}/ceph/pool/{name}/status"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "application": {
                      "type": "string",
                      "description": "The application of the pool.",
                      "enum": [
                        "rbd",
                        "cephfs",
                        "rgw"
                      ],
                      "default": "rbd",
                      "x-proxmox-optional": true,
                      "x-proxmox-metadata": {
                        "title": "Application"
                      }
                    },
                    "application_list": {
                      "type": "array",
                      "x-proxmox-optional": true,
                      "x-proxmox-metadata": {
                        "title": "Application"
                      }
                    },
                    "autoscale_status": {
                      "type": "object",
                      "x-proxmox-optional": true,
                      "x-proxmox-metadata": {
                        "title": "Autoscale Status"
                      }
                    },
                    "crush_rule": {
                      "type": "string",
                      "description": "The rule to use for mapping object placement in the cluster.",
                      "x-proxmox-optional": true,
                      "x-proxmox-metadata": {
                        "title": "Crush Rule Name"
                      }
                    },
                    "fast_read": {
                      "type": "boolean",
                      "x-proxmox-metadata": {
                        "title": "Fast Read"
                      }
                    },
                    "hashpspool": {
                      "type": "boolean",
                      "x-proxmox-metadata": {
                        "title": "hashpspool"
                      }
                    },
                    "id": {
                      "type": "integer",
                      "x-proxmox-metadata": {
                        "title": "ID"
                      }
                    },
                    "min_size": {
                      "type": "integer",
                      "description": "Minimum number of replicas per object",
                      "default": 2,
                      "minimum": 1,
                      "maximum": 7,
                      "x-proxmox-optional": true,
                      "x-proxmox-metadata": {
                        "title": "Min Size"
                      }
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of the pool. It must be unique.",
                      "pattern": "(?^:^[^:/\\s]+$)",
                      "x-proxmox-metadata": {
                        "title": "Name"
                      }
                    },
                    "nodeep-scrub": {
                      "type": "boolean",
                      "x-proxmox-metadata": {
                        "title": "nodeep-scrub"
                      }
                    },
                    "nodelete": {
                      "type": "boolean",
                      "x-proxmox-metadata": {
                        "title": "nodelete"
                      }
                    },
                    "nopgchange": {
                      "type": "boolean",
                      "x-proxmox-metadata": {
                        "title": "nopgchange"
                      }
                    },
                    "noscrub": {
                      "type": "boolean",
                      "x-proxmox-metadata": {
                        "title": "noscrub"
                      }
                    },
                    "nosizechange": {
                      "type": "boolean",
                      "x-proxmox-metadata": {
                        "title": "nosizechange"
                      }
                    },
                    "pg_autoscale_mode": {
                      "type": "string",
                      "description": "The automatic PG scaling mode of the pool.",
                      "enum": [
                        "on",
                        "off",
                        "warn"
                      ],
                      "default": "warn",
                      "x-proxmox-optional": true,
                      "x-proxmox-metadata": {
                        "title": "PG Autoscale Mode"
                      }
                    },
                    "pg_num": {
                      "type": "integer",
                      "description": "Number of placement groups.",
                      "default": 128,
                      "minimum": 1,
                      "maximum": 32768,
                      "x-proxmox-optional": true,
                      "x-proxmox-metadata": {
                        "title": "PG Num"
                      }
                    },
                    "pg_num_min": {
                      "type": "integer",
                      "description": "Minimal number of placement groups.",
                      "maximum": 32768,
                      "x-proxmox-optional": true,
                      "x-proxmox-metadata": {
                        "title": "min. PG Num"
                      }
                    },
                    "pgp_num": {
                      "type": "integer",
                      "x-proxmox-metadata": {
                        "title": "PGP num"
                      }
                    },
                    "size": {
                      "type": "integer",
                      "description": "Number of replicas per object",
                      "default": 3,
                      "minimum": 1,
                      "maximum": 7,
                      "x-proxmox-optional": true,
                      "x-proxmox-metadata": {
                        "title": "Size"
                      }
                    },
                    "statistics": {
                      "type": "object",
                      "x-proxmox-optional": true,
                      "x-proxmox-metadata": {
                        "title": "Statistics"
                      }
                    },
                    "target_size": {
                      "type": "string",
                      "description": "The estimated target size of the pool for the PG autoscaler.",
                      "pattern": "^(\\d+(\\.\\d+)?)([KMGT])?$",
                      "x-proxmox-optional": true,
                      "x-proxmox-metadata": {
                        "title": "PG Autoscale Target Size"
                      }
                    },
                    "target_size_ratio": {
                      "type": "number",
                      "description": "The estimated target ratio of the pool for the PG autoscaler.",
                      "x-proxmox-optional": true,
                      "x-proxmox-metadata": {
                        "title": "PG Autoscale Target Ratio"
                      }
                    },
                    "use_gmt_hitset": {
                      "type": "boolean",
                      "x-proxmox-metadata": {
                        "title": "use_gmt_hitset"
                      }
                    },
                    "write_fadvise_dontneed": {
                      "type": "boolean",
                      "x-proxmox-metadata": {
                        "title": "write_fadvise_dontneed"
                      }
                    }
                  },
                  "required": [
                    "fast_read",
                    "hashpspool",
                    "id",
                    "name",
                    "nodeep-scrub",
                    "nodelete",
                    "nopgchange",
                    "noscrub",
                    "nosizechange",
                    "pgp_num",
                    "use_gmt_hitset",
                    "write_fadvise_dontneed"
                  ]
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-nodes-node-ceph-pool-name-status",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "description": "The name of the pool. It must be unique.",
            "schema": {
              "type": "string",
              "description": "The name of the pool. It must be unique.",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "verbose",
            "in": "query",
            "required": false,
            "description": "If enabled, will display additional data(eg. statistics).",
            "schema": {
              "type": "boolean",
              "description": "If enabled, will display additional data(eg. statistics).",
              "default": false,
              "x-proxmox-typetext": "<boolean>",
              "x-proxmox-optional": true
            }
          }
        ],
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/",
                [
                  "Sys.Audit",
                  "Datastore.Audit"
                ],
                "any",
                1
              ]
            }
          ]
        }
      }
    },
    "/nodes/{node}/ceph/restart": {
      "post": {
        "operationId": "post-nodes-node-ceph-restart",
        "summary": "restart",
        "description": "Restart ceph services.",
        "tags": [
          "/nodes/{node}/ceph/restart"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "post-nodes-node-ceph-restart",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "service": {
                    "type": "string",
                    "description": "Ceph service name.",
                    "default": "ceph.target",
                    "pattern": "(mon|mds|osd|mgr)(\\.[a-zA-Z0-9]([a-zA-Z0-9\\-]*[a-zA-Z0-9])?)?",
                    "x-proxmox-optional": true
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/",
                [
                  "Sys.Modify"
                ]
              ]
            }
          ]
        }
      }
    },
    "/nodes/{node}/ceph/rules": {
      "get": {
        "operationId": "get-nodes-node-ceph-rules",
        "summary": "rules",
        "description": "List ceph rules.",
        "tags": [
          "/nodes/{node}/ceph/rules"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "Name of the CRUSH rule."
                      }
                    },
                    "required": [
                      "name"
                    ]
                  },
                  "x-proxmox-metadata": {
                    "links": [
                      {
                        "href": "{name}",
                        "rel": "child"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-nodes-node-ceph-rules",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/",
                [
                  "Sys.Audit",
                  "Datastore.Audit"
                ],
                "any",
                1
              ]
            }
          ]
        }
      }
    },
    "/nodes/{node}/ceph/start": {
      "post": {
        "operationId": "post-nodes-node-ceph-start",
        "summary": "start",
        "description": "Start ceph services.",
        "tags": [
          "/nodes/{node}/ceph/start"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "post-nodes-node-ceph-start",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "service": {
                    "type": "string",
                    "description": "Ceph service name.",
                    "default": "ceph.target",
                    "pattern": "(ceph|mon|mds|osd|mgr)(\\.[a-zA-Z0-9]([a-zA-Z0-9\\-]*[a-zA-Z0-9])?)?",
                    "x-proxmox-optional": true
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/",
                [
                  "Sys.Modify"
                ]
              ]
            }
          ]
        }
      }
    },
    "/nodes/{node}/ceph/status": {
      "get": {
        "operationId": "get-nodes-node-ceph-status",
        "summary": "status",
        "description": "Get ceph status.",
        "tags": [
          "/nodes/{node}/ceph/status"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-nodes-node-ceph-status",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/",
                [
                  "Sys.Audit",
                  "Datastore.Audit"
                ],
                "any",
                1
              ]
            }
          ]
        }
      }
    },
    "/nodes/{node}/ceph/stop": {
      "post": {
        "operationId": "post-nodes-node-ceph-stop",
        "summary": "stop",
        "description": "Stop ceph services.",
        "tags": [
          "/nodes/{node}/ceph/stop"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "post-nodes-node-ceph-stop",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "service": {
                    "type": "string",
                    "description": "Ceph service name.",
                    "default": "ceph.target",
                    "pattern": "(ceph|mon|mds|osd|mgr)(\\.[a-zA-Z0-9]([a-zA-Z0-9\\-]*[a-zA-Z0-9])?)?",
                    "x-proxmox-optional": true
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/",
                [
                  "Sys.Modify"
                ]
              ]
            }
          ]
        }
      }
    },
    "/nodes/{node}/certificates": {
      "get": {
        "operationId": "get-nodes-node-certificates",
        "summary": "index",
        "description": "Node index.",
        "tags": [
          "/nodes/{node}/certificates"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  },
                  "x-proxmox-metadata": {
                    "links": [
                      {
                        "href": "{name}",
                        "rel": "child"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-nodes-node-certificates",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "security": [],
        "x-proxmox-permissions": {
          "all": [
            {
              "user": "all"
            }
          ]
        }
      }
    },
    "/nodes/{node}/certificates/acme": {
      "get": {
        "operationId": "get-nodes-node-certificates-acme",
        "summary": "index",
        "description": "ACME index.",
        "tags": [
          "/nodes/{node}/certificates/acme"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  },
                  "x-proxmox-metadata": {
                    "links": [
                      {
                        "href": "{name}",
                        "rel": "child"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-nodes-node-certificates-acme",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "security": [],
        "x-proxmox-permissions": {
          "all": [
            {
              "user": "all"
            }
          ]
        }
      }
    },
    "/nodes/{node}/certificates/acme/certificate": {
      "delete": {
        "operationId": "delete-nodes-node-certificates-acme-certificate",
        "summary": "revoke_certificate",
        "description": "Revoke existing certificate from CA.",
        "tags": [
          "/nodes/{node}/certificates/acme/certificate"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "delete-nodes-node-certificates-acme-certificate",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/nodes/{node}",
                [
                  "Sys.Modify"
                ]
              ]
            }
          ]
        }
      },
      "post": {
        "operationId": "post-nodes-node-certificates-acme-certificate",
        "summary": "new_certificate",
        "description": "Order a new certificate from ACME-compatible CA.",
        "tags": [
          "/nodes/{node}/certificates/acme/certificate"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "post-nodes-node-certificates-acme-certificate",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "force": {
                    "type": "boolean",
                    "description": "Overwrite existing custom certificate.",
                    "default": false,
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/nodes/{node}",
                [
                  "Sys.Modify"
                ]
              ]
            }
          ]
        }
      },
      "put": {
        "operationId": "put-nodes-node-certificates-acme-certificate",
        "summary": "renew_certificate",
        "description": "Renew existing certificate from CA.",
        "tags": [
          "/nodes/{node}/certificates/acme/certificate"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "put-nodes-node-certificates-acme-certificate",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "force": {
                    "type": "boolean",
                    "description": "Force renewal even if expiry is more than 30 days away.",
                    "default": false,
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/nodes/{node}",
                [
                  "Sys.Modify"
                ]
              ]
            }
          ]
        }
      }
    },
    "/nodes/{node}/certificates/custom": {
      "delete": {
        "operationId": "delete-nodes-node-certificates-custom",
        "summary": "remove_custom_cert",
        "description": "DELETE custom certificate chain and key.",
        "tags": [
          "/nodes/{node}/certificates/custom"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "delete-nodes-node-certificates-custom",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "restart",
            "in": "query",
            "required": false,
            "description": "Restart pveproxy.",
            "schema": {
              "type": "boolean",
              "description": "Restart pveproxy.",
              "default": false,
              "x-proxmox-typetext": "<boolean>",
              "x-proxmox-optional": true
            }
          }
        ],
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/nodes/{node}",
                [
                  "Sys.Modify"
                ]
              ]
            }
          ]
        }
      },
      "post": {
        "operationId": "post-nodes-node-certificates-custom",
        "summary": "upload_custom_cert",
        "description": "Upload or update custom certificate chain and key.",
        "tags": [
          "/nodes/{node}/certificates/custom"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "filename": {
                      "type": "string",
                      "x-proxmox-optional": true
                    },
                    "fingerprint": {
                      "type": "string",
                      "description": "Certificate SHA 256 fingerprint.",
                      "pattern": "([A-Fa-f0-9]{2}:){31}[A-Fa-f0-9]{2}",
                      "x-proxmox-optional": true
                    },
                    "issuer": {
                      "type": "string",
                      "description": "Certificate issuer name.",
                      "x-proxmox-optional": true
                    },
                    "notafter": {
                      "type": "integer",
                      "description": "Certificate's notAfter timestamp (UNIX epoch).",
                      "x-proxmox-optional": true,
                      "x-proxmox-metadata": {
                        "renderer": "timestamp"
                      }
                    },
                    "notbefore": {
                      "type": "integer",
                      "description": "Certificate's notBefore timestamp (UNIX epoch).",
                      "x-proxmox-optional": true,
                      "x-proxmox-metadata": {
                        "renderer": "timestamp"
                      }
                    },
                    "pem": {
                      "type": "string",
                      "description": "Certificate in PEM format",
                      "format": "pem-certificate",
                      "x-proxmox-optional": true
                    },
                    "public-key-bits": {
                      "type": "integer",
                      "description": "Certificate's public key size",
                      "x-proxmox-optional": true
                    },
                    "public-key-type": {
                      "type": "string",
                      "description": "Certificate's public key algorithm",
                      "x-proxmox-optional": true
                    },
                    "san": {
                      "type": "array",
                      "description": "List of Certificate's SubjectAlternativeName entries.",
                      "items": {
                        "type": "string"
                      },
                      "x-proxmox-optional": true,
                      "x-proxmox-metadata": {
                        "renderer": "yaml"
                      }
                    },
                    "subject": {
                      "type": "string",
                      "description": "Certificate subject name.",
                      "x-proxmox-optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "post-nodes-node-certificates-custom",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "certificates": {
                    "type": "string",
                    "description": "PEM encoded certificate (chain).",
                    "format": "pem-certificate-chain",
                    "x-proxmox-typetext": "<string>"
                  },
                  "force": {
                    "type": "boolean",
                    "description": "Overwrite existing custom or ACME certificate files.",
                    "default": false,
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "key": {
                    "type": "string",
                    "description": "PEM encoded private key.",
                    "format": "pem-string",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "restart": {
                    "type": "boolean",
                    "description": "Restart pveproxy.",
                    "default": false,
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  }
                },
                "required": [
                  "certificates"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/nodes/{node}",
                [
                  "Sys.Modify"
                ]
              ]
            }
          ]
        }
      }
    },
    "/nodes/{node}/certificates/info": {
      "get": {
        "operationId": "get-nodes-node-certificates-info",
        "summary": "info",
        "description": "Get information about node's certificates.",
        "tags": [
          "/nodes/{node}/certificates/info"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "filename": {
                        "type": "string",
                        "x-proxmox-optional": true
                      },
                      "fingerprint": {
                        "type": "string",
                        "description": "Certificate SHA 256 fingerprint.",
                        "pattern": "([A-Fa-f0-9]{2}:){31}[A-Fa-f0-9]{2}",
                        "x-proxmox-optional": true
                      },
                      "issuer": {
                        "type": "string",
                        "description": "Certificate issuer name.",
                        "x-proxmox-optional": true
                      },
                      "notafter": {
                        "type": "integer",
                        "description": "Certificate's notAfter timestamp (UNIX epoch).",
                        "x-proxmox-optional": true,
                        "x-proxmox-metadata": {
                          "renderer": "timestamp"
                        }
                      },
                      "notbefore": {
                        "type": "integer",
                        "description": "Certificate's notBefore timestamp (UNIX epoch).",
                        "x-proxmox-optional": true,
                        "x-proxmox-metadata": {
                          "renderer": "timestamp"
                        }
                      },
                      "pem": {
                        "type": "string",
                        "description": "Certificate in PEM format",
                        "format": "pem-certificate",
                        "x-proxmox-optional": true
                      },
                      "public-key-bits": {
                        "type": "integer",
                        "description": "Certificate's public key size",
                        "x-proxmox-optional": true
                      },
                      "public-key-type": {
                        "type": "string",
                        "description": "Certificate's public key algorithm",
                        "x-proxmox-optional": true
                      },
                      "san": {
                        "type": "array",
                        "description": "List of Certificate's SubjectAlternativeName entries.",
                        "items": {
                          "type": "string"
                        },
                        "x-proxmox-optional": true,
                        "x-proxmox-metadata": {
                          "renderer": "yaml"
                        }
                      },
                      "subject": {
                        "type": "string",
                        "description": "Certificate subject name.",
                        "x-proxmox-optional": true
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-nodes-node-certificates-info",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "security": [],
        "x-proxmox-permissions": {
          "all": [
            {
              "user": "all"
            }
          ]
        }
      }
    },
    "/nodes/{node}/config": {
      "get": {
        "operationId": "get-nodes-node-config",
        "summary": "get_config",
        "description": "Get node configuration options.",
        "tags": [
          "/nodes/{node}/config"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "acme": {
                      "type": "string",
                      "description": "Node specific ACME settings.",
                      "x-proxmox-optional": true
                    },
                    "acmedomain[n]": {
                      "type": "string",
                      "description": "ACME domain and validation plugin",
                      "x-proxmox-optional": true
                    },
                    "ballooning-target": {
                      "type": "integer",
                      "description": "RAM usage target for ballooning (in percent of total memory)",
                      "default": 80,
                      "minimum": 0,
                      "maximum": 100,
                      "x-proxmox-optional": true
                    },
                    "description": {
                      "type": "string",
                      "description": "Description for the Node. Shown in the web-interface node notes panel. This is saved as comment inside the configuration file.",
                      "maxLength": 65536,
                      "x-proxmox-optional": true
                    },
                    "digest": {
                      "type": "string",
                      "description": "Prevent changes if current configuration file has different SHA1 digest. This can be used to prevent concurrent modifications.",
                      "maxLength": 40,
                      "x-proxmox-optional": true
                    },
                    "startall-onboot-delay": {
                      "type": "integer",
                      "description": "Initial delay in seconds, before starting all the Virtual Guests with on-boot enabled.",
                      "default": 0,
                      "minimum": 0,
                      "maximum": 300,
                      "x-proxmox-optional": true
                    },
                    "wakeonlan": {
                      "type": "string",
                      "description": "Node specific wake on LAN settings.",
                      "x-proxmox-optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-nodes-node-config",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "property",
            "in": "query",
            "required": false,
            "description": "Return only a specific property from the node configuration.",
            "schema": {
              "type": "string",
              "description": "Return only a specific property from the node configuration.",
              "enum": [
                "acme",
                "acmedomain0",
                "acmedomain1",
                "acmedomain2",
                "acmedomain3",
                "acmedomain4",
                "acmedomain5",
                "ballooning-target",
                "description",
                "startall-onboot-delay",
                "wakeonlan"
              ],
              "default": "all",
              "x-proxmox-optional": true
            }
          }
        ],
        "security": [],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/",
                [
                  "Sys.Audit"
                ]
              ]
            }
          ]
        }
      },
      "put": {
        "operationId": "put-nodes-node-config",
        "summary": "set_options",
        "description": "Set node configuration options.",
        "tags": [
          "/nodes/{node}/config"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "put-nodes-node-config",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "acme": {
                    "type": "string",
                    "description": "Node specific ACME settings.",
                    "x-proxmox-typetext": "[account=<name>] [,domains=<domain[;domain;...]>]",
                    "x-proxmox-optional": true
                  },
                  "acmedomain[n]": {
                    "type": "string",
                    "description": "ACME domain and validation plugin",
                    "x-proxmox-typetext": "[domain=]<domain> [,alias=<domain>] [,plugin=<name of the plugin configuration>]",
                    "x-proxmox-optional": true
                  },
                  "ballooning-target": {
                    "type": "integer",
                    "description": "RAM usage target for ballooning (in percent of total memory)",
                    "default": 80,
                    "minimum": 0,
                    "maximum": 100,
                    "x-proxmox-typetext": "<integer> (0 - 100)",
                    "x-proxmox-optional": true
                  },
                  "delete": {
                    "type": "string",
                    "description": "A list of settings you want to delete.",
                    "format": "pve-configid-list",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "description": {
                    "type": "string",
                    "description": "Description for the Node. Shown in the web-interface node notes panel. This is saved as comment inside the configuration file.",
                    "maxLength": 65536,
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "digest": {
                    "type": "string",
                    "description": "Prevent changes if current configuration file has different SHA1 digest. This can be used to prevent concurrent modifications.",
                    "maxLength": 40,
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "startall-onboot-delay": {
                    "type": "integer",
                    "description": "Initial delay in seconds, before starting all the Virtual Guests with on-boot enabled.",
                    "default": 0,
                    "minimum": 0,
                    "maximum": 300,
                    "x-proxmox-typetext": "<integer> (0 - 300)",
                    "x-proxmox-optional": true
                  },
                  "wakeonlan": {
                    "type": "string",
                    "description": "Node specific wake on LAN settings.",
                    "x-proxmox-typetext": "[mac=]<MAC address> [,bind-interface=<bind interface>] [,broadcast-address=<IPv4 broadcast address>]",
                    "x-proxmox-optional": true
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/",
                [
                  "Sys.Modify"
                ]
              ]
            }
          ]
        }
      }
    },
    "/nodes/{node}/disks": {
      "get": {
        "operationId": "get-nodes-node-disks",
        "summary": "index",
        "description": "Node index.",
        "tags": [
          "/nodes/{node}/disks"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  },
                  "x-proxmox-metadata": {
                    "links": [
                      {
                        "href": "{name}",
                        "rel": "child"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-nodes-node-disks",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "security": [],
        "x-proxmox-permissions": {
          "all": [
            {
              "user": "all"
            }
          ]
        }
      }
    },
    "/nodes/{node}/disks/directory": {
      "get": {
        "operationId": "get-nodes-node-disks-directory",
        "summary": "index",
        "description": "PVE Managed Directory storages.",
        "tags": [
          "/nodes/{node}/disks/directory"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "device": {
                        "type": "string",
                        "description": "The mounted device."
                      },
                      "options": {
                        "type": "string",
                        "description": "The mount options."
                      },
                      "path": {
                        "type": "string",
                        "description": "The mount path."
                      },
                      "type": {
                        "type": "string",
                        "description": "The filesystem type."
                      },
                      "unitfile": {
                        "type": "string",
                        "description": "The path of the mount unit."
                      }
                    },
                    "required": [
                      "device",
                      "options",
                      "path",
                      "type",
                      "unitfile"
                    ]
                  }
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-nodes-node-disks-directory",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/",
                [
                  "Sys.Audit"
                ]
              ]
            }
          ]
        }
      },
      "post": {
        "operationId": "post-nodes-node-disks-directory",
        "summary": "create",
        "description": "Create a Filesystem on an unused disk. Will be mounted under '/mnt/pve/NAME'.",
        "tags": [
          "/nodes/{node}/disks/directory"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "post-nodes-node-disks-directory",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "add_storage": {
                    "type": "boolean",
                    "description": "Configure storage using the directory.",
                    "default": false,
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "device": {
                    "type": "string",
                    "description": "The block device you want to create the filesystem on.",
                    "x-proxmox-typetext": "<string>"
                  },
                  "filesystem": {
                    "type": "string",
                    "description": "The desired filesystem.",
                    "enum": [
                      "ext4",
                      "xfs"
                    ],
                    "default": "ext4",
                    "x-proxmox-optional": true
                  },
                  "name": {
                    "type": "string",
                    "description": "The storage identifier.",
                    "format": "pve-storage-id",
                    "x-proxmox-format-description": "storage ID",
                    "x-proxmox-typetext": "<storage ID>"
                  }
                },
                "required": [
                  "device",
                  "name"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "description": "Requires additionally 'Datastore.Allocate' on /storage when setting 'add_storage'",
              "check": [
                "perm",
                "/",
                [
                  "Sys.Modify"
                ]
              ]
            }
          ]
        }
      }
    },
    "/nodes/{node}/disks/directory/{name}": {
      "delete": {
        "operationId": "delete-nodes-node-disks-directory-name",
        "summary": "delete",
        "description": "Unmounts the storage and removes the mount unit.",
        "tags": [
          "/nodes/{node}/disks/directory/{name}"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "delete-nodes-node-disks-directory-name",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "cleanup-config",
            "in": "query",
            "required": false,
            "description": "Marks associated storage(s) as not available on this node anymore or removes them from the configuration (if configured for this node only).",
            "schema": {
              "type": "boolean",
              "description": "Marks associated storage(s) as not available on this node anymore or removes them from the configuration (if configured for this node only).",
              "default": false,
              "x-proxmox-typetext": "<boolean>",
              "x-proxmox-optional": true
            }
          },
          {
            "name": "cleanup-disks",
            "in": "query",
            "required": false,
            "description": "Also wipe disk so it can be repurposed afterwards.",
            "schema": {
              "type": "boolean",
              "description": "Also wipe disk so it can be repurposed afterwards.",
              "default": false,
              "x-proxmox-typetext": "<boolean>",
              "x-proxmox-optional": true
            }
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "description": "The storage identifier.",
            "schema": {
              "type": "string",
              "description": "The storage identifier.",
              "format": "pve-storage-id",
              "x-proxmox-format-description": "storage ID",
              "x-proxmox-typetext": "<storage ID>"
            }
          },
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "description": "Requires additionally 'Datastore.Allocate' on /storage when setting 'cleanup-config'",
              "check": [
                "perm",
                "/",
                [
                  "Sys.Modify"
                ]
              ]
            }
          ]
        }
      }
    },
    "/nodes/{node}/disks/initgpt": {
      "post": {
        "operationId": "post-nodes-node-disks-initgpt",
        "summary": "initgpt",
        "description": "Initialize Disk with GPT",
        "tags": [
          "/nodes/{node}/disks/initgpt"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "post-nodes-node-disks-initgpt",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "disk": {
                    "type": "string",
                    "description": "Block device name",
                    "pattern": "^/dev/[a-zA-Z0-9\\/]+$"
                  },
                  "uuid": {
                    "type": "string",
                    "description": "UUID for the GPT table",
                    "maxLength": 36,
                    "pattern": "[a-fA-F0-9\\-]+",
                    "x-proxmox-optional": true
                  }
                },
                "required": [
                  "disk"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/",
                [
                  "Sys.Modify"
                ]
              ]
            }
          ]
        }
      }
    },
    "/nodes/{node}/disks/list": {
      "get": {
        "operationId": "get-nodes-node-disks-list",
        "summary": "list",
        "description": "List local disks.",
        "tags": [
          "/nodes/{node}/disks/list"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "devpath": {
                        "type": "string",
                        "description": "The device path"
                      },
                      "gpt": {
                        "type": "boolean"
                      },
                      "health": {
                        "type": "string",
                        "x-proxmox-optional": true
                      },
                      "model": {
                        "type": "string",
                        "x-proxmox-optional": true
                      },
                      "mounted": {
                        "type": "boolean"
                      },
                      "osdid": {
                        "type": "integer"
                      },
                      "osdid-list": {
                        "type": "array",
                        "items": {
                          "type": "integer"
                        }
                      },
                      "parent": {
                        "type": "string",
                        "description": "For partitions only. The device path of the disk the partition resides on.",
                        "x-proxmox-optional": true
                      },
                      "serial": {
                        "type": "string",
                        "x-proxmox-optional": true
                      },
                      "size": {
                        "type": "integer"
                      },
                      "used": {
                        "type": "string",
                        "x-proxmox-optional": true
                      },
                      "vendor": {
                        "type": "string",
                        "x-proxmox-optional": true
                      },
                      "wwn": {
                        "type": "string",
                        "x-proxmox-optional": true
                      }
                    },
                    "required": [
                      "devpath",
                      "gpt",
                      "mounted",
                      "osdid",
                      "osdid-list",
                      "size"
                    ]
                  }
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-nodes-node-disks-list",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "include-partitions",
            "in": "query",
            "required": false,
            "description": "Also include partitions.",
            "schema": {
              "type": "boolean",
              "description": "Also include partitions.",
              "default": false,
              "x-proxmox-typetext": "<boolean>",
              "x-proxmox-optional": true
            }
          },
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "skipsmart",
            "in": "query",
            "required": false,
            "description": "Skip smart checks.",
            "schema": {
              "type": "boolean",
              "description": "Skip smart checks.",
              "default": false,
              "x-proxmox-typetext": "<boolean>",
              "x-proxmox-optional": true
            }
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "description": "Only list specific types of disks.",
            "schema": {
              "type": "string",
              "description": "Only list specific types of disks.",
              "enum": [
                "unused",
                "journal_disks"
              ],
              "x-proxmox-optional": true
            }
          }
        ],
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "or",
                [
                  "perm",
                  "/",
                  [
                    "Sys.Audit"
                  ]
                ],
                [
                  "perm",
                  "/nodes/{node}",
                  [
                    "Sys.Audit"
                  ]
                ]
              ]
            }
          ]
        }
      }
    },
    "/nodes/{node}/disks/lvm": {
      "get": {
        "operationId": "get-nodes-node-disks-lvm",
        "summary": "index",
        "description": "List LVM Volume Groups",
        "tags": [
          "/nodes/{node}/disks/lvm"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "children": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "children": {
                            "type": "array",
                            "description": "The underlying physical volumes",
                            "items": {
                              "type": "object",
                              "properties": {
                                "free": {
                                  "type": "integer",
                                  "description": "The free bytes in the physical volume"
                                },
                                "leaf": {
                                  "type": "boolean"
                                },
                                "name": {
                                  "type": "string",
                                  "description": "The name of the physical volume"
                                },
                                "size": {
                                  "type": "integer",
                                  "description": "The size of the physical volume in bytes"
                                }
                              },
                              "required": [
                                "free",
                                "leaf",
                                "name",
                                "size"
                              ]
                            },
                            "x-proxmox-optional": true
                          },
                          "free": {
                            "type": "integer",
                            "description": "The free bytes in the volume group"
                          },
                          "leaf": {
                            "type": "boolean"
                          },
                          "name": {
                            "type": "string",
                            "description": "The name of the volume group"
                          },
                          "size": {
                            "type": "integer",
                            "description": "The size of the volume group in bytes"
                          }
                        },
                        "required": [
                          "free",
                          "leaf",
                          "name",
                          "size"
                        ]
                      }
                    },
                    "leaf": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "children",
                    "leaf"
                  ]
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-nodes-node-disks-lvm",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/",
                [
                  "Sys.Audit"
                ]
              ]
            }
          ]
        }
      },
      "post": {
        "operationId": "post-nodes-node-disks-lvm",
        "summary": "create",
        "description": "Create an LVM Volume Group",
        "tags": [
          "/nodes/{node}/disks/lvm"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "post-nodes-node-disks-lvm",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "add_storage": {
                    "type": "boolean",
                    "description": "Configure storage using the Volume Group",
                    "default": false,
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "device": {
                    "type": "string",
                    "description": "The block device you want to create the volume group on",
                    "x-proxmox-typetext": "<string>"
                  },
                  "name": {
                    "type": "string",
                    "description": "The storage identifier.",
                    "format": "pve-storage-id",
                    "x-proxmox-format-description": "storage ID",
                    "x-proxmox-typetext": "<storage ID>"
                  }
                },
                "required": [
                  "device",
                  "name"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "description": "Requires additionally 'Datastore.Allocate' on /storage when setting 'add_storage'",
              "check": [
                "perm",
                "/",
                [
                  "Sys.Modify"
                ]
              ]
            }
          ]
        }
      }
    },
    "/nodes/{node}/disks/lvm/{name}": {
      "delete": {
        "operationId": "delete-nodes-node-disks-lvm-name",
        "summary": "delete",
        "description": "Remove an LVM Volume Group.",
        "tags": [
          "/nodes/{node}/disks/lvm/{name}"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "delete-nodes-node-disks-lvm-name",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "cleanup-config",
            "in": "query",
            "required": false,
            "description": "Marks associated storage(s) as not available on this node anymore or removes them from the configuration (if configured for this node only).",
            "schema": {
              "type": "boolean",
              "description": "Marks associated storage(s) as not available on this node anymore or removes them from the configuration (if configured for this node only).",
              "default": false,
              "x-proxmox-typetext": "<boolean>",
              "x-proxmox-optional": true
            }
          },
          {
            "name": "cleanup-disks",
            "in": "query",
            "required": false,
            "description": "Also wipe disks so they can be repurposed afterwards.",
            "schema": {
              "type": "boolean",
              "description": "Also wipe disks so they can be repurposed afterwards.",
              "default": false,
              "x-proxmox-typetext": "<boolean>",
              "x-proxmox-optional": true
            }
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "description": "The storage identifier.",
            "schema": {
              "type": "string",
              "description": "The storage identifier.",
              "format": "pve-storage-id",
              "x-proxmox-format-description": "storage ID",
              "x-proxmox-typetext": "<storage ID>"
            }
          },
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "description": "Requires additionally 'Datastore.Allocate' on /storage when setting 'cleanup-config'",
              "check": [
                "perm",
                "/",
                [
                  "Sys.Modify"
                ]
              ]
            }
          ]
        }
      }
    },
    "/nodes/{node}/disks/lvmthin": {
      "get": {
        "operationId": "get-nodes-node-disks-lvmthin",
        "summary": "index",
        "description": "List LVM thinpools",
        "tags": [
          "/nodes/{node}/disks/lvmthin"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "lv": {
                        "type": "string",
                        "description": "The name of the thinpool."
                      },
                      "lv_size": {
                        "type": "integer",
                        "description": "The size of the thinpool in bytes."
                      },
                      "metadata_size": {
                        "type": "integer",
                        "description": "The size of the metadata lv in bytes."
                      },
                      "metadata_used": {
                        "type": "integer",
                        "description": "The used bytes of the metadata lv."
                      },
                      "used": {
                        "type": "integer",
                        "description": "The used bytes of the thinpool."
                      },
                      "vg": {
                        "type": "string",
                        "description": "The associated volume group."
                      }
                    },
                    "required": [
                      "lv",
                      "lv_size",
                      "metadata_size",
                      "metadata_used",
                      "used",
                      "vg"
                    ]
                  }
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-nodes-node-disks-lvmthin",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/",
                [
                  "Sys.Audit"
                ]
              ]
            }
          ]
        }
      },
      "post": {
        "operationId": "post-nodes-node-disks-lvmthin",
        "summary": "create",
        "description": "Create an LVM thinpool",
        "tags": [
          "/nodes/{node}/disks/lvmthin"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "post-nodes-node-disks-lvmthin",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "add_storage": {
                    "type": "boolean",
                    "description": "Configure storage using the thinpool.",
                    "default": false,
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "device": {
                    "type": "string",
                    "description": "The block device you want to create the thinpool on.",
                    "x-proxmox-typetext": "<string>"
                  },
                  "name": {
                    "type": "string",
                    "description": "The storage identifier.",
                    "format": "pve-storage-id",
                    "x-proxmox-format-description": "storage ID",
                    "x-proxmox-typetext": "<storage ID>"
                  }
                },
                "required": [
                  "device",
                  "name"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "description": "Requires additionally 'Datastore.Allocate' on /storage when setting 'add_storage'",
              "check": [
                "perm",
                "/",
                [
                  "Sys.Modify"
                ]
              ]
            }
          ]
        }
      }
    },
    "/nodes/{node}/disks/lvmthin/{name}": {
      "delete": {
        "operationId": "delete-nodes-node-disks-lvmthin-name",
        "summary": "delete",
        "description": "Remove an LVM thin pool.",
        "tags": [
          "/nodes/{node}/disks/lvmthin/{name}"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "delete-nodes-node-disks-lvmthin-name",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "cleanup-config",
            "in": "query",
            "required": false,
            "description": "Marks associated storage(s) as not available on this node anymore or removes them from the configuration (if configured for this node only).",
            "schema": {
              "type": "boolean",
              "description": "Marks associated storage(s) as not available on this node anymore or removes them from the configuration (if configured for this node only).",
              "default": false,
              "x-proxmox-typetext": "<boolean>",
              "x-proxmox-optional": true
            }
          },
          {
            "name": "cleanup-disks",
            "in": "query",
            "required": false,
            "description": "Also wipe disks so they can be repurposed afterwards.",
            "schema": {
              "type": "boolean",
              "description": "Also wipe disks so they can be repurposed afterwards.",
              "default": false,
              "x-proxmox-typetext": "<boolean>",
              "x-proxmox-optional": true
            }
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "description": "The storage identifier.",
            "schema": {
              "type": "string",
              "description": "The storage identifier.",
              "format": "pve-storage-id",
              "x-proxmox-format-description": "storage ID",
              "x-proxmox-typetext": "<storage ID>"
            }
          },
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "volume-group",
            "in": "query",
            "required": true,
            "description": "The storage identifier.",
            "schema": {
              "type": "string",
              "description": "The storage identifier.",
              "format": "pve-storage-id",
              "x-proxmox-format-description": "storage ID",
              "x-proxmox-typetext": "<storage ID>"
            }
          }
        ],
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "description": "Requires additionally 'Datastore.Allocate' on /storage when setting 'cleanup-config'",
              "check": [
                "perm",
                "/",
                [
                  "Sys.Modify"
                ]
              ]
            }
          ]
        }
      }
    },
    "/nodes/{node}/disks/smart": {
      "get": {
        "operationId": "get-nodes-node-disks-smart",
        "summary": "smart",
        "description": "Get SMART Health of a disk.",
        "tags": [
          "/nodes/{node}/disks/smart"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "attributes": {
                      "type": "array",
                      "x-proxmox-optional": true
                    },
                    "health": {
                      "type": "string"
                    },
                    "text": {
                      "type": "string",
                      "x-proxmox-optional": true
                    },
                    "type": {
                      "type": "string",
                      "x-proxmox-optional": true
                    }
                  },
                  "required": [
                    "health"
                  ]
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-nodes-node-disks-smart",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "disk",
            "in": "query",
            "required": true,
            "description": "Block device name",
            "schema": {
              "type": "string",
              "description": "Block device name",
              "pattern": "^/dev/[a-zA-Z0-9\\/]+$"
            }
          },
          {
            "name": "healthonly",
            "in": "query",
            "required": false,
            "description": "If true returns only the health status",
            "schema": {
              "type": "boolean",
              "description": "If true returns only the health status",
              "x-proxmox-typetext": "<boolean>",
              "x-proxmox-optional": true
            }
          },
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/",
                [
                  "Sys.Audit"
                ]
              ]
            }
          ]
        }
      }
    },
    "/nodes/{node}/disks/wipedisk": {
      "put": {
        "operationId": "put-nodes-node-disks-wipedisk",
        "summary": "wipe_disk",
        "description": "Wipe a disk or partition.",
        "tags": [
          "/nodes/{node}/disks/wipedisk"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "put-nodes-node-disks-wipedisk",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "disk": {
                    "type": "string",
                    "description": "Block device name",
                    "pattern": "^/dev/[a-zA-Z0-9\\/]+$"
                  }
                },
                "required": [
                  "disk"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ]
      }
    },
    "/nodes/{node}/disks/zfs": {
      "get": {
        "operationId": "get-nodes-node-disks-zfs",
        "summary": "index",
        "description": "List Zpools.",
        "tags": [
          "/nodes/{node}/disks/zfs"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "alloc": {
                        "type": "integer"
                      },
                      "dedup": {
                        "type": "number"
                      },
                      "frag": {
                        "type": "integer"
                      },
                      "free": {
                        "type": "integer"
                      },
                      "health": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "size": {
                        "type": "integer"
                      }
                    },
                    "required": [
                      "alloc",
                      "dedup",
                      "frag",
                      "free",
                      "health",
                      "name",
                      "size"
                    ]
                  },
                  "x-proxmox-metadata": {
                    "links": [
                      {
                        "href": "{name}",
                        "rel": "child"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-nodes-node-disks-zfs",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/",
                [
                  "Sys.Audit"
                ]
              ]
            }
          ]
        }
      },
      "post": {
        "operationId": "post-nodes-node-disks-zfs",
        "summary": "create",
        "description": "Create a ZFS pool.",
        "tags": [
          "/nodes/{node}/disks/zfs"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "post-nodes-node-disks-zfs",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "add_storage": {
                    "type": "boolean",
                    "description": "Configure storage using the zpool.",
                    "default": false,
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "ashift": {
                    "type": "integer",
                    "description": "Pool sector size exponent.",
                    "default": 12,
                    "minimum": 9,
                    "maximum": 16,
                    "x-proxmox-typetext": "<integer> (9 - 16)",
                    "x-proxmox-optional": true
                  },
                  "compression": {
                    "type": "string",
                    "description": "The compression algorithm to use.",
                    "enum": [
                      "on",
                      "off",
                      "gzip",
                      "lz4",
                      "lzjb",
                      "zle",
                      "zstd"
                    ],
                    "default": "on",
                    "x-proxmox-optional": true
                  },
                  "devices": {
                    "type": "string",
                    "description": "The block devices you want to create the zpool on.",
                    "format": "string-list",
                    "x-proxmox-typetext": "<string>"
                  },
                  "draid-config": {
                    "type": "string",
                    "x-proxmox-typetext": "data=<integer> ,spares=<integer>",
                    "x-proxmox-optional": true
                  },
                  "name": {
                    "type": "string",
                    "description": "The storage identifier.",
                    "format": "pve-storage-id",
                    "x-proxmox-format-description": "storage ID",
                    "x-proxmox-typetext": "<storage ID>"
                  },
                  "raidlevel": {
                    "type": "string",
                    "description": "The RAID level to use.",
                    "enum": [
                      "single",
                      "mirror",
                      "raid10",
                      "raidz",
                      "raidz2",
                      "raidz3",
                      "draid",
                      "draid2",
                      "draid3"
                    ]
                  }
                },
                "required": [
                  "devices",
                  "name",
                  "raidlevel"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "description": "Requires additionally 'Datastore.Allocate' on /storage when setting 'add_storage'",
              "check": [
                "perm",
                "/",
                [
                  "Sys.Modify"
                ]
              ]
            }
          ]
        }
      }
    },
    "/nodes/{node}/disks/zfs/{name}": {
      "delete": {
        "operationId": "delete-nodes-node-disks-zfs-name",
        "summary": "delete",
        "description": "Destroy a ZFS pool.",
        "tags": [
          "/nodes/{node}/disks/zfs/{name}"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "delete-nodes-node-disks-zfs-name",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "cleanup-config",
            "in": "query",
            "required": false,
            "description": "Marks associated storage(s) as not available on this node anymore or removes them from the configuration (if configured for this node only).",
            "schema": {
              "type": "boolean",
              "description": "Marks associated storage(s) as not available on this node anymore or removes them from the configuration (if configured for this node only).",
              "default": false,
              "x-proxmox-typetext": "<boolean>",
              "x-proxmox-optional": true
            }
          },
          {
            "name": "cleanup-disks",
            "in": "query",
            "required": false,
            "description": "Also wipe disks so they can be repurposed afterwards.",
            "schema": {
              "type": "boolean",
              "description": "Also wipe disks so they can be repurposed afterwards.",
              "default": false,
              "x-proxmox-typetext": "<boolean>",
              "x-proxmox-optional": true
            }
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "description": "The storage identifier.",
            "schema": {
              "type": "string",
              "description": "The storage identifier.",
              "format": "pve-storage-id",
              "x-proxmox-format-description": "storage ID",
              "x-proxmox-typetext": "<storage ID>"
            }
          },
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "description": "Requires additionally 'Datastore.Allocate' on /storage when setting 'cleanup-config'",
              "check": [
                "perm",
                "/",
                [
                  "Sys.Modify"
                ]
              ]
            }
          ]
        }
      },
      "get": {
        "operationId": "get-nodes-node-disks-zfs-name",
        "summary": "detail",
        "description": "Get details about a zpool.",
        "tags": [
          "/nodes/{node}/disks/zfs/{name}"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "action": {
                      "type": "string",
                      "description": "Information about the recommended action to fix the state.",
                      "x-proxmox-optional": true
                    },
                    "children": {
                      "type": "array",
                      "description": "The pool configuration information, including the vdevs for each section (e.g. spares, cache), may be nested.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "cksum": {
                            "type": "number",
                            "x-proxmox-optional": true
                          },
                          "msg": {
                            "type": "string",
                            "description": "An optional message about the vdev."
                          },
                          "name": {
                            "type": "string",
                            "description": "The name of the vdev or section."
                          },
                          "read": {
                            "type": "number",
                            "x-proxmox-optional": true
                          },
                          "state": {
                            "type": "string",
                            "description": "The state of the vdev.",
                            "x-proxmox-optional": true
                          },
                          "write": {
                            "type": "number",
                            "x-proxmox-optional": true
                          }
                        },
                        "required": [
                          "msg",
                          "name"
                        ]
                      }
                    },
                    "errors": {
                      "type": "string",
                      "description": "Information about the errors on the zpool."
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of the zpool."
                    },
                    "scan": {
                      "type": "string",
                      "description": "Information about the last/current scrub.",
                      "x-proxmox-optional": true
                    },
                    "state": {
                      "type": "string",
                      "description": "The state of the zpool."
                    },
                    "status": {
                      "type": "string",
                      "description": "Information about the state of the zpool.",
                      "x-proxmox-optional": true
                    }
                  },
                  "required": [
                    "children",
                    "errors",
                    "name",
                    "state"
                  ]
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-nodes-node-disks-zfs-name",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "description": "The storage identifier.",
            "schema": {
              "type": "string",
              "description": "The storage identifier.",
              "format": "pve-storage-id",
              "x-proxmox-format-description": "storage ID",
              "x-proxmox-typetext": "<storage ID>"
            }
          },
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/",
                [
                  "Sys.Audit"
                ]
              ]
            }
          ]
        }
      }
    },
    "/nodes/{node}/dns": {
      "get": {
        "operationId": "get-nodes-node-dns",
        "summary": "dns",
        "description": "Read DNS settings.",
        "tags": [
          "/nodes/{node}/dns"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "dns1": {
                      "type": "string",
                      "description": "First name server IP address.",
                      "x-proxmox-optional": true
                    },
                    "dns2": {
                      "type": "string",
                      "description": "Second name server IP address.",
                      "x-proxmox-optional": true
                    },
                    "dns3": {
                      "type": "string",
                      "description": "Third name server IP address.",
                      "x-proxmox-optional": true
                    },
                    "search": {
                      "type": "string",
                      "description": "Search domain for host-name lookup.",
                      "x-proxmox-optional": true
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-nodes-node-dns",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "security": [],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/nodes/{node}",
                [
                  "Sys.Audit"
                ]
              ]
            }
          ]
        }
      },
      "put": {
        "operationId": "put-nodes-node-dns",
        "summary": "update_dns",
        "description": "Write DNS settings.",
        "tags": [
          "/nodes/{node}/dns"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "put-nodes-node-dns",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "dns1": {
                    "type": "string",
                    "description": "First name server IP address.",
                    "format": "ip",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "dns2": {
                    "type": "string",
                    "description": "Second name server IP address.",
                    "format": "ip",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "dns3": {
                    "type": "string",
                    "description": "Third name server IP address.",
                    "format": "ip",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "search": {
                    "type": "string",
                    "description": "Search domain for host-name lookup.",
                    "x-proxmox-typetext": "<string>"
                  }
                },
                "required": [
                  "search"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/nodes/{node}",
                [
                  "Sys.Modify"
                ]
              ]
            }
          ]
        }
      }
    },
    "/nodes/{node}/execute": {
      "post": {
        "operationId": "post-nodes-node-execute",
        "summary": "execute",
        "description": "Execute multiple commands in order, root only.",
        "tags": [
          "/nodes/{node}/execute"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  }
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "post-nodes-node-execute",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "commands": {
                    "type": "string",
                    "description": "JSON encoded array of commands.\n\nJSON encoded array of commands, where each command is an object with the following properties:\n  args:      <object>\n\t     A set of parameter names and their values.\n\n  method:    (GET|POST|PUT|DELETE)\n\t     A method related to the API endpoint (GET, POST etc.).\n\n  path:      <string>\n\t     A relative path to an API endpoint on this node.\n\n",
                    "format": "pve-command-batch",
                    "x-proxmox-typetext": "<string>"
                  }
                },
                "required": [
                  "commands"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ]
      }
    },
    "/nodes/{node}/firewall": {
      "get": {
        "operationId": "get-nodes-node-firewall",
        "summary": "index",
        "description": "Directory index.",
        "tags": [
          "/nodes/{node}/firewall"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  },
                  "x-proxmox-metadata": {
                    "links": [
                      {
                        "href": "{name}",
                        "rel": "child"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-nodes-node-firewall",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "security": [],
        "x-proxmox-permissions": {
          "all": [
            {
              "user": "all"
            }
          ]
        }
      }
    },
    "/nodes/{node}/firewall/log": {
      "get": {
        "operationId": "get-nodes-node-firewall-log",
        "summary": "log",
        "description": "Read firewall log",
        "tags": [
          "/nodes/{node}/firewall/log"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "n": {
                        "type": "integer",
                        "description": "Line number"
                      },
                      "t": {
                        "type": "string",
                        "description": "Line text"
                      }
                    },
                    "required": [
                      "n",
                      "t"
                    ]
                  }
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-nodes-node-firewall-log",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "x-proxmox-typetext": "<integer> (0 - N)",
              "x-proxmox-optional": true
            }
          },
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "since",
            "in": "query",
            "required": false,
            "description": "Display log since this UNIX epoch.",
            "schema": {
              "type": "integer",
              "description": "Display log since this UNIX epoch.",
              "minimum": 0,
              "x-proxmox-typetext": "<integer> (0 - N)",
              "x-proxmox-optional": true
            }
          },
          {
            "name": "start",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "x-proxmox-typetext": "<integer> (0 - N)",
              "x-proxmox-optional": true
            }
          },
          {
            "name": "until",
            "in": "query",
            "required": false,
            "description": "Display log until this UNIX epoch.",
            "schema": {
              "type": "integer",
              "description": "Display log until this UNIX epoch.",
              "minimum": 0,
              "x-proxmox-typetext": "<integer> (0 - N)",
              "x-proxmox-optional": true
            }
          }
        ],
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/nodes/{node}",
                [
                  "Sys.Syslog"
                ]
              ]
            }
          ]
        }
      }
    },
    "/nodes/{node}/firewall/options": {
      "get": {
        "operationId": "get-nodes-node-firewall-options",
        "summary": "get_options",
        "description": "Get host firewall options.",
        "tags": [
          "/nodes/{node}/firewall/options"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "enable": {
                      "type": "boolean",
                      "description": "Enable host firewall rules.",
                      "x-proxmox-optional": true
                    },
                    "log_level_forward": {
                      "type": "string",
                      "description": "Log level for forwarded traffic.",
                      "enum": [
                        "emerg",
                        "alert",
                        "crit",
                        "err",
                        "warning",
                        "notice",
                        "info",
                        "debug",
                        "nolog"
                      ],
                      "x-proxmox-optional": true
                    },
                    "log_level_in": {
                      "type": "string",
                      "description": "Log level for incoming traffic.",
                      "enum": [
                        "emerg",
                        "alert",
                        "crit",
                        "err",
                        "warning",
                        "notice",
                        "info",
                        "debug",
                        "nolog"
                      ],
                      "x-proxmox-optional": true
                    },
                    "log_level_out": {
                      "type": "string",
                      "description": "Log level for outgoing traffic.",
                      "enum": [
                        "emerg",
                        "alert",
                        "crit",
                        "err",
                        "warning",
                        "notice",
                        "info",
                        "debug",
                        "nolog"
                      ],
                      "x-proxmox-optional": true
                    },
                    "log_nf_conntrack": {
                      "type": "boolean",
                      "description": "Enable logging of conntrack information.",
                      "default": false,
                      "x-proxmox-optional": true
                    },
                    "ndp": {
                      "type": "boolean",
                      "description": "Enable NDP (Neighbor Discovery Protocol).",
                      "default": false,
                      "x-proxmox-optional": true
                    },
                    "nf_conntrack_allow_invalid": {
                      "type": "boolean",
                      "description": "Allow invalid packets on connection tracking.",
                      "default": false,
                      "x-proxmox-optional": true
                    },
                    "nf_conntrack_helpers": {
                      "type": "string",
                      "description": "Enable conntrack helpers for specific protocols. Supported protocols: amanda, ftp, irc, netbios-ns, pptp, sane, sip, snmp, tftp",
                      "default": "",
                      "format": "pve-fw-conntrack-helper",
                      "x-proxmox-optional": true
                    },
                    "nf_conntrack_max": {
                      "type": "integer",
                      "description": "Maximum number of tracked connections.",
                      "default": 262144,
                      "minimum": 32768,
                      "x-proxmox-optional": true
                    },
                    "nf_conntrack_tcp_timeout_established": {
                      "type": "integer",
                      "description": "Conntrack established timeout.",
                      "default": 432000,
                      "minimum": 7875,
                      "x-proxmox-optional": true
                    },
                    "nf_conntrack_tcp_timeout_syn_recv": {
                      "type": "integer",
                      "description": "Conntrack syn recv timeout.",
                      "default": 60,
                      "minimum": 30,
                      "maximum": 60,
                      "x-proxmox-optional": true
                    },
                    "nftables": {
                      "type": "boolean",
                      "description": "Enable nftables based firewall (tech preview)",
                      "default": false,
                      "x-proxmox-optional": true
                    },
                    "nosmurfs": {
                      "type": "boolean",
                      "description": "Enable SMURFS filter.",
                      "x-proxmox-optional": true
                    },
                    "protection_synflood": {
                      "type": "boolean",
                      "description": "Enable synflood protection",
                      "default": false,
                      "x-proxmox-optional": true
                    },
                    "protection_synflood_burst": {
                      "type": "integer",
                      "description": "Synflood protection rate burst by ip src.",
                      "default": 1000,
                      "x-proxmox-optional": true
                    },
                    "protection_synflood_rate": {
                      "type": "integer",
                      "description": "Synflood protection rate syn/sec by ip src.",
                      "default": 200,
                      "x-proxmox-optional": true
                    },
                    "smurf_log_level": {
                      "type": "string",
                      "description": "Log level for SMURFS filter.",
                      "enum": [
                        "emerg",
                        "alert",
                        "crit",
                        "err",
                        "warning",
                        "notice",
                        "info",
                        "debug",
                        "nolog"
                      ],
                      "x-proxmox-optional": true
                    },
                    "tcp_flags_log_level": {
                      "type": "string",
                      "description": "Log level for illegal tcp flags filter.",
                      "enum": [
                        "emerg",
                        "alert",
                        "crit",
                        "err",
                        "warning",
                        "notice",
                        "info",
                        "debug",
                        "nolog"
                      ],
                      "x-proxmox-optional": true
                    },
                    "tcpflags": {
                      "type": "boolean",
                      "description": "Filter illegal combinations of TCP flags.",
                      "default": false,
                      "x-proxmox-optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-nodes-node-firewall-options",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "security": [],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/nodes/{node}",
                [
                  "Sys.Audit"
                ]
              ]
            }
          ]
        }
      },
      "put": {
        "operationId": "put-nodes-node-firewall-options",
        "summary": "set_options",
        "description": "Set Firewall options.",
        "tags": [
          "/nodes/{node}/firewall/options"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "put-nodes-node-firewall-options",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "delete": {
                    "type": "string",
                    "description": "A list of settings you want to delete.",
                    "format": "pve-configid-list",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "digest": {
                    "type": "string",
                    "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
                    "maxLength": 64,
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "enable": {
                    "type": "boolean",
                    "description": "Enable host firewall rules.",
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "log_level_forward": {
                    "type": "string",
                    "description": "Log level for forwarded traffic.",
                    "enum": [
                      "emerg",
                      "alert",
                      "crit",
                      "err",
                      "warning",
                      "notice",
                      "info",
                      "debug",
                      "nolog"
                    ],
                    "x-proxmox-optional": true
                  },
                  "log_level_in": {
                    "type": "string",
                    "description": "Log level for incoming traffic.",
                    "enum": [
                      "emerg",
                      "alert",
                      "crit",
                      "err",
                      "warning",
                      "notice",
                      "info",
                      "debug",
                      "nolog"
                    ],
                    "x-proxmox-optional": true
                  },
                  "log_level_out": {
                    "type": "string",
                    "description": "Log level for outgoing traffic.",
                    "enum": [
                      "emerg",
                      "alert",
                      "crit",
                      "err",
                      "warning",
                      "notice",
                      "info",
                      "debug",
                      "nolog"
                    ],
                    "x-proxmox-optional": true
                  },
                  "log_nf_conntrack": {
                    "type": "boolean",
                    "description": "Enable logging of conntrack information.",
                    "default": false,
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "ndp": {
                    "type": "boolean",
                    "description": "Enable NDP (Neighbor Discovery Protocol).",
                    "default": false,
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "nf_conntrack_allow_invalid": {
                    "type": "boolean",
                    "description": "Allow invalid packets on connection tracking.",
                    "default": false,
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "nf_conntrack_helpers": {
                    "type": "string",
                    "description": "Enable conntrack helpers for specific protocols. Supported protocols: amanda, ftp, irc, netbios-ns, pptp, sane, sip, snmp, tftp",
                    "default": "",
                    "format": "pve-fw-conntrack-helper",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "nf_conntrack_max": {
                    "type": "integer",
                    "description": "Maximum number of tracked connections.",
                    "default": 262144,
                    "minimum": 32768,
                    "x-proxmox-typetext": "<integer> (32768 - N)",
                    "x-proxmox-optional": true
                  },
                  "nf_conntrack_tcp_timeout_established": {
                    "type": "integer",
                    "description": "Conntrack established timeout.",
                    "default": 432000,
                    "minimum": 7875,
                    "x-proxmox-typetext": "<integer> (7875 - N)",
                    "x-proxmox-optional": true
                  },
                  "nf_conntrack_tcp_timeout_syn_recv": {
                    "type": "integer",
                    "description": "Conntrack syn recv timeout.",
                    "default": 60,
                    "minimum": 30,
                    "maximum": 60,
                    "x-proxmox-typetext": "<integer> (30 - 60)",
                    "x-proxmox-optional": true
                  },
                  "nftables": {
                    "type": "boolean",
                    "description": "Enable nftables based firewall (tech preview)",
                    "default": false,
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "nosmurfs": {
                    "type": "boolean",
                    "description": "Enable SMURFS filter.",
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "protection_synflood": {
                    "type": "boolean",
                    "description": "Enable synflood protection",
                    "default": false,
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "protection_synflood_burst": {
                    "type": "integer",
                    "description": "Synflood protection rate burst by ip src.",
                    "default": 1000,
                    "x-proxmox-typetext": "<integer>",
                    "x-proxmox-optional": true
                  },
                  "protection_synflood_rate": {
                    "type": "integer",
                    "description": "Synflood protection rate syn/sec by ip src.",
                    "default": 200,
                    "x-proxmox-typetext": "<integer>",
                    "x-proxmox-optional": true
                  },
                  "smurf_log_level": {
                    "type": "string",
                    "description": "Log level for SMURFS filter.",
                    "enum": [
                      "emerg",
                      "alert",
                      "crit",
                      "err",
                      "warning",
                      "notice",
                      "info",
                      "debug",
                      "nolog"
                    ],
                    "x-proxmox-optional": true
                  },
                  "tcp_flags_log_level": {
                    "type": "string",
                    "description": "Log level for illegal tcp flags filter.",
                    "enum": [
                      "emerg",
                      "alert",
                      "crit",
                      "err",
                      "warning",
                      "notice",
                      "info",
                      "debug",
                      "nolog"
                    ],
                    "x-proxmox-optional": true
                  },
                  "tcpflags": {
                    "type": "boolean",
                    "description": "Filter illegal combinations of TCP flags.",
                    "default": false,
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/nodes/{node}",
                [
                  "Sys.Modify"
                ]
              ]
            }
          ]
        }
      }
    },
    "/nodes/{node}/firewall/rules": {
      "get": {
        "operationId": "get-nodes-node-firewall-rules",
        "summary": "get_rules",
        "description": "List rules.",
        "tags": [
          "/nodes/{node}/firewall/rules"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "pos": {
                        "type": "integer"
                      }
                    },
                    "required": [
                      "pos"
                    ]
                  },
                  "x-proxmox-metadata": {
                    "links": [
                      {
                        "href": "{pos}",
                        "rel": "child"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-nodes-node-firewall-rules",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "security": [],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/nodes/{node}",
                [
                  "Sys.Audit"
                ]
              ]
            }
          ]
        }
      },
      "post": {
        "operationId": "post-nodes-node-firewall-rules",
        "summary": "create_rule",
        "description": "Create new rule.",
        "tags": [
          "/nodes/{node}/firewall/rules"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "post-nodes-node-firewall-rules",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "action": {
                    "type": "string",
                    "description": "Rule action ('ACCEPT', 'DROP', 'REJECT') or security group name.",
                    "minLength": 2,
                    "maxLength": 20,
                    "pattern": "[A-Za-z][A-Za-z0-9\\-\\_]+",
                    "x-proxmox-optional": false
                  },
                  "comment": {
                    "type": "string",
                    "description": "Descriptive comment.",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "dest": {
                    "type": "string",
                    "description": "Restrict packet destination address. This can refer to a single IP address, an IP set ('+ipsetname') or an IP alias definition. You can also specify an address range like '20.34.101.207-201.3.9.99', or a list of IP addresses and networks (entries are separated by comma). Please do not mix IPv4 and IPv6 addresses inside such lists.",
                    "maxLength": 512,
                    "format": "pve-fw-addr-spec",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "digest": {
                    "type": "string",
                    "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
                    "maxLength": 64,
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "dport": {
                    "type": "string",
                    "description": "Restrict TCP/UDP destination port. You can use service names or simple numbers (0-65535), as defined in '/etc/services'. Port ranges can be specified with '\\d+:\\d+', for example '80:85', and you can use comma separated list to match several ports or ranges.",
                    "format": "pve-fw-dport-spec",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "enable": {
                    "type": "integer",
                    "description": "Flag to enable/disable a rule.",
                    "minimum": 0,
                    "x-proxmox-typetext": "<integer> (0 - N)",
                    "x-proxmox-optional": true
                  },
                  "icmp-type": {
                    "type": "string",
                    "description": "Specify icmp-type. Only valid if proto equals 'icmp' or 'icmpv6'/'ipv6-icmp'.",
                    "format": "pve-fw-icmp-type-spec",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "iface": {
                    "type": "string",
                    "description": "Network interface name. You have to use network configuration key names for VMs and containers ('net\\d+'). Host related rules can use arbitrary strings.",
                    "minLength": 2,
                    "maxLength": 20,
                    "format": "pve-iface",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "log": {
                    "type": "string",
                    "description": "Log level for firewall rule.",
                    "enum": [
                      "emerg",
                      "alert",
                      "crit",
                      "err",
                      "warning",
                      "notice",
                      "info",
                      "debug",
                      "nolog"
                    ],
                    "x-proxmox-optional": true
                  },
                  "macro": {
                    "type": "string",
                    "description": "Use predefined standard macro.",
                    "maxLength": 128,
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "pos": {
                    "type": "integer",
                    "description": "Update rule at position <pos>.",
                    "minimum": 0,
                    "x-proxmox-typetext": "<integer> (0 - N)",
                    "x-proxmox-optional": true
                  },
                  "proto": {
                    "type": "string",
                    "description": "IP protocol. You can use protocol names ('tcp'/'udp') or simple numbers, as defined in '/etc/protocols'.",
                    "format": "pve-fw-protocol-spec",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "source": {
                    "type": "string",
                    "description": "Restrict packet source address. This can refer to a single IP address, an IP set ('+ipsetname') or an IP alias definition. You can also specify an address range like '20.34.101.207-201.3.9.99', or a list of IP addresses and networks (entries are separated by comma). Please do not mix IPv4 and IPv6 addresses inside such lists.",
                    "maxLength": 512,
                    "format": "pve-fw-addr-spec",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "sport": {
                    "type": "string",
                    "description": "Restrict TCP/UDP source port. You can use service names or simple numbers (0-65535), as defined in '/etc/services'. Port ranges can be specified with '\\d+:\\d+', for example '80:85', and you can use comma separated list to match several ports or ranges.",
                    "format": "pve-fw-sport-spec",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "type": {
                    "type": "string",
                    "description": "Rule type.",
                    "enum": [
                      "in",
                      "out",
                      "forward",
                      "group"
                    ],
                    "x-proxmox-optional": false
                  }
                },
                "required": [
                  "action",
                  "type"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/nodes/{node}",
                [
                  "Sys.Modify"
                ]
              ]
            }
          ]
        }
      }
    },
    "/nodes/{node}/firewall/rules/{pos}": {
      "delete": {
        "operationId": "delete-nodes-node-firewall-rules-pos",
        "summary": "delete_rule",
        "description": "Delete rule.",
        "tags": [
          "/nodes/{node}/firewall/rules/{pos}"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "delete-nodes-node-firewall-rules-pos",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "digest",
            "in": "query",
            "required": false,
            "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
            "schema": {
              "type": "string",
              "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
              "maxLength": 64,
              "x-proxmox-typetext": "<string>",
              "x-proxmox-optional": true
            }
          },
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "pos",
            "in": "path",
            "required": true,
            "description": "Update rule at position <pos>.",
            "schema": {
              "type": "integer",
              "description": "Update rule at position <pos>.",
              "minimum": 0,
              "x-proxmox-typetext": "<integer> (0 - N)",
              "x-proxmox-optional": true
            }
          }
        ],
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/nodes/{node}",
                [
                  "Sys.Modify"
                ]
              ]
            }
          ]
        }
      },
      "get": {
        "operationId": "get-nodes-node-firewall-rules-pos",
        "summary": "get_rule",
        "description": "Get single rule data.",
        "tags": [
          "/nodes/{node}/firewall/rules/{pos}"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "action": {
                      "type": "string"
                    },
                    "comment": {
                      "type": "string",
                      "x-proxmox-optional": true
                    },
                    "dest": {
                      "type": "string",
                      "x-proxmox-optional": true
                    },
                    "dport": {
                      "type": "string",
                      "x-proxmox-optional": true
                    },
                    "enable": {
                      "type": "integer",
                      "x-proxmox-optional": true
                    },
                    "icmp-type": {
                      "type": "string",
                      "x-proxmox-optional": true
                    },
                    "iface": {
                      "type": "string",
                      "x-proxmox-optional": true
                    },
                    "ipversion": {
                      "type": "integer",
                      "x-proxmox-optional": true
                    },
                    "log": {
                      "type": "string",
                      "description": "Log level for firewall rule",
                      "enum": [
                        "emerg",
                        "alert",
                        "crit",
                        "err",
                        "warning",
                        "notice",
                        "info",
                        "debug",
                        "nolog"
                      ],
                      "x-proxmox-optional": true
                    },
                    "macro": {
                      "type": "string",
                      "x-proxmox-optional": true
                    },
                    "pos": {
                      "type": "integer"
                    },
                    "proto": {
                      "type": "string",
                      "x-proxmox-optional": true
                    },
                    "source": {
                      "type": "string",
                      "x-proxmox-optional": true
                    },
                    "sport": {
                      "type": "string",
                      "x-proxmox-optional": true
                    },
                    "type": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "action",
                    "pos",
                    "type"
                  ]
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-nodes-node-firewall-rules-pos",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "pos",
            "in": "path",
            "required": true,
            "description": "Update rule at position <pos>.",
            "schema": {
              "type": "integer",
              "description": "Update rule at position <pos>.",
              "minimum": 0,
              "x-proxmox-typetext": "<integer> (0 - N)",
              "x-proxmox-optional": true
            }
          }
        ],
        "security": [],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/nodes/{node}",
                [
                  "Sys.Audit"
                ]
              ]
            }
          ]
        }
      },
      "put": {
        "operationId": "put-nodes-node-firewall-rules-pos",
        "summary": "update_rule",
        "description": "Modify rule data.",
        "tags": [
          "/nodes/{node}/firewall/rules/{pos}"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "put-nodes-node-firewall-rules-pos",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "pos",
            "in": "path",
            "required": true,
            "description": "Update rule at position <pos>.",
            "schema": {
              "type": "integer",
              "description": "Update rule at position <pos>.",
              "minimum": 0,
              "x-proxmox-typetext": "<integer> (0 - N)",
              "x-proxmox-optional": true
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "action": {
                    "type": "string",
                    "description": "Rule action ('ACCEPT', 'DROP', 'REJECT') or security group name.",
                    "minLength": 2,
                    "maxLength": 20,
                    "pattern": "[A-Za-z][A-Za-z0-9\\-\\_]+",
                    "x-proxmox-optional": true
                  },
                  "comment": {
                    "type": "string",
                    "description": "Descriptive comment.",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "delete": {
                    "type": "string",
                    "description": "A list of settings you want to delete.",
                    "format": "pve-configid-list",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "dest": {
                    "type": "string",
                    "description": "Restrict packet destination address. This can refer to a single IP address, an IP set ('+ipsetname') or an IP alias definition. You can also specify an address range like '20.34.101.207-201.3.9.99', or a list of IP addresses and networks (entries are separated by comma). Please do not mix IPv4 and IPv6 addresses inside such lists.",
                    "maxLength": 512,
                    "format": "pve-fw-addr-spec",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "digest": {
                    "type": "string",
                    "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
                    "maxLength": 64,
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "dport": {
                    "type": "string",
                    "description": "Restrict TCP/UDP destination port. You can use service names or simple numbers (0-65535), as defined in '/etc/services'. Port ranges can be specified with '\\d+:\\d+', for example '80:85', and you can use comma separated list to match several ports or ranges.",
                    "format": "pve-fw-dport-spec",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "enable": {
                    "type": "integer",
                    "description": "Flag to enable/disable a rule.",
                    "minimum": 0,
                    "x-proxmox-typetext": "<integer> (0 - N)",
                    "x-proxmox-optional": true
                  },
                  "icmp-type": {
                    "type": "string",
                    "description": "Specify icmp-type. Only valid if proto equals 'icmp' or 'icmpv6'/'ipv6-icmp'.",
                    "format": "pve-fw-icmp-type-spec",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "iface": {
                    "type": "string",
                    "description": "Network interface name. You have to use network configuration key names for VMs and containers ('net\\d+'). Host related rules can use arbitrary strings.",
                    "minLength": 2,
                    "maxLength": 20,
                    "format": "pve-iface",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "log": {
                    "type": "string",
                    "description": "Log level for firewall rule.",
                    "enum": [
                      "emerg",
                      "alert",
                      "crit",
                      "err",
                      "warning",
                      "notice",
                      "info",
                      "debug",
                      "nolog"
                    ],
                    "x-proxmox-optional": true
                  },
                  "macro": {
                    "type": "string",
                    "description": "Use predefined standard macro.",
                    "maxLength": 128,
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "moveto": {
                    "type": "integer",
                    "description": "Move rule to new position <moveto>. Other arguments are ignored.",
                    "minimum": 0,
                    "x-proxmox-typetext": "<integer> (0 - N)",
                    "x-proxmox-optional": true
                  },
                  "proto": {
                    "type": "string",
                    "description": "IP protocol. You can use protocol names ('tcp'/'udp') or simple numbers, as defined in '/etc/protocols'.",
                    "format": "pve-fw-protocol-spec",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "source": {
                    "type": "string",
                    "description": "Restrict packet source address. This can refer to a single IP address, an IP set ('+ipsetname') or an IP alias definition. You can also specify an address range like '20.34.101.207-201.3.9.99', or a list of IP addresses and networks (entries are separated by comma). Please do not mix IPv4 and IPv6 addresses inside such lists.",
                    "maxLength": 512,
                    "format": "pve-fw-addr-spec",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "sport": {
                    "type": "string",
                    "description": "Restrict TCP/UDP source port. You can use service names or simple numbers (0-65535), as defined in '/etc/services'. Port ranges can be specified with '\\d+:\\d+', for example '80:85', and you can use comma separated list to match several ports or ranges.",
                    "format": "pve-fw-sport-spec",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "type": {
                    "type": "string",
                    "description": "Rule type.",
                    "enum": [
                      "in",
                      "out",
                      "forward",
                      "group"
                    ],
                    "x-proxmox-optional": true
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/nodes/{node}",
                [
                  "Sys.Modify"
                ]
              ]
            }
          ]
        }
      }
    },
    "/nodes/{node}/hardware": {
      "get": {
        "operationId": "get-nodes-node-hardware",
        "summary": "index",
        "description": "Index of hardware types",
        "tags": [
          "/nodes/{node}/hardware"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "type"
                    ]
                  },
                  "x-proxmox-metadata": {
                    "links": [
                      {
                        "href": "{type}",
                        "rel": "child"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-nodes-node-hardware",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "security": [],
        "x-proxmox-permissions": {
          "all": [
            {
              "user": "all"
            }
          ]
        }
      }
    },
    "/nodes/{node}/hardware/pci": {
      "get": {
        "operationId": "get-nodes-node-hardware-pci",
        "summary": "pci_scan",
        "description": "List local PCI devices.",
        "tags": [
          "/nodes/{node}/hardware/pci"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "class": {
                        "type": "string",
                        "description": "The PCI Class of the device."
                      },
                      "device": {
                        "type": "string",
                        "description": "The Device ID."
                      },
                      "device_name": {
                        "type": "string",
                        "x-proxmox-optional": true
                      },
                      "id": {
                        "type": "string",
                        "description": "The PCI ID."
                      },
                      "iommugroup": {
                        "type": "integer",
                        "description": "The IOMMU group in which the device is in. If no IOMMU group is detected, it is set to -1."
                      },
                      "mdev": {
                        "type": "boolean",
                        "description": "If set, marks that the device is capable of creating mediated devices.",
                        "x-proxmox-optional": true
                      },
                      "subsystem_device": {
                        "type": "string",
                        "description": "The Subsystem Device ID.",
                        "x-proxmox-optional": true
                      },
                      "subsystem_device_name": {
                        "type": "string",
                        "x-proxmox-optional": true
                      },
                      "subsystem_vendor": {
                        "type": "string",
                        "description": "The Subsystem Vendor ID.",
                        "x-proxmox-optional": true
                      },
                      "subsystem_vendor_name": {
                        "type": "string",
                        "x-proxmox-optional": true
                      },
                      "vendor": {
                        "type": "string",
                        "description": "The Vendor ID."
                      },
                      "vendor_name": {
                        "type": "string",
                        "x-proxmox-optional": true
                      }
                    },
                    "required": [
                      "class",
                      "device",
                      "id",
                      "iommugroup",
                      "vendor"
                    ]
                  },
                  "x-proxmox-metadata": {
                    "links": [
                      {
                        "href": "{id}",
                        "rel": "child"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-nodes-node-hardware-pci",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "pci-class-blacklist",
            "in": "query",
            "required": false,
            "description": "A list of blacklisted PCI classes, which will not be returned. Following are filtered by default: Memory Controller (05), Bridge (06) and Processor (0b).",
            "schema": {
              "type": "string",
              "description": "A list of blacklisted PCI classes, which will not be returned. Following are filtered by default: Memory Controller (05), Bridge (06) and Processor (0b).",
              "default": "05;06;0b",
              "format": "string-list",
              "x-proxmox-typetext": "<string>",
              "x-proxmox-optional": true
            }
          },
          {
            "name": "verbose",
            "in": "query",
            "required": false,
            "description": "If disabled, does only print the PCI IDs. Otherwise, additional information like vendor and device will be returned.",
            "schema": {
              "type": "boolean",
              "description": "If disabled, does only print the PCI IDs. Otherwise, additional information like vendor and device will be returned.",
              "default": true,
              "x-proxmox-typetext": "<boolean>",
              "x-proxmox-optional": true
            }
          }
        ],
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/",
                [
                  "Sys.Audit",
                  "Sys.Modify"
                ],
                "any",
                1
              ]
            }
          ]
        }
      }
    },
    "/nodes/{node}/hardware/pci/{pci-id-or-mapping}": {
      "get": {
        "operationId": "get-nodes-node-hardware-pci-pci-id-or-mapping",
        "summary": "pci_index",
        "description": "Index of available pci methods",
        "tags": [
          "/nodes/{node}/hardware/pci/{pci-id-or-mapping}"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "method": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "method"
                    ]
                  },
                  "x-proxmox-metadata": {
                    "links": [
                      {
                        "href": "{method}",
                        "rel": "child"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-nodes-node-hardware-pci-pci-id-or-mapping",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "pci-id-or-mapping",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "(?:(?:[0-9a-fA-F]{4}:)?[0-9a-fA-F]{2}:[0-9a-fA-F]{2}\\.[0-9a-fA-F])|([a-zA-Z][a-zA-Z0-9_-]+)"
            }
          }
        ],
        "security": [],
        "x-proxmox-permissions": {
          "all": [
            {
              "user": "all"
            }
          ]
        }
      }
    },
    "/nodes/{node}/hardware/pci/{pci-id-or-mapping}/mdev": {
      "get": {
        "operationId": "get-nodes-node-hardware-pci-pci-id-or-mapping-mdev",
        "summary": "mdevscan",
        "description": "List mediated device types for given PCI device.",
        "tags": [
          "/nodes/{node}/hardware/pci/{pci-id-or-mapping}/mdev"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "available": {
                        "type": "integer",
                        "description": "The number of still available instances of this type."
                      },
                      "description": {
                        "type": "string",
                        "description": "Additional description of the type."
                      },
                      "name": {
                        "type": "string",
                        "description": "A human readable name for the type.",
                        "x-proxmox-optional": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The name of the mdev type."
                      }
                    },
                    "required": [
                      "available",
                      "description",
                      "type"
                    ]
                  }
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-nodes-node-hardware-pci-pci-id-or-mapping-mdev",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "pci-id-or-mapping",
            "in": "path",
            "required": true,
            "description": "The PCI ID or mapping to list the mdev types for.",
            "schema": {
              "type": "string",
              "description": "The PCI ID or mapping to list the mdev types for.",
              "pattern": "(?:(?:[0-9a-fA-F]{4}:)?[0-9a-fA-F]{2}:[0-9a-fA-F]{2}\\.[0-9a-fA-F])|([a-zA-Z][a-zA-Z0-9_-]+)"
            }
          }
        ],
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/",
                [
                  "Sys.Audit",
                  "Sys.Modify"
                ],
                "any",
                1
              ]
            }
          ]
        }
      }
    },
    "/nodes/{node}/hardware/usb": {
      "get": {
        "operationId": "get-nodes-node-hardware-usb",
        "summary": "usbscan",
        "description": "List local USB devices.",
        "tags": [
          "/nodes/{node}/hardware/usb"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "busnum": {
                        "type": "integer"
                      },
                      "class": {
                        "type": "integer"
                      },
                      "devnum": {
                        "type": "integer"
                      },
                      "level": {
                        "type": "integer"
                      },
                      "manufacturer": {
                        "type": "string",
                        "x-proxmox-optional": true
                      },
                      "port": {
                        "type": "integer"
                      },
                      "prodid": {
                        "type": "string"
                      },
                      "product": {
                        "type": "string",
                        "x-proxmox-optional": true
                      },
                      "serial": {
                        "type": "string",
                        "x-proxmox-optional": true
                      },
                      "speed": {
                        "type": "string"
                      },
                      "usbpath": {
                        "type": "string",
                        "x-proxmox-optional": true
                      },
                      "vendid": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "busnum",
                      "class",
                      "devnum",
                      "level",
                      "port",
                      "prodid",
                      "speed",
                      "vendid"
                    ]
                  }
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-nodes-node-hardware-usb",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/",
                [
                  "Sys.Modify"
                ]
              ]
            }
          ]
        }
      }
    },
    "/nodes/{node}/hosts": {
      "get": {
        "operationId": "get-nodes-node-hosts",
        "summary": "get_etc_hosts",
        "description": "Get the content of /etc/hosts.",
        "tags": [
          "/nodes/{node}/hosts"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "string",
                      "description": "The content of /etc/hosts."
                    },
                    "digest": {
                      "type": "string",
                      "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
                      "maxLength": 64,
                      "x-proxmox-optional": true
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-nodes-node-hosts",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/",
                [
                  "Sys.Audit"
                ]
              ]
            }
          ]
        }
      },
      "post": {
        "operationId": "post-nodes-node-hosts",
        "summary": "write_etc_hosts",
        "description": "Write /etc/hosts.",
        "tags": [
          "/nodes/{node}/hosts"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "post-nodes-node-hosts",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "data": {
                    "type": "string",
                    "description": "The target content of /etc/hosts.",
                    "x-proxmox-typetext": "<string>"
                  },
                  "digest": {
                    "type": "string",
                    "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
                    "maxLength": 64,
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  }
                },
                "required": [
                  "data"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/nodes/{node}",
                [
                  "Sys.Modify"
                ]
              ]
            }
          ]
        }
      }
    },
    "/nodes/{node}/journal": {
      "get": {
        "operationId": "get-nodes-node-journal",
        "summary": "journal",
        "description": "Read Journal",
        "tags": [
          "/nodes/{node}/journal"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-nodes-node-journal",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "endcursor",
            "in": "query",
            "required": false,
            "description": "End before the given Cursor. Conflicts with 'until'",
            "schema": {
              "type": "string",
              "description": "End before the given Cursor. Conflicts with 'until'",
              "x-proxmox-typetext": "<string>",
              "x-proxmox-optional": true
            }
          },
          {
            "name": "lastentries",
            "in": "query",
            "required": false,
            "description": "Limit to the last X lines. Conflicts with a range.",
            "schema": {
              "type": "integer",
              "description": "Limit to the last X lines. Conflicts with a range.",
              "minimum": 0,
              "x-proxmox-typetext": "<integer> (0 - N)",
              "x-proxmox-optional": true
            }
          },
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "since",
            "in": "query",
            "required": false,
            "description": "Display all log since this UNIX epoch. Conflicts with 'startcursor'.",
            "schema": {
              "type": "integer",
              "description": "Display all log since this UNIX epoch. Conflicts with 'startcursor'.",
              "minimum": 0,
              "x-proxmox-typetext": "<integer> (0 - N)",
              "x-proxmox-optional": true
            }
          },
          {
            "name": "startcursor",
            "in": "query",
            "required": false,
            "description": "Start after the given Cursor. Conflicts with 'since'",
            "schema": {
              "type": "string",
              "description": "Start after the given Cursor. Conflicts with 'since'",
              "x-proxmox-typetext": "<string>",
              "x-proxmox-optional": true
            }
          },
          {
            "name": "until",
            "in": "query",
            "required": false,
            "description": "Display all log until this UNIX epoch. Conflicts with 'endcursor'.",
            "schema": {
              "type": "integer",
              "description": "Display all log until this UNIX epoch. Conflicts with 'endcursor'.",
              "minimum": 0,
              "x-proxmox-typetext": "<integer> (0 - N)",
              "x-proxmox-optional": true
            }
          }
        ],
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/nodes/{node}",
                [
                  "Sys.Syslog"
                ]
              ]
            }
          ]
        }
      }
    },
    "/nodes/{node}/lxc": {
      "get": {
        "operationId": "get-nodes-node-lxc",
        "summary": "vmlist",
        "description": "LXC container index (per node).",
        "tags": [
          "/nodes/{node}/lxc"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "cpu": {
                        "type": "number",
                        "description": "Current CPU usage.",
                        "x-proxmox-optional": true
                      },
                      "cpus": {
                        "type": "number",
                        "description": "Maximum usable CPUs.",
                        "x-proxmox-optional": true
                      },
                      "disk": {
                        "type": "integer",
                        "description": "Root disk image space-usage in bytes.",
                        "minimum": 0,
                        "x-proxmox-optional": true,
                        "x-proxmox-metadata": {
                          "renderer": "bytes"
                        }
                      },
                      "diskread": {
                        "type": "integer",
                        "description": "The amount of bytes the guest read from it's block devices since the guest was started. (Note: This info is not available for all storage types.)",
                        "x-proxmox-optional": true,
                        "x-proxmox-metadata": {
                          "renderer": "bytes"
                        }
                      },
                      "diskwrite": {
                        "type": "integer",
                        "description": "The amount of bytes the guest wrote from it's block devices since the guest was started. (Note: This info is not available for all storage types.)",
                        "x-proxmox-optional": true,
                        "x-proxmox-metadata": {
                          "renderer": "bytes"
                        }
                      },
                      "lock": {
                        "type": "string",
                        "description": "The current config lock, if any.",
                        "x-proxmox-optional": true
                      },
                      "maxdisk": {
                        "type": "integer",
                        "description": "Root disk image size in bytes.",
                        "x-proxmox-optional": true,
                        "x-proxmox-metadata": {
                          "renderer": "bytes"
                        }
                      },
                      "maxmem": {
                        "type": "integer",
                        "description": "Maximum memory in bytes.",
                        "x-proxmox-optional": true,
                        "x-proxmox-metadata": {
                          "renderer": "bytes"
                        }
                      },
                      "maxswap": {
                        "type": "integer",
                        "description": "Maximum SWAP memory in bytes.",
                        "x-proxmox-optional": true,
                        "x-proxmox-metadata": {
                          "renderer": "bytes"
                        }
                      },
                      "mem": {
                        "type": "integer",
                        "description": "Currently used memory in bytes.",
                        "x-proxmox-optional": true,
                        "x-proxmox-metadata": {
                          "renderer": "bytes"
                        }
                      },
                      "name": {
                        "type": "string",
                        "description": "Container name.",
                        "x-proxmox-optional": true
                      },
                      "netin": {
                        "type": "integer",
                        "description": "The amount of traffic in bytes that was sent to the guest over the network since it was started.",
                        "x-proxmox-optional": true,
                        "x-proxmox-metadata": {
                          "renderer": "bytes"
                        }
                      },
                      "netout": {
                        "type": "integer",
                        "description": "The amount of traffic in bytes that was sent from the guest over the network since it was started.",
                        "x-proxmox-optional": true,
                        "x-proxmox-metadata": {
                          "renderer": "bytes"
                        }
                      },
                      "pressurecpusome": {
                        "type": "number",
                        "description": "CPU Some pressure stall average over the last 10 seconds.",
                        "x-proxmox-optional": true
                      },
                      "pressureiofull": {
                        "type": "number",
                        "description": "IO Full pressure stall average over the last 10 seconds.",
                        "x-proxmox-optional": true
                      },
                      "pressureiosome": {
                        "type": "number",
                        "description": "IO Some pressure stall average over the last 10 seconds.",
                        "x-proxmox-optional": true
                      },
                      "pressurememoryfull": {
                        "type": "number",
                        "description": "Memory Full pressure stall average over the last 10 seconds.",
                        "x-proxmox-optional": true
                      },
                      "pressurememorysome": {
                        "type": "number",
                        "description": "Memory Some pressure stall average over the last 10 seconds.",
                        "x-proxmox-optional": true
                      },
                      "status": {
                        "type": "string",
                        "description": "LXC Container status.",
                        "enum": [
                          "stopped",
                          "running"
                        ]
                      },
                      "tags": {
                        "type": "string",
                        "description": "The current configured tags, if any.",
                        "x-proxmox-optional": true
                      },
                      "template": {
                        "type": "boolean",
                        "description": "Determines if the guest is a template.",
                        "default": false,
                        "x-proxmox-optional": true
                      },
                      "uptime": {
                        "type": "integer",
                        "description": "Uptime in seconds.",
                        "x-proxmox-optional": true,
                        "x-proxmox-metadata": {
                          "renderer": "duration"
                        }
                      },
                      "vmid": {
                        "type": "integer",
                        "description": "The (unique) ID of the VM.",
                        "minimum": 100,
                        "maximum": 999999999,
                        "format": "pve-vmid"
                      }
                    },
                    "required": [
                      "status",
                      "vmid"
                    ]
                  },
                  "x-proxmox-metadata": {
                    "links": [
                      {
                        "href": "{vmid}",
                        "rel": "child"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-nodes-node-lxc",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "description": "Only list CTs where you have VM.Audit permission on /vms/<vmid>.",
              "user": "all"
            }
          ]
        }
      },
      "post": {
        "operationId": "post-nodes-node-lxc",
        "summary": "create_vm",
        "description": "Create or restore a container.",
        "tags": [
          "/nodes/{node}/lxc"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "post-nodes-node-lxc",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "arch": {
                    "type": "string",
                    "description": "OS architecture type.",
                    "enum": [
                      "amd64",
                      "i386",
                      "arm64",
                      "armhf",
                      "riscv32",
                      "riscv64"
                    ],
                    "default": "amd64",
                    "x-proxmox-optional": true
                  },
                  "bwlimit": {
                    "type": "number",
                    "description": "Override I/O bandwidth limit (in KiB/s).",
                    "default": "restore limit from datacenter or storage config",
                    "x-proxmox-typetext": "<number> (0 - N)",
                    "x-proxmox-optional": true
                  },
                  "cmode": {
                    "type": "string",
                    "description": "Console mode. By default, the console command tries to open a connection to one of the available tty devices. By setting cmode to 'console' it tries to attach to /dev/console instead. If you set cmode to 'shell', it simply invokes a shell inside the container (no login).",
                    "enum": [
                      "shell",
                      "console",
                      "tty"
                    ],
                    "default": "tty",
                    "x-proxmox-optional": true
                  },
                  "console": {
                    "type": "boolean",
                    "description": "Attach a console device (/dev/console) to the container.",
                    "default": true,
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "cores": {
                    "type": "integer",
                    "description": "The number of cores assigned to the container. A container can use all available cores by default.",
                    "minimum": 1,
                    "maximum": 8192,
                    "x-proxmox-typetext": "<integer> (1 - 8192)",
                    "x-proxmox-optional": true
                  },
                  "cpulimit": {
                    "type": "number",
                    "description": "Limit of CPU usage.\n\nNOTE: If the computer has 2 CPUs, it has a total of '2' CPU time. Value '0' indicates no CPU limit.",
                    "default": 0,
                    "minimum": 0,
                    "maximum": 8192,
                    "x-proxmox-typetext": "<number> (0 - 8192)",
                    "x-proxmox-optional": true
                  },
                  "cpuunits": {
                    "type": "integer",
                    "description": "CPU weight for a container, will be clamped to [1, 10000] in cgroup v2.\n\nCPU weight for a container. Argument is used in the kernel fair scheduler. The larger the number is, the more CPU time this container gets. Number is relative to the weights of all the other running guests.",
                    "default": "cgroup v1: 1024, cgroup v2: 100",
                    "minimum": 0,
                    "maximum": 500000,
                    "x-proxmox-typetext": "<integer> (0 - 500000)",
                    "x-proxmox-optional": true
                  },
                  "debug": {
                    "type": "boolean",
                    "description": "Try to be more verbose. For now this only enables debug log-level on start.",
                    "default": false,
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "description": {
                    "type": "string",
                    "description": "Description for the Container. Shown in the web-interface CT's summary. This is saved as comment inside the configuration file.",
                    "maxLength": 8192,
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "dev[n]": {
                    "type": "string",
                    "description": "Device to pass through to the container",
                    "x-proxmox-typetext": "[[path=]<Path>] [,deny-write=<1|0>] [,gid=<integer>] [,mode=<Octal access mode>] [,uid=<integer>]",
                    "x-proxmox-optional": true
                  },
                  "features": {
                    "type": "string",
                    "description": "Allow containers access to advanced features.",
                    "x-proxmox-typetext": "[force_rw_sys=<1|0>] [,fuse=<1|0>] [,keyctl=<1|0>] [,mknod=<1|0>] [,mount=<fstype;fstype;...>] [,nesting=<1|0>]",
                    "x-proxmox-optional": true
                  },
                  "force": {
                    "type": "boolean",
                    "description": "Allow to overwrite existing container.",
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "hookscript": {
                    "type": "string",
                    "description": "Script that will be executed during various steps in the containers lifetime.",
                    "format": "pve-volume-id",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "hostname": {
                    "type": "string",
                    "description": "Set a host name for the container.",
                    "maxLength": 255,
                    "format": "dns-name",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "ignore-unpack-errors": {
                    "type": "boolean",
                    "description": "Ignore errors when extracting the template.",
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "lock": {
                    "type": "string",
                    "description": "Lock/unlock the container.",
                    "enum": [
                      "backup",
                      "create",
                      "destroyed",
                      "disk",
                      "fstrim",
                      "migrate",
                      "mounted",
                      "rollback",
                      "snapshot",
                      "snapshot-delete"
                    ],
                    "x-proxmox-optional": true
                  },
                  "memory": {
                    "type": "integer",
                    "description": "Amount of RAM for the container in MB.",
                    "default": 512,
                    "minimum": 16,
                    "x-proxmox-typetext": "<integer> (16 - N)",
                    "x-proxmox-optional": true
                  },
                  "mp[n]": {
                    "type": "string",
                    "description": "Use volume as container mount point. Use the special syntax STORAGE_ID:SIZE_IN_GiB to allocate a new volume.",
                    "x-proxmox-typetext": "[volume=]<volume> ,mp=<Path> [,acl=<1|0>] [,backup=<1|0>] [,mountoptions=<opt[;opt...]>] [,quota=<1|0>] [,replicate=<1|0>] [,ro=<1|0>] [,shared=<1|0>] [,size=<DiskSize>]",
                    "x-proxmox-optional": true
                  },
                  "nameserver": {
                    "type": "string",
                    "description": "Sets DNS server IP address for a container. Create will automatically use the setting from the host if you neither set searchdomain nor nameserver.",
                    "format": "lxc-ip-with-ll-iface-list",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "net[n]": {
                    "type": "string",
                    "description": "Specifies network interfaces for the container.",
                    "x-proxmox-typetext": "name=<string> [,bridge=<bridge>] [,firewall=<1|0>] [,gw=<GatewayIPv4>] [,gw6=<GatewayIPv6>] [,hwaddr=<XX:XX:XX:XX:XX:XX>] [,ip=<(IPv4/CIDR|dhcp|manual)>] [,ip6=<(IPv6/CIDR|auto|dhcp|manual)>] [,link_down=<1|0>] [,mtu=<integer>] [,rate=<mbps>] [,tag=<integer>] [,trunks=<vlanid[;vlanid...]>] [,type=<veth>]",
                    "x-proxmox-optional": true
                  },
                  "onboot": {
                    "type": "boolean",
                    "description": "Specifies whether a container will be started during system bootup.",
                    "default": false,
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "ostemplate": {
                    "type": "string",
                    "description": "The OS template or backup file.",
                    "maxLength": 255,
                    "x-proxmox-typetext": "<string>"
                  },
                  "ostype": {
                    "type": "string",
                    "description": "OS type. This is used to setup configuration inside the container, and corresponds to lxc setup scripts in /usr/share/lxc/config/<ostype>.common.conf. Value 'unmanaged' can be used to skip and OS specific setup.",
                    "enum": [
                      "debian",
                      "devuan",
                      "ubuntu",
                      "centos",
                      "fedora",
                      "opensuse",
                      "archlinux",
                      "alpine",
                      "gentoo",
                      "nixos",
                      "unmanaged"
                    ],
                    "x-proxmox-optional": true
                  },
                  "password": {
                    "type": "string",
                    "description": "Sets root password inside container.",
                    "minLength": 5,
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "pool": {
                    "type": "string",
                    "description": "Add the VM to the specified pool.",
                    "format": "pve-poolid",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "protection": {
                    "type": "boolean",
                    "description": "Sets the protection flag of the container. This will prevent the CT or CT's disk remove/update operation.",
                    "default": false,
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "restore": {
                    "type": "boolean",
                    "description": "Mark this as restore task.",
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "rootfs": {
                    "type": "string",
                    "description": "Use volume as container root.",
                    "x-proxmox-typetext": "[volume=]<volume> [,acl=<1|0>] [,mountoptions=<opt[;opt...]>] [,quota=<1|0>] [,replicate=<1|0>] [,ro=<1|0>] [,shared=<1|0>] [,size=<DiskSize>]",
                    "x-proxmox-optional": true
                  },
                  "searchdomain": {
                    "type": "string",
                    "description": "Sets DNS search domains for a container. Create will automatically use the setting from the host if you neither set searchdomain nor nameserver.",
                    "format": "dns-name-list",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "ssh-public-keys": {
                    "type": "string",
                    "description": "Setup public SSH keys (one key per line, OpenSSH format).",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "start": {
                    "type": "boolean",
                    "description": "Start the CT after its creation finished successfully.",
                    "default": false,
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "startup": {
                    "type": "string",
                    "description": "Startup and shutdown behavior. Order is a non-negative number defining the general startup order. Shutdown in done with reverse ordering. Additionally you can set the 'up' or 'down' delay in seconds, which specifies a delay to wait before the next VM is started or stopped.",
                    "format": "pve-startup-order",
                    "x-proxmox-typetext": "[[order=]\\d+] [,up=\\d+] [,down=\\d+] ",
                    "x-proxmox-optional": true
                  },
                  "storage": {
                    "type": "string",
                    "description": "Default Storage.",
                    "default": "local",
                    "format": "pve-storage-id",
                    "x-proxmox-format-description": "storage ID",
                    "x-proxmox-typetext": "<storage ID>",
                    "x-proxmox-optional": true
                  },
                  "swap": {
                    "type": "integer",
                    "description": "Amount of SWAP for the container in MB.",
                    "default": 512,
                    "minimum": 0,
                    "x-proxmox-typetext": "<integer> (0 - N)",
                    "x-proxmox-optional": true
                  },
                  "tags": {
                    "type": "string",
                    "description": "Tags of the Container. This is only meta information.",
                    "format": "pve-tag-list",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "template": {
                    "type": "boolean",
                    "description": "Enable/disable Template.",
                    "default": false,
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "timezone": {
                    "type": "string",
                    "description": "Time zone to use in the container. If option isn't set, then nothing will be done. Can be set to 'host' to match the host time zone, or an arbitrary time zone option from /usr/share/zoneinfo/zone.tab",
                    "format": "pve-ct-timezone",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "tty": {
                    "type": "integer",
                    "description": "Specify the number of tty available to the container",
                    "default": 2,
                    "minimum": 0,
                    "maximum": 6,
                    "x-proxmox-typetext": "<integer> (0 - 6)",
                    "x-proxmox-optional": true
                  },
                  "unique": {
                    "type": "boolean",
                    "description": "Assign a unique random ethernet address.",
                    "x-proxmox-requires": [
                      "restore"
                    ],
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "unprivileged": {
                    "type": "boolean",
                    "description": "Makes the container run as unprivileged user. (Should not be modified manually.)",
                    "default": false,
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "unused[n]": {
                    "type": "string",
                    "description": "Reference to unused volumes. This is used internally, and should not be modified manually.",
                    "x-proxmox-typetext": "[volume=]<volume>",
                    "x-proxmox-optional": true
                  },
                  "vmid": {
                    "type": "integer",
                    "description": "The (unique) ID of the VM.",
                    "minimum": 100,
                    "maximum": 999999999,
                    "format": "pve-vmid",
                    "x-proxmox-typetext": "<integer> (100 - 999999999)"
                  }
                },
                "required": [
                  "ostemplate",
                  "vmid"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "description": "You need 'VM.Allocate' permission on /vms/{vmid} or on the VM pool /pool/{pool}. For restore, it is enough if the user has 'VM.Backup' permission and the VM already exists. You also need 'Datastore.AllocateSpace' permissions on the storage. For privileged containers, 'Sys.Modify' permissions on '/' are required.",
              "user": "all"
            }
          ]
        }
      }
    },
    "/nodes/{node}/lxc/{vmid}": {
      "delete": {
        "operationId": "delete-nodes-node-lxc-vmid",
        "summary": "destroy_vm",
        "description": "Destroy the container (also delete all uses files).",
        "tags": [
          "/nodes/{node}/lxc/{vmid}"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "delete-nodes-node-lxc-vmid",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "destroy-unreferenced-disks",
            "in": "query",
            "required": false,
            "description": "If set, destroy additionally all disks with the VMID from all enabled storages which are not referenced in the config.",
            "schema": {
              "type": "boolean",
              "description": "If set, destroy additionally all disks with the VMID from all enabled storages which are not referenced in the config.",
              "x-proxmox-typetext": "<boolean>",
              "x-proxmox-optional": true
            }
          },
          {
            "name": "force",
            "in": "query",
            "required": false,
            "description": "Force destroy, even if running.",
            "schema": {
              "type": "boolean",
              "description": "Force destroy, even if running.",
              "default": false,
              "x-proxmox-typetext": "<boolean>",
              "x-proxmox-optional": true
            }
          },
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "purge",
            "in": "query",
            "required": false,
            "description": "Remove container from all related configurations. For example, backup jobs, replication jobs or HA. Related ACLs and Firewall entries will *always* be removed.",
            "schema": {
              "type": "boolean",
              "description": "Remove container from all related configurations. For example, backup jobs, replication jobs or HA. Related ACLs and Firewall entries will *always* be removed.",
              "default": false,
              "x-proxmox-typetext": "<boolean>",
              "x-proxmox-optional": true
            }
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "description": "The (unique) ID of the VM.",
            "schema": {
              "type": "integer",
              "description": "The (unique) ID of the VM.",
              "minimum": 100,
              "maximum": 999999999,
              "format": "pve-vmid",
              "x-proxmox-typetext": "<integer> (100 - 999999999)"
            }
          }
        ],
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/vms/{vmid}",
                [
                  "VM.Allocate"
                ]
              ]
            }
          ]
        }
      },
      "get": {
        "operationId": "get-nodes-node-lxc-vmid",
        "summary": "vmdiridx",
        "description": "Directory index",
        "tags": [
          "/nodes/{node}/lxc/{vmid}"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "subdir": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "subdir"
                    ]
                  },
                  "x-proxmox-metadata": {
                    "links": [
                      {
                        "href": "{subdir}",
                        "rel": "child"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-nodes-node-lxc-vmid",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "description": "The (unique) ID of the VM.",
            "schema": {
              "type": "integer",
              "description": "The (unique) ID of the VM.",
              "minimum": 100,
              "maximum": 999999999,
              "format": "pve-vmid",
              "x-proxmox-typetext": "<integer> (100 - 999999999)"
            }
          }
        ],
        "security": [],
        "x-proxmox-permissions": {
          "all": [
            {
              "user": "all"
            }
          ]
        }
      }
    },
    "/nodes/{node}/lxc/{vmid}/clone": {
      "post": {
        "operationId": "post-nodes-node-lxc-vmid-clone",
        "summary": "clone_vm",
        "description": "Create a container clone/copy",
        "tags": [
          "/nodes/{node}/lxc/{vmid}/clone"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "post-nodes-node-lxc-vmid-clone",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "description": "The (unique) ID of the VM.",
            "schema": {
              "type": "integer",
              "description": "The (unique) ID of the VM.",
              "minimum": 100,
              "maximum": 999999999,
              "format": "pve-vmid",
              "x-proxmox-typetext": "<integer> (100 - 999999999)"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "bwlimit": {
                    "type": "number",
                    "description": "Override I/O bandwidth limit (in KiB/s).",
                    "default": "clone limit from datacenter or storage config",
                    "x-proxmox-typetext": "<number> (0 - N)",
                    "x-proxmox-optional": true
                  },
                  "description": {
                    "type": "string",
                    "description": "Description for the new CT.",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "full": {
                    "type": "boolean",
                    "description": "Create a full copy of all disks. This is always done when you clone a normal CT. For CT templates, we try to create a linked clone by default.",
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "hostname": {
                    "type": "string",
                    "description": "Set a hostname for the new CT.",
                    "format": "dns-name",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "newid": {
                    "type": "integer",
                    "description": "VMID for the clone.",
                    "minimum": 100,
                    "maximum": 999999999,
                    "format": "pve-vmid",
                    "x-proxmox-typetext": "<integer> (100 - 999999999)"
                  },
                  "pool": {
                    "type": "string",
                    "description": "Add the new CT to the specified pool.",
                    "format": "pve-poolid",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "snapname": {
                    "type": "string",
                    "description": "The name of the snapshot.",
                    "maxLength": 40,
                    "format": "pve-configid",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "storage": {
                    "type": "string",
                    "description": "Target storage for full clone.",
                    "format": "pve-storage-id",
                    "x-proxmox-format-description": "storage ID",
                    "x-proxmox-typetext": "<storage ID>",
                    "x-proxmox-optional": true
                  },
                  "target": {
                    "type": "string",
                    "description": "Target node. Only allowed if the original VM is on shared storage.",
                    "format": "pve-node",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  }
                },
                "required": [
                  "newid"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "description": "You need 'VM.Clone' permissions on /vms/{vmid}, and 'VM.Allocate' permissions on /vms/{newid} (or on the VM pool /pool/{pool}). You also need 'Datastore.AllocateSpace' on any used storage, and 'SDN.Use' on any bridge.",
              "check": [
                "and",
                [
                  "perm",
                  "/vms/{vmid}",
                  [
                    "VM.Clone"
                  ]
                ],
                [
                  "or",
                  [
                    "perm",
                    "/vms/{newid}",
                    [
                      "VM.Allocate"
                    ]
                  ],
                  [
                    "perm",
                    "/pool/{pool}",
                    [
                      "VM.Allocate"
                    ],
                    "require_param",
                    "pool"
                  ]
                ]
              ]
            }
          ]
        }
      }
    },
    "/nodes/{node}/lxc/{vmid}/config": {
      "get": {
        "operationId": "get-nodes-node-lxc-vmid-config",
        "summary": "vm_config",
        "description": "Get container configuration.",
        "tags": [
          "/nodes/{node}/lxc/{vmid}/config"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "arch": {
                      "type": "string",
                      "description": "OS architecture type.",
                      "enum": [
                        "amd64",
                        "i386",
                        "arm64",
                        "armhf",
                        "riscv32",
                        "riscv64"
                      ],
                      "default": "amd64",
                      "x-proxmox-optional": true
                    },
                    "cmode": {
                      "type": "string",
                      "description": "Console mode. By default, the console command tries to open a connection to one of the available tty devices. By setting cmode to 'console' it tries to attach to /dev/console instead. If you set cmode to 'shell', it simply invokes a shell inside the container (no login).",
                      "enum": [
                        "shell",
                        "console",
                        "tty"
                      ],
                      "default": "tty",
                      "x-proxmox-optional": true
                    },
                    "console": {
                      "type": "boolean",
                      "description": "Attach a console device (/dev/console) to the container.",
                      "default": true,
                      "x-proxmox-optional": true
                    },
                    "cores": {
                      "type": "integer",
                      "description": "The number of cores assigned to the container. A container can use all available cores by default.",
                      "minimum": 1,
                      "maximum": 8192,
                      "x-proxmox-optional": true
                    },
                    "cpulimit": {
                      "type": "number",
                      "description": "Limit of CPU usage.\n\nNOTE: If the computer has 2 CPUs, it has a total of '2' CPU time. Value '0' indicates no CPU limit.",
                      "default": 0,
                      "minimum": 0,
                      "maximum": 8192,
                      "x-proxmox-optional": true
                    },
                    "cpuunits": {
                      "type": "integer",
                      "description": "CPU weight for a container, will be clamped to [1, 10000] in cgroup v2.\n\nCPU weight for a container. Argument is used in the kernel fair scheduler. The larger the number is, the more CPU time this container gets. Number is relative to the weights of all the other running guests.",
                      "default": "cgroup v1: 1024, cgroup v2: 100",
                      "minimum": 0,
                      "maximum": 500000,
                      "x-proxmox-optional": true
                    },
                    "debug": {
                      "type": "boolean",
                      "description": "Try to be more verbose. For now this only enables debug log-level on start.",
                      "default": false,
                      "x-proxmox-optional": true
                    },
                    "description": {
                      "type": "string",
                      "description": "Description for the Container. Shown in the web-interface CT's summary. This is saved as comment inside the configuration file.",
                      "maxLength": 8192,
                      "x-proxmox-optional": true
                    },
                    "dev[n]": {
                      "type": "string",
                      "description": "Device to pass through to the container",
                      "x-proxmox-optional": true
                    },
                    "digest": {
                      "type": "string",
                      "description": "SHA1 digest of configuration file. This can be used to prevent concurrent modifications."
                    },
                    "features": {
                      "type": "string",
                      "description": "Allow containers access to advanced features.",
                      "x-proxmox-optional": true
                    },
                    "hookscript": {
                      "type": "string",
                      "description": "Script that will be executed during various steps in the containers lifetime.",
                      "format": "pve-volume-id",
                      "x-proxmox-optional": true
                    },
                    "hostname": {
                      "type": "string",
                      "description": "Set a host name for the container.",
                      "maxLength": 255,
                      "format": "dns-name",
                      "x-proxmox-optional": true
                    },
                    "lock": {
                      "type": "string",
                      "description": "Lock/unlock the container.",
                      "enum": [
                        "backup",
                        "create",
                        "destroyed",
                        "disk",
                        "fstrim",
                        "migrate",
                        "mounted",
                        "rollback",
                        "snapshot",
                        "snapshot-delete"
                      ],
                      "x-proxmox-optional": true
                    },
                    "lxc": {
                      "type": "array",
                      "description": "Array of lxc low-level configurations ([[key1, value1], [key2, value2] ...]).",
                      "items": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "x-proxmox-optional": true
                    },
                    "memory": {
                      "type": "integer",
                      "description": "Amount of RAM for the container in MB.",
                      "default": 512,
                      "minimum": 16,
                      "x-proxmox-optional": true
                    },
                    "mp[n]": {
                      "type": "string",
                      "description": "Use volume as container mount point. Use the special syntax STORAGE_ID:SIZE_IN_GiB to allocate a new volume.",
                      "x-proxmox-optional": true
                    },
                    "nameserver": {
                      "type": "string",
                      "description": "Sets DNS server IP address for a container. Create will automatically use the setting from the host if you neither set searchdomain nor nameserver.",
                      "format": "lxc-ip-with-ll-iface-list",
                      "x-proxmox-optional": true
                    },
                    "net[n]": {
                      "type": "string",
                      "description": "Specifies network interfaces for the container.",
                      "x-proxmox-optional": true
                    },
                    "onboot": {
                      "type": "boolean",
                      "description": "Specifies whether a container will be started during system bootup.",
                      "default": false,
                      "x-proxmox-optional": true
                    },
                    "ostype": {
                      "type": "string",
                      "description": "OS type. This is used to setup configuration inside the container, and corresponds to lxc setup scripts in /usr/share/lxc/config/<ostype>.common.conf. Value 'unmanaged' can be used to skip and OS specific setup.",
                      "enum": [
                        "debian",
                        "devuan",
                        "ubuntu",
                        "centos",
                        "fedora",
                        "opensuse",
                        "archlinux",
                        "alpine",
                        "gentoo",
                        "nixos",
                        "unmanaged"
                      ],
                      "x-proxmox-optional": true
                    },
                    "protection": {
                      "type": "boolean",
                      "description": "Sets the protection flag of the container. This will prevent the CT or CT's disk remove/update operation.",
                      "default": false,
                      "x-proxmox-optional": true
                    },
                    "rootfs": {
                      "type": "string",
                      "description": "Use volume as container root.",
                      "x-proxmox-optional": true
                    },
                    "searchdomain": {
                      "type": "string",
                      "description": "Sets DNS search domains for a container. Create will automatically use the setting from the host if you neither set searchdomain nor nameserver.",
                      "format": "dns-name-list",
                      "x-proxmox-optional": true
                    },
                    "startup": {
                      "type": "string",
                      "description": "Startup and shutdown behavior. Order is a non-negative number defining the general startup order. Shutdown in done with reverse ordering. Additionally you can set the 'up' or 'down' delay in seconds, which specifies a delay to wait before the next VM is started or stopped.",
                      "format": "pve-startup-order",
                      "x-proxmox-typetext": "[[order=]\\d+] [,up=\\d+] [,down=\\d+] ",
                      "x-proxmox-optional": true
                    },
                    "swap": {
                      "type": "integer",
                      "description": "Amount of SWAP for the container in MB.",
                      "default": 512,
                      "minimum": 0,
                      "x-proxmox-optional": true
                    },
                    "tags": {
                      "type": "string",
                      "description": "Tags of the Container. This is only meta information.",
                      "format": "pve-tag-list",
                      "x-proxmox-optional": true
                    },
                    "template": {
                      "type": "boolean",
                      "description": "Enable/disable Template.",
                      "default": false,
                      "x-proxmox-optional": true
                    },
                    "timezone": {
                      "type": "string",
                      "description": "Time zone to use in the container. If option isn't set, then nothing will be done. Can be set to 'host' to match the host time zone, or an arbitrary time zone option from /usr/share/zoneinfo/zone.tab",
                      "format": "pve-ct-timezone",
                      "x-proxmox-optional": true
                    },
                    "tty": {
                      "type": "integer",
                      "description": "Specify the number of tty available to the container",
                      "default": 2,
                      "minimum": 0,
                      "maximum": 6,
                      "x-proxmox-optional": true
                    },
                    "unprivileged": {
                      "type": "boolean",
                      "description": "Makes the container run as unprivileged user. (Should not be modified manually.)",
                      "default": false,
                      "x-proxmox-optional": true
                    },
                    "unused[n]": {
                      "type": "string",
                      "description": "Reference to unused volumes. This is used internally, and should not be modified manually.",
                      "x-proxmox-optional": true
                    }
                  },
                  "required": [
                    "digest"
                  ]
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-nodes-node-lxc-vmid-config",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "current",
            "in": "query",
            "required": false,
            "description": "Get current values (instead of pending values).",
            "schema": {
              "type": "boolean",
              "description": "Get current values (instead of pending values).",
              "default": false,
              "x-proxmox-typetext": "<boolean>",
              "x-proxmox-optional": true
            }
          },
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "snapshot",
            "in": "query",
            "required": false,
            "description": "Fetch config values from given snapshot.",
            "schema": {
              "type": "string",
              "description": "Fetch config values from given snapshot.",
              "maxLength": 40,
              "format": "pve-configid",
              "x-proxmox-typetext": "<string>",
              "x-proxmox-optional": true
            }
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "description": "The (unique) ID of the VM.",
            "schema": {
              "type": "integer",
              "description": "The (unique) ID of the VM.",
              "minimum": 100,
              "maximum": 999999999,
              "format": "pve-vmid",
              "x-proxmox-typetext": "<integer> (100 - 999999999)"
            }
          }
        ],
        "security": [],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/vms/{vmid}",
                [
                  "VM.Audit"
                ]
              ]
            }
          ]
        }
      },
      "put": {
        "operationId": "put-nodes-node-lxc-vmid-config",
        "summary": "update_vm",
        "description": "Set container options.",
        "tags": [
          "/nodes/{node}/lxc/{vmid}/config"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "put-nodes-node-lxc-vmid-config",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "description": "The (unique) ID of the VM.",
            "schema": {
              "type": "integer",
              "description": "The (unique) ID of the VM.",
              "minimum": 100,
              "maximum": 999999999,
              "format": "pve-vmid",
              "x-proxmox-typetext": "<integer> (100 - 999999999)"
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "arch": {
                    "type": "string",
                    "description": "OS architecture type.",
                    "enum": [
                      "amd64",
                      "i386",
                      "arm64",
                      "armhf",
                      "riscv32",
                      "riscv64"
                    ],
                    "default": "amd64",
                    "x-proxmox-optional": true
                  },
                  "cmode": {
                    "type": "string",
                    "description": "Console mode. By default, the console command tries to open a connection to one of the available tty devices. By setting cmode to 'console' it tries to attach to /dev/console instead. If you set cmode to 'shell', it simply invokes a shell inside the container (no login).",
                    "enum": [
                      "shell",
                      "console",
                      "tty"
                    ],
                    "default": "tty",
                    "x-proxmox-optional": true
                  },
                  "console": {
                    "type": "boolean",
                    "description": "Attach a console device (/dev/console) to the container.",
                    "default": true,
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "cores": {
                    "type": "integer",
                    "description": "The number of cores assigned to the container. A container can use all available cores by default.",
                    "minimum": 1,
                    "maximum": 8192,
                    "x-proxmox-typetext": "<integer> (1 - 8192)",
                    "x-proxmox-optional": true
                  },
                  "cpulimit": {
                    "type": "number",
                    "description": "Limit of CPU usage.\n\nNOTE: If the computer has 2 CPUs, it has a total of '2' CPU time. Value '0' indicates no CPU limit.",
                    "default": 0,
                    "minimum": 0,
                    "maximum": 8192,
                    "x-proxmox-typetext": "<number> (0 - 8192)",
                    "x-proxmox-optional": true
                  },
                  "cpuunits": {
                    "type": "integer",
                    "description": "CPU weight for a container, will be clamped to [1, 10000] in cgroup v2.\n\nCPU weight for a container. Argument is used in the kernel fair scheduler. The larger the number is, the more CPU time this container gets. Number is relative to the weights of all the other running guests.",
                    "default": "cgroup v1: 1024, cgroup v2: 100",
                    "minimum": 0,
                    "maximum": 500000,
                    "x-proxmox-typetext": "<integer> (0 - 500000)",
                    "x-proxmox-optional": true
                  },
                  "debug": {
                    "type": "boolean",
                    "description": "Try to be more verbose. For now this only enables debug log-level on start.",
                    "default": false,
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "delete": {
                    "type": "string",
                    "description": "A list of settings you want to delete.",
                    "format": "pve-configid-list",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "description": {
                    "type": "string",
                    "description": "Description for the Container. Shown in the web-interface CT's summary. This is saved as comment inside the configuration file.",
                    "maxLength": 8192,
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "dev[n]": {
                    "type": "string",
                    "description": "Device to pass through to the container",
                    "x-proxmox-typetext": "[[path=]<Path>] [,deny-write=<1|0>] [,gid=<integer>] [,mode=<Octal access mode>] [,uid=<integer>]",
                    "x-proxmox-optional": true
                  },
                  "digest": {
                    "type": "string",
                    "description": "Prevent changes if current configuration file has different SHA1 digest. This can be used to prevent concurrent modifications.",
                    "maxLength": 40,
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "features": {
                    "type": "string",
                    "description": "Allow containers access to advanced features.",
                    "x-proxmox-typetext": "[force_rw_sys=<1|0>] [,fuse=<1|0>] [,keyctl=<1|0>] [,mknod=<1|0>] [,mount=<fstype;fstype;...>] [,nesting=<1|0>]",
                    "x-proxmox-optional": true
                  },
                  "hookscript": {
                    "type": "string",
                    "description": "Script that will be executed during various steps in the containers lifetime.",
                    "format": "pve-volume-id",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "hostname": {
                    "type": "string",
                    "description": "Set a host name for the container.",
                    "maxLength": 255,
                    "format": "dns-name",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "lock": {
                    "type": "string",
                    "description": "Lock/unlock the container.",
                    "enum": [
                      "backup",
                      "create",
                      "destroyed",
                      "disk",
                      "fstrim",
                      "migrate",
                      "mounted",
                      "rollback",
                      "snapshot",
                      "snapshot-delete"
                    ],
                    "x-proxmox-optional": true
                  },
                  "memory": {
                    "type": "integer",
                    "description": "Amount of RAM for the container in MB.",
                    "default": 512,
                    "minimum": 16,
                    "x-proxmox-typetext": "<integer> (16 - N)",
                    "x-proxmox-optional": true
                  },
                  "mp[n]": {
                    "type": "string",
                    "description": "Use volume as container mount point. Use the special syntax STORAGE_ID:SIZE_IN_GiB to allocate a new volume.",
                    "x-proxmox-typetext": "[volume=]<volume> ,mp=<Path> [,acl=<1|0>] [,backup=<1|0>] [,mountoptions=<opt[;opt...]>] [,quota=<1|0>] [,replicate=<1|0>] [,ro=<1|0>] [,shared=<1|0>] [,size=<DiskSize>]",
                    "x-proxmox-optional": true
                  },
                  "nameserver": {
                    "type": "string",
                    "description": "Sets DNS server IP address for a container. Create will automatically use the setting from the host if you neither set searchdomain nor nameserver.",
                    "format": "lxc-ip-with-ll-iface-list",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "net[n]": {
                    "type": "string",
                    "description": "Specifies network interfaces for the container.",
                    "x-proxmox-typetext": "name=<string> [,bridge=<bridge>] [,firewall=<1|0>] [,gw=<GatewayIPv4>] [,gw6=<GatewayIPv6>] [,hwaddr=<XX:XX:XX:XX:XX:XX>] [,ip=<(IPv4/CIDR|dhcp|manual)>] [,ip6=<(IPv6/CIDR|auto|dhcp|manual)>] [,link_down=<1|0>] [,mtu=<integer>] [,rate=<mbps>] [,tag=<integer>] [,trunks=<vlanid[;vlanid...]>] [,type=<veth>]",
                    "x-proxmox-optional": true
                  },
                  "onboot": {
                    "type": "boolean",
                    "description": "Specifies whether a container will be started during system bootup.",
                    "default": false,
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "ostype": {
                    "type": "string",
                    "description": "OS type. This is used to setup configuration inside the container, and corresponds to lxc setup scripts in /usr/share/lxc/config/<ostype>.common.conf. Value 'unmanaged' can be used to skip and OS specific setup.",
                    "enum": [
                      "debian",
                      "devuan",
                      "ubuntu",
                      "centos",
                      "fedora",
                      "opensuse",
                      "archlinux",
                      "alpine",
                      "gentoo",
                      "nixos",
                      "unmanaged"
                    ],
                    "x-proxmox-optional": true
                  },
                  "protection": {
                    "type": "boolean",
                    "description": "Sets the protection flag of the container. This will prevent the CT or CT's disk remove/update operation.",
                    "default": false,
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "revert": {
                    "type": "string",
                    "description": "Revert a pending change.",
                    "format": "pve-configid-list",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "rootfs": {
                    "type": "string",
                    "description": "Use volume as container root.",
                    "x-proxmox-typetext": "[volume=]<volume> [,acl=<1|0>] [,mountoptions=<opt[;opt...]>] [,quota=<1|0>] [,replicate=<1|0>] [,ro=<1|0>] [,shared=<1|0>] [,size=<DiskSize>]",
                    "x-proxmox-optional": true
                  },
                  "searchdomain": {
                    "type": "string",
                    "description": "Sets DNS search domains for a container. Create will automatically use the setting from the host if you neither set searchdomain nor nameserver.",
                    "format": "dns-name-list",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "startup": {
                    "type": "string",
                    "description": "Startup and shutdown behavior. Order is a non-negative number defining the general startup order. Shutdown in done with reverse ordering. Additionally you can set the 'up' or 'down' delay in seconds, which specifies a delay to wait before the next VM is started or stopped.",
                    "format": "pve-startup-order",
                    "x-proxmox-typetext": "[[order=]\\d+] [,up=\\d+] [,down=\\d+] ",
                    "x-proxmox-optional": true
                  },
                  "swap": {
                    "type": "integer",
                    "description": "Amount of SWAP for the container in MB.",
                    "default": 512,
                    "minimum": 0,
                    "x-proxmox-typetext": "<integer> (0 - N)",
                    "x-proxmox-optional": true
                  },
                  "tags": {
                    "type": "string",
                    "description": "Tags of the Container. This is only meta information.",
                    "format": "pve-tag-list",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "template": {
                    "type": "boolean",
                    "description": "Enable/disable Template.",
                    "default": false,
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "timezone": {
                    "type": "string",
                    "description": "Time zone to use in the container. If option isn't set, then nothing will be done. Can be set to 'host' to match the host time zone, or an arbitrary time zone option from /usr/share/zoneinfo/zone.tab",
                    "format": "pve-ct-timezone",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "tty": {
                    "type": "integer",
                    "description": "Specify the number of tty available to the container",
                    "default": 2,
                    "minimum": 0,
                    "maximum": 6,
                    "x-proxmox-typetext": "<integer> (0 - 6)",
                    "x-proxmox-optional": true
                  },
                  "unprivileged": {
                    "type": "boolean",
                    "description": "Makes the container run as unprivileged user. (Should not be modified manually.)",
                    "default": false,
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "unused[n]": {
                    "type": "string",
                    "description": "Reference to unused volumes. This is used internally, and should not be modified manually.",
                    "x-proxmox-typetext": "[volume=]<volume>",
                    "x-proxmox-optional": true
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "description": "non-volume mount points in rootfs and mp[n] are restricted to root@pam",
              "check": [
                "perm",
                "/vms/{vmid}",
                [
                  "VM.Config.Disk",
                  "VM.Config.CPU",
                  "VM.Config.Memory",
                  "VM.Config.Network",
                  "VM.Config.Options"
                ],
                "any",
                1
              ]
            }
          ]
        }
      }
    },
    "/nodes/{node}/lxc/{vmid}/feature": {
      "get": {
        "operationId": "get-nodes-node-lxc-vmid-feature",
        "summary": "vm_feature",
        "description": "Check if feature for virtual machine is available.",
        "tags": [
          "/nodes/{node}/lxc/{vmid}/feature"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hasFeature": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "hasFeature"
                  ]
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-nodes-node-lxc-vmid-feature",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "feature",
            "in": "query",
            "required": true,
            "description": "Feature to check.",
            "schema": {
              "type": "string",
              "description": "Feature to check.",
              "enum": [
                "snapshot",
                "clone",
                "copy"
              ]
            }
          },
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "snapname",
            "in": "query",
            "required": false,
            "description": "The name of the snapshot.",
            "schema": {
              "type": "string",
              "description": "The name of the snapshot.",
              "maxLength": 40,
              "format": "pve-configid",
              "x-proxmox-typetext": "<string>",
              "x-proxmox-optional": true
            }
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "description": "The (unique) ID of the VM.",
            "schema": {
              "type": "integer",
              "description": "The (unique) ID of the VM.",
              "minimum": 100,
              "maximum": 999999999,
              "format": "pve-vmid",
              "x-proxmox-typetext": "<integer> (100 - 999999999)"
            }
          }
        ],
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/vms/{vmid}",
                [
                  "VM.Audit"
                ]
              ]
            }
          ]
        }
      }
    },
    "/nodes/{node}/lxc/{vmid}/firewall": {
      "get": {
        "operationId": "get-nodes-node-lxc-vmid-firewall",
        "summary": "index",
        "description": "Directory index.",
        "tags": [
          "/nodes/{node}/lxc/{vmid}/firewall"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  },
                  "x-proxmox-metadata": {
                    "links": [
                      {
                        "href": "{name}",
                        "rel": "child"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-nodes-node-lxc-vmid-firewall",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "description": "The (unique) ID of the VM.",
            "schema": {
              "type": "integer",
              "description": "The (unique) ID of the VM.",
              "minimum": 100,
              "maximum": 999999999,
              "format": "pve-vmid",
              "x-proxmox-typetext": "<integer> (100 - 999999999)"
            }
          }
        ],
        "security": [],
        "x-proxmox-permissions": {
          "all": [
            {
              "user": "all"
            }
          ]
        }
      }
    },
    "/nodes/{node}/lxc/{vmid}/firewall/aliases": {
      "get": {
        "operationId": "get-nodes-node-lxc-vmid-firewall-aliases",
        "summary": "get_aliases",
        "description": "List aliases",
        "tags": [
          "/nodes/{node}/lxc/{vmid}/firewall/aliases"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "cidr": {
                        "type": "string"
                      },
                      "comment": {
                        "type": "string",
                        "x-proxmox-optional": true
                      },
                      "digest": {
                        "type": "string",
                        "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
                        "maxLength": 64,
                        "x-proxmox-optional": false
                      },
                      "name": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "cidr",
                      "digest",
                      "name"
                    ]
                  },
                  "x-proxmox-metadata": {
                    "links": [
                      {
                        "href": "{name}",
                        "rel": "child"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-nodes-node-lxc-vmid-firewall-aliases",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "description": "The (unique) ID of the VM.",
            "schema": {
              "type": "integer",
              "description": "The (unique) ID of the VM.",
              "minimum": 100,
              "maximum": 999999999,
              "format": "pve-vmid",
              "x-proxmox-typetext": "<integer> (100 - 999999999)"
            }
          }
        ],
        "security": [],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/vms/{vmid}",
                [
                  "VM.Audit"
                ]
              ]
            }
          ]
        }
      },
      "post": {
        "operationId": "post-nodes-node-lxc-vmid-firewall-aliases",
        "summary": "create_alias",
        "description": "Create IP or Network Alias.",
        "tags": [
          "/nodes/{node}/lxc/{vmid}/firewall/aliases"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "post-nodes-node-lxc-vmid-firewall-aliases",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "description": "The (unique) ID of the VM.",
            "schema": {
              "type": "integer",
              "description": "The (unique) ID of the VM.",
              "minimum": 100,
              "maximum": 999999999,
              "format": "pve-vmid",
              "x-proxmox-typetext": "<integer> (100 - 999999999)"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "cidr": {
                    "type": "string",
                    "description": "Network/IP specification in CIDR format.",
                    "format": "IPorCIDR",
                    "x-proxmox-typetext": "<string>"
                  },
                  "comment": {
                    "type": "string",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "name": {
                    "type": "string",
                    "description": "Alias name.",
                    "minLength": 2,
                    "maxLength": 64,
                    "pattern": "[A-Za-z][A-Za-z0-9\\-\\_]+"
                  }
                },
                "required": [
                  "cidr",
                  "name"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/vms/{vmid}",
                [
                  "VM.Config.Network"
                ]
              ]
            }
          ]
        }
      }
    },
    "/nodes/{node}/lxc/{vmid}/firewall/aliases/{name}": {
      "delete": {
        "operationId": "delete-nodes-node-lxc-vmid-firewall-aliases-name",
        "summary": "remove_alias",
        "description": "Remove IP or Network alias.",
        "tags": [
          "/nodes/{node}/lxc/{vmid}/firewall/aliases/{name}"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "delete-nodes-node-lxc-vmid-firewall-aliases-name",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "digest",
            "in": "query",
            "required": false,
            "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
            "schema": {
              "type": "string",
              "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
              "maxLength": 64,
              "x-proxmox-typetext": "<string>",
              "x-proxmox-optional": true
            }
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "description": "Alias name.",
            "schema": {
              "type": "string",
              "description": "Alias name.",
              "minLength": 2,
              "maxLength": 64,
              "pattern": "[A-Za-z][A-Za-z0-9\\-\\_]+"
            }
          },
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "description": "The (unique) ID of the VM.",
            "schema": {
              "type": "integer",
              "description": "The (unique) ID of the VM.",
              "minimum": 100,
              "maximum": 999999999,
              "format": "pve-vmid",
              "x-proxmox-typetext": "<integer> (100 - 999999999)"
            }
          }
        ],
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/vms/{vmid}",
                [
                  "VM.Config.Network"
                ]
              ]
            }
          ]
        }
      },
      "get": {
        "operationId": "get-nodes-node-lxc-vmid-firewall-aliases-name",
        "summary": "read_alias",
        "description": "Read alias.",
        "tags": [
          "/nodes/{node}/lxc/{vmid}/firewall/aliases/{name}"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-nodes-node-lxc-vmid-firewall-aliases-name",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "description": "Alias name.",
            "schema": {
              "type": "string",
              "description": "Alias name.",
              "minLength": 2,
              "maxLength": 64,
              "pattern": "[A-Za-z][A-Za-z0-9\\-\\_]+"
            }
          },
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "description": "The (unique) ID of the VM.",
            "schema": {
              "type": "integer",
              "description": "The (unique) ID of the VM.",
              "minimum": 100,
              "maximum": 999999999,
              "format": "pve-vmid",
              "x-proxmox-typetext": "<integer> (100 - 999999999)"
            }
          }
        ],
        "security": [],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/vms/{vmid}",
                [
                  "VM.Audit"
                ]
              ]
            }
          ]
        }
      },
      "put": {
        "operationId": "put-nodes-node-lxc-vmid-firewall-aliases-name",
        "summary": "update_alias",
        "description": "Update IP or Network alias.",
        "tags": [
          "/nodes/{node}/lxc/{vmid}/firewall/aliases/{name}"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "put-nodes-node-lxc-vmid-firewall-aliases-name",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "description": "Alias name.",
            "schema": {
              "type": "string",
              "description": "Alias name.",
              "minLength": 2,
              "maxLength": 64,
              "pattern": "[A-Za-z][A-Za-z0-9\\-\\_]+"
            }
          },
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "description": "The (unique) ID of the VM.",
            "schema": {
              "type": "integer",
              "description": "The (unique) ID of the VM.",
              "minimum": 100,
              "maximum": 999999999,
              "format": "pve-vmid",
              "x-proxmox-typetext": "<integer> (100 - 999999999)"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "cidr": {
                    "type": "string",
                    "description": "Network/IP specification in CIDR format.",
                    "format": "IPorCIDR",
                    "x-proxmox-typetext": "<string>"
                  },
                  "comment": {
                    "type": "string",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "digest": {
                    "type": "string",
                    "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
                    "maxLength": 64,
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "rename": {
                    "type": "string",
                    "description": "Rename an existing alias.",
                    "minLength": 2,
                    "maxLength": 64,
                    "pattern": "[A-Za-z][A-Za-z0-9\\-\\_]+",
                    "x-proxmox-optional": true
                  }
                },
                "required": [
                  "cidr"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/vms/{vmid}",
                [
                  "VM.Config.Network"
                ]
              ]
            }
          ]
        }
      }
    },
    "/nodes/{node}/lxc/{vmid}/firewall/ipset": {
      "get": {
        "operationId": "get-nodes-node-lxc-vmid-firewall-ipset",
        "summary": "ipset_index",
        "description": "List IPSets",
        "tags": [
          "/nodes/{node}/lxc/{vmid}/firewall/ipset"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "comment": {
                        "type": "string",
                        "x-proxmox-optional": true
                      },
                      "digest": {
                        "type": "string",
                        "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
                        "maxLength": 64,
                        "x-proxmox-optional": false
                      },
                      "name": {
                        "type": "string",
                        "description": "IP set name.",
                        "minLength": 2,
                        "maxLength": 64,
                        "pattern": "[A-Za-z][A-Za-z0-9\\-\\_]+"
                      }
                    },
                    "required": [
                      "digest",
                      "name"
                    ]
                  },
                  "x-proxmox-metadata": {
                    "links": [
                      {
                        "href": "{name}",
                        "rel": "child"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-nodes-node-lxc-vmid-firewall-ipset",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "description": "The (unique) ID of the VM.",
            "schema": {
              "type": "integer",
              "description": "The (unique) ID of the VM.",
              "minimum": 100,
              "maximum": 999999999,
              "format": "pve-vmid",
              "x-proxmox-typetext": "<integer> (100 - 999999999)"
            }
          }
        ],
        "security": [],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/vms/{vmid}",
                [
                  "VM.Audit"
                ]
              ]
            }
          ]
        }
      },
      "post": {
        "operationId": "post-nodes-node-lxc-vmid-firewall-ipset",
        "summary": "create_ipset",
        "description": "Create new IPSet",
        "tags": [
          "/nodes/{node}/lxc/{vmid}/firewall/ipset"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "post-nodes-node-lxc-vmid-firewall-ipset",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "description": "The (unique) ID of the VM.",
            "schema": {
              "type": "integer",
              "description": "The (unique) ID of the VM.",
              "minimum": 100,
              "maximum": 999999999,
              "format": "pve-vmid",
              "x-proxmox-typetext": "<integer> (100 - 999999999)"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "comment": {
                    "type": "string",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "digest": {
                    "type": "string",
                    "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
                    "maxLength": 64,
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "name": {
                    "type": "string",
                    "description": "IP set name.",
                    "minLength": 2,
                    "maxLength": 64,
                    "pattern": "[A-Za-z][A-Za-z0-9\\-\\_]+"
                  },
                  "rename": {
                    "type": "string",
                    "description": "Rename an existing IPSet. You can set 'rename' to the same value as 'name' to update the 'comment' of an existing IPSet.",
                    "minLength": 2,
                    "maxLength": 64,
                    "pattern": "[A-Za-z][A-Za-z0-9\\-\\_]+",
                    "x-proxmox-optional": true
                  }
                },
                "required": [
                  "name"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/vms/{vmid}",
                [
                  "VM.Config.Network"
                ]
              ]
            }
          ]
        }
      }
    },
    "/nodes/{node}/lxc/{vmid}/firewall/ipset/{name}": {
      "delete": {
        "operationId": "delete-nodes-node-lxc-vmid-firewall-ipset-name",
        "summary": "delete_ipset",
        "description": "Delete IPSet",
        "tags": [
          "/nodes/{node}/lxc/{vmid}/firewall/ipset/{name}"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "delete-nodes-node-lxc-vmid-firewall-ipset-name",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "force",
            "in": "query",
            "required": false,
            "description": "Delete all members of the IPSet, if there are any.",
            "schema": {
              "type": "boolean",
              "description": "Delete all members of the IPSet, if there are any.",
              "x-proxmox-typetext": "<boolean>",
              "x-proxmox-optional": true
            }
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "description": "IP set name.",
            "schema": {
              "type": "string",
              "description": "IP set name.",
              "minLength": 2,
              "maxLength": 64,
              "pattern": "[A-Za-z][A-Za-z0-9\\-\\_]+"
            }
          },
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "description": "The (unique) ID of the VM.",
            "schema": {
              "type": "integer",
              "description": "The (unique) ID of the VM.",
              "minimum": 100,
              "maximum": 999999999,
              "format": "pve-vmid",
              "x-proxmox-typetext": "<integer> (100 - 999999999)"
            }
          }
        ],
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/vms/{vmid}",
                [
                  "VM.Config.Network"
                ]
              ]
            }
          ]
        }
      },
      "get": {
        "operationId": "get-nodes-node-lxc-vmid-firewall-ipset-name",
        "summary": "get_ipset",
        "description": "List IPSet content",
        "tags": [
          "/nodes/{node}/lxc/{vmid}/firewall/ipset/{name}"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "cidr": {
                        "type": "string"
                      },
                      "comment": {
                        "type": "string",
                        "x-proxmox-optional": true
                      },
                      "digest": {
                        "type": "string",
                        "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
                        "maxLength": 64,
                        "x-proxmox-optional": false
                      },
                      "nomatch": {
                        "type": "boolean",
                        "x-proxmox-optional": true
                      }
                    },
                    "required": [
                      "cidr",
                      "digest"
                    ]
                  },
                  "x-proxmox-metadata": {
                    "links": [
                      {
                        "href": "{cidr}",
                        "rel": "child"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-nodes-node-lxc-vmid-firewall-ipset-name",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "description": "IP set name.",
            "schema": {
              "type": "string",
              "description": "IP set name.",
              "minLength": 2,
              "maxLength": 64,
              "pattern": "[A-Za-z][A-Za-z0-9\\-\\_]+"
            }
          },
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "description": "The (unique) ID of the VM.",
            "schema": {
              "type": "integer",
              "description": "The (unique) ID of the VM.",
              "minimum": 100,
              "maximum": 999999999,
              "format": "pve-vmid",
              "x-proxmox-typetext": "<integer> (100 - 999999999)"
            }
          }
        ],
        "security": [],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/vms/{vmid}",
                [
                  "VM.Audit"
                ]
              ]
            }
          ]
        }
      },
      "post": {
        "operationId": "post-nodes-node-lxc-vmid-firewall-ipset-name",
        "summary": "create_ip",
        "description": "Add IP or Network to IPSet.",
        "tags": [
          "/nodes/{node}/lxc/{vmid}/firewall/ipset/{name}"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "post-nodes-node-lxc-vmid-firewall-ipset-name",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "description": "IP set name.",
            "schema": {
              "type": "string",
              "description": "IP set name.",
              "minLength": 2,
              "maxLength": 64,
              "pattern": "[A-Za-z][A-Za-z0-9\\-\\_]+"
            }
          },
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "description": "The (unique) ID of the VM.",
            "schema": {
              "type": "integer",
              "description": "The (unique) ID of the VM.",
              "minimum": 100,
              "maximum": 999999999,
              "format": "pve-vmid",
              "x-proxmox-typetext": "<integer> (100 - 999999999)"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "cidr": {
                    "type": "string",
                    "description": "Network/IP specification in CIDR format.",
                    "format": "IPorCIDRorAlias",
                    "x-proxmox-typetext": "<string>"
                  },
                  "comment": {
                    "type": "string",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "nomatch": {
                    "type": "boolean",
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  }
                },
                "required": [
                  "cidr"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/vms/{vmid}",
                [
                  "VM.Config.Network"
                ]
              ]
            }
          ]
        }
      }
    },
    "/nodes/{node}/lxc/{vmid}/firewall/ipset/{name}/{cidr}": {
      "delete": {
        "operationId": "delete-nodes-node-lxc-vmid-firewall-ipset-name-cidr",
        "summary": "remove_ip",
        "description": "Remove IP or Network from IPSet.",
        "tags": [
          "/nodes/{node}/lxc/{vmid}/firewall/ipset/{name}/{cidr}"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "delete-nodes-node-lxc-vmid-firewall-ipset-name-cidr",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "cidr",
            "in": "path",
            "required": true,
            "description": "Network/IP specification in CIDR format.",
            "schema": {
              "type": "string",
              "description": "Network/IP specification in CIDR format.",
              "format": "IPorCIDRorAlias",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "digest",
            "in": "query",
            "required": false,
            "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
            "schema": {
              "type": "string",
              "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
              "maxLength": 64,
              "x-proxmox-typetext": "<string>",
              "x-proxmox-optional": true
            }
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "description": "IP set name.",
            "schema": {
              "type": "string",
              "description": "IP set name.",
              "minLength": 2,
              "maxLength": 64,
              "pattern": "[A-Za-z][A-Za-z0-9\\-\\_]+"
            }
          },
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "description": "The (unique) ID of the VM.",
            "schema": {
              "type": "integer",
              "description": "The (unique) ID of the VM.",
              "minimum": 100,
              "maximum": 999999999,
              "format": "pve-vmid",
              "x-proxmox-typetext": "<integer> (100 - 999999999)"
            }
          }
        ],
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/vms/{vmid}",
                [
                  "VM.Config.Network"
                ]
              ]
            }
          ]
        }
      },
      "get": {
        "operationId": "get-nodes-node-lxc-vmid-firewall-ipset-name-cidr",
        "summary": "read_ip",
        "description": "Read IP or Network settings from IPSet.",
        "tags": [
          "/nodes/{node}/lxc/{vmid}/firewall/ipset/{name}/{cidr}"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-nodes-node-lxc-vmid-firewall-ipset-name-cidr",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "cidr",
            "in": "path",
            "required": true,
            "description": "Network/IP specification in CIDR format.",
            "schema": {
              "type": "string",
              "description": "Network/IP specification in CIDR format.",
              "format": "IPorCIDRorAlias",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "description": "IP set name.",
            "schema": {
              "type": "string",
              "description": "IP set name.",
              "minLength": 2,
              "maxLength": 64,
              "pattern": "[A-Za-z][A-Za-z0-9\\-\\_]+"
            }
          },
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "description": "The (unique) ID of the VM.",
            "schema": {
              "type": "integer",
              "description": "The (unique) ID of the VM.",
              "minimum": 100,
              "maximum": 999999999,
              "format": "pve-vmid",
              "x-proxmox-typetext": "<integer> (100 - 999999999)"
            }
          }
        ],
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/vms/{vmid}",
                [
                  "VM.Audit"
                ]
              ]
            }
          ]
        }
      },
      "put": {
        "operationId": "put-nodes-node-lxc-vmid-firewall-ipset-name-cidr",
        "summary": "update_ip",
        "description": "Update IP or Network settings",
        "tags": [
          "/nodes/{node}/lxc/{vmid}/firewall/ipset/{name}/{cidr}"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "put-nodes-node-lxc-vmid-firewall-ipset-name-cidr",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "cidr",
            "in": "path",
            "required": true,
            "description": "Network/IP specification in CIDR format.",
            "schema": {
              "type": "string",
              "description": "Network/IP specification in CIDR format.",
              "format": "IPorCIDRorAlias",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "description": "IP set name.",
            "schema": {
              "type": "string",
              "description": "IP set name.",
              "minLength": 2,
              "maxLength": 64,
              "pattern": "[A-Za-z][A-Za-z0-9\\-\\_]+"
            }
          },
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "description": "The (unique) ID of the VM.",
            "schema": {
              "type": "integer",
              "description": "The (unique) ID of the VM.",
              "minimum": 100,
              "maximum": 999999999,
              "format": "pve-vmid",
              "x-proxmox-typetext": "<integer> (100 - 999999999)"
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "comment": {
                    "type": "string",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "digest": {
                    "type": "string",
                    "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
                    "maxLength": 64,
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "nomatch": {
                    "type": "boolean",
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/vms/{vmid}",
                [
                  "VM.Config.Network"
                ]
              ]
            }
          ]
        }
      }
    },
    "/nodes/{node}/lxc/{vmid}/firewall/log": {
      "get": {
        "operationId": "get-nodes-node-lxc-vmid-firewall-log",
        "summary": "log",
        "description": "Read firewall log",
        "tags": [
          "/nodes/{node}/lxc/{vmid}/firewall/log"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "n": {
                        "type": "integer",
                        "description": "Line number"
                      },
                      "t": {
                        "type": "string",
                        "description": "Line text"
                      }
                    },
                    "required": [
                      "n",
                      "t"
                    ]
                  }
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-nodes-node-lxc-vmid-firewall-log",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "x-proxmox-typetext": "<integer> (0 - N)",
              "x-proxmox-optional": true
            }
          },
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "since",
            "in": "query",
            "required": false,
            "description": "Display log since this UNIX epoch.",
            "schema": {
              "type": "integer",
              "description": "Display log since this UNIX epoch.",
              "minimum": 0,
              "x-proxmox-typetext": "<integer> (0 - N)",
              "x-proxmox-optional": true
            }
          },
          {
            "name": "start",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "x-proxmox-typetext": "<integer> (0 - N)",
              "x-proxmox-optional": true
            }
          },
          {
            "name": "until",
            "in": "query",
            "required": false,
            "description": "Display log until this UNIX epoch.",
            "schema": {
              "type": "integer",
              "description": "Display log until this UNIX epoch.",
              "minimum": 0,
              "x-proxmox-typetext": "<integer> (0 - N)",
              "x-proxmox-optional": true
            }
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "description": "The (unique) ID of the VM.",
            "schema": {
              "type": "integer",
              "description": "The (unique) ID of the VM.",
              "minimum": 100,
              "maximum": 999999999,
              "format": "pve-vmid",
              "x-proxmox-typetext": "<integer> (100 - 999999999)"
            }
          }
        ],
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/vms/{vmid}",
                [
                  "VM.Console"
                ]
              ]
            }
          ]
        }
      }
    },
    "/nodes/{node}/lxc/{vmid}/firewall/options": {
      "get": {
        "operationId": "get-nodes-node-lxc-vmid-firewall-options",
        "summary": "get_options",
        "description": "Get VM firewall options.",
        "tags": [
          "/nodes/{node}/lxc/{vmid}/firewall/options"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "dhcp": {
                      "type": "boolean",
                      "description": "Enable DHCP.",
                      "default": false,
                      "x-proxmox-optional": true
                    },
                    "enable": {
                      "type": "boolean",
                      "description": "Enable/disable firewall rules.",
                      "default": false,
                      "x-proxmox-optional": true
                    },
                    "ipfilter": {
                      "type": "boolean",
                      "description": "Enable default IP filters. This is equivalent to adding an empty ipfilter-net<id> ipset for every interface. Such ipsets implicitly contain sane default restrictions such as restricting IPv6 link local addresses to the one derived from the interface's MAC address. For containers the configured IP addresses will be implicitly added.",
                      "x-proxmox-optional": true
                    },
                    "log_level_in": {
                      "type": "string",
                      "description": "Log level for incoming traffic.",
                      "enum": [
                        "emerg",
                        "alert",
                        "crit",
                        "err",
                        "warning",
                        "notice",
                        "info",
                        "debug",
                        "nolog"
                      ],
                      "x-proxmox-optional": true
                    },
                    "log_level_out": {
                      "type": "string",
                      "description": "Log level for outgoing traffic.",
                      "enum": [
                        "emerg",
                        "alert",
                        "crit",
                        "err",
                        "warning",
                        "notice",
                        "info",
                        "debug",
                        "nolog"
                      ],
                      "x-proxmox-optional": true
                    },
                    "macfilter": {
                      "type": "boolean",
                      "description": "Enable/disable MAC address filter.",
                      "default": true,
                      "x-proxmox-optional": true
                    },
                    "ndp": {
                      "type": "boolean",
                      "description": "Enable NDP (Neighbor Discovery Protocol).",
                      "default": false,
                      "x-proxmox-optional": true
                    },
                    "policy_in": {
                      "type": "string",
                      "description": "Input policy.",
                      "enum": [
                        "ACCEPT",
                        "REJECT",
                        "DROP"
                      ],
                      "x-proxmox-optional": true
                    },
                    "policy_out": {
                      "type": "string",
                      "description": "Output policy.",
                      "enum": [
                        "ACCEPT",
                        "REJECT",
                        "DROP"
                      ],
                      "x-proxmox-optional": true
                    },
                    "radv": {
                      "type": "boolean",
                      "description": "Allow sending Router Advertisement.",
                      "x-proxmox-optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-nodes-node-lxc-vmid-firewall-options",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "description": "The (unique) ID of the VM.",
            "schema": {
              "type": "integer",
              "description": "The (unique) ID of the VM.",
              "minimum": 100,
              "maximum": 999999999,
              "format": "pve-vmid",
              "x-proxmox-typetext": "<integer> (100 - 999999999)"
            }
          }
        ],
        "security": [],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/vms/{vmid}",
                [
                  "VM.Audit"
                ]
              ]
            }
          ]
        }
      },
      "put": {
        "operationId": "put-nodes-node-lxc-vmid-firewall-options",
        "summary": "set_options",
        "description": "Set Firewall options.",
        "tags": [
          "/nodes/{node}/lxc/{vmid}/firewall/options"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "put-nodes-node-lxc-vmid-firewall-options",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "description": "The (unique) ID of the VM.",
            "schema": {
              "type": "integer",
              "description": "The (unique) ID of the VM.",
              "minimum": 100,
              "maximum": 999999999,
              "format": "pve-vmid",
              "x-proxmox-typetext": "<integer> (100 - 999999999)"
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "delete": {
                    "type": "string",
                    "description": "A list of settings you want to delete.",
                    "format": "pve-configid-list",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "dhcp": {
                    "type": "boolean",
                    "description": "Enable DHCP.",
                    "default": false,
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "digest": {
                    "type": "string",
                    "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
                    "maxLength": 64,
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "enable": {
                    "type": "boolean",
                    "description": "Enable/disable firewall rules.",
                    "default": false,
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "ipfilter": {
                    "type": "boolean",
                    "description": "Enable default IP filters. This is equivalent to adding an empty ipfilter-net<id> ipset for every interface. Such ipsets implicitly contain sane default restrictions such as restricting IPv6 link local addresses to the one derived from the interface's MAC address. For containers the configured IP addresses will be implicitly added.",
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "log_level_in": {
                    "type": "string",
                    "description": "Log level for incoming traffic.",
                    "enum": [
                      "emerg",
                      "alert",
                      "crit",
                      "err",
                      "warning",
                      "notice",
                      "info",
                      "debug",
                      "nolog"
                    ],
                    "x-proxmox-optional": true
                  },
                  "log_level_out": {
                    "type": "string",
                    "description": "Log level for outgoing traffic.",
                    "enum": [
                      "emerg",
                      "alert",
                      "crit",
                      "err",
                      "warning",
                      "notice",
                      "info",
                      "debug",
                      "nolog"
                    ],
                    "x-proxmox-optional": true
                  },
                  "macfilter": {
                    "type": "boolean",
                    "description": "Enable/disable MAC address filter.",
                    "default": true,
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "ndp": {
                    "type": "boolean",
                    "description": "Enable NDP (Neighbor Discovery Protocol).",
                    "default": false,
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "policy_in": {
                    "type": "string",
                    "description": "Input policy.",
                    "enum": [
                      "ACCEPT",
                      "REJECT",
                      "DROP"
                    ],
                    "x-proxmox-optional": true
                  },
                  "policy_out": {
                    "type": "string",
                    "description": "Output policy.",
                    "enum": [
                      "ACCEPT",
                      "REJECT",
                      "DROP"
                    ],
                    "x-proxmox-optional": true
                  },
                  "radv": {
                    "type": "boolean",
                    "description": "Allow sending Router Advertisement.",
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/vms/{vmid}",
                [
                  "VM.Config.Network"
                ]
              ]
            }
          ]
        }
      }
    },
    "/nodes/{node}/lxc/{vmid}/firewall/refs": {
      "get": {
        "operationId": "get-nodes-node-lxc-vmid-firewall-refs",
        "summary": "refs",
        "description": "Lists possible IPSet/Alias reference which are allowed in source/dest properties.",
        "tags": [
          "/nodes/{node}/lxc/{vmid}/firewall/refs"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "comment": {
                        "type": "string",
                        "x-proxmox-optional": true
                      },
                      "name": {
                        "type": "string"
                      },
                      "ref": {
                        "type": "string"
                      },
                      "scope": {
                        "type": "string"
                      },
                      "type": {
                        "type": "string",
                        "enum": [
                          "alias",
                          "ipset"
                        ]
                      }
                    },
                    "required": [
                      "name",
                      "ref",
                      "scope",
                      "type"
                    ]
                  }
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-nodes-node-lxc-vmid-firewall-refs",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "description": "Only list references of specified type.",
            "schema": {
              "type": "string",
              "description": "Only list references of specified type.",
              "enum": [
                "alias",
                "ipset"
              ],
              "x-proxmox-optional": true
            }
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "description": "The (unique) ID of the VM.",
            "schema": {
              "type": "integer",
              "description": "The (unique) ID of the VM.",
              "minimum": 100,
              "maximum": 999999999,
              "format": "pve-vmid",
              "x-proxmox-typetext": "<integer> (100 - 999999999)"
            }
          }
        ],
        "security": [],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/vms/{vmid}",
                [
                  "VM.Audit"
                ]
              ]
            }
          ]
        }
      }
    },
    "/nodes/{node}/lxc/{vmid}/firewall/rules": {
      "get": {
        "operationId": "get-nodes-node-lxc-vmid-firewall-rules",
        "summary": "get_rules",
        "description": "List rules.",
        "tags": [
          "/nodes/{node}/lxc/{vmid}/firewall/rules"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "pos": {
                        "type": "integer"
                      }
                    },
                    "required": [
                      "pos"
                    ]
                  },
                  "x-proxmox-metadata": {
                    "links": [
                      {
                        "href": "{pos}",
                        "rel": "child"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-nodes-node-lxc-vmid-firewall-rules",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "description": "The (unique) ID of the VM.",
            "schema": {
              "type": "integer",
              "description": "The (unique) ID of the VM.",
              "minimum": 100,
              "maximum": 999999999,
              "format": "pve-vmid",
              "x-proxmox-typetext": "<integer> (100 - 999999999)"
            }
          }
        ],
        "security": [],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/vms/{vmid}",
                [
                  "VM.Audit"
                ]
              ]
            }
          ]
        }
      },
      "post": {
        "operationId": "post-nodes-node-lxc-vmid-firewall-rules",
        "summary": "create_rule",
        "description": "Create new rule.",
        "tags": [
          "/nodes/{node}/lxc/{vmid}/firewall/rules"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "post-nodes-node-lxc-vmid-firewall-rules",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "description": "The (unique) ID of the VM.",
            "schema": {
              "type": "integer",
              "description": "The (unique) ID of the VM.",
              "minimum": 100,
              "maximum": 999999999,
              "format": "pve-vmid",
              "x-proxmox-typetext": "<integer> (100 - 999999999)"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "action": {
                    "type": "string",
                    "description": "Rule action ('ACCEPT', 'DROP', 'REJECT') or security group name.",
                    "minLength": 2,
                    "maxLength": 20,
                    "pattern": "[A-Za-z][A-Za-z0-9\\-\\_]+",
                    "x-proxmox-optional": false
                  },
                  "comment": {
                    "type": "string",
                    "description": "Descriptive comment.",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "dest": {
                    "type": "string",
                    "description": "Restrict packet destination address. This can refer to a single IP address, an IP set ('+ipsetname') or an IP alias definition. You can also specify an address range like '20.34.101.207-201.3.9.99', or a list of IP addresses and networks (entries are separated by comma). Please do not mix IPv4 and IPv6 addresses inside such lists.",
                    "maxLength": 512,
                    "format": "pve-fw-addr-spec",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "digest": {
                    "type": "string",
                    "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
                    "maxLength": 64,
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "dport": {
                    "type": "string",
                    "description": "Restrict TCP/UDP destination port. You can use service names or simple numbers (0-65535), as defined in '/etc/services'. Port ranges can be specified with '\\d+:\\d+', for example '80:85', and you can use comma separated list to match several ports or ranges.",
                    "format": "pve-fw-dport-spec",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "enable": {
                    "type": "integer",
                    "description": "Flag to enable/disable a rule.",
                    "minimum": 0,
                    "x-proxmox-typetext": "<integer> (0 - N)",
                    "x-proxmox-optional": true
                  },
                  "icmp-type": {
                    "type": "string",
                    "description": "Specify icmp-type. Only valid if proto equals 'icmp' or 'icmpv6'/'ipv6-icmp'.",
                    "format": "pve-fw-icmp-type-spec",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "iface": {
                    "type": "string",
                    "description": "Network interface name. You have to use network configuration key names for VMs and containers ('net\\d+'). Host related rules can use arbitrary strings.",
                    "minLength": 2,
                    "maxLength": 20,
                    "format": "pve-iface",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "log": {
                    "type": "string",
                    "description": "Log level for firewall rule.",
                    "enum": [
                      "emerg",
                      "alert",
                      "crit",
                      "err",
                      "warning",
                      "notice",
                      "info",
                      "debug",
                      "nolog"
                    ],
                    "x-proxmox-optional": true
                  },
                  "macro": {
                    "type": "string",
                    "description": "Use predefined standard macro.",
                    "maxLength": 128,
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "pos": {
                    "type": "integer",
                    "description": "Update rule at position <pos>.",
                    "minimum": 0,
                    "x-proxmox-typetext": "<integer> (0 - N)",
                    "x-proxmox-optional": true
                  },
                  "proto": {
                    "type": "string",
                    "description": "IP protocol. You can use protocol names ('tcp'/'udp') or simple numbers, as defined in '/etc/protocols'.",
                    "format": "pve-fw-protocol-spec",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "source": {
                    "type": "string",
                    "description": "Restrict packet source address. This can refer to a single IP address, an IP set ('+ipsetname') or an IP alias definition. You can also specify an address range like '20.34.101.207-201.3.9.99', or a list of IP addresses and networks (entries are separated by comma). Please do not mix IPv4 and IPv6 addresses inside such lists.",
                    "maxLength": 512,
                    "format": "pve-fw-addr-spec",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "sport": {
                    "type": "string",
                    "description": "Restrict TCP/UDP source port. You can use service names or simple numbers (0-65535), as defined in '/etc/services'. Port ranges can be specified with '\\d+:\\d+', for example '80:85', and you can use comma separated list to match several ports or ranges.",
                    "format": "pve-fw-sport-spec",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "type": {
                    "type": "string",
                    "description": "Rule type.",
                    "enum": [
                      "in",
                      "out",
                      "forward",
                      "group"
                    ],
                    "x-proxmox-optional": false
                  }
                },
                "required": [
                  "action",
                  "type"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/vms/{vmid}",
                [
                  "VM.Config.Network"
                ]
              ]
            }
          ]
        }
      }
    },
    "/nodes/{node}/lxc/{vmid}/firewall/rules/{pos}": {
      "delete": {
        "operationId": "delete-nodes-node-lxc-vmid-firewall-rules-pos",
        "summary": "delete_rule",
        "description": "Delete rule.",
        "tags": [
          "/nodes/{node}/lxc/{vmid}/firewall/rules/{pos}"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "delete-nodes-node-lxc-vmid-firewall-rules-pos",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "digest",
            "in": "query",
            "required": false,
            "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
            "schema": {
              "type": "string",
              "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
              "maxLength": 64,
              "x-proxmox-typetext": "<string>",
              "x-proxmox-optional": true
            }
          },
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "pos",
            "in": "path",
            "required": true,
            "description": "Update rule at position <pos>.",
            "schema": {
              "type": "integer",
              "description": "Update rule at position <pos>.",
              "minimum": 0,
              "x-proxmox-typetext": "<integer> (0 - N)",
              "x-proxmox-optional": true
            }
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "description": "The (unique) ID of the VM.",
            "schema": {
              "type": "integer",
              "description": "The (unique) ID of the VM.",
              "minimum": 100,
              "maximum": 999999999,
              "format": "pve-vmid",
              "x-proxmox-typetext": "<integer> (100 - 999999999)"
            }
          }
        ],
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/vms/{vmid}",
                [
                  "VM.Config.Network"
                ]
              ]
            }
          ]
        }
      },
      "get": {
        "operationId": "get-nodes-node-lxc-vmid-firewall-rules-pos",
        "summary": "get_rule",
        "description": "Get single rule data.",
        "tags": [
          "/nodes/{node}/lxc/{vmid}/firewall/rules/{pos}"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "action": {
                      "type": "string"
                    },
                    "comment": {
                      "type": "string",
                      "x-proxmox-optional": true
                    },
                    "dest": {
                      "type": "string",
                      "x-proxmox-optional": true
                    },
                    "dport": {
                      "type": "string",
                      "x-proxmox-optional": true
                    },
                    "enable": {
                      "type": "integer",
                      "x-proxmox-optional": true
                    },
                    "icmp-type": {
                      "type": "string",
                      "x-proxmox-optional": true
                    },
                    "iface": {
                      "type": "string",
                      "x-proxmox-optional": true
                    },
                    "ipversion": {
                      "type": "integer",
                      "x-proxmox-optional": true
                    },
                    "log": {
                      "type": "string",
                      "description": "Log level for firewall rule",
                      "enum": [
                        "emerg",
                        "alert",
                        "crit",
                        "err",
                        "warning",
                        "notice",
                        "info",
                        "debug",
                        "nolog"
                      ],
                      "x-proxmox-optional": true
                    },
                    "macro": {
                      "type": "string",
                      "x-proxmox-optional": true
                    },
                    "pos": {
                      "type": "integer"
                    },
                    "proto": {
                      "type": "string",
                      "x-proxmox-optional": true
                    },
                    "source": {
                      "type": "string",
                      "x-proxmox-optional": true
                    },
                    "sport": {
                      "type": "string",
                      "x-proxmox-optional": true
                    },
                    "type": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "action",
                    "pos",
                    "type"
                  ]
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-nodes-node-lxc-vmid-firewall-rules-pos",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "pos",
            "in": "path",
            "required": true,
            "description": "Update rule at position <pos>.",
            "schema": {
              "type": "integer",
              "description": "Update rule at position <pos>.",
              "minimum": 0,
              "x-proxmox-typetext": "<integer> (0 - N)",
              "x-proxmox-optional": true
            }
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "description": "The (unique) ID of the VM.",
            "schema": {
              "type": "integer",
              "description": "The (unique) ID of the VM.",
              "minimum": 100,
              "maximum": 999999999,
              "format": "pve-vmid",
              "x-proxmox-typetext": "<integer> (100 - 999999999)"
            }
          }
        ],
        "security": [],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/vms/{vmid}",
                [
                  "VM.Audit"
                ]
              ]
            }
          ]
        }
      },
      "put": {
        "operationId": "put-nodes-node-lxc-vmid-firewall-rules-pos",
        "summary": "update_rule",
        "description": "Modify rule data.",
        "tags": [
          "/nodes/{node}/lxc/{vmid}/firewall/rules/{pos}"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "put-nodes-node-lxc-vmid-firewall-rules-pos",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "pos",
            "in": "path",
            "required": true,
            "description": "Update rule at position <pos>.",
            "schema": {
              "type": "integer",
              "description": "Update rule at position <pos>.",
              "minimum": 0,
              "x-proxmox-typetext": "<integer> (0 - N)",
              "x-proxmox-optional": true
            }
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "description": "The (unique) ID of the VM.",
            "schema": {
              "type": "integer",
              "description": "The (unique) ID of the VM.",
              "minimum": 100,
              "maximum": 999999999,
              "format": "pve-vmid",
              "x-proxmox-typetext": "<integer> (100 - 999999999)"
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "action": {
                    "type": "string",
                    "description": "Rule action ('ACCEPT', 'DROP', 'REJECT') or security group name.",
                    "minLength": 2,
                    "maxLength": 20,
                    "pattern": "[A-Za-z][A-Za-z0-9\\-\\_]+",
                    "x-proxmox-optional": true
                  },
                  "comment": {
                    "type": "string",
                    "description": "Descriptive comment.",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "delete": {
                    "type": "string",
                    "description": "A list of settings you want to delete.",
                    "format": "pve-configid-list",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "dest": {
                    "type": "string",
                    "description": "Restrict packet destination address. This can refer to a single IP address, an IP set ('+ipsetname') or an IP alias definition. You can also specify an address range like '20.34.101.207-201.3.9.99', or a list of IP addresses and networks (entries are separated by comma). Please do not mix IPv4 and IPv6 addresses inside such lists.",
                    "maxLength": 512,
                    "format": "pve-fw-addr-spec",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "digest": {
                    "type": "string",
                    "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
                    "maxLength": 64,
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "dport": {
                    "type": "string",
                    "description": "Restrict TCP/UDP destination port. You can use service names or simple numbers (0-65535), as defined in '/etc/services'. Port ranges can be specified with '\\d+:\\d+', for example '80:85', and you can use comma separated list to match several ports or ranges.",
                    "format": "pve-fw-dport-spec",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "enable": {
                    "type": "integer",
                    "description": "Flag to enable/disable a rule.",
                    "minimum": 0,
                    "x-proxmox-typetext": "<integer> (0 - N)",
                    "x-proxmox-optional": true
                  },
                  "icmp-type": {
                    "type": "string",
                    "description": "Specify icmp-type. Only valid if proto equals 'icmp' or 'icmpv6'/'ipv6-icmp'.",
                    "format": "pve-fw-icmp-type-spec",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "iface": {
                    "type": "string",
                    "description": "Network interface name. You have to use network configuration key names for VMs and containers ('net\\d+'). Host related rules can use arbitrary strings.",
                    "minLength": 2,
                    "maxLength": 20,
                    "format": "pve-iface",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "log": {
                    "type": "string",
                    "description": "Log level for firewall rule.",
                    "enum": [
                      "emerg",
                      "alert",
                      "crit",
                      "err",
                      "warning",
                      "notice",
                      "info",
                      "debug",
                      "nolog"
                    ],
                    "x-proxmox-optional": true
                  },
                  "macro": {
                    "type": "string",
                    "description": "Use predefined standard macro.",
                    "maxLength": 128,
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "moveto": {
                    "type": "integer",
                    "description": "Move rule to new position <moveto>. Other arguments are ignored.",
                    "minimum": 0,
                    "x-proxmox-typetext": "<integer> (0 - N)",
                    "x-proxmox-optional": true
                  },
                  "proto": {
                    "type": "string",
                    "description": "IP protocol. You can use protocol names ('tcp'/'udp') or simple numbers, as defined in '/etc/protocols'.",
                    "format": "pve-fw-protocol-spec",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "source": {
                    "type": "string",
                    "description": "Restrict packet source address. This can refer to a single IP address, an IP set ('+ipsetname') or an IP alias definition. You can also specify an address range like '20.34.101.207-201.3.9.99', or a list of IP addresses and networks (entries are separated by comma). Please do not mix IPv4 and IPv6 addresses inside such lists.",
                    "maxLength": 512,
                    "format": "pve-fw-addr-spec",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "sport": {
                    "type": "string",
                    "description": "Restrict TCP/UDP source port. You can use service names or simple numbers (0-65535), as defined in '/etc/services'. Port ranges can be specified with '\\d+:\\d+', for example '80:85', and you can use comma separated list to match several ports or ranges.",
                    "format": "pve-fw-sport-spec",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "type": {
                    "type": "string",
                    "description": "Rule type.",
                    "enum": [
                      "in",
                      "out",
                      "forward",
                      "group"
                    ],
                    "x-proxmox-optional": true
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/vms/{vmid}",
                [
                  "VM.Config.Network"
                ]
              ]
            }
          ]
        }
      }
    },
    "/nodes/{node}/lxc/{vmid}/interfaces": {
      "get": {
        "operationId": "get-nodes-node-lxc-vmid-interfaces",
        "summary": "ip",
        "description": "Get IP addresses of the specified container interface.",
        "tags": [
          "/nodes/{node}/lxc/{vmid}/interfaces"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "hardware-address": {
                        "type": "string",
                        "description": "The MAC address of the interface",
                        "x-proxmox-optional": false
                      },
                      "hwaddr": {
                        "type": "string",
                        "description": "The MAC address of the interface",
                        "x-proxmox-optional": false
                      },
                      "inet": {
                        "type": "string",
                        "description": "The IPv4 address of the interface",
                        "x-proxmox-optional": true
                      },
                      "inet6": {
                        "type": "string",
                        "description": "The IPv6 address of the interface",
                        "x-proxmox-optional": true
                      },
                      "ip-addresses": {
                        "type": "array",
                        "description": "The addresses of the interface",
                        "items": {
                          "type": "object",
                          "properties": {
                            "ip-address": {
                              "type": "string",
                              "description": "IP-Address",
                              "x-proxmox-optional": true
                            },
                            "ip-address-type": {
                              "type": "string",
                              "description": "IP-Family",
                              "x-proxmox-optional": true
                            },
                            "prefix": {
                              "type": "integer",
                              "description": "IP-Prefix",
                              "x-proxmox-optional": true
                            }
                          }
                        },
                        "x-proxmox-optional": false
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the interface",
                        "x-proxmox-optional": false
                      }
                    },
                    "required": [
                      "hardware-address",
                      "hwaddr",
                      "ip-addresses",
                      "name"
                    ]
                  }
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-nodes-node-lxc-vmid-interfaces",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "description": "The (unique) ID of the VM.",
            "schema": {
              "type": "integer",
              "description": "The (unique) ID of the VM.",
              "minimum": 100,
              "maximum": 999999999,
              "format": "pve-vmid",
              "x-proxmox-typetext": "<integer> (100 - 999999999)"
            }
          }
        ],
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/vms/{vmid}",
                [
                  "VM.Audit"
                ]
              ]
            }
          ]
        }
      }
    },
    "/nodes/{node}/lxc/{vmid}/migrate": {
      "get": {
        "operationId": "get-nodes-node-lxc-vmid-migrate",
        "summary": "migrate_vm_precondition",
        "description": "Get preconditions for migration.",
        "tags": [
          "/nodes/{node}/lxc/{vmid}/migrate"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "allowed-nodes": {
                      "type": "array",
                      "description": "List of nodes allowed for migration.",
                      "items": {
                        "type": "string",
                        "description": "An allowed node"
                      },
                      "x-proxmox-optional": true
                    },
                    "dependent-ha-resources": {
                      "type": "array",
                      "description": "HA resources, which will be migrated to the same target node as the VM, because these are in positive affinity with the VM.",
                      "items": {
                        "type": "string",
                        "description": "The '<ty>:<id>' resource IDs of a HA resource with a positive affinity rule to this CT."
                      },
                      "x-proxmox-optional": true
                    },
                    "not-allowed-nodes": {
                      "type": "object",
                      "description": "List of not allowed nodes with additional information.",
                      "properties": {
                        "blocking-ha-resources": {
                          "type": "array",
                          "description": "HA resources, which are blocking the container from being migrated to the node.",
                          "items": {
                            "type": "object",
                            "description": "A blocking HA resource",
                            "properties": {
                              "cause": {
                                "type": "string",
                                "description": "The reason why the HA resource is blocking the migration.",
                                "enum": [
                                  "resource-affinity"
                                ]
                              },
                              "sid": {
                                "type": "string",
                                "description": "The blocking HA resource id"
                              }
                            },
                            "required": [
                              "cause",
                              "sid"
                            ]
                          },
                          "x-proxmox-optional": true
                        }
                      },
                      "x-proxmox-optional": true
                    },
                    "running": {
                      "type": "boolean",
                      "description": "Determines if the container is running."
                    }
                  },
                  "required": [
                    "running"
                  ]
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-nodes-node-lxc-vmid-migrate",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "target",
            "in": "query",
            "required": false,
            "description": "Target node.",
            "schema": {
              "type": "string",
              "description": "Target node.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>",
              "x-proxmox-optional": true
            }
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "description": "The (unique) ID of the VM.",
            "schema": {
              "type": "integer",
              "description": "The (unique) ID of the VM.",
              "minimum": 100,
              "maximum": 999999999,
              "format": "pve-vmid",
              "x-proxmox-typetext": "<integer> (100 - 999999999)"
            }
          }
        ],
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/vms/{vmid}",
                [
                  "VM.Migrate"
                ]
              ]
            }
          ]
        }
      },
      "post": {
        "operationId": "post-nodes-node-lxc-vmid-migrate",
        "summary": "migrate_vm",
        "description": "Migrate the container to another node. Creates a new migration task.",
        "tags": [
          "/nodes/{node}/lxc/{vmid}/migrate"
        ],
        "responses": {
          "200": {
            "description": "the task ID.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "the task ID."
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "post-nodes-node-lxc-vmid-migrate",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "description": "The (unique) ID of the VM.",
            "schema": {
              "type": "integer",
              "description": "The (unique) ID of the VM.",
              "minimum": 100,
              "maximum": 999999999,
              "format": "pve-vmid",
              "x-proxmox-typetext": "<integer> (100 - 999999999)"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "bwlimit": {
                    "type": "number",
                    "description": "Override I/O bandwidth limit (in KiB/s).",
                    "default": "migrate limit from datacenter or storage config",
                    "x-proxmox-typetext": "<number> (0 - N)",
                    "x-proxmox-optional": true
                  },
                  "online": {
                    "type": "boolean",
                    "description": "Use online/live migration.",
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "restart": {
                    "type": "boolean",
                    "description": "Use restart migration",
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "target": {
                    "type": "string",
                    "description": "Target node.",
                    "format": "pve-node",
                    "x-proxmox-typetext": "<string>"
                  },
                  "target-storage": {
                    "type": "string",
                    "description": "Mapping from source to target storages. Providing only a single storage ID maps all source storages to that storage. Providing the special value '1' will map each source storage to itself.",
                    "format": "storage-pair-list",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "timeout": {
                    "type": "integer",
                    "description": "Timeout in seconds for shutdown for restart migration",
                    "default": 180,
                    "x-proxmox-typetext": "<integer>",
                    "x-proxmox-optional": true
                  }
                },
                "required": [
                  "target"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/vms/{vmid}",
                [
                  "VM.Migrate"
                ]
              ]
            }
          ]
        }
      }
    },
    "/nodes/{node}/lxc/{vmid}/move_volume": {
      "post": {
        "operationId": "post-nodes-node-lxc-vmid-move-volume",
        "summary": "move_volume",
        "description": "Move a rootfs-/mp-volume to a different storage or to a different container.",
        "tags": [
          "/nodes/{node}/lxc/{vmid}/move_volume"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "post-nodes-node-lxc-vmid-move-volume",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "description": "The (unique) ID of the VM.",
            "schema": {
              "type": "integer",
              "description": "The (unique) ID of the VM.",
              "minimum": 100,
              "maximum": 999999999,
              "format": "pve-vmid",
              "x-proxmox-typetext": "<integer> (100 - 999999999)"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "bwlimit": {
                    "type": "number",
                    "description": "Override I/O bandwidth limit (in KiB/s).",
                    "default": "clone limit from datacenter or storage config",
                    "x-proxmox-typetext": "<number> (0 - N)",
                    "x-proxmox-optional": true
                  },
                  "delete": {
                    "type": "boolean",
                    "description": "Delete the original volume after successful copy. By default the original is kept as an unused volume entry.",
                    "default": false,
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "digest": {
                    "type": "string",
                    "description": "Prevent changes if current configuration file has different SHA1 \" .\n\t\t    \"digest. This can be used to prevent concurrent modifications.",
                    "maxLength": 40,
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "storage": {
                    "type": "string",
                    "description": "Target Storage.",
                    "format": "pve-storage-id",
                    "x-proxmox-format-description": "storage ID",
                    "x-proxmox-typetext": "<storage ID>",
                    "x-proxmox-optional": true
                  },
                  "target-digest": {
                    "type": "string",
                    "description": "Prevent changes if current configuration file of the target \" .\n\t\t    \"container has a different SHA1 digest. This can be used to prevent \" .\n\t\t    \"concurrent modifications.",
                    "maxLength": 40,
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "target-vmid": {
                    "type": "integer",
                    "description": "The (unique) ID of the VM.",
                    "minimum": 100,
                    "maximum": 999999999,
                    "format": "pve-vmid",
                    "x-proxmox-typetext": "<integer> (100 - 999999999)",
                    "x-proxmox-optional": true
                  },
                  "target-volume": {
                    "type": "string",
                    "description": "The config key the volume will be moved to. Default is the source volume key.",
                    "enum": [
                      "rootfs",
                      "mp0",
                      "mp1",
                      "mp2",
                      "mp3",
                      "mp4",
                      "mp5",
                      "mp6",
                      "mp7",
                      "mp8",
                      "mp9",
                      "mp10",
                      "mp11",
                      "mp12",
                      "mp13",
                      "mp14",
                      "mp15",
                      "mp16",
                      "mp17",
                      "mp18",
                      "mp19",
                      "mp20",
                      "mp21",
                      "mp22",
                      "mp23",
                      "mp24",
                      "mp25",
                      "mp26",
                      "mp27",
                      "mp28",
                      "mp29",
                      "mp30",
                      "mp31",
                      "mp32",
                      "mp33",
                      "mp34",
                      "mp35",
                      "mp36",
                      "mp37",
                      "mp38",
                      "mp39",
                      "mp40",
                      "mp41",
                      "mp42",
                      "mp43",
                      "mp44",
                      "mp45",
                      "mp46",
                      "mp47",
                      "mp48",
                      "mp49",
                      "mp50",
                      "mp51",
                      "mp52",
                      "mp53",
                      "mp54",
                      "mp55",
                      "mp56",
                      "mp57",
                      "mp58",
                      "mp59",
                      "mp60",
                      "mp61",
                      "mp62",
                      "mp63",
                      "mp64",
                      "mp65",
                      "mp66",
                      "mp67",
                      "mp68",
                      "mp69",
                      "mp70",
                      "mp71",
                      "mp72",
                      "mp73",
                      "mp74",
                      "mp75",
                      "mp76",
                      "mp77",
                      "mp78",
                      "mp79",
                      "mp80",
                      "mp81",
                      "mp82",
                      "mp83",
                      "mp84",
                      "mp85",
                      "mp86",
                      "mp87",
                      "mp88",
                      "mp89",
                      "mp90",
                      "mp91",
                      "mp92",
                      "mp93",
                      "mp94",
                      "mp95",
                      "mp96",
                      "mp97",
                      "mp98",
                      "mp99",
                      "mp100",
                      "mp101",
                      "mp102",
                      "mp103",
                      "mp104",
                      "mp105",
                      "mp106",
                      "mp107",
                      "mp108",
                      "mp109",
                      "mp110",
                      "mp111",
                      "mp112",
                      "mp113",
                      "mp114",
                      "mp115",
                      "mp116",
                      "mp117",
                      "mp118",
                      "mp119",
                      "mp120",
                      "mp121",
                      "mp122",
                      "mp123",
                      "mp124",
                      "mp125",
                      "mp126",
                      "mp127",
                      "mp128",
                      "mp129",
                      "mp130",
                      "mp131",
                      "mp132",
                      "mp133",
                      "mp134",
                      "mp135",
                      "mp136",
                      "mp137",
                      "mp138",
                      "mp139",
                      "mp140",
                      "mp141",
                      "mp142",
                      "mp143",
                      "mp144",
                      "mp145",
                      "mp146",
                      "mp147",
                      "mp148",
                      "mp149",
                      "mp150",
                      "mp151",
                      "mp152",
                      "mp153",
                      "mp154",
                      "mp155",
                      "mp156",
                      "mp157",
                      "mp158",
                      "mp159",
                      "mp160",
                      "mp161",
                      "mp162",
                      "mp163",
                      "mp164",
                      "mp165",
                      "mp166",
                      "mp167",
                      "mp168",
                      "mp169",
                      "mp170",
                      "mp171",
                      "mp172",
                      "mp173",
                      "mp174",
                      "mp175",
                      "mp176",
                      "mp177",
                      "mp178",
                      "mp179",
                      "mp180",
                      "mp181",
                      "mp182",
                      "mp183",
                      "mp184",
                      "mp185",
                      "mp186",
                      "mp187",
                      "mp188",
                      "mp189",
                      "mp190",
                      "mp191",
                      "mp192",
                      "mp193",
                      "mp194",
                      "mp195",
                      "mp196",
                      "mp197",
                      "mp198",
                      "mp199",
                      "mp200",
                      "mp201",
                      "mp202",
                      "mp203",
                      "mp204",
                      "mp205",
                      "mp206",
                      "mp207",
                      "mp208",
                      "mp209",
                      "mp210",
                      "mp211",
                      "mp212",
                      "mp213",
                      "mp214",
                      "mp215",
                      "mp216",
                      "mp217",
                      "mp218",
                      "mp219",
                      "mp220",
                      "mp221",
                      "mp222",
                      "mp223",
                      "mp224",
                      "mp225",
                      "mp226",
                      "mp227",
                      "mp228",
                      "mp229",
                      "mp230",
                      "mp231",
                      "mp232",
                      "mp233",
                      "mp234",
                      "mp235",
                      "mp236",
                      "mp237",
                      "mp238",
                      "mp239",
                      "mp240",
                      "mp241",
                      "mp242",
                      "mp243",
                      "mp244",
                      "mp245",
                      "mp246",
                      "mp247",
                      "mp248",
                      "mp249",
                      "mp250",
                      "mp251",
                      "mp252",
                      "mp253",
                      "mp254",
                      "mp255",
                      "unused0",
                      "unused1",
                      "unused2",
                      "unused3",
                      "unused4",
                      "unused5",
                      "unused6",
                      "unused7",
                      "unused8",
                      "unused9",
                      "unused10",
                      "unused11",
                      "unused12",
                      "unused13",
                      "unused14",
                      "unused15",
                      "unused16",
                      "unused17",
                      "unused18",
                      "unused19",
                      "unused20",
                      "unused21",
                      "unused22",
                      "unused23",
                      "unused24",
                      "unused25",
                      "unused26",
                      "unused27",
                      "unused28",
                      "unused29",
                      "unused30",
                      "unused31",
                      "unused32",
                      "unused33",
                      "unused34",
                      "unused35",
                      "unused36",
                      "unused37",
                      "unused38",
                      "unused39",
                      "unused40",
                      "unused41",
                      "unused42",
                      "unused43",
                      "unused44",
                      "unused45",
                      "unused46",
                      "unused47",
                      "unused48",
                      "unused49",
                      "unused50",
                      "unused51",
                      "unused52",
                      "unused53",
                      "unused54",
                      "unused55",
                      "unused56",
                      "unused57",
                      "unused58",
                      "unused59",
                      "unused60",
                      "unused61",
                      "unused62",
                      "unused63",
                      "unused64",
                      "unused65",
                      "unused66",
                      "unused67",
                      "unused68",
                      "unused69",
                      "unused70",
                      "unused71",
                      "unused72",
                      "unused73",
                      "unused74",
                      "unused75",
                      "unused76",
                      "unused77",
                      "unused78",
                      "unused79",
                      "unused80",
                      "unused81",
                      "unused82",
                      "unused83",
                      "unused84",
                      "unused85",
                      "unused86",
                      "unused87",
                      "unused88",
                      "unused89",
                      "unused90",
                      "unused91",
                      "unused92",
                      "unused93",
                      "unused94",
                      "unused95",
                      "unused96",
                      "unused97",
                      "unused98",
                      "unused99",
                      "unused100",
                      "unused101",
                      "unused102",
                      "unused103",
                      "unused104",
                      "unused105",
                      "unused106",
                      "unused107",
                      "unused108",
                      "unused109",
                      "unused110",
                      "unused111",
                      "unused112",
                      "unused113",
                      "unused114",
                      "unused115",
                      "unused116",
                      "unused117",
                      "unused118",
                      "unused119",
                      "unused120",
                      "unused121",
                      "unused122",
                      "unused123",
                      "unused124",
                      "unused125",
                      "unused126",
                      "unused127",
                      "unused128",
                      "unused129",
                      "unused130",
                      "unused131",
                      "unused132",
                      "unused133",
                      "unused134",
                      "unused135",
                      "unused136",
                      "unused137",
                      "unused138",
                      "unused139",
                      "unused140",
                      "unused141",
                      "unused142",
                      "unused143",
                      "unused144",
                      "unused145",
                      "unused146",
                      "unused147",
                      "unused148",
                      "unused149",
                      "unused150",
                      "unused151",
                      "unused152",
                      "unused153",
                      "unused154",
                      "unused155",
                      "unused156",
                      "unused157",
                      "unused158",
                      "unused159",
                      "unused160",
                      "unused161",
                      "unused162",
                      "unused163",
                      "unused164",
                      "unused165",
                      "unused166",
                      "unused167",
                      "unused168",
                      "unused169",
                      "unused170",
                      "unused171",
                      "unused172",
                      "unused173",
                      "unused174",
                      "unused175",
                      "unused176",
                      "unused177",
                      "unused178",
                      "unused179",
                      "unused180",
                      "unused181",
                      "unused182",
                      "unused183",
                      "unused184",
                      "unused185",
                      "unused186",
                      "unused187",
                      "unused188",
                      "unused189",
                      "unused190",
                      "unused191",
                      "unused192",
                      "unused193",
                      "unused194",
                      "unused195",
                      "unused196",
                      "unused197",
                      "unused198",
                      "unused199",
                      "unused200",
                      "unused201",
                      "unused202",
                      "unused203",
                      "unused204",
                      "unused205",
                      "unused206",
                      "unused207",
                      "unused208",
                      "unused209",
                      "unused210",
                      "unused211",
                      "unused212",
                      "unused213",
                      "unused214",
                      "unused215",
                      "unused216",
                      "unused217",
                      "unused218",
                      "unused219",
                      "unused220",
                      "unused221",
                      "unused222",
                      "unused223",
                      "unused224",
                      "unused225",
                      "unused226",
                      "unused227",
                      "unused228",
                      "unused229",
                      "unused230",
                      "unused231",
                      "unused232",
                      "unused233",
                      "unused234",
                      "unused235",
                      "unused236",
                      "unused237",
                      "unused238",
                      "unused239",
                      "unused240",
                      "unused241",
                      "unused242",
                      "unused243",
                      "unused244",
                      "unused245",
                      "unused246",
                      "unused247",
                      "unused248",
                      "unused249",
                      "unused250",
                      "unused251",
                      "unused252",
                      "unused253",
                      "unused254",
                      "unused255"
                    ],
                    "x-proxmox-optional": true
                  },
                  "volume": {
                    "type": "string",
                    "description": "Volume which will be moved.",
                    "enum": [
                      "rootfs",
                      "mp0",
                      "mp1",
                      "mp2",
                      "mp3",
                      "mp4",
                      "mp5",
                      "mp6",
                      "mp7",
                      "mp8",
                      "mp9",
                      "mp10",
                      "mp11",
                      "mp12",
                      "mp13",
                      "mp14",
                      "mp15",
                      "mp16",
                      "mp17",
                      "mp18",
                      "mp19",
                      "mp20",
                      "mp21",
                      "mp22",
                      "mp23",
                      "mp24",
                      "mp25",
                      "mp26",
                      "mp27",
                      "mp28",
                      "mp29",
                      "mp30",
                      "mp31",
                      "mp32",
                      "mp33",
                      "mp34",
                      "mp35",
                      "mp36",
                      "mp37",
                      "mp38",
                      "mp39",
                      "mp40",
                      "mp41",
                      "mp42",
                      "mp43",
                      "mp44",
                      "mp45",
                      "mp46",
                      "mp47",
                      "mp48",
                      "mp49",
                      "mp50",
                      "mp51",
                      "mp52",
                      "mp53",
                      "mp54",
                      "mp55",
                      "mp56",
                      "mp57",
                      "mp58",
                      "mp59",
                      "mp60",
                      "mp61",
                      "mp62",
                      "mp63",
                      "mp64",
                      "mp65",
                      "mp66",
                      "mp67",
                      "mp68",
                      "mp69",
                      "mp70",
                      "mp71",
                      "mp72",
                      "mp73",
                      "mp74",
                      "mp75",
                      "mp76",
                      "mp77",
                      "mp78",
                      "mp79",
                      "mp80",
                      "mp81",
                      "mp82",
                      "mp83",
                      "mp84",
                      "mp85",
                      "mp86",
                      "mp87",
                      "mp88",
                      "mp89",
                      "mp90",
                      "mp91",
                      "mp92",
                      "mp93",
                      "mp94",
                      "mp95",
                      "mp96",
                      "mp97",
                      "mp98",
                      "mp99",
                      "mp100",
                      "mp101",
                      "mp102",
                      "mp103",
                      "mp104",
                      "mp105",
                      "mp106",
                      "mp107",
                      "mp108",
                      "mp109",
                      "mp110",
                      "mp111",
                      "mp112",
                      "mp113",
                      "mp114",
                      "mp115",
                      "mp116",
                      "mp117",
                      "mp118",
                      "mp119",
                      "mp120",
                      "mp121",
                      "mp122",
                      "mp123",
                      "mp124",
                      "mp125",
                      "mp126",
                      "mp127",
                      "mp128",
                      "mp129",
                      "mp130",
                      "mp131",
                      "mp132",
                      "mp133",
                      "mp134",
                      "mp135",
                      "mp136",
                      "mp137",
                      "mp138",
                      "mp139",
                      "mp140",
                      "mp141",
                      "mp142",
                      "mp143",
                      "mp144",
                      "mp145",
                      "mp146",
                      "mp147",
                      "mp148",
                      "mp149",
                      "mp150",
                      "mp151",
                      "mp152",
                      "mp153",
                      "mp154",
                      "mp155",
                      "mp156",
                      "mp157",
                      "mp158",
                      "mp159",
                      "mp160",
                      "mp161",
                      "mp162",
                      "mp163",
                      "mp164",
                      "mp165",
                      "mp166",
                      "mp167",
                      "mp168",
                      "mp169",
                      "mp170",
                      "mp171",
                      "mp172",
                      "mp173",
                      "mp174",
                      "mp175",
                      "mp176",
                      "mp177",
                      "mp178",
                      "mp179",
                      "mp180",
                      "mp181",
                      "mp182",
                      "mp183",
                      "mp184",
                      "mp185",
                      "mp186",
                      "mp187",
                      "mp188",
                      "mp189",
                      "mp190",
                      "mp191",
                      "mp192",
                      "mp193",
                      "mp194",
                      "mp195",
                      "mp196",
                      "mp197",
                      "mp198",
                      "mp199",
                      "mp200",
                      "mp201",
                      "mp202",
                      "mp203",
                      "mp204",
                      "mp205",
                      "mp206",
                      "mp207",
                      "mp208",
                      "mp209",
                      "mp210",
                      "mp211",
                      "mp212",
                      "mp213",
                      "mp214",
                      "mp215",
                      "mp216",
                      "mp217",
                      "mp218",
                      "mp219",
                      "mp220",
                      "mp221",
                      "mp222",
                      "mp223",
                      "mp224",
                      "mp225",
                      "mp226",
                      "mp227",
                      "mp228",
                      "mp229",
                      "mp230",
                      "mp231",
                      "mp232",
                      "mp233",
                      "mp234",
                      "mp235",
                      "mp236",
                      "mp237",
                      "mp238",
                      "mp239",
                      "mp240",
                      "mp241",
                      "mp242",
                      "mp243",
                      "mp244",
                      "mp245",
                      "mp246",
                      "mp247",
                      "mp248",
                      "mp249",
                      "mp250",
                      "mp251",
                      "mp252",
                      "mp253",
                      "mp254",
                      "mp255",
                      "unused0",
                      "unused1",
                      "unused2",
                      "unused3",
                      "unused4",
                      "unused5",
                      "unused6",
                      "unused7",
                      "unused8",
                      "unused9",
                      "unused10",
                      "unused11",
                      "unused12",
                      "unused13",
                      "unused14",
                      "unused15",
                      "unused16",
                      "unused17",
                      "unused18",
                      "unused19",
                      "unused20",
                      "unused21",
                      "unused22",
                      "unused23",
                      "unused24",
                      "unused25",
                      "unused26",
                      "unused27",
                      "unused28",
                      "unused29",
                      "unused30",
                      "unused31",
                      "unused32",
                      "unused33",
                      "unused34",
                      "unused35",
                      "unused36",
                      "unused37",
                      "unused38",
                      "unused39",
                      "unused40",
                      "unused41",
                      "unused42",
                      "unused43",
                      "unused44",
                      "unused45",
                      "unused46",
                      "unused47",
                      "unused48",
                      "unused49",
                      "unused50",
                      "unused51",
                      "unused52",
                      "unused53",
                      "unused54",
                      "unused55",
                      "unused56",
                      "unused57",
                      "unused58",
                      "unused59",
                      "unused60",
                      "unused61",
                      "unused62",
                      "unused63",
                      "unused64",
                      "unused65",
                      "unused66",
                      "unused67",
                      "unused68",
                      "unused69",
                      "unused70",
                      "unused71",
                      "unused72",
                      "unused73",
                      "unused74",
                      "unused75",
                      "unused76",
                      "unused77",
                      "unused78",
                      "unused79",
                      "unused80",
                      "unused81",
                      "unused82",
                      "unused83",
                      "unused84",
                      "unused85",
                      "unused86",
                      "unused87",
                      "unused88",
                      "unused89",
                      "unused90",
                      "unused91",
                      "unused92",
                      "unused93",
                      "unused94",
                      "unused95",
                      "unused96",
                      "unused97",
                      "unused98",
                      "unused99",
                      "unused100",
                      "unused101",
                      "unused102",
                      "unused103",
                      "unused104",
                      "unused105",
                      "unused106",
                      "unused107",
                      "unused108",
                      "unused109",
                      "unused110",
                      "unused111",
                      "unused112",
                      "unused113",
                      "unused114",
                      "unused115",
                      "unused116",
                      "unused117",
                      "unused118",
                      "unused119",
                      "unused120",
                      "unused121",
                      "unused122",
                      "unused123",
                      "unused124",
                      "unused125",
                      "unused126",
                      "unused127",
                      "unused128",
                      "unused129",
                      "unused130",
                      "unused131",
                      "unused132",
                      "unused133",
                      "unused134",
                      "unused135",
                      "unused136",
                      "unused137",
                      "unused138",
                      "unused139",
                      "unused140",
                      "unused141",
                      "unused142",
                      "unused143",
                      "unused144",
                      "unused145",
                      "unused146",
                      "unused147",
                      "unused148",
                      "unused149",
                      "unused150",
                      "unused151",
                      "unused152",
                      "unused153",
                      "unused154",
                      "unused155",
                      "unused156",
                      "unused157",
                      "unused158",
                      "unused159",
                      "unused160",
                      "unused161",
                      "unused162",
                      "unused163",
                      "unused164",
                      "unused165",
                      "unused166",
                      "unused167",
                      "unused168",
                      "unused169",
                      "unused170",
                      "unused171",
                      "unused172",
                      "unused173",
                      "unused174",
                      "unused175",
                      "unused176",
                      "unused177",
                      "unused178",
                      "unused179",
                      "unused180",
                      "unused181",
                      "unused182",
                      "unused183",
                      "unused184",
                      "unused185",
                      "unused186",
                      "unused187",
                      "unused188",
                      "unused189",
                      "unused190",
                      "unused191",
                      "unused192",
                      "unused193",
                      "unused194",
                      "unused195",
                      "unused196",
                      "unused197",
                      "unused198",
                      "unused199",
                      "unused200",
                      "unused201",
                      "unused202",
                      "unused203",
                      "unused204",
                      "unused205",
                      "unused206",
                      "unused207",
                      "unused208",
                      "unused209",
                      "unused210",
                      "unused211",
                      "unused212",
                      "unused213",
                      "unused214",
                      "unused215",
                      "unused216",
                      "unused217",
                      "unused218",
                      "unused219",
                      "unused220",
                      "unused221",
                      "unused222",
                      "unused223",
                      "unused224",
                      "unused225",
                      "unused226",
                      "unused227",
                      "unused228",
                      "unused229",
                      "unused230",
                      "unused231",
                      "unused232",
                      "unused233",
                      "unused234",
                      "unused235",
                      "unused236",
                      "unused237",
                      "unused238",
                      "unused239",
                      "unused240",
                      "unused241",
                      "unused242",
                      "unused243",
                      "unused244",
                      "unused245",
                      "unused246",
                      "unused247",
                      "unused248",
                      "unused249",
                      "unused250",
                      "unused251",
                      "unused252",
                      "unused253",
                      "unused254",
                      "unused255"
                    ]
                  }
                },
                "required": [
                  "volume"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "description": "You need 'VM.Config.Disk' permissions on /vms/{vmid}, and 'Datastore.AllocateSpace' permissions on the storage. To move a volume to another container, you need the permissions on the target container as well.",
              "check": [
                "perm",
                "/vms/{vmid}",
                [
                  "VM.Config.Disk"
                ]
              ]
            }
          ]
        }
      }
    },
    "/nodes/{node}/lxc/{vmid}/mtunnel": {
      "post": {
        "operationId": "post-nodes-node-lxc-vmid-mtunnel",
        "summary": "mtunnel",
        "description": "Migration tunnel endpoint - only for internal use by CT migration.",
        "tags": [
          "/nodes/{node}/lxc/{vmid}/mtunnel"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "socket": {
                      "type": "string"
                    },
                    "ticket": {
                      "type": "string"
                    },
                    "upid": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "socket",
                    "ticket",
                    "upid"
                  ],
                  "additionalProperties": false
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "post-nodes-node-lxc-vmid-mtunnel",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "description": "The (unique) ID of the VM.",
            "schema": {
              "type": "integer",
              "description": "The (unique) ID of the VM.",
              "minimum": 100,
              "maximum": 999999999,
              "format": "pve-vmid",
              "x-proxmox-typetext": "<integer> (100 - 999999999)"
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "bridges": {
                    "type": "string",
                    "description": "List of network bridges to check availability. Will be checked again for actually used bridges during migration.",
                    "format": "pve-bridge-id-list",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "storages": {
                    "type": "string",
                    "description": "List of storages to check permission and availability. Will be checked again for all actually used storages during migration.",
                    "format": "pve-storage-id-list",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "description": "You need 'VM.Allocate' permissions on '/vms/{vmid}' and Sys.Incoming on '/'. Further permission checks happen during the actual migration.",
              "check": [
                "and",
                [
                  "perm",
                  "/vms/{vmid}",
                  [
                    "VM.Allocate"
                  ]
                ],
                [
                  "perm",
                  "/",
                  [
                    "Sys.Incoming"
                  ]
                ]
              ]
            }
          ]
        }
      }
    },
    "/nodes/{node}/lxc/{vmid}/mtunnelwebsocket": {
      "get": {
        "operationId": "get-nodes-node-lxc-vmid-mtunnelwebsocket",
        "summary": "mtunnelwebsocket",
        "description": "Migration tunnel endpoint for websocket upgrade - only for internal use by VM migration.",
        "tags": [
          "/nodes/{node}/lxc/{vmid}/mtunnelwebsocket"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "port": {
                      "type": "string",
                      "x-proxmox-optional": true
                    },
                    "socket": {
                      "type": "string",
                      "x-proxmox-optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-nodes-node-lxc-vmid-mtunnelwebsocket",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "socket",
            "in": "query",
            "required": true,
            "description": "unix socket to forward to",
            "schema": {
              "type": "string",
              "description": "unix socket to forward to",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "ticket",
            "in": "query",
            "required": true,
            "description": "ticket return by initial 'mtunnel' API call, or retrieved via 'ticket' tunnel command",
            "schema": {
              "type": "string",
              "description": "ticket return by initial 'mtunnel' API call, or retrieved via 'ticket' tunnel command",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "description": "The (unique) ID of the VM.",
            "schema": {
              "type": "integer",
              "description": "The (unique) ID of the VM.",
              "minimum": 100,
              "maximum": 999999999,
              "format": "pve-vmid",
              "x-proxmox-typetext": "<integer> (100 - 999999999)"
            }
          }
        ],
        "security": [],
        "x-proxmox-permissions": {
          "all": [
            {
              "description": "You need to pass a ticket valid for the selected socket. Tickets can be created via the mtunnel API call, which will check permissions accordingly.",
              "user": "all"
            }
          ]
        }
      }
    },
    "/nodes/{node}/lxc/{vmid}/pending": {
      "get": {
        "operationId": "get-nodes-node-lxc-vmid-pending",
        "summary": "vm_pending",
        "description": "Get container configuration, including pending changes.",
        "tags": [
          "/nodes/{node}/lxc/{vmid}/pending"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "delete": {
                        "type": "integer",
                        "description": "Indicates a pending delete request if present and not 0.",
                        "minimum": 0,
                        "maximum": 2,
                        "x-proxmox-optional": true
                      },
                      "key": {
                        "type": "string",
                        "description": "Configuration option name."
                      },
                      "pending": {
                        "type": "string",
                        "description": "Pending value.",
                        "x-proxmox-optional": true
                      },
                      "value": {
                        "type": "string",
                        "description": "Current value.",
                        "x-proxmox-optional": true
                      }
                    },
                    "required": [
                      "key"
                    ]
                  }
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-nodes-node-lxc-vmid-pending",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "description": "The (unique) ID of the VM.",
            "schema": {
              "type": "integer",
              "description": "The (unique) ID of the VM.",
              "minimum": 100,
              "maximum": 999999999,
              "format": "pve-vmid",
              "x-proxmox-typetext": "<integer> (100 - 999999999)"
            }
          }
        ],
        "security": [],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/vms/{vmid}",
                [
                  "VM.Audit"
                ]
              ]
            }
          ]
        }
      }
    },
    "/nodes/{node}/lxc/{vmid}/remote_migrate": {
      "post": {
        "operationId": "post-nodes-node-lxc-vmid-remote-migrate",
        "summary": "remote_migrate_vm",
        "description": "Migrate the container to another cluster. Creates a new migration task. EXPERIMENTAL feature!",
        "tags": [
          "/nodes/{node}/lxc/{vmid}/remote_migrate"
        ],
        "responses": {
          "200": {
            "description": "the task ID.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "the task ID."
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "post-nodes-node-lxc-vmid-remote-migrate",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "description": "The (unique) ID of the VM.",
            "schema": {
              "type": "integer",
              "description": "The (unique) ID of the VM.",
              "minimum": 100,
              "maximum": 999999999,
              "format": "pve-vmid",
              "x-proxmox-typetext": "<integer> (100 - 999999999)"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "bwlimit": {
                    "type": "number",
                    "description": "Override I/O bandwidth limit (in KiB/s).",
                    "default": "migrate limit from datacenter or storage config",
                    "x-proxmox-typetext": "<number> (0 - N)",
                    "x-proxmox-optional": true
                  },
                  "delete": {
                    "type": "boolean",
                    "description": "Delete the original CT and related data after successful migration. By default the original CT is kept on the source cluster in a stopped state.",
                    "default": false,
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "online": {
                    "type": "boolean",
                    "description": "Use online/live migration.",
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "restart": {
                    "type": "boolean",
                    "description": "Use restart migration",
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "target-bridge": {
                    "type": "string",
                    "description": "Mapping from source to target bridges. Providing only a single bridge ID maps all source bridges to that bridge. Providing the special value '1' will map each source bridge to itself.",
                    "format": "bridge-pair-list",
                    "x-proxmox-typetext": "<string>"
                  },
                  "target-endpoint": {
                    "type": "string",
                    "description": "Remote target endpoint",
                    "format": "proxmox-remote",
                    "x-proxmox-typetext": "apitoken=<PVEAPIToken=user@realm!token=SECRET> ,host=<ADDRESS> [,fingerprint=<FINGERPRINT>] [,port=<PORT>]"
                  },
                  "target-storage": {
                    "type": "string",
                    "description": "Mapping from source to target storages. Providing only a single storage ID maps all source storages to that storage. Providing the special value '1' will map each source storage to itself.",
                    "format": "storage-pair-list",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": false
                  },
                  "target-vmid": {
                    "type": "integer",
                    "description": "The (unique) ID of the VM.",
                    "minimum": 100,
                    "maximum": 999999999,
                    "format": "pve-vmid",
                    "x-proxmox-typetext": "<integer> (100 - 999999999)",
                    "x-proxmox-optional": true
                  },
                  "timeout": {
                    "type": "integer",
                    "description": "Timeout in seconds for shutdown for restart migration",
                    "default": 180,
                    "x-proxmox-typetext": "<integer>",
                    "x-proxmox-optional": true
                  }
                },
                "required": [
                  "target-bridge",
                  "target-endpoint",
                  "target-storage"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/vms/{vmid}",
                [
                  "VM.Migrate"
                ]
              ]
            }
          ]
        }
      }
    },
    "/nodes/{node}/lxc/{vmid}/resize": {
      "put": {
        "operationId": "put-nodes-node-lxc-vmid-resize",
        "summary": "resize_vm",
        "description": "Resize a container mount point.",
        "tags": [
          "/nodes/{node}/lxc/{vmid}/resize"
        ],
        "responses": {
          "200": {
            "description": "the task ID.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "the task ID."
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "put-nodes-node-lxc-vmid-resize",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "description": "The (unique) ID of the VM.",
            "schema": {
              "type": "integer",
              "description": "The (unique) ID of the VM.",
              "minimum": 100,
              "maximum": 999999999,
              "format": "pve-vmid",
              "x-proxmox-typetext": "<integer> (100 - 999999999)"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "digest": {
                    "type": "string",
                    "description": "Prevent changes if current configuration file has different SHA1 digest. This can be used to prevent concurrent modifications.",
                    "maxLength": 40,
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "disk": {
                    "type": "string",
                    "description": "The disk you want to resize.",
                    "enum": [
                      "rootfs",
                      "mp0",
                      "mp1",
                      "mp2",
                      "mp3",
                      "mp4",
                      "mp5",
                      "mp6",
                      "mp7",
                      "mp8",
                      "mp9",
                      "mp10",
                      "mp11",
                      "mp12",
                      "mp13",
                      "mp14",
                      "mp15",
                      "mp16",
                      "mp17",
                      "mp18",
                      "mp19",
                      "mp20",
                      "mp21",
                      "mp22",
                      "mp23",
                      "mp24",
                      "mp25",
                      "mp26",
                      "mp27",
                      "mp28",
                      "mp29",
                      "mp30",
                      "mp31",
                      "mp32",
                      "mp33",
                      "mp34",
                      "mp35",
                      "mp36",
                      "mp37",
                      "mp38",
                      "mp39",
                      "mp40",
                      "mp41",
                      "mp42",
                      "mp43",
                      "mp44",
                      "mp45",
                      "mp46",
                      "mp47",
                      "mp48",
                      "mp49",
                      "mp50",
                      "mp51",
                      "mp52",
                      "mp53",
                      "mp54",
                      "mp55",
                      "mp56",
                      "mp57",
                      "mp58",
                      "mp59",
                      "mp60",
                      "mp61",
                      "mp62",
                      "mp63",
                      "mp64",
                      "mp65",
                      "mp66",
                      "mp67",
                      "mp68",
                      "mp69",
                      "mp70",
                      "mp71",
                      "mp72",
                      "mp73",
                      "mp74",
                      "mp75",
                      "mp76",
                      "mp77",
                      "mp78",
                      "mp79",
                      "mp80",
                      "mp81",
                      "mp82",
                      "mp83",
                      "mp84",
                      "mp85",
                      "mp86",
                      "mp87",
                      "mp88",
                      "mp89",
                      "mp90",
                      "mp91",
                      "mp92",
                      "mp93",
                      "mp94",
                      "mp95",
                      "mp96",
                      "mp97",
                      "mp98",
                      "mp99",
                      "mp100",
                      "mp101",
                      "mp102",
                      "mp103",
                      "mp104",
                      "mp105",
                      "mp106",
                      "mp107",
                      "mp108",
                      "mp109",
                      "mp110",
                      "mp111",
                      "mp112",
                      "mp113",
                      "mp114",
                      "mp115",
                      "mp116",
                      "mp117",
                      "mp118",
                      "mp119",
                      "mp120",
                      "mp121",
                      "mp122",
                      "mp123",
                      "mp124",
                      "mp125",
                      "mp126",
                      "mp127",
                      "mp128",
                      "mp129",
                      "mp130",
                      "mp131",
                      "mp132",
                      "mp133",
                      "mp134",
                      "mp135",
                      "mp136",
                      "mp137",
                      "mp138",
                      "mp139",
                      "mp140",
                      "mp141",
                      "mp142",
                      "mp143",
                      "mp144",
                      "mp145",
                      "mp146",
                      "mp147",
                      "mp148",
                      "mp149",
                      "mp150",
                      "mp151",
                      "mp152",
                      "mp153",
                      "mp154",
                      "mp155",
                      "mp156",
                      "mp157",
                      "mp158",
                      "mp159",
                      "mp160",
                      "mp161",
                      "mp162",
                      "mp163",
                      "mp164",
                      "mp165",
                      "mp166",
                      "mp167",
                      "mp168",
                      "mp169",
                      "mp170",
                      "mp171",
                      "mp172",
                      "mp173",
                      "mp174",
                      "mp175",
                      "mp176",
                      "mp177",
                      "mp178",
                      "mp179",
                      "mp180",
                      "mp181",
                      "mp182",
                      "mp183",
                      "mp184",
                      "mp185",
                      "mp186",
                      "mp187",
                      "mp188",
                      "mp189",
                      "mp190",
                      "mp191",
                      "mp192",
                      "mp193",
                      "mp194",
                      "mp195",
                      "mp196",
                      "mp197",
                      "mp198",
                      "mp199",
                      "mp200",
                      "mp201",
                      "mp202",
                      "mp203",
                      "mp204",
                      "mp205",
                      "mp206",
                      "mp207",
                      "mp208",
                      "mp209",
                      "mp210",
                      "mp211",
                      "mp212",
                      "mp213",
                      "mp214",
                      "mp215",
                      "mp216",
                      "mp217",
                      "mp218",
                      "mp219",
                      "mp220",
                      "mp221",
                      "mp222",
                      "mp223",
                      "mp224",
                      "mp225",
                      "mp226",
                      "mp227",
                      "mp228",
                      "mp229",
                      "mp230",
                      "mp231",
                      "mp232",
                      "mp233",
                      "mp234",
                      "mp235",
                      "mp236",
                      "mp237",
                      "mp238",
                      "mp239",
                      "mp240",
                      "mp241",
                      "mp242",
                      "mp243",
                      "mp244",
                      "mp245",
                      "mp246",
                      "mp247",
                      "mp248",
                      "mp249",
                      "mp250",
                      "mp251",
                      "mp252",
                      "mp253",
                      "mp254",
                      "mp255"
                    ]
                  },
                  "size": {
                    "type": "string",
                    "description": "The new size. With the '+' sign the value is added to the actual size of the volume and without it, the value is taken as an absolute one. Shrinking disk size is not supported.",
                    "pattern": "\\+?\\d+(\\.\\d+)?[KMGT]?"
                  }
                },
                "required": [
                  "disk",
                  "size"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/vms/{vmid}",
                [
                  "VM.Config.Disk"
                ],
                "any",
                1
              ]
            }
          ]
        }
      }
    },
    "/nodes/{node}/lxc/{vmid}/rrd": {
      "get": {
        "operationId": "get-nodes-node-lxc-vmid-rrd",
        "summary": "rrd",
        "description": "Read VM RRD statistics (returns PNG)",
        "tags": [
          "/nodes/{node}/lxc/{vmid}/rrd"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "filename": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "filename"
                  ]
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-nodes-node-lxc-vmid-rrd",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "cf",
            "in": "query",
            "required": false,
            "description": "The RRD consolidation function",
            "schema": {
              "type": "string",
              "description": "The RRD consolidation function",
              "enum": [
                "AVERAGE",
                "MAX"
              ],
              "x-proxmox-optional": true
            }
          },
          {
            "name": "ds",
            "in": "query",
            "required": true,
            "description": "The list of datasources you want to display.",
            "schema": {
              "type": "string",
              "description": "The list of datasources you want to display.",
              "format": "pve-configid-list",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "timeframe",
            "in": "query",
            "required": true,
            "description": "Specify the time frame you are interested in.",
            "schema": {
              "type": "string",
              "description": "Specify the time frame you are interested in.",
              "enum": [
                "hour",
                "day",
                "week",
                "month",
                "year"
              ]
            }
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "description": "The (unique) ID of the VM.",
            "schema": {
              "type": "integer",
              "description": "The (unique) ID of the VM.",
              "minimum": 100,
              "maximum": 999999999,
              "format": "pve-vmid",
              "x-proxmox-typetext": "<integer> (100 - 999999999)"
            }
          }
        ],
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/vms/{vmid}",
                [
                  "VM.Audit"
                ]
              ]
            }
          ]
        }
      }
    },
    "/nodes/{node}/lxc/{vmid}/rrddata": {
      "get": {
        "operationId": "get-nodes-node-lxc-vmid-rrddata",
        "summary": "rrddata",
        "description": "Read VM RRD statistics",
        "tags": [
          "/nodes/{node}/lxc/{vmid}/rrddata"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  }
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-nodes-node-lxc-vmid-rrddata",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "cf",
            "in": "query",
            "required": false,
            "description": "The RRD consolidation function",
            "schema": {
              "type": "string",
              "description": "The RRD consolidation function",
              "enum": [
                "AVERAGE",
                "MAX"
              ],
              "x-proxmox-optional": true
            }
          },
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "timeframe",
            "in": "query",
            "required": true,
            "description": "Specify the time frame you are interested in.",
            "schema": {
              "type": "string",
              "description": "Specify the time frame you are interested in.",
              "enum": [
                "hour",
                "day",
                "week",
                "month",
                "year"
              ]
            }
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "description": "The (unique) ID of the VM.",
            "schema": {
              "type": "integer",
              "description": "The (unique) ID of the VM.",
              "minimum": 100,
              "maximum": 999999999,
              "format": "pve-vmid",
              "x-proxmox-typetext": "<integer> (100 - 999999999)"
            }
          }
        ],
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/vms/{vmid}",
                [
                  "VM.Audit"
                ]
              ]
            }
          ]
        }
      }
    },
    "/nodes/{node}/lxc/{vmid}/snapshot": {
      "get": {
        "operationId": "get-nodes-node-lxc-vmid-snapshot",
        "summary": "list",
        "description": "List all snapshots.",
        "tags": [
          "/nodes/{node}/lxc/{vmid}/snapshot"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "description": {
                        "type": "string",
                        "description": "Snapshot description."
                      },
                      "name": {
                        "type": "string",
                        "description": "Snapshot identifier. Value 'current' identifies the current VM."
                      },
                      "parent": {
                        "type": "string",
                        "description": "Parent snapshot identifier.",
                        "x-proxmox-optional": true
                      },
                      "snaptime": {
                        "type": "integer",
                        "description": "Snapshot creation time",
                        "x-proxmox-optional": true,
                        "x-proxmox-metadata": {
                          "renderer": "timestamp"
                        }
                      }
                    },
                    "required": [
                      "description",
                      "name"
                    ]
                  },
                  "x-proxmox-metadata": {
                    "links": [
                      {
                        "href": "{name}",
                        "rel": "child"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-nodes-node-lxc-vmid-snapshot",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "description": "The (unique) ID of the VM.",
            "schema": {
              "type": "integer",
              "description": "The (unique) ID of the VM.",
              "minimum": 100,
              "maximum": 999999999,
              "format": "pve-vmid",
              "x-proxmox-typetext": "<integer> (100 - 999999999)"
            }
          }
        ],
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/vms/{vmid}",
                [
                  "VM.Audit"
                ]
              ]
            }
          ]
        }
      },
      "post": {
        "operationId": "post-nodes-node-lxc-vmid-snapshot",
        "summary": "snapshot",
        "description": "Snapshot a container.",
        "tags": [
          "/nodes/{node}/lxc/{vmid}/snapshot"
        ],
        "responses": {
          "200": {
            "description": "the task ID.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "the task ID."
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "post-nodes-node-lxc-vmid-snapshot",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "description": "The (unique) ID of the VM.",
            "schema": {
              "type": "integer",
              "description": "The (unique) ID of the VM.",
              "minimum": 100,
              "maximum": 999999999,
              "format": "pve-vmid",
              "x-proxmox-typetext": "<integer> (100 - 999999999)"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "description": {
                    "type": "string",
                    "description": "A textual description or comment.",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "snapname": {
                    "type": "string",
                    "description": "The name of the snapshot.",
                    "maxLength": 40,
                    "format": "pve-configid",
                    "x-proxmox-typetext": "<string>"
                  }
                },
                "required": [
                  "snapname"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/vms/{vmid}",
                [
                  "VM.Snapshot"
                ]
              ]
            }
          ]
        }
      }
    },
    "/nodes/{node}/lxc/{vmid}/snapshot/{snapname}": {
      "delete": {
        "operationId": "delete-nodes-node-lxc-vmid-snapshot-snapname",
        "summary": "delsnapshot",
        "description": "Delete a LXC snapshot.",
        "tags": [
          "/nodes/{node}/lxc/{vmid}/snapshot/{snapname}"
        ],
        "responses": {
          "200": {
            "description": "the task ID.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "the task ID."
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "delete-nodes-node-lxc-vmid-snapshot-snapname",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "force",
            "in": "query",
            "required": false,
            "description": "For removal from config file, even if removing disk snapshots fails.",
            "schema": {
              "type": "boolean",
              "description": "For removal from config file, even if removing disk snapshots fails.",
              "x-proxmox-typetext": "<boolean>",
              "x-proxmox-optional": true
            }
          },
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "snapname",
            "in": "path",
            "required": true,
            "description": "The name of the snapshot.",
            "schema": {
              "type": "string",
              "description": "The name of the snapshot.",
              "maxLength": 40,
              "format": "pve-configid",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "description": "The (unique) ID of the VM.",
            "schema": {
              "type": "integer",
              "description": "The (unique) ID of the VM.",
              "minimum": 100,
              "maximum": 999999999,
              "format": "pve-vmid",
              "x-proxmox-typetext": "<integer> (100 - 999999999)"
            }
          }
        ],
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/vms/{vmid}",
                [
                  "VM.Snapshot"
                ]
              ]
            }
          ]
        }
      },
      "get": {
        "operationId": "get-nodes-node-lxc-vmid-snapshot-snapname",
        "summary": "snapshot_cmd_idx",
        "description": "",
        "tags": [
          "/nodes/{node}/lxc/{vmid}/snapshot/{snapname}"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  },
                  "x-proxmox-metadata": {
                    "links": [
                      {
                        "href": "{cmd}",
                        "rel": "child"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-nodes-node-lxc-vmid-snapshot-snapname",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "snapname",
            "in": "path",
            "required": true,
            "description": "The name of the snapshot.",
            "schema": {
              "type": "string",
              "description": "The name of the snapshot.",
              "maxLength": 40,
              "format": "pve-configid",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "description": "The (unique) ID of the VM.",
            "schema": {
              "type": "integer",
              "description": "The (unique) ID of the VM.",
              "minimum": 100,
              "maximum": 999999999,
              "format": "pve-vmid",
              "x-proxmox-typetext": "<integer> (100 - 999999999)"
            }
          }
        ],
        "security": [],
        "x-proxmox-permissions": {
          "all": [
            {
              "user": "all"
            }
          ]
        }
      }
    },
    "/nodes/{node}/lxc/{vmid}/snapshot/{snapname}/config": {
      "get": {
        "operationId": "get-nodes-node-lxc-vmid-snapshot-snapname-config",
        "summary": "get_snapshot_config",
        "description": "Get snapshot configuration",
        "tags": [
          "/nodes/{node}/lxc/{vmid}/snapshot/{snapname}/config"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-nodes-node-lxc-vmid-snapshot-snapname-config",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "snapname",
            "in": "path",
            "required": true,
            "description": "The name of the snapshot.",
            "schema": {
              "type": "string",
              "description": "The name of the snapshot.",
              "maxLength": 40,
              "format": "pve-configid",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "description": "The (unique) ID of the VM.",
            "schema": {
              "type": "integer",
              "description": "The (unique) ID of the VM.",
              "minimum": 100,
              "maximum": 999999999,
              "format": "pve-vmid",
              "x-proxmox-typetext": "<integer> (100 - 999999999)"
            }
          }
        ],
        "security": [],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/vms/{vmid}",
                [
                  "VM.Snapshot",
                  "VM.Snapshot.Rollback",
                  "VM.Audit"
                ],
                "any",
                1
              ]
            }
          ]
        }
      },
      "put": {
        "operationId": "put-nodes-node-lxc-vmid-snapshot-snapname-config",
        "summary": "update_snapshot_config",
        "description": "Update snapshot metadata.",
        "tags": [
          "/nodes/{node}/lxc/{vmid}/snapshot/{snapname}/config"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "put-nodes-node-lxc-vmid-snapshot-snapname-config",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "snapname",
            "in": "path",
            "required": true,
            "description": "The name of the snapshot.",
            "schema": {
              "type": "string",
              "description": "The name of the snapshot.",
              "maxLength": 40,
              "format": "pve-configid",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "description": "The (unique) ID of the VM.",
            "schema": {
              "type": "integer",
              "description": "The (unique) ID of the VM.",
              "minimum": 100,
              "maximum": 999999999,
              "format": "pve-vmid",
              "x-proxmox-typetext": "<integer> (100 - 999999999)"
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "description": {
                    "type": "string",
                    "description": "A textual description or comment.",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/vms/{vmid}",
                [
                  "VM.Snapshot"
                ]
              ]
            }
          ]
        }
      }
    },
    "/nodes/{node}/lxc/{vmid}/snapshot/{snapname}/rollback": {
      "post": {
        "operationId": "post-nodes-node-lxc-vmid-snapshot-snapname-rollback",
        "summary": "rollback",
        "description": "Rollback LXC state to specified snapshot.",
        "tags": [
          "/nodes/{node}/lxc/{vmid}/snapshot/{snapname}/rollback"
        ],
        "responses": {
          "200": {
            "description": "the task ID.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "the task ID."
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "post-nodes-node-lxc-vmid-snapshot-snapname-rollback",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "snapname",
            "in": "path",
            "required": true,
            "description": "The name of the snapshot.",
            "schema": {
              "type": "string",
              "description": "The name of the snapshot.",
              "maxLength": 40,
              "format": "pve-configid",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "description": "The (unique) ID of the VM.",
            "schema": {
              "type": "integer",
              "description": "The (unique) ID of the VM.",
              "minimum": 100,
              "maximum": 999999999,
              "format": "pve-vmid",
              "x-proxmox-typetext": "<integer> (100 - 999999999)"
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "start": {
                    "type": "boolean",
                    "description": "Whether the container should get started after rolling back successfully",
                    "default": false,
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/vms/{vmid}",
                [
                  "VM.Snapshot",
                  "VM.Snapshot.Rollback"
                ],
                "any",
                1
              ]
            }
          ]
        }
      }
    },
    "/nodes/{node}/lxc/{vmid}/spiceproxy": {
      "post": {
        "operationId": "post-nodes-node-lxc-vmid-spiceproxy",
        "summary": "spiceproxy",
        "description": "Returns a SPICE configuration to connect to the CT.",
        "tags": [
          "/nodes/{node}/lxc/{vmid}/spiceproxy"
        ],
        "responses": {
          "200": {
            "description": "Returned values can be directly passed to the 'remote-viewer' application.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Returned values can be directly passed to the 'remote-viewer' application.",
                  "properties": {
                    "host": {
                      "type": "string"
                    },
                    "password": {
                      "type": "string"
                    },
                    "proxy": {
                      "type": "string"
                    },
                    "tls-port": {
                      "type": "integer"
                    },
                    "type": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "host",
                    "password",
                    "proxy",
                    "tls-port",
                    "type"
                  ],
                  "additionalProperties": true
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "post-nodes-node-lxc-vmid-spiceproxy",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "description": "The (unique) ID of the VM.",
            "schema": {
              "type": "integer",
              "description": "The (unique) ID of the VM.",
              "minimum": 100,
              "maximum": 999999999,
              "format": "pve-vmid",
              "x-proxmox-typetext": "<integer> (100 - 999999999)"
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "proxy": {
                    "type": "string",
                    "description": "SPICE proxy server. This can be used by the client to specify the proxy server. All nodes in a cluster runs 'spiceproxy', so it is up to the client to choose one. By default, we return the node where the VM is currently running. As reasonable setting is to use same node you use to connect to the API (This is window.location.hostname for the JS GUI).",
                    "format": "address",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/vms/{vmid}",
                [
                  "VM.Console"
                ]
              ]
            }
          ]
        }
      }
    },
    "/nodes/{node}/lxc/{vmid}/status": {
      "get": {
        "operationId": "get-nodes-node-lxc-vmid-status",
        "summary": "vmcmdidx",
        "description": "Directory index",
        "tags": [
          "/nodes/{node}/lxc/{vmid}/status"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "subdir": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "subdir"
                    ]
                  },
                  "x-proxmox-metadata": {
                    "links": [
                      {
                        "href": "{subdir}",
                        "rel": "child"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-nodes-node-lxc-vmid-status",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "description": "The (unique) ID of the VM.",
            "schema": {
              "type": "integer",
              "description": "The (unique) ID of the VM.",
              "minimum": 100,
              "maximum": 999999999,
              "format": "pve-vmid",
              "x-proxmox-typetext": "<integer> (100 - 999999999)"
            }
          }
        ],
        "security": [],
        "x-proxmox-permissions": {
          "all": [
            {
              "user": "all"
            }
          ]
        }
      }
    },
    "/nodes/{node}/lxc/{vmid}/status/current": {
      "get": {
        "operationId": "get-nodes-node-lxc-vmid-status-current",
        "summary": "vm_status",
        "description": "Get virtual machine status.",
        "tags": [
          "/nodes/{node}/lxc/{vmid}/status/current"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "cpu": {
                      "type": "number",
                      "description": "Current CPU usage.",
                      "x-proxmox-optional": true
                    },
                    "cpus": {
                      "type": "number",
                      "description": "Maximum usable CPUs.",
                      "x-proxmox-optional": true
                    },
                    "disk": {
                      "type": "integer",
                      "description": "Root disk image space-usage in bytes.",
                      "minimum": 0,
                      "x-proxmox-optional": true,
                      "x-proxmox-metadata": {
                        "renderer": "bytes"
                      }
                    },
                    "diskread": {
                      "type": "integer",
                      "description": "The amount of bytes the guest read from it's block devices since the guest was started. (Note: This info is not available for all storage types.)",
                      "x-proxmox-optional": true,
                      "x-proxmox-metadata": {
                        "renderer": "bytes"
                      }
                    },
                    "diskwrite": {
                      "type": "integer",
                      "description": "The amount of bytes the guest wrote from it's block devices since the guest was started. (Note: This info is not available for all storage types.)",
                      "x-proxmox-optional": true,
                      "x-proxmox-metadata": {
                        "renderer": "bytes"
                      }
                    },
                    "ha": {
                      "type": "object",
                      "description": "HA manager service status."
                    },
                    "lock": {
                      "type": "string",
                      "description": "The current config lock, if any.",
                      "x-proxmox-optional": true
                    },
                    "maxdisk": {
                      "type": "integer",
                      "description": "Root disk image size in bytes.",
                      "x-proxmox-optional": true,
                      "x-proxmox-metadata": {
                        "renderer": "bytes"
                      }
                    },
                    "maxmem": {
                      "type": "integer",
                      "description": "Maximum memory in bytes.",
                      "x-proxmox-optional": true,
                      "x-proxmox-metadata": {
                        "renderer": "bytes"
                      }
                    },
                    "maxswap": {
                      "type": "integer",
                      "description": "Maximum SWAP memory in bytes.",
                      "x-proxmox-optional": true,
                      "x-proxmox-metadata": {
                        "renderer": "bytes"
                      }
                    },
                    "mem": {
                      "type": "integer",
                      "description": "Currently used memory in bytes.",
                      "x-proxmox-optional": true,
                      "x-proxmox-metadata": {
                        "renderer": "bytes"
                      }
                    },
                    "name": {
                      "type": "string",
                      "description": "Container name.",
                      "x-proxmox-optional": true
                    },
                    "netin": {
                      "type": "integer",
                      "description": "The amount of traffic in bytes that was sent to the guest over the network since it was started.",
                      "x-proxmox-optional": true,
                      "x-proxmox-metadata": {
                        "renderer": "bytes"
                      }
                    },
                    "netout": {
                      "type": "integer",
                      "description": "The amount of traffic in bytes that was sent from the guest over the network since it was started.",
                      "x-proxmox-optional": true,
                      "x-proxmox-metadata": {
                        "renderer": "bytes"
                      }
                    },
                    "pressurecpusome": {
                      "type": "number",
                      "description": "CPU Some pressure stall average over the last 10 seconds.",
                      "x-proxmox-optional": true
                    },
                    "pressureiofull": {
                      "type": "number",
                      "description": "IO Full pressure stall average over the last 10 seconds.",
                      "x-proxmox-optional": true
                    },
                    "pressureiosome": {
                      "type": "number",
                      "description": "IO Some pressure stall average over the last 10 seconds.",
                      "x-proxmox-optional": true
                    },
                    "pressurememoryfull": {
                      "type": "number",
                      "description": "Memory Full pressure stall average over the last 10 seconds.",
                      "x-proxmox-optional": true
                    },
                    "pressurememorysome": {
                      "type": "number",
                      "description": "Memory Some pressure stall average over the last 10 seconds.",
                      "x-proxmox-optional": true
                    },
                    "status": {
                      "type": "string",
                      "description": "LXC Container status.",
                      "enum": [
                        "stopped",
                        "running"
                      ]
                    },
                    "tags": {
                      "type": "string",
                      "description": "The current configured tags, if any.",
                      "x-proxmox-optional": true
                    },
                    "template": {
                      "type": "boolean",
                      "description": "Determines if the guest is a template.",
                      "default": false,
                      "x-proxmox-optional": true
                    },
                    "uptime": {
                      "type": "integer",
                      "description": "Uptime in seconds.",
                      "x-proxmox-optional": true,
                      "x-proxmox-metadata": {
                        "renderer": "duration"
                      }
                    },
                    "vmid": {
                      "type": "integer",
                      "description": "The (unique) ID of the VM.",
                      "minimum": 100,
                      "maximum": 999999999,
                      "format": "pve-vmid"
                    }
                  },
                  "required": [
                    "ha",
                    "status",
                    "vmid"
                  ]
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-nodes-node-lxc-vmid-status-current",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "description": "The (unique) ID of the VM.",
            "schema": {
              "type": "integer",
              "description": "The (unique) ID of the VM.",
              "minimum": 100,
              "maximum": 999999999,
              "format": "pve-vmid",
              "x-proxmox-typetext": "<integer> (100 - 999999999)"
            }
          }
        ],
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/vms/{vmid}",
                [
                  "VM.Audit"
                ]
              ]
            }
          ]
        }
      }
    },
    "/nodes/{node}/lxc/{vmid}/status/reboot": {
      "post": {
        "operationId": "post-nodes-node-lxc-vmid-status-reboot",
        "summary": "vm_reboot",
        "description": "Reboot the container by shutting it down, and starting it again. Applies pending changes.",
        "tags": [
          "/nodes/{node}/lxc/{vmid}/status/reboot"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "post-nodes-node-lxc-vmid-status-reboot",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "description": "The (unique) ID of the VM.",
            "schema": {
              "type": "integer",
              "description": "The (unique) ID of the VM.",
              "minimum": 100,
              "maximum": 999999999,
              "format": "pve-vmid",
              "x-proxmox-typetext": "<integer> (100 - 999999999)"
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "timeout": {
                    "type": "integer",
                    "description": "Wait maximal timeout seconds for the shutdown.",
                    "minimum": 0,
                    "x-proxmox-typetext": "<integer> (0 - N)",
                    "x-proxmox-optional": true
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/vms/{vmid}",
                [
                  "VM.PowerMgmt"
                ]
              ]
            }
          ]
        }
      }
    },
    "/nodes/{node}/lxc/{vmid}/status/resume": {
      "post": {
        "operationId": "post-nodes-node-lxc-vmid-status-resume",
        "summary": "vm_resume",
        "description": "Resume the container.",
        "tags": [
          "/nodes/{node}/lxc/{vmid}/status/resume"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "post-nodes-node-lxc-vmid-status-resume",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "description": "The (unique) ID of the VM.",
            "schema": {
              "type": "integer",
              "description": "The (unique) ID of the VM.",
              "minimum": 100,
              "maximum": 999999999,
              "format": "pve-vmid",
              "x-proxmox-typetext": "<integer> (100 - 999999999)"
            }
          }
        ],
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/vms/{vmid}",
                [
                  "VM.PowerMgmt"
                ]
              ]
            }
          ]
        }
      }
    },
    "/nodes/{node}/lxc/{vmid}/status/shutdown": {
      "post": {
        "operationId": "post-nodes-node-lxc-vmid-status-shutdown",
        "summary": "vm_shutdown",
        "description": "Shutdown the container. This will trigger a clean shutdown of the container, see lxc-stop(1) for details.",
        "tags": [
          "/nodes/{node}/lxc/{vmid}/status/shutdown"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "post-nodes-node-lxc-vmid-status-shutdown",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "description": "The (unique) ID of the VM.",
            "schema": {
              "type": "integer",
              "description": "The (unique) ID of the VM.",
              "minimum": 100,
              "maximum": 999999999,
              "format": "pve-vmid",
              "x-proxmox-typetext": "<integer> (100 - 999999999)"
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "forceStop": {
                    "type": "boolean",
                    "description": "Make sure the Container stops.",
                    "default": false,
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "timeout": {
                    "type": "integer",
                    "description": "Wait maximal timeout seconds.",
                    "default": 60,
                    "minimum": 0,
                    "x-proxmox-typetext": "<integer> (0 - N)",
                    "x-proxmox-optional": true
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/vms/{vmid}",
                [
                  "VM.PowerMgmt"
                ]
              ]
            }
          ]
        }
      }
    },
    "/nodes/{node}/lxc/{vmid}/status/start": {
      "post": {
        "operationId": "post-nodes-node-lxc-vmid-status-start",
        "summary": "vm_start",
        "description": "Start the container.",
        "tags": [
          "/nodes/{node}/lxc/{vmid}/status/start"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "post-nodes-node-lxc-vmid-status-start",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "description": "The (unique) ID of the VM.",
            "schema": {
              "type": "integer",
              "description": "The (unique) ID of the VM.",
              "minimum": 100,
              "maximum": 999999999,
              "format": "pve-vmid",
              "x-proxmox-typetext": "<integer> (100 - 999999999)"
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "debug": {
                    "type": "boolean",
                    "description": "If set, enables very verbose debug log-level on start.",
                    "default": false,
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "skiplock": {
                    "type": "boolean",
                    "description": "Ignore locks - only root is allowed to use this option.",
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/vms/{vmid}",
                [
                  "VM.PowerMgmt"
                ]
              ]
            }
          ]
        }
      }
    },
    "/nodes/{node}/lxc/{vmid}/status/stop": {
      "post": {
        "operationId": "post-nodes-node-lxc-vmid-status-stop",
        "summary": "vm_stop",
        "description": "Stop the container. This will abruptly stop all processes running in the container.",
        "tags": [
          "/nodes/{node}/lxc/{vmid}/status/stop"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "post-nodes-node-lxc-vmid-status-stop",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "description": "The (unique) ID of the VM.",
            "schema": {
              "type": "integer",
              "description": "The (unique) ID of the VM.",
              "minimum": 100,
              "maximum": 999999999,
              "format": "pve-vmid",
              "x-proxmox-typetext": "<integer> (100 - 999999999)"
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "overrule-shutdown": {
                    "type": "boolean",
                    "description": "Try to abort active 'vzshutdown' tasks before stopping.",
                    "default": false,
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "skiplock": {
                    "type": "boolean",
                    "description": "Ignore locks - only root is allowed to use this option.",
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/vms/{vmid}",
                [
                  "VM.PowerMgmt"
                ]
              ]
            }
          ]
        }
      }
    },
    "/nodes/{node}/lxc/{vmid}/status/suspend": {
      "post": {
        "operationId": "post-nodes-node-lxc-vmid-status-suspend",
        "summary": "vm_suspend",
        "description": "Suspend the container. This is experimental.",
        "tags": [
          "/nodes/{node}/lxc/{vmid}/status/suspend"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "post-nodes-node-lxc-vmid-status-suspend",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "description": "The (unique) ID of the VM.",
            "schema": {
              "type": "integer",
              "description": "The (unique) ID of the VM.",
              "minimum": 100,
              "maximum": 999999999,
              "format": "pve-vmid",
              "x-proxmox-typetext": "<integer> (100 - 999999999)"
            }
          }
        ],
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/vms/{vmid}",
                [
                  "VM.PowerMgmt"
                ]
              ]
            }
          ]
        }
      }
    },
    "/nodes/{node}/lxc/{vmid}/template": {
      "post": {
        "operationId": "post-nodes-node-lxc-vmid-template",
        "summary": "template",
        "description": "Create a Template.",
        "tags": [
          "/nodes/{node}/lxc/{vmid}/template"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "post-nodes-node-lxc-vmid-template",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "description": "The (unique) ID of the VM.",
            "schema": {
              "type": "integer",
              "description": "The (unique) ID of the VM.",
              "minimum": 100,
              "maximum": 999999999,
              "format": "pve-vmid",
              "x-proxmox-typetext": "<integer> (100 - 999999999)"
            }
          }
        ],
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "description": "You need 'VM.Allocate' permissions on /vms/{vmid}",
              "check": [
                "perm",
                "/vms/{vmid}",
                [
                  "VM.Allocate"
                ]
              ]
            }
          ]
        }
      }
    },
    "/nodes/{node}/lxc/{vmid}/termproxy": {
      "post": {
        "operationId": "post-nodes-node-lxc-vmid-termproxy",
        "summary": "termproxy",
        "description": "Creates a TCP proxy connection.",
        "tags": [
          "/nodes/{node}/lxc/{vmid}/termproxy"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "port": {
                      "type": "integer"
                    },
                    "ticket": {
                      "type": "string"
                    },
                    "upid": {
                      "type": "string"
                    },
                    "user": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "port",
                    "ticket",
                    "upid",
                    "user"
                  ],
                  "additionalProperties": false
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "post-nodes-node-lxc-vmid-termproxy",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "description": "The (unique) ID of the VM.",
            "schema": {
              "type": "integer",
              "description": "The (unique) ID of the VM.",
              "minimum": 100,
              "maximum": 999999999,
              "format": "pve-vmid",
              "x-proxmox-typetext": "<integer> (100 - 999999999)"
            }
          }
        ],
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/vms/{vmid}",
                [
                  "VM.Console"
                ]
              ]
            }
          ]
        }
      }
    },
    "/nodes/{node}/lxc/{vmid}/vncproxy": {
      "post": {
        "operationId": "post-nodes-node-lxc-vmid-vncproxy",
        "summary": "vncproxy",
        "description": "Creates a TCP VNC proxy connections.",
        "tags": [
          "/nodes/{node}/lxc/{vmid}/vncproxy"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "cert": {
                      "type": "string"
                    },
                    "port": {
                      "type": "integer"
                    },
                    "ticket": {
                      "type": "string"
                    },
                    "upid": {
                      "type": "string"
                    },
                    "user": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "cert",
                    "port",
                    "ticket",
                    "upid",
                    "user"
                  ],
                  "additionalProperties": false
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "post-nodes-node-lxc-vmid-vncproxy",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "description": "The (unique) ID of the VM.",
            "schema": {
              "type": "integer",
              "description": "The (unique) ID of the VM.",
              "minimum": 100,
              "maximum": 999999999,
              "format": "pve-vmid",
              "x-proxmox-typetext": "<integer> (100 - 999999999)"
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "height": {
                    "type": "integer",
                    "description": "sets the height of the console in pixels.",
                    "minimum": 16,
                    "maximum": 2160,
                    "x-proxmox-typetext": "<integer> (16 - 2160)",
                    "x-proxmox-optional": true
                  },
                  "websocket": {
                    "type": "boolean",
                    "description": "use websocket instead of standard VNC.",
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "width": {
                    "type": "integer",
                    "description": "sets the width of the console in pixels.",
                    "minimum": 16,
                    "maximum": 4096,
                    "x-proxmox-typetext": "<integer> (16 - 4096)",
                    "x-proxmox-optional": true
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/vms/{vmid}",
                [
                  "VM.Console"
                ]
              ]
            }
          ]
        }
      }
    },
    "/nodes/{node}/lxc/{vmid}/vncwebsocket": {
      "get": {
        "operationId": "get-nodes-node-lxc-vmid-vncwebsocket",
        "summary": "vncwebsocket",
        "description": "Opens a weksocket for VNC traffic.",
        "tags": [
          "/nodes/{node}/lxc/{vmid}/vncwebsocket"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "port": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "port"
                  ]
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-nodes-node-lxc-vmid-vncwebsocket",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "port",
            "in": "query",
            "required": true,
            "description": "Port number returned by previous vncproxy call.",
            "schema": {
              "type": "integer",
              "description": "Port number returned by previous vncproxy call.",
              "minimum": 5900,
              "maximum": 5999,
              "x-proxmox-typetext": "<integer> (5900 - 5999)"
            }
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "description": "The (unique) ID of the VM.",
            "schema": {
              "type": "integer",
              "description": "The (unique) ID of the VM.",
              "minimum": 100,
              "maximum": 999999999,
              "format": "pve-vmid",
              "x-proxmox-typetext": "<integer> (100 - 999999999)"
            }
          },
          {
            "name": "vncticket",
            "in": "query",
            "required": true,
            "description": "Ticket from previous call to vncproxy.",
            "schema": {
              "type": "string",
              "description": "Ticket from previous call to vncproxy.",
              "maxLength": 512,
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "security": [],
        "x-proxmox-permissions": {
          "all": [
            {
              "description": "You also need to pass a valid ticket (vncticket).",
              "check": [
                "perm",
                "/vms/{vmid}",
                [
                  "VM.Console"
                ]
              ]
            }
          ]
        }
      }
    },
    "/nodes/{node}/migrateall": {
      "post": {
        "operationId": "post-nodes-node-migrateall",
        "summary": "migrateall",
        "description": "Migrate all VMs and Containers.",
        "tags": [
          "/nodes/{node}/migrateall"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "post-nodes-node-migrateall",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "maxworkers": {
                    "type": "integer",
                    "description": "Maximal number of parallel migration job. If not set, uses'max_workers' from datacenter.cfg. One of both must be set!",
                    "minimum": 1,
                    "x-proxmox-typetext": "<integer> (1 - N)",
                    "x-proxmox-optional": true
                  },
                  "target": {
                    "type": "string",
                    "description": "Target node.",
                    "format": "pve-node",
                    "x-proxmox-typetext": "<string>"
                  },
                  "vms": {
                    "type": "string",
                    "description": "Only consider Guests with these IDs.",
                    "format": "pve-vmid-list",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "with-local-disks": {
                    "type": "boolean",
                    "description": "Enable live storage migration for local disk",
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  }
                },
                "required": [
                  "target"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "description": "The 'VM.Migrate' permission is required on '/' or on '/vms/<ID>' for each ID passed via the 'vms' parameter.",
              "user": "all"
            }
          ]
        }
      }
    },
    "/nodes/{node}/netstat": {
      "get": {
        "operationId": "get-nodes-node-netstat",
        "summary": "netstat",
        "description": "Read tap/vm network device interface counters",
        "tags": [
          "/nodes/{node}/netstat"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  }
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-nodes-node-netstat",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "security": [],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/nodes/{node}",
                [
                  "Sys.Audit"
                ]
              ]
            }
          ]
        }
      }
    },
    "/nodes/{node}/network": {
      "delete": {
        "operationId": "delete-nodes-node-network",
        "summary": "revert_network_changes",
        "description": "Revert network configuration changes.",
        "tags": [
          "/nodes/{node}/network"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "delete-nodes-node-network",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/nodes/{node}",
                [
                  "Sys.Modify"
                ]
              ]
            }
          ]
        }
      },
      "get": {
        "operationId": "get-nodes-node-network",
        "summary": "index",
        "description": "List available networks",
        "tags": [
          "/nodes/{node}/network"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "active": {
                        "type": "boolean",
                        "description": "Set to true if the interface is active.",
                        "x-proxmox-optional": true
                      },
                      "address": {
                        "type": "string",
                        "description": "IP address.",
                        "format": "ipv4",
                        "x-proxmox-requires": [
                          "netmask"
                        ],
                        "x-proxmox-optional": true
                      },
                      "address6": {
                        "type": "string",
                        "description": "IP address.",
                        "format": "ipv6",
                        "x-proxmox-requires": [
                          "netmask6"
                        ],
                        "x-proxmox-optional": true
                      },
                      "autostart": {
                        "type": "boolean",
                        "description": "Automatically start interface on boot.",
                        "x-proxmox-optional": true
                      },
                      "bond-primary": {
                        "type": "string",
                        "description": "Specify the primary interface for active-backup bond.",
                        "format": "pve-iface",
                        "x-proxmox-optional": true
                      },
                      "bond_mode": {
                        "type": "string",
                        "description": "Bonding mode.",
                        "enum": [
                          "balance-rr",
                          "active-backup",
                          "balance-xor",
                          "broadcast",
                          "802.3ad",
                          "balance-tlb",
                          "balance-alb",
                          "balance-slb",
                          "lacp-balance-slb",
                          "lacp-balance-tcp"
                        ],
                        "x-proxmox-optional": true
                      },
                      "bond_xmit_hash_policy": {
                        "type": "string",
                        "description": "Selects the transmit hash policy to use for slave selection in balance-xor and 802.3ad modes.",
                        "enum": [
                          "layer2",
                          "layer2+3",
                          "layer3+4"
                        ],
                        "x-proxmox-optional": true
                      },
                      "bridge-access": {
                        "type": "integer",
                        "description": "The bridge port access VLAN.",
                        "x-proxmox-optional": true
                      },
                      "bridge-arp-nd-suppress": {
                        "type": "boolean",
                        "description": "Bridge port ARP/ND suppress flag.",
                        "x-proxmox-optional": true
                      },
                      "bridge-learning": {
                        "type": "boolean",
                        "description": "Bridge port learning flag.",
                        "x-proxmox-optional": true
                      },
                      "bridge-multicast-flood": {
                        "type": "boolean",
                        "description": "Bridge port multicast flood flag.",
                        "x-proxmox-optional": true
                      },
                      "bridge-unicast-flood": {
                        "type": "boolean",
                        "description": "Bridge port unicast flood flag.",
                        "x-proxmox-optional": true
                      },
                      "bridge_ports": {
                        "type": "string",
                        "description": "Specify the interfaces you want to add to your bridge.",
                        "format": "pve-iface-list",
                        "x-proxmox-optional": true
                      },
                      "bridge_vids": {
                        "type": "string",
                        "description": "Specify the allowed VLANs. For example: '2 4 100-200'. Only used if the bridge is VLAN aware.",
                        "format": "pve-vlan-id-or-range-list",
                        "x-proxmox-optional": true
                      },
                      "bridge_vlan_aware": {
                        "type": "boolean",
                        "description": "Enable bridge vlan support.",
                        "x-proxmox-optional": true
                      },
                      "cidr": {
                        "type": "string",
                        "description": "IPv4 CIDR.",
                        "format": "CIDRv4",
                        "x-proxmox-optional": true
                      },
                      "cidr6": {
                        "type": "string",
                        "description": "IPv6 CIDR.",
                        "format": "CIDRv6",
                        "x-proxmox-optional": true
                      },
                      "comments": {
                        "type": "string",
                        "description": "Comments",
                        "x-proxmox-optional": true
                      },
                      "comments6": {
                        "type": "string",
                        "description": "Comments",
                        "x-proxmox-optional": true
                      },
                      "exists": {
                        "type": "boolean",
                        "description": "Set to true if the interface physically exists.",
                        "x-proxmox-optional": true
                      },
                      "families": {
                        "type": "array",
                        "description": "The network families.",
                        "items": {
                          "type": "string",
                          "description": "A network family.",
                          "enum": [
                            "inet",
                            "inet6"
                          ]
                        },
                        "x-proxmox-optional": true
                      },
                      "gateway": {
                        "type": "string",
                        "description": "Default gateway address.",
                        "format": "ipv4",
                        "x-proxmox-optional": true
                      },
                      "gateway6": {
                        "type": "string",
                        "description": "Default ipv6 gateway address.",
                        "format": "ipv6",
                        "x-proxmox-optional": true
                      },
                      "iface": {
                        "type": "string",
                        "description": "Network interface name.",
                        "minLength": 2,
                        "maxLength": 20,
                        "format": "pve-iface"
                      },
                      "link-type": {
                        "type": "string",
                        "description": "The link type.",
                        "x-proxmox-optional": true
                      },
                      "method": {
                        "type": "string",
                        "description": "The network configuration method for IPv4.",
                        "enum": [
                          "loopback",
                          "dhcp",
                          "manual",
                          "static",
                          "auto"
                        ],
                        "x-proxmox-optional": true
                      },
                      "method6": {
                        "type": "string",
                        "description": "The network configuration method for IPv6.",
                        "enum": [
                          "loopback",
                          "dhcp",
                          "manual",
                          "static",
                          "auto"
                        ],
                        "x-proxmox-optional": true
                      },
                      "mtu": {
                        "type": "integer",
                        "description": "MTU.",
                        "minimum": 1280,
                        "maximum": 65520,
                        "x-proxmox-optional": true
                      },
                      "netmask": {
                        "type": "string",
                        "description": "Network mask.",
                        "format": "ipv4mask",
                        "x-proxmox-requires": [
                          "address"
                        ],
                        "x-proxmox-optional": true
                      },
                      "netmask6": {
                        "type": "integer",
                        "description": "Network mask.",
                        "minimum": 0,
                        "maximum": 128,
                        "x-proxmox-requires": [
                          "address6"
                        ],
                        "x-proxmox-optional": true
                      },
                      "options": {
                        "type": "array",
                        "description": "A list of additional interface options for IPv4.",
                        "items": {
                          "type": "string",
                          "description": "An interface property."
                        },
                        "x-proxmox-optional": true
                      },
                      "options6": {
                        "type": "array",
                        "description": "A list of additional interface options for IPv6.",
                        "items": {
                          "type": "string",
                          "description": "An interface property."
                        },
                        "x-proxmox-optional": true
                      },
                      "ovs_bonds": {
                        "type": "string",
                        "description": "Specify the interfaces used by the bonding device.",
                        "format": "pve-iface-list",
                        "x-proxmox-optional": true
                      },
                      "ovs_bridge": {
                        "type": "string",
                        "description": "The OVS bridge associated with a OVS port. This is required when you create an OVS port.",
                        "format": "pve-iface",
                        "x-proxmox-optional": true
                      },
                      "ovs_options": {
                        "type": "string",
                        "description": "OVS interface options.",
                        "maxLength": 1024,
                        "x-proxmox-optional": true
                      },
                      "ovs_ports": {
                        "type": "string",
                        "description": "Specify the interfaces you want to add to your bridge.",
                        "format": "pve-iface-list",
                        "x-proxmox-optional": true
                      },
                      "ovs_tag": {
                        "type": "integer",
                        "description": "Specify a VLan tag (used by OVSPort, OVSIntPort, OVSBond)",
                        "minimum": 1,
                        "maximum": 4094,
                        "x-proxmox-optional": true
                      },
                      "priority": {
                        "type": "integer",
                        "description": "The order of the interface.",
                        "x-proxmox-optional": true
                      },
                      "slaves": {
                        "type": "string",
                        "description": "Specify the interfaces used by the bonding device.",
                        "format": "pve-iface-list",
                        "x-proxmox-optional": true
                      },
                      "type": {
                        "type": "string",
                        "description": "Network interface type",
                        "enum": [
                          "bridge",
                          "bond",
                          "eth",
                          "alias",
                          "vlan",
                          "fabric",
                          "OVSBridge",
                          "OVSBond",
                          "OVSPort",
                          "OVSIntPort",
                          "vnet",
                          "unknown"
                        ]
                      },
                      "uplink-id": {
                        "type": "string",
                        "description": "The uplink ID.",
                        "x-proxmox-optional": true
                      },
                      "vlan-id": {
                        "type": "integer",
                        "description": "vlan-id for a custom named vlan interface (ifupdown2 only).",
                        "minimum": 1,
                        "maximum": 4094,
                        "x-proxmox-optional": true
                      },
                      "vlan-protocol": {
                        "type": "string",
                        "description": "The VLAN protocol.",
                        "enum": [
                          "802.1ad",
                          "802.1q"
                        ],
                        "x-proxmox-optional": true
                      },
                      "vlan-raw-device": {
                        "type": "string",
                        "description": "Specify the raw interface for the vlan interface.",
                        "format": "pve-iface",
                        "x-proxmox-optional": true
                      },
                      "vxlan-id": {
                        "type": "integer",
                        "description": "The VXLAN ID.",
                        "x-proxmox-optional": true
                      },
                      "vxlan-local-tunnelip": {
                        "type": "string",
                        "description": "The VXLAN local tunnel IP.",
                        "x-proxmox-optional": true
                      },
                      "vxlan-physdev": {
                        "type": "string",
                        "description": "The physical device for the VXLAN tunnel.",
                        "x-proxmox-optional": true
                      },
                      "vxlan-svcnodeip": {
                        "type": "string",
                        "description": "The VXLAN SVC node IP.",
                        "x-proxmox-optional": true
                      }
                    },
                    "required": [
                      "iface",
                      "type"
                    ]
                  },
                  "x-proxmox-metadata": {
                    "links": [
                      {
                        "href": "{iface}",
                        "rel": "child"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-nodes-node-network",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "description": "Only list specific interface types.",
            "schema": {
              "type": "string",
              "description": "Only list specific interface types.",
              "enum": [
                "bridge",
                "bond",
                "eth",
                "alias",
                "vlan",
                "fabric",
                "OVSBridge",
                "OVSBond",
                "OVSPort",
                "OVSIntPort",
                "vnet",
                "any_bridge",
                "any_local_bridge",
                "include_sdn"
              ],
              "x-proxmox-optional": true
            }
          }
        ],
        "security": [],
        "x-proxmox-permissions": {
          "all": [
            {
              "user": "all"
            }
          ]
        }
      },
      "post": {
        "operationId": "post-nodes-node-network",
        "summary": "create_network",
        "description": "Create network device configuration",
        "tags": [
          "/nodes/{node}/network"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "post-nodes-node-network",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "address": {
                    "type": "string",
                    "description": "IP address.",
                    "format": "ipv4",
                    "x-proxmox-requires": [
                      "netmask"
                    ],
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "address6": {
                    "type": "string",
                    "description": "IP address.",
                    "format": "ipv6",
                    "x-proxmox-requires": [
                      "netmask6"
                    ],
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "autostart": {
                    "type": "boolean",
                    "description": "Automatically start interface on boot.",
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "bond-primary": {
                    "type": "string",
                    "description": "Specify the primary interface for active-backup bond.",
                    "format": "pve-iface",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "bond_mode": {
                    "type": "string",
                    "description": "Bonding mode.",
                    "enum": [
                      "balance-rr",
                      "active-backup",
                      "balance-xor",
                      "broadcast",
                      "802.3ad",
                      "balance-tlb",
                      "balance-alb",
                      "balance-slb",
                      "lacp-balance-slb",
                      "lacp-balance-tcp"
                    ],
                    "x-proxmox-optional": true
                  },
                  "bond_xmit_hash_policy": {
                    "type": "string",
                    "description": "Selects the transmit hash policy to use for slave selection in balance-xor and 802.3ad modes.",
                    "enum": [
                      "layer2",
                      "layer2+3",
                      "layer3+4"
                    ],
                    "x-proxmox-optional": true
                  },
                  "bridge_ports": {
                    "type": "string",
                    "description": "Specify the interfaces you want to add to your bridge.",
                    "format": "pve-iface-list",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "bridge_vids": {
                    "type": "string",
                    "description": "Specify the allowed VLANs. For example: '2 4 100-200'. Only used if the bridge is VLAN aware.",
                    "format": "pve-vlan-id-or-range-list",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "bridge_vlan_aware": {
                    "type": "boolean",
                    "description": "Enable bridge vlan support.",
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "cidr": {
                    "type": "string",
                    "description": "IPv4 CIDR.",
                    "format": "CIDRv4",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "cidr6": {
                    "type": "string",
                    "description": "IPv6 CIDR.",
                    "format": "CIDRv6",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "comments": {
                    "type": "string",
                    "description": "Comments",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "comments6": {
                    "type": "string",
                    "description": "Comments",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "gateway": {
                    "type": "string",
                    "description": "Default gateway address.",
                    "format": "ipv4",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "gateway6": {
                    "type": "string",
                    "description": "Default ipv6 gateway address.",
                    "format": "ipv6",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "iface": {
                    "type": "string",
                    "description": "Network interface name.",
                    "minLength": 2,
                    "maxLength": 20,
                    "format": "pve-iface",
                    "x-proxmox-typetext": "<string>"
                  },
                  "mtu": {
                    "type": "integer",
                    "description": "MTU.",
                    "minimum": 1280,
                    "maximum": 65520,
                    "x-proxmox-typetext": "<integer> (1280 - 65520)",
                    "x-proxmox-optional": true
                  },
                  "netmask": {
                    "type": "string",
                    "description": "Network mask.",
                    "format": "ipv4mask",
                    "x-proxmox-requires": [
                      "address"
                    ],
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "netmask6": {
                    "type": "integer",
                    "description": "Network mask.",
                    "minimum": 0,
                    "maximum": 128,
                    "x-proxmox-requires": [
                      "address6"
                    ],
                    "x-proxmox-typetext": "<integer> (0 - 128)",
                    "x-proxmox-optional": true
                  },
                  "ovs_bonds": {
                    "type": "string",
                    "description": "Specify the interfaces used by the bonding device.",
                    "format": "pve-iface-list",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "ovs_bridge": {
                    "type": "string",
                    "description": "The OVS bridge associated with a OVS port. This is required when you create an OVS port.",
                    "format": "pve-iface",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "ovs_options": {
                    "type": "string",
                    "description": "OVS interface options.",
                    "maxLength": 1024,
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "ovs_ports": {
                    "type": "string",
                    "description": "Specify the interfaces you want to add to your bridge.",
                    "format": "pve-iface-list",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "ovs_tag": {
                    "type": "integer",
                    "description": "Specify a VLan tag (used by OVSPort, OVSIntPort, OVSBond)",
                    "minimum": 1,
                    "maximum": 4094,
                    "x-proxmox-typetext": "<integer> (1 - 4094)",
                    "x-proxmox-optional": true
                  },
                  "slaves": {
                    "type": "string",
                    "description": "Specify the interfaces used by the bonding device.",
                    "format": "pve-iface-list",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "type": {
                    "type": "string",
                    "description": "Network interface type",
                    "enum": [
                      "bridge",
                      "bond",
                      "eth",
                      "alias",
                      "vlan",
                      "fabric",
                      "OVSBridge",
                      "OVSBond",
                      "OVSPort",
                      "OVSIntPort",
                      "vnet",
                      "unknown"
                    ]
                  },
                  "vlan-id": {
                    "type": "integer",
                    "description": "vlan-id for a custom named vlan interface (ifupdown2 only).",
                    "minimum": 1,
                    "maximum": 4094,
                    "x-proxmox-typetext": "<integer> (1 - 4094)",
                    "x-proxmox-optional": true
                  },
                  "vlan-raw-device": {
                    "type": "string",
                    "description": "Specify the raw interface for the vlan interface.",
                    "format": "pve-iface",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  }
                },
                "required": [
                  "iface",
                  "type"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/nodes/{node}",
                [
                  "Sys.Modify"
                ]
              ]
            }
          ]
        }
      },
      "put": {
        "operationId": "put-nodes-node-network",
        "summary": "reload_network_config",
        "description": "Reload network configuration",
        "tags": [
          "/nodes/{node}/network"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "put-nodes-node-network",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "regenerate-frr": {
                    "type": "boolean",
                    "description": "Whether FRR config generation should get skipped or not.",
                    "default": false,
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/nodes/{node}",
                [
                  "Sys.Modify"
                ]
              ]
            }
          ]
        }
      }
    },
    "/nodes/{node}/network/{iface}": {
      "delete": {
        "operationId": "delete-nodes-node-network-iface",
        "summary": "delete_network",
        "description": "Delete network device configuration",
        "tags": [
          "/nodes/{node}/network/{iface}"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "delete-nodes-node-network-iface",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "iface",
            "in": "path",
            "required": true,
            "description": "Network interface name.",
            "schema": {
              "type": "string",
              "description": "Network interface name.",
              "minLength": 2,
              "maxLength": 20,
              "format": "pve-iface",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/nodes/{node}",
                [
                  "Sys.Modify"
                ]
              ]
            }
          ]
        }
      },
      "get": {
        "operationId": "get-nodes-node-network-iface",
        "summary": "network_config",
        "description": "Read network device configuration",
        "tags": [
          "/nodes/{node}/network/{iface}"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "method": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "method",
                    "type"
                  ]
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-nodes-node-network-iface",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "iface",
            "in": "path",
            "required": true,
            "description": "Network interface name.",
            "schema": {
              "type": "string",
              "description": "Network interface name.",
              "minLength": 2,
              "maxLength": 20,
              "format": "pve-iface",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "security": [],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/nodes/{node}",
                [
                  "Sys.Audit"
                ]
              ]
            }
          ]
        }
      },
      "put": {
        "operationId": "put-nodes-node-network-iface",
        "summary": "update_network",
        "description": "Update network device configuration",
        "tags": [
          "/nodes/{node}/network/{iface}"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "put-nodes-node-network-iface",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "iface",
            "in": "path",
            "required": true,
            "description": "Network interface name.",
            "schema": {
              "type": "string",
              "description": "Network interface name.",
              "minLength": 2,
              "maxLength": 20,
              "format": "pve-iface",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "address": {
                    "type": "string",
                    "description": "IP address.",
                    "format": "ipv4",
                    "x-proxmox-requires": [
                      "netmask"
                    ],
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "address6": {
                    "type": "string",
                    "description": "IP address.",
                    "format": "ipv6",
                    "x-proxmox-requires": [
                      "netmask6"
                    ],
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "autostart": {
                    "type": "boolean",
                    "description": "Automatically start interface on boot.",
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "bond-primary": {
                    "type": "string",
                    "description": "Specify the primary interface for active-backup bond.",
                    "format": "pve-iface",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "bond_mode": {
                    "type": "string",
                    "description": "Bonding mode.",
                    "enum": [
                      "balance-rr",
                      "active-backup",
                      "balance-xor",
                      "broadcast",
                      "802.3ad",
                      "balance-tlb",
                      "balance-alb",
                      "balance-slb",
                      "lacp-balance-slb",
                      "lacp-balance-tcp"
                    ],
                    "x-proxmox-optional": true
                  },
                  "bond_xmit_hash_policy": {
                    "type": "string",
                    "description": "Selects the transmit hash policy to use for slave selection in balance-xor and 802.3ad modes.",
                    "enum": [
                      "layer2",
                      "layer2+3",
                      "layer3+4"
                    ],
                    "x-proxmox-optional": true
                  },
                  "bridge_ports": {
                    "type": "string",
                    "description": "Specify the interfaces you want to add to your bridge.",
                    "format": "pve-iface-list",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "bridge_vids": {
                    "type": "string",
                    "description": "Specify the allowed VLANs. For example: '2 4 100-200'. Only used if the bridge is VLAN aware.",
                    "format": "pve-vlan-id-or-range-list",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "bridge_vlan_aware": {
                    "type": "boolean",
                    "description": "Enable bridge vlan support.",
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "cidr": {
                    "type": "string",
                    "description": "IPv4 CIDR.",
                    "format": "CIDRv4",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "cidr6": {
                    "type": "string",
                    "description": "IPv6 CIDR.",
                    "format": "CIDRv6",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "comments": {
                    "type": "string",
                    "description": "Comments",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "comments6": {
                    "type": "string",
                    "description": "Comments",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "delete": {
                    "type": "string",
                    "description": "A list of settings you want to delete.",
                    "format": "pve-configid-list",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "gateway": {
                    "type": "string",
                    "description": "Default gateway address.",
                    "format": "ipv4",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "gateway6": {
                    "type": "string",
                    "description": "Default ipv6 gateway address.",
                    "format": "ipv6",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "mtu": {
                    "type": "integer",
                    "description": "MTU.",
                    "minimum": 1280,
                    "maximum": 65520,
                    "x-proxmox-typetext": "<integer> (1280 - 65520)",
                    "x-proxmox-optional": true
                  },
                  "netmask": {
                    "type": "string",
                    "description": "Network mask.",
                    "format": "ipv4mask",
                    "x-proxmox-requires": [
                      "address"
                    ],
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "netmask6": {
                    "type": "integer",
                    "description": "Network mask.",
                    "minimum": 0,
                    "maximum": 128,
                    "x-proxmox-requires": [
                      "address6"
                    ],
                    "x-proxmox-typetext": "<integer> (0 - 128)",
                    "x-proxmox-optional": true
                  },
                  "ovs_bonds": {
                    "type": "string",
                    "description": "Specify the interfaces used by the bonding device.",
                    "format": "pve-iface-list",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "ovs_bridge": {
                    "type": "string",
                    "description": "The OVS bridge associated with a OVS port. This is required when you create an OVS port.",
                    "format": "pve-iface",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "ovs_options": {
                    "type": "string",
                    "description": "OVS interface options.",
                    "maxLength": 1024,
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "ovs_ports": {
                    "type": "string",
                    "description": "Specify the interfaces you want to add to your bridge.",
                    "format": "pve-iface-list",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "ovs_tag": {
                    "type": "integer",
                    "description": "Specify a VLan tag (used by OVSPort, OVSIntPort, OVSBond)",
                    "minimum": 1,
                    "maximum": 4094,
                    "x-proxmox-typetext": "<integer> (1 - 4094)",
                    "x-proxmox-optional": true
                  },
                  "slaves": {
                    "type": "string",
                    "description": "Specify the interfaces used by the bonding device.",
                    "format": "pve-iface-list",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "type": {
                    "type": "string",
                    "description": "Network interface type",
                    "enum": [
                      "bridge",
                      "bond",
                      "eth",
                      "alias",
                      "vlan",
                      "fabric",
                      "OVSBridge",
                      "OVSBond",
                      "OVSPort",
                      "OVSIntPort",
                      "vnet",
                      "unknown"
                    ]
                  },
                  "vlan-id": {
                    "type": "integer",
                    "description": "vlan-id for a custom named vlan interface (ifupdown2 only).",
                    "minimum": 1,
                    "maximum": 4094,
                    "x-proxmox-typetext": "<integer> (1 - 4094)",
                    "x-proxmox-optional": true
                  },
                  "vlan-raw-device": {
                    "type": "string",
                    "description": "Specify the raw interface for the vlan interface.",
                    "format": "pve-iface",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  }
                },
                "required": [
                  "type"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/nodes/{node}",
                [
                  "Sys.Modify"
                ]
              ]
            }
          ]
        }
      }
    },
    "/nodes/{node}/qemu": {
      "get": {
        "operationId": "get-nodes-node-qemu",
        "summary": "vmlist",
        "description": "Virtual machine index (per node).",
        "tags": [
          "/nodes/{node}/qemu"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "cpu": {
                        "type": "number",
                        "description": "Current CPU usage.",
                        "x-proxmox-optional": true
                      },
                      "cpus": {
                        "type": "number",
                        "description": "Maximum usable CPUs.",
                        "x-proxmox-optional": true
                      },
                      "diskread": {
                        "type": "integer",
                        "description": "The amount of bytes the guest read from it's block devices since the guest was started. (Note: This info is not available for all storage types.)",
                        "x-proxmox-optional": true,
                        "x-proxmox-metadata": {
                          "renderer": "bytes"
                        }
                      },
                      "diskwrite": {
                        "type": "integer",
                        "description": "The amount of bytes the guest wrote from it's block devices since the guest was started. (Note: This info is not available for all storage types.)",
                        "x-proxmox-optional": true,
                        "x-proxmox-metadata": {
                          "renderer": "bytes"
                        }
                      },
                      "lock": {
                        "type": "string",
                        "description": "The current config lock, if any.",
                        "x-proxmox-optional": true
                      },
                      "maxdisk": {
                        "type": "integer",
                        "description": "Root disk size in bytes.",
                        "x-proxmox-optional": true,
                        "x-proxmox-metadata": {
                          "renderer": "bytes"
                        }
                      },
                      "maxmem": {
                        "type": "integer",
                        "description": "Maximum memory in bytes.",
                        "x-proxmox-optional": true,
                        "x-proxmox-metadata": {
                          "renderer": "bytes"
                        }
                      },
                      "mem": {
                        "type": "integer",
                        "description": "Currently used memory in bytes.",
                        "x-proxmox-optional": true,
                        "x-proxmox-metadata": {
                          "renderer": "bytes"
                        }
                      },
                      "memhost": {
                        "type": "integer",
                        "description": "Current memory usage on the host.",
                        "x-proxmox-optional": true,
                        "x-proxmox-metadata": {
                          "renderer": "bytes"
                        }
                      },
                      "name": {
                        "type": "string",
                        "description": "VM (host)name.",
                        "x-proxmox-optional": true
                      },
                      "netin": {
                        "type": "integer",
                        "description": "The amount of traffic in bytes that was sent to the guest over the network since it was started.",
                        "x-proxmox-optional": true,
                        "x-proxmox-metadata": {
                          "renderer": "bytes"
                        }
                      },
                      "netout": {
                        "type": "integer",
                        "description": "The amount of traffic in bytes that was sent from the guest over the network since it was started.",
                        "x-proxmox-optional": true,
                        "x-proxmox-metadata": {
                          "renderer": "bytes"
                        }
                      },
                      "pid": {
                        "type": "integer",
                        "description": "PID of the QEMU process, if the VM is running.",
                        "x-proxmox-optional": true
                      },
                      "pressurecpufull": {
                        "type": "number",
                        "description": "CPU Full pressure stall average over the last 10 seconds.",
                        "x-proxmox-optional": true
                      },
                      "pressurecpusome": {
                        "type": "number",
                        "description": "CPU Some pressure stall average over the last 10 seconds.",
                        "x-proxmox-optional": true
                      },
                      "pressureiofull": {
                        "type": "number",
                        "description": "IO Full pressure stall average over the last 10 seconds.",
                        "x-proxmox-optional": true
                      },
                      "pressureiosome": {
                        "type": "number",
                        "description": "IO Some pressure stall average over the last 10 seconds.",
                        "x-proxmox-optional": true
                      },
                      "pressurememoryfull": {
                        "type": "number",
                        "description": "Memory Full pressure stall average over the last 10 seconds.",
                        "x-proxmox-optional": true
                      },
                      "pressurememorysome": {
                        "type": "number",
                        "description": "Memory Some pressure stall average over the last 10 seconds.",
                        "x-proxmox-optional": true
                      },
                      "qmpstatus": {
                        "type": "string",
                        "description": "VM run state from the 'query-status' QMP monitor command.",
                        "x-proxmox-optional": true
                      },
                      "running-machine": {
                        "type": "string",
                        "description": "The currently running machine type (if running).",
                        "x-proxmox-optional": true
                      },
                      "running-qemu": {
                        "type": "string",
                        "description": "The QEMU version the VM is currently using (if running).",
                        "x-proxmox-optional": true
                      },
                      "serial": {
                        "type": "boolean",
                        "description": "Guest has serial device configured.",
                        "x-proxmox-optional": true
                      },
                      "status": {
                        "type": "string",
                        "description": "QEMU process status.",
                        "enum": [
                          "stopped",
                          "running"
                        ]
                      },
                      "tags": {
                        "type": "string",
                        "description": "The current configured tags, if any",
                        "x-proxmox-optional": true
                      },
                      "template": {
                        "type": "boolean",
                        "description": "Determines if the guest is a template.",
                        "default": false,
                        "x-proxmox-optional": true
                      },
                      "uptime": {
                        "type": "integer",
                        "description": "Uptime in seconds.",
                        "x-proxmox-optional": true,
                        "x-proxmox-metadata": {
                          "renderer": "duration"
                        }
                      },
                      "vmid": {
                        "type": "integer",
                        "description": "The (unique) ID of the VM.",
                        "minimum": 100,
                        "maximum": 999999999,
                        "format": "pve-vmid"
                      }
                    },
                    "required": [
                      "status",
                      "vmid"
                    ]
                  },
                  "x-proxmox-metadata": {
                    "links": [
                      {
                        "href": "{vmid}",
                        "rel": "child"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-nodes-node-qemu",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "full",
            "in": "query",
            "required": false,
            "description": "Determine the full status of active VMs.",
            "schema": {
              "type": "boolean",
              "description": "Determine the full status of active VMs.",
              "x-proxmox-typetext": "<boolean>",
              "x-proxmox-optional": true
            }
          },
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "description": "Only list VMs where you have VM.Audit permissions on /vms/<vmid>.",
              "user": "all"
            }
          ]
        }
      },
      "post": {
        "operationId": "post-nodes-node-qemu",
        "summary": "create_vm",
        "description": "Create or restore a virtual machine.",
        "tags": [
          "/nodes/{node}/qemu"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "post-nodes-node-qemu",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "acpi": {
                    "type": "boolean",
                    "description": "Enable/disable ACPI.",
                    "default": true,
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "affinity": {
                    "type": "string",
                    "description": "List of host cores used to execute guest processes, for example: 0,5,8-11",
                    "format": "pve-cpuset",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "agent": {
                    "type": "string",
                    "description": "Enable/disable communication with the QEMU Guest Agent and its properties.",
                    "x-proxmox-typetext": "[enabled=]<1|0> [,freeze-fs-on-backup=<1|0>] [,fstrim_cloned_disks=<1|0>] [,type=<virtio|isa>]",
                    "x-proxmox-optional": true
                  },
                  "amd-sev": {
                    "type": "string",
                    "description": "Secure Encrypted Virtualization (SEV) features by AMD CPUs",
                    "format": "pve-qemu-sev-fmt",
                    "x-proxmox-typetext": "[type=]<sev-type> [,allow-smt=<1|0>] [,kernel-hashes=<1|0>] [,no-debug=<1|0>] [,no-key-sharing=<1|0>]",
                    "x-proxmox-optional": true
                  },
                  "arch": {
                    "type": "string",
                    "description": "Virtual processor architecture. Defaults to the host.",
                    "enum": [
                      "x86_64",
                      "aarch64"
                    ],
                    "x-proxmox-optional": true
                  },
                  "archive": {
                    "type": "string",
                    "description": "The backup archive. Either the file system path to a .tar or .vma file (use '-' to pipe data from stdin) or a proxmox storage backup volume identifier.",
                    "maxLength": 255,
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "args": {
                    "type": "string",
                    "description": "Arbitrary arguments passed to kvm.\n\nArbitrary arguments passed to kvm, for example:\n\nargs: -no-reboot -smbios 'type=0,vendor=FOO'\n\nNOTE: this option is for experts only.\n",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "audio0": {
                    "type": "string",
                    "description": "Configure a audio device, useful in combination with QXL/Spice.",
                    "x-proxmox-typetext": "device=<ich9-intel-hda|intel-hda|AC97> [,driver=<spice|none>]",
                    "x-proxmox-optional": true
                  },
                  "autostart": {
                    "type": "boolean",
                    "description": "Automatic restart after crash (currently ignored).",
                    "default": false,
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "balloon": {
                    "type": "integer",
                    "description": "Amount of target RAM for the VM in MiB. Using zero disables the ballon driver.",
                    "minimum": 0,
                    "x-proxmox-typetext": "<integer> (0 - N)",
                    "x-proxmox-optional": true
                  },
                  "bios": {
                    "type": "string",
                    "description": "Select BIOS implementation.",
                    "enum": [
                      "seabios",
                      "ovmf"
                    ],
                    "default": "seabios",
                    "x-proxmox-optional": true
                  },
                  "boot": {
                    "type": "string",
                    "description": "Specify guest boot order. Use the 'order=' sub-property as usage with no key or 'legacy=' is deprecated.",
                    "format": "pve-qm-boot",
                    "x-proxmox-typetext": "[[legacy=]<[acdn]{1,4}>] [,order=<device[;device...]>]",
                    "x-proxmox-optional": true
                  },
                  "bootdisk": {
                    "type": "string",
                    "description": "Enable booting from specified disk. Deprecated: Use 'boot: order=foo;bar' instead.",
                    "pattern": "(ide|sata|scsi|virtio)\\d+",
                    "format": "pve-qm-bootdisk",
                    "x-proxmox-optional": true
                  },
                  "bwlimit": {
                    "type": "integer",
                    "description": "Override I/O bandwidth limit (in KiB/s).",
                    "default": "restore limit from datacenter or storage config",
                    "x-proxmox-typetext": "<integer> (0 - N)",
                    "x-proxmox-optional": true
                  },
                  "cdrom": {
                    "type": "string",
                    "description": "This is an alias for option -ide2",
                    "format": "pve-qm-ide",
                    "x-proxmox-typetext": "<volume>",
                    "x-proxmox-optional": true
                  },
                  "cicustom": {
                    "type": "string",
                    "description": "cloud-init: Specify custom files to replace the automatically generated ones at start.",
                    "format": "pve-qm-cicustom",
                    "x-proxmox-typetext": "[meta=<volume>] [,network=<volume>] [,user=<volume>] [,vendor=<volume>]",
                    "x-proxmox-optional": true
                  },
                  "cipassword": {
                    "type": "string",
                    "description": "cloud-init: Password to assign the user. Using this is generally not recommended. Use ssh keys instead. Also note that older cloud-init versions do not support hashed passwords.",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "citype": {
                    "type": "string",
                    "description": "Specifies the cloud-init configuration format. The default depends on the configured operating system type (`ostype`. We use the `nocloud` format for Linux, and `configdrive2` for windows.",
                    "enum": [
                      "configdrive2",
                      "nocloud",
                      "opennebula"
                    ],
                    "x-proxmox-optional": true
                  },
                  "ciupgrade": {
                    "type": "boolean",
                    "description": "cloud-init: do an automatic package upgrade after the first boot.",
                    "default": true,
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "ciuser": {
                    "type": "string",
                    "description": "cloud-init: User name to change ssh keys and password for instead of the image's configured default user.",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "cores": {
                    "type": "integer",
                    "description": "The number of cores per socket.",
                    "default": 1,
                    "minimum": 1,
                    "x-proxmox-typetext": "<integer> (1 - N)",
                    "x-proxmox-optional": true
                  },
                  "cpu": {
                    "type": "string",
                    "description": "Emulated CPU type.",
                    "format": "pve-vm-cpu-conf",
                    "x-proxmox-typetext": "[[cputype=]<string>] [,flags=<+FLAG[;-FLAG...]>] [,hidden=<1|0>] [,hv-vendor-id=<vendor-id>] [,phys-bits=<8-64|host>] [,reported-model=<enum>]",
                    "x-proxmox-optional": true
                  },
                  "cpulimit": {
                    "type": "number",
                    "description": "Limit of CPU usage.\n\nLimit of CPU usage.\n\nNOTE: If the computer has 2 CPUs, it has total of '2' CPU time. Value '0' indicates no CPU limit.",
                    "default": 0,
                    "minimum": 0,
                    "maximum": 128,
                    "x-proxmox-typetext": "<number> (0 - 128)",
                    "x-proxmox-optional": true
                  },
                  "cpuunits": {
                    "type": "integer",
                    "description": "CPU weight for a VM, will be clamped to [1, 10000] in cgroup v2.\n\nCPU weight for a VM. Argument is used in the kernel fair scheduler. The larger the number is, the more CPU time this VM gets. Number is relative to weights of all the other running VMs.",
                    "default": "cgroup v1: 1024, cgroup v2: 100",
                    "minimum": 1,
                    "maximum": 262144,
                    "x-proxmox-typetext": "<integer> (1 - 262144)",
                    "x-proxmox-optional": true
                  },
                  "description": {
                    "type": "string",
                    "description": "Description for the VM. Shown in the web-interface VM's summary. This is saved as comment inside the configuration file.",
                    "maxLength": 8192,
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "efidisk0": {
                    "type": "string",
                    "description": "Configure a disk for storing EFI vars. Use the special syntax STORAGE_ID:SIZE_IN_GiB to allocate a new volume. Note that SIZE_IN_GiB is ignored here and that the default EFI vars are copied to the volume instead. Use STORAGE_ID:0 and the 'import-from' parameter to import from an existing volume.",
                    "x-proxmox-typetext": "[file=]<volume> [,efitype=<2m|4m>] [,format=<enum>] [,import-from=<source volume>] [,pre-enrolled-keys=<1|0>] [,size=<DiskSize>]",
                    "x-proxmox-optional": true
                  },
                  "force": {
                    "type": "boolean",
                    "description": "Allow to overwrite existing VM.",
                    "x-proxmox-requires": [
                      "archive"
                    ],
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "freeze": {
                    "type": "boolean",
                    "description": "Freeze CPU at startup (use 'c' monitor command to start execution).",
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "hookscript": {
                    "type": "string",
                    "description": "Script that will be executed during various steps in the vms lifetime.",
                    "format": "pve-volume-id",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "hostpci[n]": {
                    "type": "string",
                    "description": "Map host PCI devices into guest.\n\nMap host PCI devices into guest.\n\nNOTE: This option allows direct access to host hardware. So it is no longer\npossible to migrate such machines - use with special care.\n\nCAUTION: Experimental! User reported problems with this option.\n",
                    "format": "pve-qm-hostpci",
                    "x-proxmox-typetext": "[[host=]<HOSTPCIID[;HOSTPCIID2...]>] [,device-id=<hex id>] [,legacy-igd=<1|0>] [,mapping=<mapping-id>] [,mdev=<string>] [,pcie=<1|0>] [,rombar=<1|0>] [,romfile=<string>] [,sub-device-id=<hex id>] [,sub-vendor-id=<hex id>] [,vendor-id=<hex id>] [,x-vga=<1|0>]",
                    "x-proxmox-optional": true
                  },
                  "hotplug": {
                    "type": "string",
                    "description": "Selectively enable hotplug features. This is a comma separated list of hotplug features: 'network', 'disk', 'cpu', 'memory', 'usb' and 'cloudinit'. Use '0' to disable hotplug completely. Using '1' as value is an alias for the default `network,disk,usb`. USB hotplugging is possible for guests with machine version >= 7.1 and ostype l26 or windows > 7.",
                    "default": "network,disk,usb",
                    "format": "pve-hotplug-features",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "hugepages": {
                    "type": "string",
                    "description": "Enable/disable hugepages memory.",
                    "enum": [
                      "any",
                      "2",
                      "1024"
                    ],
                    "x-proxmox-optional": true
                  },
                  "ide[n]": {
                    "type": "string",
                    "description": "Use volume as IDE hard disk or CD-ROM (n is 0 to 3). Use the special syntax STORAGE_ID:SIZE_IN_GiB to allocate a new volume. Use STORAGE_ID:0 and the 'import-from' parameter to import from an existing volume.",
                    "x-proxmox-typetext": "[file=]<volume> [,aio=<native|threads|io_uring>] [,backup=<1|0>] [,bps=<bps>] [,bps_max_length=<seconds>] [,bps_rd=<bps>] [,bps_rd_max_length=<seconds>] [,bps_wr=<bps>] [,bps_wr_max_length=<seconds>] [,cache=<enum>] [,detect_zeroes=<1|0>] [,discard=<ignore|on>] [,format=<enum>] [,import-from=<source volume>] [,iops=<iops>] [,iops_max=<iops>] [,iops_max_length=<seconds>] [,iops_rd=<iops>] [,iops_rd_max=<iops>] [,iops_rd_max_length=<seconds>] [,iops_wr=<iops>] [,iops_wr_max=<iops>] [,iops_wr_max_length=<seconds>] [,mbps=<mbps>] [,mbps_max=<mbps>] [,mbps_rd=<mbps>] [,mbps_rd_max=<mbps>] [,mbps_wr=<mbps>] [,mbps_wr_max=<mbps>] [,media=<cdrom|disk>] [,model=<model>] [,replicate=<1|0>] [,rerror=<ignore|report|stop>] [,serial=<serial>] [,shared=<1|0>] [,size=<DiskSize>] [,snapshot=<1|0>] [,ssd=<1|0>] [,werror=<enum>] [,wwn=<wwn>]",
                    "x-proxmox-optional": true
                  },
                  "import-working-storage": {
                    "type": "string",
                    "description": "A file-based storage with 'images' content-type enabled, which is used as an intermediary extraction storage during import. Defaults to the source storage.",
                    "format": "pve-storage-id",
                    "x-proxmox-format-description": "storage ID",
                    "x-proxmox-typetext": "<storage ID>",
                    "x-proxmox-optional": true
                  },
                  "ipconfig[n]": {
                    "type": "string",
                    "description": "cloud-init: Specify IP addresses and gateways for the corresponding interface.\n\nIP addresses use CIDR notation, gateways are optional but need an IP of the same type specified.\n\nThe special string 'dhcp' can be used for IP addresses to use DHCP, in which case no explicit\ngateway should be provided.\nFor IPv6 the special string 'auto' can be used to use stateless autoconfiguration. This requires\ncloud-init 19.4 or newer.\n\nIf cloud-init is enabled and neither an IPv4 nor an IPv6 address is specified, it defaults to using\ndhcp on IPv4.\n",
                    "format": "pve-qm-ipconfig",
                    "x-proxmox-typetext": "[gw=<GatewayIPv4>] [,gw6=<GatewayIPv6>] [,ip=<IPv4Format/CIDR>] [,ip6=<IPv6Format/CIDR>]",
                    "x-proxmox-optional": true
                  },
                  "ivshmem": {
                    "type": "string",
                    "description": "Inter-VM shared memory. Useful for direct communication between VMs, or to the host.",
                    "x-proxmox-typetext": "size=<integer> [,name=<string>]",
                    "x-proxmox-optional": true
                  },
                  "keephugepages": {
                    "type": "boolean",
                    "description": "Use together with hugepages. If enabled, hugepages will not not be deleted after VM shutdown and can be used for subsequent starts.",
                    "default": false,
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "keyboard": {
                    "type": "string",
                    "description": "Keyboard layout for VNC server. This option is generally not required and is often better handled from within the guest OS.",
                    "enum": [
                      "de",
                      "de-ch",
                      "da",
                      "en-gb",
                      "en-us",
                      "es",
                      "fi",
                      "fr",
                      "fr-be",
                      "fr-ca",
                      "fr-ch",
                      "hu",
                      "is",
                      "it",
                      "ja",
                      "lt",
                      "mk",
                      "nl",
                      "no",
                      "pl",
                      "pt",
                      "pt-br",
                      "sv",
                      "sl",
                      "tr"
                    ],
                    "default": null,
                    "x-proxmox-optional": true
                  },
                  "kvm": {
                    "type": "boolean",
                    "description": "Enable/disable KVM hardware virtualization.",
                    "default": true,
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "live-restore": {
                    "type": "boolean",
                    "description": "Start the VM immediately while importing or restoring in the background.",
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "localtime": {
                    "type": "boolean",
                    "description": "Set the real time clock (RTC) to local time. This is enabled by default if the `ostype` indicates a Microsoft Windows OS.",
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "lock": {
                    "type": "string",
                    "description": "Lock/unlock the VM.",
                    "enum": [
                      "backup",
                      "clone",
                      "create",
                      "migrate",
                      "rollback",
                      "snapshot",
                      "snapshot-delete",
                      "suspending",
                      "suspended"
                    ],
                    "x-proxmox-optional": true
                  },
                  "machine": {
                    "type": "string",
                    "description": "Specify the QEMU machine.",
                    "x-proxmox-typetext": "[[type=]<machine type>] [,enable-s3=<1|0>] [,enable-s4=<1|0>] [,viommu=<intel|virtio>]",
                    "x-proxmox-optional": true
                  },
                  "memory": {
                    "type": "string",
                    "description": "Memory properties.",
                    "x-proxmox-typetext": "[current=]<integer>",
                    "x-proxmox-optional": true
                  },
                  "migrate_downtime": {
                    "type": "number",
                    "description": "Set maximum tolerated downtime (in seconds) for migrations. Should the migration not be able to converge in the very end, because too much newly dirtied RAM needs to be transferred, the limit will be increased automatically step-by-step until migration can converge.",
                    "default": 0.1,
                    "minimum": 0,
                    "x-proxmox-typetext": "<number> (0 - N)",
                    "x-proxmox-optional": true
                  },
                  "migrate_speed": {
                    "type": "integer",
                    "description": "Set maximum speed (in MB/s) for migrations. Value 0 is no limit.",
                    "default": 0,
                    "minimum": 0,
                    "x-proxmox-typetext": "<integer> (0 - N)",
                    "x-proxmox-optional": true
                  },
                  "name": {
                    "type": "string",
                    "description": "Set a name for the VM. Only used on the configuration web interface.",
                    "format": "dns-name",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "nameserver": {
                    "type": "string",
                    "description": "cloud-init: Sets DNS server IP address for a container. Create will automatically use the setting from the host if neither searchdomain nor nameserver are set.",
                    "format": "address-list",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "net[n]": {
                    "type": "string",
                    "description": "Specify network devices.",
                    "x-proxmox-typetext": "[model=]<enum> [,bridge=<bridge>] [,firewall=<1|0>] [,link_down=<1|0>] [,macaddr=<XX:XX:XX:XX:XX:XX>] [,mtu=<integer>] [,queues=<integer>] [,rate=<number>] [,tag=<integer>] [,trunks=<vlanid[;vlanid...]>] [,<model>=<macaddr>]",
                    "x-proxmox-optional": true
                  },
                  "numa": {
                    "type": "boolean",
                    "description": "Enable/disable NUMA.",
                    "default": false,
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "numa[n]": {
                    "type": "string",
                    "description": "NUMA topology.",
                    "x-proxmox-typetext": "cpus=<id[-id];...> [,hostnodes=<id[-id];...>] [,memory=<number>] [,policy=<preferred|bind|interleave>]",
                    "x-proxmox-optional": true
                  },
                  "onboot": {
                    "type": "boolean",
                    "description": "Specifies whether a VM will be started during system bootup.",
                    "default": false,
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "ostype": {
                    "type": "string",
                    "description": "Specify guest operating system.\n\nSpecify guest operating system. This is used to enable special\noptimization/features for specific operating systems:\n\n[horizontal]\nother;; unspecified OS\nwxp;; Microsoft Windows XP\nw2k;; Microsoft Windows 2000\nw2k3;; Microsoft Windows 2003\nw2k8;; Microsoft Windows 2008\nwvista;; Microsoft Windows Vista\nwin7;; Microsoft Windows 7\nwin8;; Microsoft Windows 8/2012/2012r2\nwin10;; Microsoft Windows 10/2016/2019\nwin11;; Microsoft Windows 11/2022/2025\nl24;; Linux 2.4 Kernel\nl26;; Linux 2.6 - 6.X Kernel\nsolaris;; Solaris/OpenSolaris/OpenIndiania kernel\n",
                    "enum": [
                      "other",
                      "wxp",
                      "w2k",
                      "w2k3",
                      "w2k8",
                      "wvista",
                      "win7",
                      "win8",
                      "win10",
                      "win11",
                      "l24",
                      "l26",
                      "solaris"
                    ],
                    "x-proxmox-optional": true
                  },
                  "parallel[n]": {
                    "type": "string",
                    "description": "Map host parallel devices (n is 0 to 2).\n\nMap host parallel devices (n is 0 to 2).\n\nNOTE: This option allows direct access to host hardware. So it is no longer possible to migrate such\nmachines - use with special care.\n\nCAUTION: Experimental! User reported problems with this option.\n",
                    "pattern": "/dev/parport\\d+|/dev/usb/lp\\d+",
                    "x-proxmox-optional": true
                  },
                  "pool": {
                    "type": "string",
                    "description": "Add the VM to the specified pool.",
                    "format": "pve-poolid",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "protection": {
                    "type": "boolean",
                    "description": "Sets the protection flag of the VM. This will disable the remove VM and remove disk operations.",
                    "default": false,
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "reboot": {
                    "type": "boolean",
                    "description": "Allow reboot. If set to '0' the VM exit on reboot.",
                    "default": true,
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "rng0": {
                    "type": "string",
                    "description": "Configure a VirtIO-based Random Number Generator.",
                    "format": "pve-qm-rng",
                    "x-proxmox-typetext": "[source=]</dev/urandom|/dev/random|/dev/hwrng> [,max_bytes=<integer>] [,period=<integer>]",
                    "x-proxmox-optional": true
                  },
                  "sata[n]": {
                    "type": "string",
                    "description": "Use volume as SATA hard disk or CD-ROM (n is 0 to 5). Use the special syntax STORAGE_ID:SIZE_IN_GiB to allocate a new volume. Use STORAGE_ID:0 and the 'import-from' parameter to import from an existing volume.",
                    "x-proxmox-typetext": "[file=]<volume> [,aio=<native|threads|io_uring>] [,backup=<1|0>] [,bps=<bps>] [,bps_max_length=<seconds>] [,bps_rd=<bps>] [,bps_rd_max_length=<seconds>] [,bps_wr=<bps>] [,bps_wr_max_length=<seconds>] [,cache=<enum>] [,detect_zeroes=<1|0>] [,discard=<ignore|on>] [,format=<enum>] [,import-from=<source volume>] [,iops=<iops>] [,iops_max=<iops>] [,iops_max_length=<seconds>] [,iops_rd=<iops>] [,iops_rd_max=<iops>] [,iops_rd_max_length=<seconds>] [,iops_wr=<iops>] [,iops_wr_max=<iops>] [,iops_wr_max_length=<seconds>] [,mbps=<mbps>] [,mbps_max=<mbps>] [,mbps_rd=<mbps>] [,mbps_rd_max=<mbps>] [,mbps_wr=<mbps>] [,mbps_wr_max=<mbps>] [,media=<cdrom|disk>] [,replicate=<1|0>] [,rerror=<ignore|report|stop>] [,serial=<serial>] [,shared=<1|0>] [,size=<DiskSize>] [,snapshot=<1|0>] [,ssd=<1|0>] [,werror=<enum>] [,wwn=<wwn>]",
                    "x-proxmox-optional": true
                  },
                  "scsi[n]": {
                    "type": "string",
                    "description": "Use volume as SCSI hard disk or CD-ROM (n is 0 to 30). Use the special syntax STORAGE_ID:SIZE_IN_GiB to allocate a new volume. Use STORAGE_ID:0 and the 'import-from' parameter to import from an existing volume.",
                    "x-proxmox-typetext": "[file=]<volume> [,aio=<native|threads|io_uring>] [,backup=<1|0>] [,bps=<bps>] [,bps_max_length=<seconds>] [,bps_rd=<bps>] [,bps_rd_max_length=<seconds>] [,bps_wr=<bps>] [,bps_wr_max_length=<seconds>] [,cache=<enum>] [,detect_zeroes=<1|0>] [,discard=<ignore|on>] [,format=<enum>] [,import-from=<source volume>] [,iops=<iops>] [,iops_max=<iops>] [,iops_max_length=<seconds>] [,iops_rd=<iops>] [,iops_rd_max=<iops>] [,iops_rd_max_length=<seconds>] [,iops_wr=<iops>] [,iops_wr_max=<iops>] [,iops_wr_max_length=<seconds>] [,iothread=<1|0>] [,mbps=<mbps>] [,mbps_max=<mbps>] [,mbps_rd=<mbps>] [,mbps_rd_max=<mbps>] [,mbps_wr=<mbps>] [,mbps_wr_max=<mbps>] [,media=<cdrom|disk>] [,product=<product>] [,queues=<integer>] [,replicate=<1|0>] [,rerror=<ignore|report|stop>] [,ro=<1|0>] [,scsiblock=<1|0>] [,serial=<serial>] [,shared=<1|0>] [,size=<DiskSize>] [,snapshot=<1|0>] [,ssd=<1|0>] [,vendor=<vendor>] [,werror=<enum>] [,wwn=<wwn>]",
                    "x-proxmox-optional": true
                  },
                  "scsihw": {
                    "type": "string",
                    "description": "SCSI controller model",
                    "enum": [
                      "lsi",
                      "lsi53c810",
                      "virtio-scsi-pci",
                      "virtio-scsi-single",
                      "megasas",
                      "pvscsi"
                    ],
                    "default": "lsi",
                    "x-proxmox-optional": true
                  },
                  "searchdomain": {
                    "type": "string",
                    "description": "cloud-init: Sets DNS search domains for a container. Create will automatically use the setting from the host if neither searchdomain nor nameserver are set.",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "serial[n]": {
                    "type": "string",
                    "description": "Create a serial device inside the VM (n is 0 to 3)\n\nCreate a serial device inside the VM (n is 0 to 3), and pass through a\nhost serial device (i.e. /dev/ttyS0), or create a unix socket on the\nhost side (use 'qm terminal' to open a terminal connection).\n\nNOTE: If you pass through a host serial device, it is no longer possible to migrate such machines -\nuse with special care.\n\nCAUTION: Experimental! User reported problems with this option.\n",
                    "pattern": "(/dev/.+|socket)",
                    "x-proxmox-optional": true
                  },
                  "shares": {
                    "type": "integer",
                    "description": "Amount of memory shares for auto-ballooning. The larger the number is, the more memory this VM gets. Number is relative to weights of all other running VMs. Using zero disables auto-ballooning. Auto-ballooning is done by pvestatd.",
                    "default": 1000,
                    "minimum": 0,
                    "maximum": 50000,
                    "x-proxmox-typetext": "<integer> (0 - 50000)",
                    "x-proxmox-optional": true
                  },
                  "smbios1": {
                    "type": "string",
                    "description": "Specify SMBIOS type 1 fields.",
                    "maxLength": 512,
                    "format": "pve-qm-smbios1",
                    "x-proxmox-typetext": "[base64=<1|0>] [,family=<Base64 encoded string>] [,manufacturer=<Base64 encoded string>] [,product=<Base64 encoded string>] [,serial=<Base64 encoded string>] [,sku=<Base64 encoded string>] [,uuid=<UUID>] [,version=<Base64 encoded string>]",
                    "x-proxmox-optional": true
                  },
                  "smp": {
                    "type": "integer",
                    "description": "The number of CPUs. Please use option -sockets instead.",
                    "default": 1,
                    "minimum": 1,
                    "x-proxmox-typetext": "<integer> (1 - N)",
                    "x-proxmox-optional": true
                  },
                  "sockets": {
                    "type": "integer",
                    "description": "The number of CPU sockets.",
                    "default": 1,
                    "minimum": 1,
                    "x-proxmox-typetext": "<integer> (1 - N)",
                    "x-proxmox-optional": true
                  },
                  "spice_enhancements": {
                    "type": "string",
                    "description": "Configure additional enhancements for SPICE.",
                    "x-proxmox-typetext": "[foldersharing=<1|0>] [,videostreaming=<off|all|filter>]",
                    "x-proxmox-optional": true
                  },
                  "sshkeys": {
                    "type": "string",
                    "description": "cloud-init: Setup public SSH keys (one key per line, OpenSSH format).",
                    "format": "urlencoded",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "start": {
                    "type": "boolean",
                    "description": "Start VM after it was created successfully.",
                    "default": false,
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "startdate": {
                    "type": "string",
                    "description": "Set the initial date of the real time clock. Valid format for date are:'now' or '2006-06-17T16:01:21' or '2006-06-17'.",
                    "default": "now",
                    "pattern": "(now|\\d{4}-\\d{1,2}-\\d{1,2}(T\\d{1,2}:\\d{1,2}:\\d{1,2})?)",
                    "x-proxmox-typetext": "(now | YYYY-MM-DD | YYYY-MM-DDTHH:MM:SS)",
                    "x-proxmox-optional": true
                  },
                  "startup": {
                    "type": "string",
                    "description": "Startup and shutdown behavior. Order is a non-negative number defining the general startup order. Shutdown in done with reverse ordering. Additionally you can set the 'up' or 'down' delay in seconds, which specifies a delay to wait before the next VM is started or stopped.",
                    "format": "pve-startup-order",
                    "x-proxmox-typetext": "[[order=]\\d+] [,up=\\d+] [,down=\\d+] ",
                    "x-proxmox-optional": true
                  },
                  "storage": {
                    "type": "string",
                    "description": "Default storage.",
                    "format": "pve-storage-id",
                    "x-proxmox-format-description": "storage ID",
                    "x-proxmox-typetext": "<storage ID>",
                    "x-proxmox-optional": true
                  },
                  "tablet": {
                    "type": "boolean",
                    "description": "Enable/disable the USB tablet device.\n\nEnable/disable the USB tablet device. This device is usually needed to allow absolute mouse positioning with VNC. Else the mouse runs out of sync with normal VNC clients. If you're running lots of console-only guests on one host, you may consider disabling this to save some context switches. This is turned off by default if you use spice (`qm set <vmid> --vga qxl`).",
                    "default": true,
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "tags": {
                    "type": "string",
                    "description": "Tags of the VM. This is only meta information.",
                    "format": "pve-tag-list",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "tdf": {
                    "type": "boolean",
                    "description": "Enable/disable time drift fix.",
                    "default": false,
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "template": {
                    "type": "boolean",
                    "description": "Enable/disable Template.",
                    "default": false,
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "tpmstate0": {
                    "type": "string",
                    "description": "Configure a Disk for storing TPM state. The format is fixed to 'raw'. Use the special syntax STORAGE_ID:SIZE_IN_GiB to allocate a new volume. Note that SIZE_IN_GiB is ignored here and 4 MiB will be used instead. Use STORAGE_ID:0 and the 'import-from' parameter to import from an existing volume.",
                    "x-proxmox-typetext": "[file=]<volume> [,import-from=<source volume>] [,size=<DiskSize>] [,version=<v1.2|v2.0>]",
                    "x-proxmox-optional": true
                  },
                  "unique": {
                    "type": "boolean",
                    "description": "Assign a unique random ethernet address.",
                    "x-proxmox-requires": [
                      "archive"
                    ],
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "unused[n]": {
                    "type": "string",
                    "description": "Reference to unused volumes. This is used internally, and should not be modified manually.",
                    "x-proxmox-typetext": "[file=]<volume>",
                    "x-proxmox-optional": true
                  },
                  "usb[n]": {
                    "type": "string",
                    "description": "Configure an USB device (n is 0 to 4, for machine version >= 7.1 and ostype l26 or windows > 7, n can be up to 14).",
                    "x-proxmox-typetext": "[[host=]<HOSTUSBDEVICE|spice>] [,mapping=<mapping-id>] [,usb3=<1|0>]",
                    "x-proxmox-optional": true
                  },
                  "vcpus": {
                    "type": "integer",
                    "description": "Number of hotplugged vcpus.",
                    "default": 0,
                    "minimum": 1,
                    "x-proxmox-typetext": "<integer> (1 - N)",
                    "x-proxmox-optional": true
                  },
                  "vga": {
                    "type": "string",
                    "description": "Configure the VGA hardware.\n\nConfigure the VGA Hardware. If you want to use high resolution modes (>= 1280x1024x16) you may need to increase the vga memory option. Since QEMU 2.9 the default VGA display type is 'std' for all OS types besides some Windows versions (XP and older) which use 'cirrus'. The 'qxl' option enables the SPICE display server. For win* OS you can select how many independent displays you want, Linux guests can add displays them self.\nYou can also run without any graphic card, using a serial device as terminal.",
                    "x-proxmox-typetext": "[[type=]<enum>] [,clipboard=<vnc>] [,memory=<integer>]",
                    "x-proxmox-optional": true
                  },
                  "virtio[n]": {
                    "type": "string",
                    "description": "Use volume as VIRTIO hard disk (n is 0 to 15). Use the special syntax STORAGE_ID:SIZE_IN_GiB to allocate a new volume. Use STORAGE_ID:0 and the 'import-from' parameter to import from an existing volume.",
                    "x-proxmox-typetext": "[file=]<volume> [,aio=<native|threads|io_uring>] [,backup=<1|0>] [,bps=<bps>] [,bps_max_length=<seconds>] [,bps_rd=<bps>] [,bps_rd_max_length=<seconds>] [,bps_wr=<bps>] [,bps_wr_max_length=<seconds>] [,cache=<enum>] [,detect_zeroes=<1|0>] [,discard=<ignore|on>] [,format=<enum>] [,import-from=<source volume>] [,iops=<iops>] [,iops_max=<iops>] [,iops_max_length=<seconds>] [,iops_rd=<iops>] [,iops_rd_max=<iops>] [,iops_rd_max_length=<seconds>] [,iops_wr=<iops>] [,iops_wr_max=<iops>] [,iops_wr_max_length=<seconds>] [,iothread=<1|0>] [,mbps=<mbps>] [,mbps_max=<mbps>] [,mbps_rd=<mbps>] [,mbps_rd_max=<mbps>] [,mbps_wr=<mbps>] [,mbps_wr_max=<mbps>] [,media=<cdrom|disk>] [,replicate=<1|0>] [,rerror=<ignore|report|stop>] [,ro=<1|0>] [,serial=<serial>] [,shared=<1|0>] [,size=<DiskSize>] [,snapshot=<1|0>] [,werror=<enum>]",
                    "x-proxmox-optional": true
                  },
                  "virtiofs[n]": {
                    "type": "string",
                    "description": "Configuration for sharing a directory between host and guest using Virtio-fs.",
                    "x-proxmox-typetext": "[dirid=]<mapping-id> [,cache=<enum>] [,direct-io=<1|0>] [,expose-acl=<1|0>] [,expose-xattr=<1|0>]",
                    "x-proxmox-optional": true
                  },
                  "vmgenid": {
                    "type": "string",
                    "description": "Set VM Generation ID. Use '1' to autogenerate on create or update, pass '0' to disable explicitly.\n\nThe VM generation ID (vmgenid) device exposes a 128-bit integer value identifier to the guest OS. This allows to notify the guest operating system when the virtual machine is executed with a different configuration (e.g. snapshot execution or creation from a template). The guest operating system notices the change, and is then able to react as appropriate by marking its copies of distributed databases as dirty, re-initializing its random number generator, etc.\nNote that auto-creation only works when done through API/CLI create or update methods, but not when manually editing the config file.",
                    "default": "1 (autogenerated)",
                    "pattern": "(?:[a-fA-F0-9]{8}(?:-[a-fA-F0-9]{4}){3}-[a-fA-F0-9]{12}|[01])",
                    "x-proxmox-format-description": "UUID",
                    "x-proxmox-optional": true
                  },
                  "vmid": {
                    "type": "integer",
                    "description": "The (unique) ID of the VM.",
                    "minimum": 100,
                    "maximum": 999999999,
                    "format": "pve-vmid",
                    "x-proxmox-typetext": "<integer> (100 - 999999999)"
                  },
                  "vmstatestorage": {
                    "type": "string",
                    "description": "Default storage for VM state volumes/files.",
                    "format": "pve-storage-id",
                    "x-proxmox-format-description": "storage ID",
                    "x-proxmox-typetext": "<storage ID>",
                    "x-proxmox-optional": true
                  },
                  "watchdog": {
                    "type": "string",
                    "description": "Create a virtual hardware watchdog device.\n\nCreate a virtual hardware watchdog device. Once enabled (by a guest action), the watchdog must be periodically polled by an agent inside the guest or else the watchdog will reset the guest (or execute the respective action specified)",
                    "format": "pve-qm-watchdog",
                    "x-proxmox-typetext": "[[model=]<i6300esb|ib700>] [,action=<enum>]",
                    "x-proxmox-optional": true
                  }
                },
                "required": [
                  "vmid"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "description": "You need 'VM.Allocate' permissions on /vms/{vmid} or on the VM pool /pool/{pool}. For restore (option 'archive'), it is enough if the user has 'VM.Backup' permission and the VM already exists. If you create disks you need 'Datastore.AllocateSpace' on any used storage.If you use a bridge/vlan, you need 'SDN.Use' on any used bridge/vlan.",
              "user": "all"
            }
          ]
        }
      }
    },
    "/nodes/{node}/qemu/{vmid}": {
      "delete": {
        "operationId": "delete-nodes-node-qemu-vmid",
        "summary": "destroy_vm",
        "description": "Destroy the VM and  all used/owned volumes. Removes any VM specific permissions and firewall rules",
        "tags": [
          "/nodes/{node}/qemu/{vmid}"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "delete-nodes-node-qemu-vmid",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "destroy-unreferenced-disks",
            "in": "query",
            "required": false,
            "description": "If set, destroy additionally all disks not referenced in the config but with a matching VMID from all enabled storages.",
            "schema": {
              "type": "boolean",
              "description": "If set, destroy additionally all disks not referenced in the config but with a matching VMID from all enabled storages.",
              "default": false,
              "x-proxmox-typetext": "<boolean>",
              "x-proxmox-optional": true
            }
          },
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "purge",
            "in": "query",
            "required": false,
            "description": "Remove VMID from configurations, like backup & replication jobs and HA.",
            "schema": {
              "type": "boolean",
              "description": "Remove VMID from configurations, like backup & replication jobs and HA.",
              "x-proxmox-typetext": "<boolean>",
              "x-proxmox-optional": true
            }
          },
          {
            "name": "skiplock",
            "in": "query",
            "required": false,
            "description": "Ignore locks - only root is allowed to use this option.",
            "schema": {
              "type": "boolean",
              "description": "Ignore locks - only root is allowed to use this option.",
              "x-proxmox-typetext": "<boolean>",
              "x-proxmox-optional": true
            }
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "description": "The (unique) ID of the VM.",
            "schema": {
              "type": "integer",
              "description": "The (unique) ID of the VM.",
              "minimum": 100,
              "maximum": 999999999,
              "format": "pve-vmid",
              "x-proxmox-typetext": "<integer> (100 - 999999999)"
            }
          }
        ],
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/vms/{vmid}",
                [
                  "VM.Allocate"
                ]
              ]
            }
          ]
        }
      },
      "get": {
        "operationId": "get-nodes-node-qemu-vmid",
        "summary": "vmdiridx",
        "description": "Directory index",
        "tags": [
          "/nodes/{node}/qemu/{vmid}"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "subdir": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "subdir"
                    ]
                  },
                  "x-proxmox-metadata": {
                    "links": [
                      {
                        "href": "{subdir}",
                        "rel": "child"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-nodes-node-qemu-vmid",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "description": "The (unique) ID of the VM.",
            "schema": {
              "type": "integer",
              "description": "The (unique) ID of the VM.",
              "minimum": 100,
              "maximum": 999999999,
              "format": "pve-vmid",
              "x-proxmox-typetext": "<integer> (100 - 999999999)"
            }
          }
        ],
        "security": [],
        "x-proxmox-permissions": {
          "all": [
            {
              "user": "all"
            }
          ]
        }
      }
    },
    "/nodes/{node}/qemu/{vmid}/agent": {
      "get": {
        "operationId": "get-nodes-node-qemu-vmid-agent",
        "summary": "index",
        "description": "QEMU Guest Agent command index.",
        "tags": [
          "/nodes/{node}/qemu/{vmid}/agent"
        ],
        "responses": {
          "200": {
            "description": "Returns the list of QEMU Guest Agent commands",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "Returns the list of QEMU Guest Agent commands",
                  "items": {
                    "type": "object"
                  },
                  "x-proxmox-metadata": {
                    "links": [
                      {
                        "href": "{name}",
                        "rel": "child"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-nodes-node-qemu-vmid-agent",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "description": "The (unique) ID of the VM.",
            "schema": {
              "type": "integer",
              "description": "The (unique) ID of the VM.",
              "minimum": 100,
              "maximum": 999999999,
              "format": "pve-vmid",
              "x-proxmox-typetext": "<integer> (100 - 999999999)"
            }
          }
        ],
        "security": [],
        "x-proxmox-permissions": {
          "all": [
            {
              "user": "all"
            }
          ]
        }
      },
      "post": {
        "operationId": "post-nodes-node-qemu-vmid-agent",
        "summary": "agent",
        "description": "Execute QEMU Guest Agent commands.",
        "tags": [
          "/nodes/{node}/qemu/{vmid}/agent"
        ],
        "responses": {
          "200": {
            "description": "Returns an object with a single `result` property.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Returns an object with a single `result` property."
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "post-nodes-node-qemu-vmid-agent",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "description": "The (unique) ID of the VM.",
            "schema": {
              "type": "integer",
              "description": "The (unique) ID of the VM.",
              "minimum": 100,
              "maximum": 999999999,
              "format": "pve-vmid",
              "x-proxmox-typetext": "<integer> (100 - 999999999)"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "command": {
                    "type": "string",
                    "description": "The QGA command.",
                    "enum": [
                      "fsfreeze-freeze",
                      "fsfreeze-status",
                      "fsfreeze-thaw",
                      "fstrim",
                      "get-fsinfo",
                      "get-host-name",
                      "get-memory-block-info",
                      "get-memory-blocks",
                      "get-osinfo",
                      "get-time",
                      "get-timezone",
                      "get-users",
                      "get-vcpus",
                      "info",
                      "network-get-interfaces",
                      "ping",
                      "shutdown",
                      "suspend-disk",
                      "suspend-hybrid",
                      "suspend-ram"
                    ]
                  }
                },
                "required": [
                  "command"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/vms/{vmid}",
                [
                  "VM.GuestAgent.Unrestricted",
                  "VM.GuestAgent.Unrestricted"
                ],
                "any",
                1
              ]
            }
          ]
        }
      }
    },
    "/nodes/{node}/qemu/{vmid}/agent/exec": {
      "post": {
        "operationId": "post-nodes-node-qemu-vmid-agent-exec",
        "summary": "exec",
        "description": "Executes the given command in the vm via the guest-agent and returns an object with the pid.",
        "tags": [
          "/nodes/{node}/qemu/{vmid}/agent/exec"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "pid": {
                      "type": "integer",
                      "description": "The PID of the process started by the guest-agent."
                    }
                  },
                  "required": [
                    "pid"
                  ]
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "post-nodes-node-qemu-vmid-agent-exec",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "description": "The (unique) ID of the VM.",
            "schema": {
              "type": "integer",
              "description": "The (unique) ID of the VM.",
              "minimum": 100,
              "maximum": 999999999,
              "format": "pve-vmid",
              "x-proxmox-typetext": "<integer> (100 - 999999999)"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "command": {
                    "type": "array",
                    "description": "The command as a list of program + arguments.",
                    "items": {
                      "description": "A single part of the program + arguments.",
                      "format": "string"
                    },
                    "x-proxmox-typetext": "<array>"
                  },
                  "input-data": {
                    "type": "string",
                    "description": "Data to pass as 'input-data' to the guest. Usually treated as STDIN to 'command'.",
                    "maxLength": 65536,
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  }
                },
                "required": [
                  "command"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/vms/{vmid}",
                [
                  "VM.GuestAgent.Unrestricted"
                ]
              ]
            }
          ]
        }
      }
    },
    "/nodes/{node}/qemu/{vmid}/agent/exec-status": {
      "get": {
        "operationId": "get-nodes-node-qemu-vmid-agent-exec-status",
        "summary": "exec-status",
        "description": "Gets the status of the given pid started by the guest-agent",
        "tags": [
          "/nodes/{node}/qemu/{vmid}/agent/exec-status"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "err-data": {
                      "type": "string",
                      "description": "stderr of the process",
                      "x-proxmox-optional": true
                    },
                    "err-truncated": {
                      "type": "boolean",
                      "description": "true if stderr was not fully captured",
                      "x-proxmox-optional": true
                    },
                    "exitcode": {
                      "type": "integer",
                      "description": "process exit code if it was normally terminated.",
                      "x-proxmox-optional": true
                    },
                    "exited": {
                      "type": "boolean",
                      "description": "Tells if the given command has exited yet."
                    },
                    "out-data": {
                      "type": "string",
                      "description": "stdout of the process",
                      "x-proxmox-optional": true
                    },
                    "out-truncated": {
                      "type": "boolean",
                      "description": "true if stdout was not fully captured",
                      "x-proxmox-optional": true
                    },
                    "signal": {
                      "type": "integer",
                      "description": "signal number or exception code if the process was abnormally terminated.",
                      "x-proxmox-optional": true
                    }
                  },
                  "required": [
                    "exited"
                  ]
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-nodes-node-qemu-vmid-agent-exec-status",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "pid",
            "in": "query",
            "required": true,
            "description": "The PID to query",
            "schema": {
              "type": "integer",
              "description": "The PID to query",
              "x-proxmox-typetext": "<integer>"
            }
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "description": "The (unique) ID of the VM.",
            "schema": {
              "type": "integer",
              "description": "The (unique) ID of the VM.",
              "minimum": 100,
              "maximum": 999999999,
              "format": "pve-vmid",
              "x-proxmox-typetext": "<integer> (100 - 999999999)"
            }
          }
        ],
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/vms/{vmid}",
                [
                  "VM.GuestAgent.Unrestricted"
                ]
              ]
            }
          ]
        }
      }
    },
    "/nodes/{node}/qemu/{vmid}/agent/file-read": {
      "get": {
        "operationId": "get-nodes-node-qemu-vmid-agent-file-read",
        "summary": "file-read",
        "description": "Reads the given file via guest agent. Is limited to 16777216 bytes.",
        "tags": [
          "/nodes/{node}/qemu/{vmid}/agent/file-read"
        ],
        "responses": {
          "200": {
            "description": "Returns an object with a `content` property.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Returns an object with a `content` property.",
                  "properties": {
                    "content": {
                      "type": "string",
                      "description": "The content of the file, maximum 16777216"
                    },
                    "truncated": {
                      "type": "boolean",
                      "description": "If set to 1, the output is truncated and not complete",
                      "x-proxmox-optional": true
                    }
                  },
                  "required": [
                    "content"
                  ]
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-nodes-node-qemu-vmid-agent-file-read",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "file",
            "in": "query",
            "required": true,
            "description": "The path to the file",
            "schema": {
              "type": "string",
              "description": "The path to the file",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "description": "The (unique) ID of the VM.",
            "schema": {
              "type": "integer",
              "description": "The (unique) ID of the VM.",
              "minimum": 100,
              "maximum": 999999999,
              "format": "pve-vmid",
              "x-proxmox-typetext": "<integer> (100 - 999999999)"
            }
          }
        ],
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/vms/{vmid}",
                [
                  "VM.GuestAgent.FileRead",
                  "VM.GuestAgent.Unrestricted"
                ],
                "any",
                1
              ]
            }
          ]
        }
      }
    },
    "/nodes/{node}/qemu/{vmid}/agent/file-write": {
      "post": {
        "operationId": "post-nodes-node-qemu-vmid-agent-file-write",
        "summary": "file-write",
        "description": "Writes the given file via guest agent.",
        "tags": [
          "/nodes/{node}/qemu/{vmid}/agent/file-write"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "post-nodes-node-qemu-vmid-agent-file-write",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "description": "The (unique) ID of the VM.",
            "schema": {
              "type": "integer",
              "description": "The (unique) ID of the VM.",
              "minimum": 100,
              "maximum": 999999999,
              "format": "pve-vmid",
              "x-proxmox-typetext": "<integer> (100 - 999999999)"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "content": {
                    "type": "string",
                    "description": "The content to write into the file.",
                    "maxLength": 61440,
                    "x-proxmox-typetext": "<string>"
                  },
                  "encode": {
                    "type": "boolean",
                    "description": "If set, the content will be encoded as base64 (required by QEMU).Otherwise the content needs to be encoded beforehand - defaults to true.",
                    "default": true,
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "file": {
                    "type": "string",
                    "description": "The path to the file.",
                    "x-proxmox-typetext": "<string>"
                  }
                },
                "required": [
                  "content",
                  "file"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/vms/{vmid}",
                [
                  "VM.GuestAgent.FileWrite",
                  "VM.GuestAgent.Unrestricted"
                ],
                "any",
                1
              ]
            }
          ]
        }
      }
    },
    "/nodes/{node}/qemu/{vmid}/agent/fsfreeze-freeze": {
      "post": {
        "operationId": "post-nodes-node-qemu-vmid-agent-fsfreeze-freeze",
        "summary": "fsfreeze-freeze",
        "description": "Execute fsfreeze-freeze.",
        "tags": [
          "/nodes/{node}/qemu/{vmid}/agent/fsfreeze-freeze"
        ],
        "responses": {
          "200": {
            "description": "Returns an object with a single `result` property.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Returns an object with a single `result` property."
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "post-nodes-node-qemu-vmid-agent-fsfreeze-freeze",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "description": "The (unique) ID of the VM.",
            "schema": {
              "type": "integer",
              "description": "The (unique) ID of the VM.",
              "minimum": 100,
              "maximum": 999999999,
              "format": "pve-vmid",
              "x-proxmox-typetext": "<integer> (100 - 999999999)"
            }
          }
        ],
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/vms/{vmid}",
                [
                  "VM.GuestAgent.FileSystemMgmt",
                  "VM.GuestAgent.Unrestricted"
                ],
                "any",
                1
              ]
            }
          ]
        }
      }
    },
    "/nodes/{node}/qemu/{vmid}/agent/fsfreeze-status": {
      "post": {
        "operationId": "post-nodes-node-qemu-vmid-agent-fsfreeze-status",
        "summary": "fsfreeze-status",
        "description": "Execute fsfreeze-status.",
        "tags": [
          "/nodes/{node}/qemu/{vmid}/agent/fsfreeze-status"
        ],
        "responses": {
          "200": {
            "description": "Returns an object with a single `result` property.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Returns an object with a single `result` property."
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "post-nodes-node-qemu-vmid-agent-fsfreeze-status",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "description": "The (unique) ID of the VM.",
            "schema": {
              "type": "integer",
              "description": "The (unique) ID of the VM.",
              "minimum": 100,
              "maximum": 999999999,
              "format": "pve-vmid",
              "x-proxmox-typetext": "<integer> (100 - 999999999)"
            }
          }
        ],
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/vms/{vmid}",
                [
                  "VM.GuestAgent.Audit",
                  "VM.GuestAgent.FileSystemMgmt",
                  "VM.GuestAgent.Unrestricted"
                ],
                "any",
                1
              ]
            }
          ]
        }
      }
    },
    "/nodes/{node}/qemu/{vmid}/agent/fsfreeze-thaw": {
      "post": {
        "operationId": "post-nodes-node-qemu-vmid-agent-fsfreeze-thaw",
        "summary": "fsfreeze-thaw",
        "description": "Execute fsfreeze-thaw.",
        "tags": [
          "/nodes/{node}/qemu/{vmid}/agent/fsfreeze-thaw"
        ],
        "responses": {
          "200": {
            "description": "Returns an object with a single `result` property.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Returns an object with a single `result` property."
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "post-nodes-node-qemu-vmid-agent-fsfreeze-thaw",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "description": "The (unique) ID of the VM.",
            "schema": {
              "type": "integer",
              "description": "The (unique) ID of the VM.",
              "minimum": 100,
              "maximum": 999999999,
              "format": "pve-vmid",
              "x-proxmox-typetext": "<integer> (100 - 999999999)"
            }
          }
        ],
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/vms/{vmid}",
                [
                  "VM.GuestAgent.FileSystemMgmt",
                  "VM.GuestAgent.Unrestricted"
                ],
                "any",
                1
              ]
            }
          ]
        }
      }
    },
    "/nodes/{node}/qemu/{vmid}/agent/fstrim": {
      "post": {
        "operationId": "post-nodes-node-qemu-vmid-agent-fstrim",
        "summary": "fstrim",
        "description": "Execute fstrim.",
        "tags": [
          "/nodes/{node}/qemu/{vmid}/agent/fstrim"
        ],
        "responses": {
          "200": {
            "description": "Returns an object with a single `result` property.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Returns an object with a single `result` property."
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "post-nodes-node-qemu-vmid-agent-fstrim",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "description": "The (unique) ID of the VM.",
            "schema": {
              "type": "integer",
              "description": "The (unique) ID of the VM.",
              "minimum": 100,
              "maximum": 999999999,
              "format": "pve-vmid",
              "x-proxmox-typetext": "<integer> (100 - 999999999)"
            }
          }
        ],
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/vms/{vmid}",
                [
                  "VM.GuestAgent.FileSystemMgmt",
                  "VM.GuestAgent.Unrestricted"
                ],
                "any",
                1
              ]
            }
          ]
        }
      }
    },
    "/nodes/{node}/qemu/{vmid}/agent/get-fsinfo": {
      "get": {
        "operationId": "get-nodes-node-qemu-vmid-agent-get-fsinfo",
        "summary": "get-fsinfo",
        "description": "Execute get-fsinfo.",
        "tags": [
          "/nodes/{node}/qemu/{vmid}/agent/get-fsinfo"
        ],
        "responses": {
          "200": {
            "description": "Returns an object with a single `result` property.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Returns an object with a single `result` property."
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-nodes-node-qemu-vmid-agent-get-fsinfo",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "description": "The (unique) ID of the VM.",
            "schema": {
              "type": "integer",
              "description": "The (unique) ID of the VM.",
              "minimum": 100,
              "maximum": 999999999,
              "format": "pve-vmid",
              "x-proxmox-typetext": "<integer> (100 - 999999999)"
            }
          }
        ],
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/vms/{vmid}",
                [
                  "VM.GuestAgent.Audit",
                  "VM.GuestAgent.Unrestricted"
                ],
                "any",
                1
              ]
            }
          ]
        }
      }
    },
    "/nodes/{node}/qemu/{vmid}/agent/get-host-name": {
      "get": {
        "operationId": "get-nodes-node-qemu-vmid-agent-get-host-name",
        "summary": "get-host-name",
        "description": "Execute get-host-name.",
        "tags": [
          "/nodes/{node}/qemu/{vmid}/agent/get-host-name"
        ],
        "responses": {
          "200": {
            "description": "Returns an object with a single `result` property.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Returns an object with a single `result` property."
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-nodes-node-qemu-vmid-agent-get-host-name",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "description": "The (unique) ID of the VM.",
            "schema": {
              "type": "integer",
              "description": "The (unique) ID of the VM.",
              "minimum": 100,
              "maximum": 999999999,
              "format": "pve-vmid",
              "x-proxmox-typetext": "<integer> (100 - 999999999)"
            }
          }
        ],
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/vms/{vmid}",
                [
                  "VM.GuestAgent.Audit",
                  "VM.GuestAgent.Unrestricted"
                ],
                "any",
                1
              ]
            }
          ]
        }
      }
    },
    "/nodes/{node}/qemu/{vmid}/agent/get-memory-block-info": {
      "get": {
        "operationId": "get-nodes-node-qemu-vmid-agent-get-memory-block-info",
        "summary": "get-memory-block-info",
        "description": "Execute get-memory-block-info.",
        "tags": [
          "/nodes/{node}/qemu/{vmid}/agent/get-memory-block-info"
        ],
        "responses": {
          "200": {
            "description": "Returns an object with a single `result` property.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Returns an object with a single `result` property."
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-nodes-node-qemu-vmid-agent-get-memory-block-info",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "description": "The (unique) ID of the VM.",
            "schema": {
              "type": "integer",
              "description": "The (unique) ID of the VM.",
              "minimum": 100,
              "maximum": 999999999,
              "format": "pve-vmid",
              "x-proxmox-typetext": "<integer> (100 - 999999999)"
            }
          }
        ],
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/vms/{vmid}",
                [
                  "VM.GuestAgent.Audit",
                  "VM.GuestAgent.Unrestricted"
                ],
                "any",
                1
              ]
            }
          ]
        }
      }
    },
    "/nodes/{node}/qemu/{vmid}/agent/get-memory-blocks": {
      "get": {
        "operationId": "get-nodes-node-qemu-vmid-agent-get-memory-blocks",
        "summary": "get-memory-blocks",
        "description": "Execute get-memory-blocks.",
        "tags": [
          "/nodes/{node}/qemu/{vmid}/agent/get-memory-blocks"
        ],
        "responses": {
          "200": {
            "description": "Returns an object with a single `result` property.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Returns an object with a single `result` property."
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-nodes-node-qemu-vmid-agent-get-memory-blocks",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "description": "The (unique) ID of the VM.",
            "schema": {
              "type": "integer",
              "description": "The (unique) ID of the VM.",
              "minimum": 100,
              "maximum": 999999999,
              "format": "pve-vmid",
              "x-proxmox-typetext": "<integer> (100 - 999999999)"
            }
          }
        ],
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/vms/{vmid}",
                [
                  "VM.GuestAgent.Audit",
                  "VM.GuestAgent.Unrestricted"
                ],
                "any",
                1
              ]
            }
          ]
        }
      }
    },
    "/nodes/{node}/qemu/{vmid}/agent/get-osinfo": {
      "get": {
        "operationId": "get-nodes-node-qemu-vmid-agent-get-osinfo",
        "summary": "get-osinfo",
        "description": "Execute get-osinfo.",
        "tags": [
          "/nodes/{node}/qemu/{vmid}/agent/get-osinfo"
        ],
        "responses": {
          "200": {
            "description": "Returns an object with a single `result` property.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Returns an object with a single `result` property."
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-nodes-node-qemu-vmid-agent-get-osinfo",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "description": "The (unique) ID of the VM.",
            "schema": {
              "type": "integer",
              "description": "The (unique) ID of the VM.",
              "minimum": 100,
              "maximum": 999999999,
              "format": "pve-vmid",
              "x-proxmox-typetext": "<integer> (100 - 999999999)"
            }
          }
        ],
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/vms/{vmid}",
                [
                  "VM.GuestAgent.Audit",
                  "VM.GuestAgent.Unrestricted"
                ],
                "any",
                1
              ]
            }
          ]
        }
      }
    },
    "/nodes/{node}/qemu/{vmid}/agent/get-time": {
      "get": {
        "operationId": "get-nodes-node-qemu-vmid-agent-get-time",
        "summary": "get-time",
        "description": "Execute get-time.",
        "tags": [
          "/nodes/{node}/qemu/{vmid}/agent/get-time"
        ],
        "responses": {
          "200": {
            "description": "Returns an object with a single `result` property.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Returns an object with a single `result` property."
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-nodes-node-qemu-vmid-agent-get-time",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "description": "The (unique) ID of the VM.",
            "schema": {
              "type": "integer",
              "description": "The (unique) ID of the VM.",
              "minimum": 100,
              "maximum": 999999999,
              "format": "pve-vmid",
              "x-proxmox-typetext": "<integer> (100 - 999999999)"
            }
          }
        ],
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/vms/{vmid}",
                [
                  "VM.GuestAgent.Audit",
                  "VM.GuestAgent.Unrestricted"
                ],
                "any",
                1
              ]
            }
          ]
        }
      }
    },
    "/nodes/{node}/qemu/{vmid}/agent/get-timezone": {
      "get": {
        "operationId": "get-nodes-node-qemu-vmid-agent-get-timezone",
        "summary": "get-timezone",
        "description": "Execute get-timezone.",
        "tags": [
          "/nodes/{node}/qemu/{vmid}/agent/get-timezone"
        ],
        "responses": {
          "200": {
            "description": "Returns an object with a single `result` property.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Returns an object with a single `result` property."
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-nodes-node-qemu-vmid-agent-get-timezone",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "description": "The (unique) ID of the VM.",
            "schema": {
              "type": "integer",
              "description": "The (unique) ID of the VM.",
              "minimum": 100,
              "maximum": 999999999,
              "format": "pve-vmid",
              "x-proxmox-typetext": "<integer> (100 - 999999999)"
            }
          }
        ],
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/vms/{vmid}",
                [
                  "VM.GuestAgent.Audit",
                  "VM.GuestAgent.Unrestricted"
                ],
                "any",
                1
              ]
            }
          ]
        }
      }
    },
    "/nodes/{node}/qemu/{vmid}/agent/get-users": {
      "get": {
        "operationId": "get-nodes-node-qemu-vmid-agent-get-users",
        "summary": "get-users",
        "description": "Execute get-users.",
        "tags": [
          "/nodes/{node}/qemu/{vmid}/agent/get-users"
        ],
        "responses": {
          "200": {
            "description": "Returns an object with a single `result` property.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Returns an object with a single `result` property."
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-nodes-node-qemu-vmid-agent-get-users",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "description": "The (unique) ID of the VM.",
            "schema": {
              "type": "integer",
              "description": "The (unique) ID of the VM.",
              "minimum": 100,
              "maximum": 999999999,
              "format": "pve-vmid",
              "x-proxmox-typetext": "<integer> (100 - 999999999)"
            }
          }
        ],
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/vms/{vmid}",
                [
                  "VM.GuestAgent.Audit",
                  "VM.GuestAgent.Unrestricted"
                ],
                "any",
                1
              ]
            }
          ]
        }
      }
    },
    "/nodes/{node}/qemu/{vmid}/agent/get-vcpus": {
      "get": {
        "operationId": "get-nodes-node-qemu-vmid-agent-get-vcpus",
        "summary": "get-vcpus",
        "description": "Execute get-vcpus.",
        "tags": [
          "/nodes/{node}/qemu/{vmid}/agent/get-vcpus"
        ],
        "responses": {
          "200": {
            "description": "Returns an object with a single `result` property.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Returns an object with a single `result` property."
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-nodes-node-qemu-vmid-agent-get-vcpus",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "description": "The (unique) ID of the VM.",
            "schema": {
              "type": "integer",
              "description": "The (unique) ID of the VM.",
              "minimum": 100,
              "maximum": 999999999,
              "format": "pve-vmid",
              "x-proxmox-typetext": "<integer> (100 - 999999999)"
            }
          }
        ],
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/vms/{vmid}",
                [
                  "VM.GuestAgent.Audit",
                  "VM.GuestAgent.Unrestricted"
                ],
                "any",
                1
              ]
            }
          ]
        }
      }
    },
    "/nodes/{node}/qemu/{vmid}/agent/info": {
      "get": {
        "operationId": "get-nodes-node-qemu-vmid-agent-info",
        "summary": "info",
        "description": "Execute info.",
        "tags": [
          "/nodes/{node}/qemu/{vmid}/agent/info"
        ],
        "responses": {
          "200": {
            "description": "Returns an object with a single `result` property.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Returns an object with a single `result` property."
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-nodes-node-qemu-vmid-agent-info",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "description": "The (unique) ID of the VM.",
            "schema": {
              "type": "integer",
              "description": "The (unique) ID of the VM.",
              "minimum": 100,
              "maximum": 999999999,
              "format": "pve-vmid",
              "x-proxmox-typetext": "<integer> (100 - 999999999)"
            }
          }
        ],
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/vms/{vmid}",
                [
                  "VM.GuestAgent.Audit",
                  "VM.GuestAgent.Unrestricted"
                ],
                "any",
                1
              ]
            }
          ]
        }
      }
    },
    "/nodes/{node}/qemu/{vmid}/agent/network-get-interfaces": {
      "get": {
        "operationId": "get-nodes-node-qemu-vmid-agent-network-get-interfaces",
        "summary": "network-get-interfaces",
        "description": "Execute network-get-interfaces.",
        "tags": [
          "/nodes/{node}/qemu/{vmid}/agent/network-get-interfaces"
        ],
        "responses": {
          "200": {
            "description": "Returns an object with a single `result` property.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Returns an object with a single `result` property."
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-nodes-node-qemu-vmid-agent-network-get-interfaces",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "description": "The (unique) ID of the VM.",
            "schema": {
              "type": "integer",
              "description": "The (unique) ID of the VM.",
              "minimum": 100,
              "maximum": 999999999,
              "format": "pve-vmid",
              "x-proxmox-typetext": "<integer> (100 - 999999999)"
            }
          }
        ],
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/vms/{vmid}",
                [
                  "VM.GuestAgent.Audit",
                  "VM.GuestAgent.Unrestricted"
                ],
                "any",
                1
              ]
            }
          ]
        }
      }
    },
    "/nodes/{node}/qemu/{vmid}/agent/ping": {
      "post": {
        "operationId": "post-nodes-node-qemu-vmid-agent-ping",
        "summary": "ping",
        "description": "Execute ping.",
        "tags": [
          "/nodes/{node}/qemu/{vmid}/agent/ping"
        ],
        "responses": {
          "200": {
            "description": "Returns an object with a single `result` property.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Returns an object with a single `result` property."
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "post-nodes-node-qemu-vmid-agent-ping",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "description": "The (unique) ID of the VM.",
            "schema": {
              "type": "integer",
              "description": "The (unique) ID of the VM.",
              "minimum": 100,
              "maximum": 999999999,
              "format": "pve-vmid",
              "x-proxmox-typetext": "<integer> (100 - 999999999)"
            }
          }
        ],
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/vms/{vmid}",
                [
                  "VM.GuestAgent.Audit",
                  "VM.GuestAgent.Unrestricted"
                ],
                "any",
                1
              ]
            }
          ]
        }
      }
    },
    "/nodes/{node}/qemu/{vmid}/agent/set-user-password": {
      "post": {
        "operationId": "post-nodes-node-qemu-vmid-agent-set-user-password",
        "summary": "set-user-password",
        "description": "Sets the password for the given user to the given password",
        "tags": [
          "/nodes/{node}/qemu/{vmid}/agent/set-user-password"
        ],
        "responses": {
          "200": {
            "description": "Returns an object with a single `result` property.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Returns an object with a single `result` property."
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "post-nodes-node-qemu-vmid-agent-set-user-password",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "description": "The (unique) ID of the VM.",
            "schema": {
              "type": "integer",
              "description": "The (unique) ID of the VM.",
              "minimum": 100,
              "maximum": 999999999,
              "format": "pve-vmid",
              "x-proxmox-typetext": "<integer> (100 - 999999999)"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "crypted": {
                    "type": "boolean",
                    "description": "set to 1 if the password has already been passed through crypt()",
                    "default": false,
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "password": {
                    "type": "string",
                    "description": "The new password.",
                    "minLength": 5,
                    "maxLength": 1024,
                    "x-proxmox-typetext": "<string>"
                  },
                  "username": {
                    "type": "string",
                    "description": "The user to set the password for.",
                    "x-proxmox-typetext": "<string>"
                  }
                },
                "required": [
                  "password",
                  "username"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/vms/{vmid}",
                [
                  "VM.GuestAgent.Unrestricted"
                ]
              ]
            }
          ]
        }
      }
    },
    "/nodes/{node}/qemu/{vmid}/agent/shutdown": {
      "post": {
        "operationId": "post-nodes-node-qemu-vmid-agent-shutdown",
        "summary": "shutdown",
        "description": "Execute shutdown.",
        "tags": [
          "/nodes/{node}/qemu/{vmid}/agent/shutdown"
        ],
        "responses": {
          "200": {
            "description": "Returns an object with a single `result` property.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Returns an object with a single `result` property."
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "post-nodes-node-qemu-vmid-agent-shutdown",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "description": "The (unique) ID of the VM.",
            "schema": {
              "type": "integer",
              "description": "The (unique) ID of the VM.",
              "minimum": 100,
              "maximum": 999999999,
              "format": "pve-vmid",
              "x-proxmox-typetext": "<integer> (100 - 999999999)"
            }
          }
        ],
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/vms/{vmid}",
                [
                  "VM.PowerMgmt",
                  "VM.GuestAgent.Unrestricted"
                ],
                "any",
                1
              ]
            }
          ]
        }
      }
    },
    "/nodes/{node}/qemu/{vmid}/agent/suspend-disk": {
      "post": {
        "operationId": "post-nodes-node-qemu-vmid-agent-suspend-disk",
        "summary": "suspend-disk",
        "description": "Execute suspend-disk.",
        "tags": [
          "/nodes/{node}/qemu/{vmid}/agent/suspend-disk"
        ],
        "responses": {
          "200": {
            "description": "Returns an object with a single `result` property.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Returns an object with a single `result` property."
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "post-nodes-node-qemu-vmid-agent-suspend-disk",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "description": "The (unique) ID of the VM.",
            "schema": {
              "type": "integer",
              "description": "The (unique) ID of the VM.",
              "minimum": 100,
              "maximum": 999999999,
              "format": "pve-vmid",
              "x-proxmox-typetext": "<integer> (100 - 999999999)"
            }
          }
        ],
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/vms/{vmid}",
                [
                  "VM.PowerMgmt",
                  "VM.GuestAgent.Unrestricted"
                ],
                "any",
                1
              ]
            }
          ]
        }
      }
    },
    "/nodes/{node}/qemu/{vmid}/agent/suspend-hybrid": {
      "post": {
        "operationId": "post-nodes-node-qemu-vmid-agent-suspend-hybrid",
        "summary": "suspend-hybrid",
        "description": "Execute suspend-hybrid.",
        "tags": [
          "/nodes/{node}/qemu/{vmid}/agent/suspend-hybrid"
        ],
        "responses": {
          "200": {
            "description": "Returns an object with a single `result` property.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Returns an object with a single `result` property."
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "post-nodes-node-qemu-vmid-agent-suspend-hybrid",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "description": "The (unique) ID of the VM.",
            "schema": {
              "type": "integer",
              "description": "The (unique) ID of the VM.",
              "minimum": 100,
              "maximum": 999999999,
              "format": "pve-vmid",
              "x-proxmox-typetext": "<integer> (100 - 999999999)"
            }
          }
        ],
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/vms/{vmid}",
                [
                  "VM.PowerMgmt",
                  "VM.GuestAgent.Unrestricted"
                ],
                "any",
                1
              ]
            }
          ]
        }
      }
    },
    "/nodes/{node}/qemu/{vmid}/agent/suspend-ram": {
      "post": {
        "operationId": "post-nodes-node-qemu-vmid-agent-suspend-ram",
        "summary": "suspend-ram",
        "description": "Execute suspend-ram.",
        "tags": [
          "/nodes/{node}/qemu/{vmid}/agent/suspend-ram"
        ],
        "responses": {
          "200": {
            "description": "Returns an object with a single `result` property.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Returns an object with a single `result` property."
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "post-nodes-node-qemu-vmid-agent-suspend-ram",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "description": "The (unique) ID of the VM.",
            "schema": {
              "type": "integer",
              "description": "The (unique) ID of the VM.",
              "minimum": 100,
              "maximum": 999999999,
              "format": "pve-vmid",
              "x-proxmox-typetext": "<integer> (100 - 999999999)"
            }
          }
        ],
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/vms/{vmid}",
                [
                  "VM.PowerMgmt",
                  "VM.GuestAgent.Unrestricted"
                ],
                "any",
                1
              ]
            }
          ]
        }
      }
    },
    "/nodes/{node}/qemu/{vmid}/clone": {
      "post": {
        "operationId": "post-nodes-node-qemu-vmid-clone",
        "summary": "clone_vm",
        "description": "Create a copy of virtual machine/template.",
        "tags": [
          "/nodes/{node}/qemu/{vmid}/clone"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "post-nodes-node-qemu-vmid-clone",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "description": "The (unique) ID of the VM.",
            "schema": {
              "type": "integer",
              "description": "The (unique) ID of the VM.",
              "minimum": 100,
              "maximum": 999999999,
              "format": "pve-vmid",
              "x-proxmox-typetext": "<integer> (100 - 999999999)"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "bwlimit": {
                    "type": "integer",
                    "description": "Override I/O bandwidth limit (in KiB/s).",
                    "default": "clone limit from datacenter or storage config",
                    "x-proxmox-typetext": "<integer> (0 - N)",
                    "x-proxmox-optional": true
                  },
                  "description": {
                    "type": "string",
                    "description": "Description for the new VM.",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "format": {
                    "type": "string",
                    "description": "Target format for file storage. Only valid for full clone.",
                    "enum": [
                      "raw",
                      "qcow2",
                      "vmdk"
                    ],
                    "x-proxmox-optional": true
                  },
                  "full": {
                    "type": "boolean",
                    "description": "Create a full copy of all disks. This is always done when you clone a normal VM. For VM templates, we try to create a linked clone by default.",
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "name": {
                    "type": "string",
                    "description": "Set a name for the new VM.",
                    "format": "dns-name",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "newid": {
                    "type": "integer",
                    "description": "VMID for the clone.",
                    "minimum": 100,
                    "maximum": 999999999,
                    "format": "pve-vmid",
                    "x-proxmox-typetext": "<integer> (100 - 999999999)"
                  },
                  "pool": {
                    "type": "string",
                    "description": "Add the new VM to the specified pool.",
                    "format": "pve-poolid",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "snapname": {
                    "type": "string",
                    "description": "The name of the snapshot.",
                    "maxLength": 40,
                    "format": "pve-configid",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "storage": {
                    "type": "string",
                    "description": "Target storage for full clone.",
                    "format": "pve-storage-id",
                    "x-proxmox-format-description": "storage ID",
                    "x-proxmox-typetext": "<storage ID>",
                    "x-proxmox-optional": true
                  },
                  "target": {
                    "type": "string",
                    "description": "Target node. Only allowed if the original VM is on shared storage.",
                    "format": "pve-node",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  }
                },
                "required": [
                  "newid"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "description": "You need 'VM.Clone' permissions on /vms/{vmid}, and 'VM.Allocate' permissions on /vms/{newid} (or on the VM pool /pool/{pool}). You also need 'Datastore.AllocateSpace' on any used storage and 'SDN.Use' on any used bridge/vnet",
              "check": [
                "and",
                [
                  "perm",
                  "/vms/{vmid}",
                  [
                    "VM.Clone"
                  ]
                ],
                [
                  "or",
                  [
                    "perm",
                    "/vms/{newid}",
                    [
                      "VM.Allocate"
                    ]
                  ],
                  [
                    "perm",
                    "/pool/{pool}",
                    [
                      "VM.Allocate"
                    ],
                    "require_param",
                    "pool"
                  ]
                ]
              ]
            }
          ]
        }
      }
    },
    "/nodes/{node}/qemu/{vmid}/cloudinit": {
      "get": {
        "operationId": "get-nodes-node-qemu-vmid-cloudinit",
        "summary": "cloudinit_pending",
        "description": "Get the cloudinit configuration with both current and pending values.",
        "tags": [
          "/nodes/{node}/qemu/{vmid}/cloudinit"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "delete": {
                        "type": "integer",
                        "description": "Indicates a pending delete request if present and not 0. ",
                        "minimum": 0,
                        "maximum": 1,
                        "x-proxmox-optional": true
                      },
                      "key": {
                        "type": "string",
                        "description": "Configuration option name."
                      },
                      "pending": {
                        "type": "string",
                        "description": "The new pending value.",
                        "x-proxmox-optional": true
                      },
                      "value": {
                        "type": "string",
                        "description": "Value as it was used to generate the current cloudinit image.",
                        "x-proxmox-optional": true
                      }
                    },
                    "required": [
                      "key"
                    ]
                  }
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-nodes-node-qemu-vmid-cloudinit",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "description": "The (unique) ID of the VM.",
            "schema": {
              "type": "integer",
              "description": "The (unique) ID of the VM.",
              "minimum": 100,
              "maximum": 999999999,
              "format": "pve-vmid",
              "x-proxmox-typetext": "<integer> (100 - 999999999)"
            }
          }
        ],
        "security": [],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/vms/{vmid}",
                [
                  "VM.Audit"
                ]
              ]
            }
          ]
        }
      },
      "put": {
        "operationId": "put-nodes-node-qemu-vmid-cloudinit",
        "summary": "cloudinit_update",
        "description": "Regenerate and change cloudinit config drive.",
        "tags": [
          "/nodes/{node}/qemu/{vmid}/cloudinit"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "put-nodes-node-qemu-vmid-cloudinit",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "description": "The (unique) ID of the VM.",
            "schema": {
              "type": "integer",
              "description": "The (unique) ID of the VM.",
              "minimum": 100,
              "maximum": 999999999,
              "format": "pve-vmid",
              "x-proxmox-typetext": "<integer> (100 - 999999999)"
            }
          }
        ],
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/vms/{vmid}",
                [
                  "VM.Config.Cloudinit"
                ]
              ]
            }
          ]
        }
      }
    },
    "/nodes/{node}/qemu/{vmid}/cloudinit/dump": {
      "get": {
        "operationId": "get-nodes-node-qemu-vmid-cloudinit-dump",
        "summary": "cloudinit_generated_config_dump",
        "description": "Get automatically generated cloudinit config.",
        "tags": [
          "/nodes/{node}/qemu/{vmid}/cloudinit/dump"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-nodes-node-qemu-vmid-cloudinit-dump",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "type",
            "in": "query",
            "required": true,
            "description": "Config type.",
            "schema": {
              "type": "string",
              "description": "Config type.",
              "enum": [
                "user",
                "network",
                "meta"
              ]
            }
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "description": "The (unique) ID of the VM.",
            "schema": {
              "type": "integer",
              "description": "The (unique) ID of the VM.",
              "minimum": 100,
              "maximum": 999999999,
              "format": "pve-vmid",
              "x-proxmox-typetext": "<integer> (100 - 999999999)"
            }
          }
        ],
        "security": [],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/vms/{vmid}",
                [
                  "VM.Audit"
                ]
              ]
            }
          ]
        }
      }
    },
    "/nodes/{node}/qemu/{vmid}/config": {
      "get": {
        "operationId": "get-nodes-node-qemu-vmid-config",
        "summary": "vm_config",
        "description": "Get the virtual machine configuration with pending configuration changes applied. Set the 'current' parameter to get the current configuration instead.",
        "tags": [
          "/nodes/{node}/qemu/{vmid}/config"
        ],
        "responses": {
          "200": {
            "description": "The VM configuration.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "The VM configuration.",
                  "properties": {
                    "acpi": {
                      "type": "boolean",
                      "description": "Enable/disable ACPI.",
                      "default": true,
                      "x-proxmox-optional": true
                    },
                    "affinity": {
                      "type": "string",
                      "description": "List of host cores used to execute guest processes, for example: 0,5,8-11",
                      "format": "pve-cpuset",
                      "x-proxmox-optional": true
                    },
                    "agent": {
                      "type": "string",
                      "description": "Enable/disable communication with the QEMU Guest Agent and its properties.",
                      "x-proxmox-optional": true
                    },
                    "amd-sev": {
                      "type": "string",
                      "description": "Secure Encrypted Virtualization (SEV) features by AMD CPUs",
                      "format": "pve-qemu-sev-fmt",
                      "x-proxmox-optional": true
                    },
                    "arch": {
                      "type": "string",
                      "description": "Virtual processor architecture. Defaults to the host.",
                      "enum": [
                        "x86_64",
                        "aarch64"
                      ],
                      "x-proxmox-optional": true
                    },
                    "args": {
                      "type": "string",
                      "description": "Arbitrary arguments passed to kvm.\n\nArbitrary arguments passed to kvm, for example:\n\nargs: -no-reboot -smbios 'type=0,vendor=FOO'\n\nNOTE: this option is for experts only.\n",
                      "x-proxmox-optional": true
                    },
                    "audio0": {
                      "type": "string",
                      "description": "Configure a audio device, useful in combination with QXL/Spice.",
                      "x-proxmox-optional": true
                    },
                    "autostart": {
                      "type": "boolean",
                      "description": "Automatic restart after crash (currently ignored).",
                      "default": false,
                      "x-proxmox-optional": true
                    },
                    "balloon": {
                      "type": "integer",
                      "description": "Amount of target RAM for the VM in MiB. Using zero disables the ballon driver.",
                      "minimum": 0,
                      "x-proxmox-optional": true
                    },
                    "bios": {
                      "type": "string",
                      "description": "Select BIOS implementation.",
                      "enum": [
                        "seabios",
                        "ovmf"
                      ],
                      "default": "seabios",
                      "x-proxmox-optional": true
                    },
                    "boot": {
                      "type": "string",
                      "description": "Specify guest boot order. Use the 'order=' sub-property as usage with no key or 'legacy=' is deprecated.",
                      "format": "pve-qm-boot",
                      "x-proxmox-optional": true
                    },
                    "bootdisk": {
                      "type": "string",
                      "description": "Enable booting from specified disk. Deprecated: Use 'boot: order=foo;bar' instead.",
                      "pattern": "(ide|sata|scsi|virtio)\\d+",
                      "format": "pve-qm-bootdisk",
                      "x-proxmox-optional": true
                    },
                    "cdrom": {
                      "type": "string",
                      "description": "This is an alias for option -ide2",
                      "format": "pve-qm-ide",
                      "x-proxmox-typetext": "<volume>",
                      "x-proxmox-optional": true
                    },
                    "cicustom": {
                      "type": "string",
                      "description": "cloud-init: Specify custom files to replace the automatically generated ones at start.",
                      "format": "pve-qm-cicustom",
                      "x-proxmox-optional": true
                    },
                    "cipassword": {
                      "type": "string",
                      "description": "cloud-init: Password to assign the user. Using this is generally not recommended. Use ssh keys instead. Also note that older cloud-init versions do not support hashed passwords.",
                      "x-proxmox-optional": true
                    },
                    "citype": {
                      "type": "string",
                      "description": "Specifies the cloud-init configuration format. The default depends on the configured operating system type (`ostype`. We use the `nocloud` format for Linux, and `configdrive2` for windows.",
                      "enum": [
                        "configdrive2",
                        "nocloud",
                        "opennebula"
                      ],
                      "x-proxmox-optional": true
                    },
                    "ciupgrade": {
                      "type": "boolean",
                      "description": "cloud-init: do an automatic package upgrade after the first boot.",
                      "default": true,
                      "x-proxmox-optional": true
                    },
                    "ciuser": {
                      "type": "string",
                      "description": "cloud-init: User name to change ssh keys and password for instead of the image's configured default user.",
                      "x-proxmox-optional": true
                    },
                    "cores": {
                      "type": "integer",
                      "description": "The number of cores per socket.",
                      "default": 1,
                      "minimum": 1,
                      "x-proxmox-optional": true
                    },
                    "cpu": {
                      "type": "string",
                      "description": "Emulated CPU type.",
                      "format": "pve-vm-cpu-conf",
                      "x-proxmox-optional": true
                    },
                    "cpulimit": {
                      "type": "number",
                      "description": "Limit of CPU usage.\n\nLimit of CPU usage.\n\nNOTE: If the computer has 2 CPUs, it has total of '2' CPU time. Value '0' indicates no CPU limit.",
                      "default": 0,
                      "minimum": 0,
                      "maximum": 128,
                      "x-proxmox-optional": true
                    },
                    "cpuunits": {
                      "type": "integer",
                      "description": "CPU weight for a VM, will be clamped to [1, 10000] in cgroup v2.\n\nCPU weight for a VM. Argument is used in the kernel fair scheduler. The larger the number is, the more CPU time this VM gets. Number is relative to weights of all the other running VMs.",
                      "default": "cgroup v1: 1024, cgroup v2: 100",
                      "minimum": 1,
                      "maximum": 262144,
                      "x-proxmox-optional": true
                    },
                    "description": {
                      "type": "string",
                      "description": "Description for the VM. Shown in the web-interface VM's summary. This is saved as comment inside the configuration file.",
                      "maxLength": 8192,
                      "x-proxmox-optional": true
                    },
                    "digest": {
                      "type": "string",
                      "description": "SHA1 digest of configuration file. This can be used to prevent concurrent modifications."
                    },
                    "efidisk0": {
                      "type": "string",
                      "description": "Configure a disk for storing EFI vars.",
                      "x-proxmox-optional": true
                    },
                    "freeze": {
                      "type": "boolean",
                      "description": "Freeze CPU at startup (use 'c' monitor command to start execution).",
                      "x-proxmox-optional": true
                    },
                    "hookscript": {
                      "type": "string",
                      "description": "Script that will be executed during various steps in the vms lifetime.",
                      "format": "pve-volume-id",
                      "x-proxmox-optional": true
                    },
                    "hostpci[n]": {
                      "type": "string",
                      "description": "Map host PCI devices into guest.\n\nMap host PCI devices into guest.\n\nNOTE: This option allows direct access to host hardware. So it is no longer\npossible to migrate such machines - use with special care.\n\nCAUTION: Experimental! User reported problems with this option.\n",
                      "format": "pve-qm-hostpci",
                      "x-proxmox-optional": true
                    },
                    "hotplug": {
                      "type": "string",
                      "description": "Selectively enable hotplug features. This is a comma separated list of hotplug features: 'network', 'disk', 'cpu', 'memory', 'usb' and 'cloudinit'. Use '0' to disable hotplug completely. Using '1' as value is an alias for the default `network,disk,usb`. USB hotplugging is possible for guests with machine version >= 7.1 and ostype l26 or windows > 7.",
                      "default": "network,disk,usb",
                      "format": "pve-hotplug-features",
                      "x-proxmox-optional": true
                    },
                    "hugepages": {
                      "type": "string",
                      "description": "Enable/disable hugepages memory.",
                      "enum": [
                        "any",
                        "2",
                        "1024"
                      ],
                      "x-proxmox-optional": true
                    },
                    "ide[n]": {
                      "type": "string",
                      "description": "Use volume as IDE hard disk or CD-ROM (n is 0 to 3).",
                      "x-proxmox-optional": true
                    },
                    "ipconfig[n]": {
                      "type": "string",
                      "description": "cloud-init: Specify IP addresses and gateways for the corresponding interface.\n\nIP addresses use CIDR notation, gateways are optional but need an IP of the same type specified.\n\nThe special string 'dhcp' can be used for IP addresses to use DHCP, in which case no explicit\ngateway should be provided.\nFor IPv6 the special string 'auto' can be used to use stateless autoconfiguration. This requires\ncloud-init 19.4 or newer.\n\nIf cloud-init is enabled and neither an IPv4 nor an IPv6 address is specified, it defaults to using\ndhcp on IPv4.\n",
                      "format": "pve-qm-ipconfig",
                      "x-proxmox-optional": true
                    },
                    "ivshmem": {
                      "type": "string",
                      "description": "Inter-VM shared memory. Useful for direct communication between VMs, or to the host.",
                      "x-proxmox-optional": true
                    },
                    "keephugepages": {
                      "type": "boolean",
                      "description": "Use together with hugepages. If enabled, hugepages will not not be deleted after VM shutdown and can be used for subsequent starts.",
                      "default": false,
                      "x-proxmox-optional": true
                    },
                    "keyboard": {
                      "type": "string",
                      "description": "Keyboard layout for VNC server. This option is generally not required and is often better handled from within the guest OS.",
                      "enum": [
                        "de",
                        "de-ch",
                        "da",
                        "en-gb",
                        "en-us",
                        "es",
                        "fi",
                        "fr",
                        "fr-be",
                        "fr-ca",
                        "fr-ch",
                        "hu",
                        "is",
                        "it",
                        "ja",
                        "lt",
                        "mk",
                        "nl",
                        "no",
                        "pl",
                        "pt",
                        "pt-br",
                        "sv",
                        "sl",
                        "tr"
                      ],
                      "default": null,
                      "x-proxmox-optional": true
                    },
                    "kvm": {
                      "type": "boolean",
                      "description": "Enable/disable KVM hardware virtualization.",
                      "default": true,
                      "x-proxmox-optional": true
                    },
                    "localtime": {
                      "type": "boolean",
                      "description": "Set the real time clock (RTC) to local time. This is enabled by default if the `ostype` indicates a Microsoft Windows OS.",
                      "x-proxmox-optional": true
                    },
                    "lock": {
                      "type": "string",
                      "description": "Lock/unlock the VM.",
                      "enum": [
                        "backup",
                        "clone",
                        "create",
                        "migrate",
                        "rollback",
                        "snapshot",
                        "snapshot-delete",
                        "suspending",
                        "suspended"
                      ],
                      "x-proxmox-optional": true
                    },
                    "machine": {
                      "type": "string",
                      "description": "Specify the QEMU machine.",
                      "x-proxmox-optional": true
                    },
                    "memory": {
                      "type": "string",
                      "description": "Memory properties.",
                      "x-proxmox-optional": true
                    },
                    "migrate_downtime": {
                      "type": "number",
                      "description": "Set maximum tolerated downtime (in seconds) for migrations. Should the migration not be able to converge in the very end, because too much newly dirtied RAM needs to be transferred, the limit will be increased automatically step-by-step until migration can converge.",
                      "default": 0.1,
                      "minimum": 0,
                      "x-proxmox-optional": true
                    },
                    "migrate_speed": {
                      "type": "integer",
                      "description": "Set maximum speed (in MB/s) for migrations. Value 0 is no limit.",
                      "default": 0,
                      "minimum": 0,
                      "x-proxmox-optional": true
                    },
                    "name": {
                      "type": "string",
                      "description": "Set a name for the VM. Only used on the configuration web interface.",
                      "format": "dns-name",
                      "x-proxmox-optional": true
                    },
                    "nameserver": {
                      "type": "string",
                      "description": "cloud-init: Sets DNS server IP address for a container. Create will automatically use the setting from the host if neither searchdomain nor nameserver are set.",
                      "format": "address-list",
                      "x-proxmox-optional": true
                    },
                    "net[n]": {
                      "type": "string",
                      "description": "Specify network devices.",
                      "x-proxmox-optional": true
                    },
                    "numa": {
                      "type": "boolean",
                      "description": "Enable/disable NUMA.",
                      "default": false,
                      "x-proxmox-optional": true
                    },
                    "numa[n]": {
                      "type": "string",
                      "description": "NUMA topology.",
                      "x-proxmox-optional": true
                    },
                    "onboot": {
                      "type": "boolean",
                      "description": "Specifies whether a VM will be started during system bootup.",
                      "default": false,
                      "x-proxmox-optional": true
                    },
                    "ostype": {
                      "type": "string",
                      "description": "Specify guest operating system.\n\nSpecify guest operating system. This is used to enable special\noptimization/features for specific operating systems:\n\n[horizontal]\nother;; unspecified OS\nwxp;; Microsoft Windows XP\nw2k;; Microsoft Windows 2000\nw2k3;; Microsoft Windows 2003\nw2k8;; Microsoft Windows 2008\nwvista;; Microsoft Windows Vista\nwin7;; Microsoft Windows 7\nwin8;; Microsoft Windows 8/2012/2012r2\nwin10;; Microsoft Windows 10/2016/2019\nwin11;; Microsoft Windows 11/2022/2025\nl24;; Linux 2.4 Kernel\nl26;; Linux 2.6 - 6.X Kernel\nsolaris;; Solaris/OpenSolaris/OpenIndiania kernel\n",
                      "enum": [
                        "other",
                        "wxp",
                        "w2k",
                        "w2k3",
                        "w2k8",
                        "wvista",
                        "win7",
                        "win8",
                        "win10",
                        "win11",
                        "l24",
                        "l26",
                        "solaris"
                      ],
                      "x-proxmox-optional": true
                    },
                    "parallel[n]": {
                      "type": "string",
                      "description": "Map host parallel devices (n is 0 to 2).\n\nMap host parallel devices (n is 0 to 2).\n\nNOTE: This option allows direct access to host hardware. So it is no longer possible to migrate such\nmachines - use with special care.\n\nCAUTION: Experimental! User reported problems with this option.\n",
                      "pattern": "/dev/parport\\d+|/dev/usb/lp\\d+",
                      "x-proxmox-optional": true
                    },
                    "protection": {
                      "type": "boolean",
                      "description": "Sets the protection flag of the VM. This will disable the remove VM and remove disk operations.",
                      "default": false,
                      "x-proxmox-optional": true
                    },
                    "reboot": {
                      "type": "boolean",
                      "description": "Allow reboot. If set to '0' the VM exit on reboot.",
                      "default": true,
                      "x-proxmox-optional": true
                    },
                    "rng0": {
                      "type": "string",
                      "description": "Configure a VirtIO-based Random Number Generator.",
                      "format": "pve-qm-rng",
                      "x-proxmox-optional": true
                    },
                    "sata[n]": {
                      "type": "string",
                      "description": "Use volume as SATA hard disk or CD-ROM (n is 0 to 5).",
                      "x-proxmox-optional": true
                    },
                    "scsi[n]": {
                      "type": "string",
                      "description": "Use volume as SCSI hard disk or CD-ROM (n is 0 to 30).",
                      "x-proxmox-optional": true
                    },
                    "scsihw": {
                      "type": "string",
                      "description": "SCSI controller model",
                      "enum": [
                        "lsi",
                        "lsi53c810",
                        "virtio-scsi-pci",
                        "virtio-scsi-single",
                        "megasas",
                        "pvscsi"
                      ],
                      "default": "lsi",
                      "x-proxmox-optional": true
                    },
                    "searchdomain": {
                      "type": "string",
                      "description": "cloud-init: Sets DNS search domains for a container. Create will automatically use the setting from the host if neither searchdomain nor nameserver are set.",
                      "x-proxmox-optional": true
                    },
                    "serial[n]": {
                      "type": "string",
                      "description": "Create a serial device inside the VM (n is 0 to 3)\n\nCreate a serial device inside the VM (n is 0 to 3), and pass through a\nhost serial device (i.e. /dev/ttyS0), or create a unix socket on the\nhost side (use 'qm terminal' to open a terminal connection).\n\nNOTE: If you pass through a host serial device, it is no longer possible to migrate such machines -\nuse with special care.\n\nCAUTION: Experimental! User reported problems with this option.\n",
                      "pattern": "(/dev/.+|socket)",
                      "x-proxmox-optional": true
                    },
                    "shares": {
                      "type": "integer",
                      "description": "Amount of memory shares for auto-ballooning. The larger the number is, the more memory this VM gets. Number is relative to weights of all other running VMs. Using zero disables auto-ballooning. Auto-ballooning is done by pvestatd.",
                      "default": 1000,
                      "minimum": 0,
                      "maximum": 50000,
                      "x-proxmox-optional": true
                    },
                    "smbios1": {
                      "type": "string",
                      "description": "Specify SMBIOS type 1 fields.",
                      "maxLength": 512,
                      "format": "pve-qm-smbios1",
                      "x-proxmox-optional": true
                    },
                    "smp": {
                      "type": "integer",
                      "description": "The number of CPUs. Please use option -sockets instead.",
                      "default": 1,
                      "minimum": 1,
                      "x-proxmox-optional": true
                    },
                    "sockets": {
                      "type": "integer",
                      "description": "The number of CPU sockets.",
                      "default": 1,
                      "minimum": 1,
                      "x-proxmox-optional": true
                    },
                    "spice_enhancements": {
                      "type": "string",
                      "description": "Configure additional enhancements for SPICE.",
                      "x-proxmox-optional": true
                    },
                    "sshkeys": {
                      "type": "string",
                      "description": "cloud-init: Setup public SSH keys (one key per line, OpenSSH format).",
                      "format": "urlencoded",
                      "x-proxmox-optional": true
                    },
                    "startdate": {
                      "type": "string",
                      "description": "Set the initial date of the real time clock. Valid format for date are:'now' or '2006-06-17T16:01:21' or '2006-06-17'.",
                      "default": "now",
                      "pattern": "(now|\\d{4}-\\d{1,2}-\\d{1,2}(T\\d{1,2}:\\d{1,2}:\\d{1,2})?)",
                      "x-proxmox-typetext": "(now | YYYY-MM-DD | YYYY-MM-DDTHH:MM:SS)",
                      "x-proxmox-optional": true
                    },
                    "startup": {
                      "type": "string",
                      "description": "Startup and shutdown behavior. Order is a non-negative number defining the general startup order. Shutdown in done with reverse ordering. Additionally you can set the 'up' or 'down' delay in seconds, which specifies a delay to wait before the next VM is started or stopped.",
                      "format": "pve-startup-order",
                      "x-proxmox-typetext": "[[order=]\\d+] [,up=\\d+] [,down=\\d+] ",
                      "x-proxmox-optional": true
                    },
                    "tablet": {
                      "type": "boolean",
                      "description": "Enable/disable the USB tablet device.\n\nEnable/disable the USB tablet device. This device is usually needed to allow absolute mouse positioning with VNC. Else the mouse runs out of sync with normal VNC clients. If you're running lots of console-only guests on one host, you may consider disabling this to save some context switches. This is turned off by default if you use spice (`qm set <vmid> --vga qxl`).",
                      "default": true,
                      "x-proxmox-optional": true
                    },
                    "tags": {
                      "type": "string",
                      "description": "Tags of the VM. This is only meta information.",
                      "format": "pve-tag-list",
                      "x-proxmox-optional": true
                    },
                    "tdf": {
                      "type": "boolean",
                      "description": "Enable/disable time drift fix.",
                      "default": false,
                      "x-proxmox-optional": true
                    },
                    "template": {
                      "type": "boolean",
                      "description": "Enable/disable Template.",
                      "default": false,
                      "x-proxmox-optional": true
                    },
                    "tpmstate0": {
                      "type": "string",
                      "description": "Configure a Disk for storing TPM state. The format is fixed to 'raw'.",
                      "x-proxmox-optional": true
                    },
                    "unused[n]": {
                      "type": "string",
                      "description": "Reference to unused volumes. This is used internally, and should not be modified manually.",
                      "x-proxmox-optional": true
                    },
                    "usb[n]": {
                      "type": "string",
                      "description": "Configure an USB device (n is 0 to 4, for machine version >= 7.1 and ostype l26 or windows > 7, n can be up to 14).",
                      "x-proxmox-optional": true
                    },
                    "vcpus": {
                      "type": "integer",
                      "description": "Number of hotplugged vcpus.",
                      "default": 0,
                      "minimum": 1,
                      "x-proxmox-optional": true
                    },
                    "vga": {
                      "type": "string",
                      "description": "Configure the VGA hardware.\n\nConfigure the VGA Hardware. If you want to use high resolution modes (>= 1280x1024x16) you may need to increase the vga memory option. Since QEMU 2.9 the default VGA display type is 'std' for all OS types besides some Windows versions (XP and older) which use 'cirrus'. The 'qxl' option enables the SPICE display server. For win* OS you can select how many independent displays you want, Linux guests can add displays them self.\nYou can also run without any graphic card, using a serial device as terminal.",
                      "x-proxmox-optional": true
                    },
                    "virtio[n]": {
                      "type": "string",
                      "description": "Use volume as VIRTIO hard disk (n is 0 to 15).",
                      "x-proxmox-optional": true
                    },
                    "virtiofs[n]": {
                      "type": "string",
                      "description": "Configuration for sharing a directory between host and guest using Virtio-fs.",
                      "x-proxmox-optional": true
                    },
                    "vmgenid": {
                      "type": "string",
                      "description": "Set VM Generation ID. Use '1' to autogenerate on create or update, pass '0' to disable explicitly.\n\nThe VM generation ID (vmgenid) device exposes a 128-bit integer value identifier to the guest OS. This allows to notify the guest operating system when the virtual machine is executed with a different configuration (e.g. snapshot execution or creation from a template). The guest operating system notices the change, and is then able to react as appropriate by marking its copies of distributed databases as dirty, re-initializing its random number generator, etc.\nNote that auto-creation only works when done through API/CLI create or update methods, but not when manually editing the config file.",
                      "default": "1 (autogenerated)",
                      "pattern": "(?:[a-fA-F0-9]{8}(?:-[a-fA-F0-9]{4}){3}-[a-fA-F0-9]{12}|[01])",
                      "x-proxmox-format-description": "UUID",
                      "x-proxmox-optional": true
                    },
                    "vmstatestorage": {
                      "type": "string",
                      "description": "Default storage for VM state volumes/files.",
                      "format": "pve-storage-id",
                      "x-proxmox-format-description": "storage ID",
                      "x-proxmox-optional": true
                    },
                    "watchdog": {
                      "type": "string",
                      "description": "Create a virtual hardware watchdog device.\n\nCreate a virtual hardware watchdog device. Once enabled (by a guest action), the watchdog must be periodically polled by an agent inside the guest or else the watchdog will reset the guest (or execute the respective action specified)",
                      "format": "pve-qm-watchdog",
                      "x-proxmox-optional": true
                    }
                  },
                  "required": [
                    "digest"
                  ]
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-nodes-node-qemu-vmid-config",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "current",
            "in": "query",
            "required": false,
            "description": "Get current values (instead of pending values).",
            "schema": {
              "type": "boolean",
              "description": "Get current values (instead of pending values).",
              "default": false,
              "x-proxmox-typetext": "<boolean>",
              "x-proxmox-optional": true
            }
          },
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "snapshot",
            "in": "query",
            "required": false,
            "description": "Fetch config values from given snapshot.",
            "schema": {
              "type": "string",
              "description": "Fetch config values from given snapshot.",
              "maxLength": 40,
              "format": "pve-configid",
              "x-proxmox-typetext": "<string>",
              "x-proxmox-optional": true
            }
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "description": "The (unique) ID of the VM.",
            "schema": {
              "type": "integer",
              "description": "The (unique) ID of the VM.",
              "minimum": 100,
              "maximum": 999999999,
              "format": "pve-vmid",
              "x-proxmox-typetext": "<integer> (100 - 999999999)"
            }
          }
        ],
        "security": [],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/vms/{vmid}",
                [
                  "VM.Audit"
                ]
              ]
            }
          ]
        }
      },
      "post": {
        "operationId": "post-nodes-node-qemu-vmid-config",
        "summary": "update_vm_async",
        "description": "Set virtual machine options (asynchronous API).",
        "tags": [
          "/nodes/{node}/qemu/{vmid}/config"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "x-proxmox-optional": true
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "post-nodes-node-qemu-vmid-config",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "description": "The (unique) ID of the VM.",
            "schema": {
              "type": "integer",
              "description": "The (unique) ID of the VM.",
              "minimum": 100,
              "maximum": 999999999,
              "format": "pve-vmid",
              "x-proxmox-typetext": "<integer> (100 - 999999999)"
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "acpi": {
                    "type": "boolean",
                    "description": "Enable/disable ACPI.",
                    "default": true,
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "affinity": {
                    "type": "string",
                    "description": "List of host cores used to execute guest processes, for example: 0,5,8-11",
                    "format": "pve-cpuset",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "agent": {
                    "type": "string",
                    "description": "Enable/disable communication with the QEMU Guest Agent and its properties.",
                    "x-proxmox-typetext": "[enabled=]<1|0> [,freeze-fs-on-backup=<1|0>] [,fstrim_cloned_disks=<1|0>] [,type=<virtio|isa>]",
                    "x-proxmox-optional": true
                  },
                  "amd-sev": {
                    "type": "string",
                    "description": "Secure Encrypted Virtualization (SEV) features by AMD CPUs",
                    "format": "pve-qemu-sev-fmt",
                    "x-proxmox-typetext": "[type=]<sev-type> [,allow-smt=<1|0>] [,kernel-hashes=<1|0>] [,no-debug=<1|0>] [,no-key-sharing=<1|0>]",
                    "x-proxmox-optional": true
                  },
                  "arch": {
                    "type": "string",
                    "description": "Virtual processor architecture. Defaults to the host.",
                    "enum": [
                      "x86_64",
                      "aarch64"
                    ],
                    "x-proxmox-optional": true
                  },
                  "args": {
                    "type": "string",
                    "description": "Arbitrary arguments passed to kvm.\n\nArbitrary arguments passed to kvm, for example:\n\nargs: -no-reboot -smbios 'type=0,vendor=FOO'\n\nNOTE: this option is for experts only.\n",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "audio0": {
                    "type": "string",
                    "description": "Configure a audio device, useful in combination with QXL/Spice.",
                    "x-proxmox-typetext": "device=<ich9-intel-hda|intel-hda|AC97> [,driver=<spice|none>]",
                    "x-proxmox-optional": true
                  },
                  "autostart": {
                    "type": "boolean",
                    "description": "Automatic restart after crash (currently ignored).",
                    "default": false,
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "background_delay": {
                    "type": "integer",
                    "description": "Time to wait for the task to finish. We return 'null' if the task finish within that time.",
                    "minimum": 1,
                    "maximum": 30,
                    "x-proxmox-typetext": "<integer> (1 - 30)",
                    "x-proxmox-optional": true
                  },
                  "balloon": {
                    "type": "integer",
                    "description": "Amount of target RAM for the VM in MiB. Using zero disables the ballon driver.",
                    "minimum": 0,
                    "x-proxmox-typetext": "<integer> (0 - N)",
                    "x-proxmox-optional": true
                  },
                  "bios": {
                    "type": "string",
                    "description": "Select BIOS implementation.",
                    "enum": [
                      "seabios",
                      "ovmf"
                    ],
                    "default": "seabios",
                    "x-proxmox-optional": true
                  },
                  "boot": {
                    "type": "string",
                    "description": "Specify guest boot order. Use the 'order=' sub-property as usage with no key or 'legacy=' is deprecated.",
                    "format": "pve-qm-boot",
                    "x-proxmox-typetext": "[[legacy=]<[acdn]{1,4}>] [,order=<device[;device...]>]",
                    "x-proxmox-optional": true
                  },
                  "bootdisk": {
                    "type": "string",
                    "description": "Enable booting from specified disk. Deprecated: Use 'boot: order=foo;bar' instead.",
                    "pattern": "(ide|sata|scsi|virtio)\\d+",
                    "format": "pve-qm-bootdisk",
                    "x-proxmox-optional": true
                  },
                  "cdrom": {
                    "type": "string",
                    "description": "This is an alias for option -ide2",
                    "format": "pve-qm-ide",
                    "x-proxmox-typetext": "<volume>",
                    "x-proxmox-optional": true
                  },
                  "cicustom": {
                    "type": "string",
                    "description": "cloud-init: Specify custom files to replace the automatically generated ones at start.",
                    "format": "pve-qm-cicustom",
                    "x-proxmox-typetext": "[meta=<volume>] [,network=<volume>] [,user=<volume>] [,vendor=<volume>]",
                    "x-proxmox-optional": true
                  },
                  "cipassword": {
                    "type": "string",
                    "description": "cloud-init: Password to assign the user. Using this is generally not recommended. Use ssh keys instead. Also note that older cloud-init versions do not support hashed passwords.",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "citype": {
                    "type": "string",
                    "description": "Specifies the cloud-init configuration format. The default depends on the configured operating system type (`ostype`. We use the `nocloud` format for Linux, and `configdrive2` for windows.",
                    "enum": [
                      "configdrive2",
                      "nocloud",
                      "opennebula"
                    ],
                    "x-proxmox-optional": true
                  },
                  "ciupgrade": {
                    "type": "boolean",
                    "description": "cloud-init: do an automatic package upgrade after the first boot.",
                    "default": true,
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "ciuser": {
                    "type": "string",
                    "description": "cloud-init: User name to change ssh keys and password for instead of the image's configured default user.",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "cores": {
                    "type": "integer",
                    "description": "The number of cores per socket.",
                    "default": 1,
                    "minimum": 1,
                    "x-proxmox-typetext": "<integer> (1 - N)",
                    "x-proxmox-optional": true
                  },
                  "cpu": {
                    "type": "string",
                    "description": "Emulated CPU type.",
                    "format": "pve-vm-cpu-conf",
                    "x-proxmox-typetext": "[[cputype=]<string>] [,flags=<+FLAG[;-FLAG...]>] [,hidden=<1|0>] [,hv-vendor-id=<vendor-id>] [,phys-bits=<8-64|host>] [,reported-model=<enum>]",
                    "x-proxmox-optional": true
                  },
                  "cpulimit": {
                    "type": "number",
                    "description": "Limit of CPU usage.\n\nLimit of CPU usage.\n\nNOTE: If the computer has 2 CPUs, it has total of '2' CPU time. Value '0' indicates no CPU limit.",
                    "default": 0,
                    "minimum": 0,
                    "maximum": 128,
                    "x-proxmox-typetext": "<number> (0 - 128)",
                    "x-proxmox-optional": true
                  },
                  "cpuunits": {
                    "type": "integer",
                    "description": "CPU weight for a VM, will be clamped to [1, 10000] in cgroup v2.\n\nCPU weight for a VM. Argument is used in the kernel fair scheduler. The larger the number is, the more CPU time this VM gets. Number is relative to weights of all the other running VMs.",
                    "default": "cgroup v1: 1024, cgroup v2: 100",
                    "minimum": 1,
                    "maximum": 262144,
                    "x-proxmox-typetext": "<integer> (1 - 262144)",
                    "x-proxmox-optional": true
                  },
                  "delete": {
                    "type": "string",
                    "description": "A list of settings you want to delete.",
                    "format": "pve-configid-list",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "description": {
                    "type": "string",
                    "description": "Description for the VM. Shown in the web-interface VM's summary. This is saved as comment inside the configuration file.",
                    "maxLength": 8192,
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "digest": {
                    "type": "string",
                    "description": "Prevent changes if current configuration file has different SHA1 digest. This can be used to prevent concurrent modifications.",
                    "maxLength": 40,
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "efidisk0": {
                    "type": "string",
                    "description": "Configure a disk for storing EFI vars. Use the special syntax STORAGE_ID:SIZE_IN_GiB to allocate a new volume. Note that SIZE_IN_GiB is ignored here and that the default EFI vars are copied to the volume instead. Use STORAGE_ID:0 and the 'import-from' parameter to import from an existing volume.",
                    "x-proxmox-typetext": "[file=]<volume> [,efitype=<2m|4m>] [,format=<enum>] [,import-from=<source volume>] [,pre-enrolled-keys=<1|0>] [,size=<DiskSize>]",
                    "x-proxmox-optional": true
                  },
                  "force": {
                    "type": "boolean",
                    "description": "Force physical removal. Without this, we simple remove the disk from the config file and create an additional configuration entry called 'unused[n]', which contains the volume ID. Unlink of unused[n] always cause physical removal.",
                    "x-proxmox-requires": [
                      "delete"
                    ],
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "freeze": {
                    "type": "boolean",
                    "description": "Freeze CPU at startup (use 'c' monitor command to start execution).",
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "hookscript": {
                    "type": "string",
                    "description": "Script that will be executed during various steps in the vms lifetime.",
                    "format": "pve-volume-id",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "hostpci[n]": {
                    "type": "string",
                    "description": "Map host PCI devices into guest.\n\nMap host PCI devices into guest.\n\nNOTE: This option allows direct access to host hardware. So it is no longer\npossible to migrate such machines - use with special care.\n\nCAUTION: Experimental! User reported problems with this option.\n",
                    "format": "pve-qm-hostpci",
                    "x-proxmox-typetext": "[[host=]<HOSTPCIID[;HOSTPCIID2...]>] [,device-id=<hex id>] [,legacy-igd=<1|0>] [,mapping=<mapping-id>] [,mdev=<string>] [,pcie=<1|0>] [,rombar=<1|0>] [,romfile=<string>] [,sub-device-id=<hex id>] [,sub-vendor-id=<hex id>] [,vendor-id=<hex id>] [,x-vga=<1|0>]",
                    "x-proxmox-optional": true
                  },
                  "hotplug": {
                    "type": "string",
                    "description": "Selectively enable hotplug features. This is a comma separated list of hotplug features: 'network', 'disk', 'cpu', 'memory', 'usb' and 'cloudinit'. Use '0' to disable hotplug completely. Using '1' as value is an alias for the default `network,disk,usb`. USB hotplugging is possible for guests with machine version >= 7.1 and ostype l26 or windows > 7.",
                    "default": "network,disk,usb",
                    "format": "pve-hotplug-features",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "hugepages": {
                    "type": "string",
                    "description": "Enable/disable hugepages memory.",
                    "enum": [
                      "any",
                      "2",
                      "1024"
                    ],
                    "x-proxmox-optional": true
                  },
                  "ide[n]": {
                    "type": "string",
                    "description": "Use volume as IDE hard disk or CD-ROM (n is 0 to 3). Use the special syntax STORAGE_ID:SIZE_IN_GiB to allocate a new volume. Use STORAGE_ID:0 and the 'import-from' parameter to import from an existing volume.",
                    "x-proxmox-typetext": "[file=]<volume> [,aio=<native|threads|io_uring>] [,backup=<1|0>] [,bps=<bps>] [,bps_max_length=<seconds>] [,bps_rd=<bps>] [,bps_rd_max_length=<seconds>] [,bps_wr=<bps>] [,bps_wr_max_length=<seconds>] [,cache=<enum>] [,detect_zeroes=<1|0>] [,discard=<ignore|on>] [,format=<enum>] [,import-from=<source volume>] [,iops=<iops>] [,iops_max=<iops>] [,iops_max_length=<seconds>] [,iops_rd=<iops>] [,iops_rd_max=<iops>] [,iops_rd_max_length=<seconds>] [,iops_wr=<iops>] [,iops_wr_max=<iops>] [,iops_wr_max_length=<seconds>] [,mbps=<mbps>] [,mbps_max=<mbps>] [,mbps_rd=<mbps>] [,mbps_rd_max=<mbps>] [,mbps_wr=<mbps>] [,mbps_wr_max=<mbps>] [,media=<cdrom|disk>] [,model=<model>] [,replicate=<1|0>] [,rerror=<ignore|report|stop>] [,serial=<serial>] [,shared=<1|0>] [,size=<DiskSize>] [,snapshot=<1|0>] [,ssd=<1|0>] [,werror=<enum>] [,wwn=<wwn>]",
                    "x-proxmox-optional": true
                  },
                  "import-working-storage": {
                    "type": "string",
                    "description": "A file-based storage with 'images' content-type enabled, which is used as an intermediary extraction storage during import. Defaults to the source storage.",
                    "format": "pve-storage-id",
                    "x-proxmox-format-description": "storage ID",
                    "x-proxmox-typetext": "<storage ID>",
                    "x-proxmox-optional": true
                  },
                  "ipconfig[n]": {
                    "type": "string",
                    "description": "cloud-init: Specify IP addresses and gateways for the corresponding interface.\n\nIP addresses use CIDR notation, gateways are optional but need an IP of the same type specified.\n\nThe special string 'dhcp' can be used for IP addresses to use DHCP, in which case no explicit\ngateway should be provided.\nFor IPv6 the special string 'auto' can be used to use stateless autoconfiguration. This requires\ncloud-init 19.4 or newer.\n\nIf cloud-init is enabled and neither an IPv4 nor an IPv6 address is specified, it defaults to using\ndhcp on IPv4.\n",
                    "format": "pve-qm-ipconfig",
                    "x-proxmox-typetext": "[gw=<GatewayIPv4>] [,gw6=<GatewayIPv6>] [,ip=<IPv4Format/CIDR>] [,ip6=<IPv6Format/CIDR>]",
                    "x-proxmox-optional": true
                  },
                  "ivshmem": {
                    "type": "string",
                    "description": "Inter-VM shared memory. Useful for direct communication between VMs, or to the host.",
                    "x-proxmox-typetext": "size=<integer> [,name=<string>]",
                    "x-proxmox-optional": true
                  },
                  "keephugepages": {
                    "type": "boolean",
                    "description": "Use together with hugepages. If enabled, hugepages will not not be deleted after VM shutdown and can be used for subsequent starts.",
                    "default": false,
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "keyboard": {
                    "type": "string",
                    "description": "Keyboard layout for VNC server. This option is generally not required and is often better handled from within the guest OS.",
                    "enum": [
                      "de",
                      "de-ch",
                      "da",
                      "en-gb",
                      "en-us",
                      "es",
                      "fi",
                      "fr",
                      "fr-be",
                      "fr-ca",
                      "fr-ch",
                      "hu",
                      "is",
                      "it",
                      "ja",
                      "lt",
                      "mk",
                      "nl",
                      "no",
                      "pl",
                      "pt",
                      "pt-br",
                      "sv",
                      "sl",
                      "tr"
                    ],
                    "default": null,
                    "x-proxmox-optional": true
                  },
                  "kvm": {
                    "type": "boolean",
                    "description": "Enable/disable KVM hardware virtualization.",
                    "default": true,
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "localtime": {
                    "type": "boolean",
                    "description": "Set the real time clock (RTC) to local time. This is enabled by default if the `ostype` indicates a Microsoft Windows OS.",
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "lock": {
                    "type": "string",
                    "description": "Lock/unlock the VM.",
                    "enum": [
                      "backup",
                      "clone",
                      "create",
                      "migrate",
                      "rollback",
                      "snapshot",
                      "snapshot-delete",
                      "suspending",
                      "suspended"
                    ],
                    "x-proxmox-optional": true
                  },
                  "machine": {
                    "type": "string",
                    "description": "Specify the QEMU machine.",
                    "x-proxmox-typetext": "[[type=]<machine type>] [,enable-s3=<1|0>] [,enable-s4=<1|0>] [,viommu=<intel|virtio>]",
                    "x-proxmox-optional": true
                  },
                  "memory": {
                    "type": "string",
                    "description": "Memory properties.",
                    "x-proxmox-typetext": "[current=]<integer>",
                    "x-proxmox-optional": true
                  },
                  "migrate_downtime": {
                    "type": "number",
                    "description": "Set maximum tolerated downtime (in seconds) for migrations. Should the migration not be able to converge in the very end, because too much newly dirtied RAM needs to be transferred, the limit will be increased automatically step-by-step until migration can converge.",
                    "default": 0.1,
                    "minimum": 0,
                    "x-proxmox-typetext": "<number> (0 - N)",
                    "x-proxmox-optional": true
                  },
                  "migrate_speed": {
                    "type": "integer",
                    "description": "Set maximum speed (in MB/s) for migrations. Value 0 is no limit.",
                    "default": 0,
                    "minimum": 0,
                    "x-proxmox-typetext": "<integer> (0 - N)",
                    "x-proxmox-optional": true
                  },
                  "name": {
                    "type": "string",
                    "description": "Set a name for the VM. Only used on the configuration web interface.",
                    "format": "dns-name",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "nameserver": {
                    "type": "string",
                    "description": "cloud-init: Sets DNS server IP address for a container. Create will automatically use the setting from the host if neither searchdomain nor nameserver are set.",
                    "format": "address-list",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "net[n]": {
                    "type": "string",
                    "description": "Specify network devices.",
                    "x-proxmox-typetext": "[model=]<enum> [,bridge=<bridge>] [,firewall=<1|0>] [,link_down=<1|0>] [,macaddr=<XX:XX:XX:XX:XX:XX>] [,mtu=<integer>] [,queues=<integer>] [,rate=<number>] [,tag=<integer>] [,trunks=<vlanid[;vlanid...]>] [,<model>=<macaddr>]",
                    "x-proxmox-optional": true
                  },
                  "numa": {
                    "type": "boolean",
                    "description": "Enable/disable NUMA.",
                    "default": false,
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "numa[n]": {
                    "type": "string",
                    "description": "NUMA topology.",
                    "x-proxmox-typetext": "cpus=<id[-id];...> [,hostnodes=<id[-id];...>] [,memory=<number>] [,policy=<preferred|bind|interleave>]",
                    "x-proxmox-optional": true
                  },
                  "onboot": {
                    "type": "boolean",
                    "description": "Specifies whether a VM will be started during system bootup.",
                    "default": false,
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "ostype": {
                    "type": "string",
                    "description": "Specify guest operating system.\n\nSpecify guest operating system. This is used to enable special\noptimization/features for specific operating systems:\n\n[horizontal]\nother;; unspecified OS\nwxp;; Microsoft Windows XP\nw2k;; Microsoft Windows 2000\nw2k3;; Microsoft Windows 2003\nw2k8;; Microsoft Windows 2008\nwvista;; Microsoft Windows Vista\nwin7;; Microsoft Windows 7\nwin8;; Microsoft Windows 8/2012/2012r2\nwin10;; Microsoft Windows 10/2016/2019\nwin11;; Microsoft Windows 11/2022/2025\nl24;; Linux 2.4 Kernel\nl26;; Linux 2.6 - 6.X Kernel\nsolaris;; Solaris/OpenSolaris/OpenIndiania kernel\n",
                    "enum": [
                      "other",
                      "wxp",
                      "w2k",
                      "w2k3",
                      "w2k8",
                      "wvista",
                      "win7",
                      "win8",
                      "win10",
                      "win11",
                      "l24",
                      "l26",
                      "solaris"
                    ],
                    "x-proxmox-optional": true
                  },
                  "parallel[n]": {
                    "type": "string",
                    "description": "Map host parallel devices (n is 0 to 2).\n\nMap host parallel devices (n is 0 to 2).\n\nNOTE: This option allows direct access to host hardware. So it is no longer possible to migrate such\nmachines - use with special care.\n\nCAUTION: Experimental! User reported problems with this option.\n",
                    "pattern": "/dev/parport\\d+|/dev/usb/lp\\d+",
                    "x-proxmox-optional": true
                  },
                  "protection": {
                    "type": "boolean",
                    "description": "Sets the protection flag of the VM. This will disable the remove VM and remove disk operations.",
                    "default": false,
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "reboot": {
                    "type": "boolean",
                    "description": "Allow reboot. If set to '0' the VM exit on reboot.",
                    "default": true,
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "revert": {
                    "type": "string",
                    "description": "Revert a pending change.",
                    "format": "pve-configid-list",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "rng0": {
                    "type": "string",
                    "description": "Configure a VirtIO-based Random Number Generator.",
                    "format": "pve-qm-rng",
                    "x-proxmox-typetext": "[source=]</dev/urandom|/dev/random|/dev/hwrng> [,max_bytes=<integer>] [,period=<integer>]",
                    "x-proxmox-optional": true
                  },
                  "sata[n]": {
                    "type": "string",
                    "description": "Use volume as SATA hard disk or CD-ROM (n is 0 to 5). Use the special syntax STORAGE_ID:SIZE_IN_GiB to allocate a new volume. Use STORAGE_ID:0 and the 'import-from' parameter to import from an existing volume.",
                    "x-proxmox-typetext": "[file=]<volume> [,aio=<native|threads|io_uring>] [,backup=<1|0>] [,bps=<bps>] [,bps_max_length=<seconds>] [,bps_rd=<bps>] [,bps_rd_max_length=<seconds>] [,bps_wr=<bps>] [,bps_wr_max_length=<seconds>] [,cache=<enum>] [,detect_zeroes=<1|0>] [,discard=<ignore|on>] [,format=<enum>] [,import-from=<source volume>] [,iops=<iops>] [,iops_max=<iops>] [,iops_max_length=<seconds>] [,iops_rd=<iops>] [,iops_rd_max=<iops>] [,iops_rd_max_length=<seconds>] [,iops_wr=<iops>] [,iops_wr_max=<iops>] [,iops_wr_max_length=<seconds>] [,mbps=<mbps>] [,mbps_max=<mbps>] [,mbps_rd=<mbps>] [,mbps_rd_max=<mbps>] [,mbps_wr=<mbps>] [,mbps_wr_max=<mbps>] [,media=<cdrom|disk>] [,replicate=<1|0>] [,rerror=<ignore|report|stop>] [,serial=<serial>] [,shared=<1|0>] [,size=<DiskSize>] [,snapshot=<1|0>] [,ssd=<1|0>] [,werror=<enum>] [,wwn=<wwn>]",
                    "x-proxmox-optional": true
                  },
                  "scsi[n]": {
                    "type": "string",
                    "description": "Use volume as SCSI hard disk or CD-ROM (n is 0 to 30). Use the special syntax STORAGE_ID:SIZE_IN_GiB to allocate a new volume. Use STORAGE_ID:0 and the 'import-from' parameter to import from an existing volume.",
                    "x-proxmox-typetext": "[file=]<volume> [,aio=<native|threads|io_uring>] [,backup=<1|0>] [,bps=<bps>] [,bps_max_length=<seconds>] [,bps_rd=<bps>] [,bps_rd_max_length=<seconds>] [,bps_wr=<bps>] [,bps_wr_max_length=<seconds>] [,cache=<enum>] [,detect_zeroes=<1|0>] [,discard=<ignore|on>] [,format=<enum>] [,import-from=<source volume>] [,iops=<iops>] [,iops_max=<iops>] [,iops_max_length=<seconds>] [,iops_rd=<iops>] [,iops_rd_max=<iops>] [,iops_rd_max_length=<seconds>] [,iops_wr=<iops>] [,iops_wr_max=<iops>] [,iops_wr_max_length=<seconds>] [,iothread=<1|0>] [,mbps=<mbps>] [,mbps_max=<mbps>] [,mbps_rd=<mbps>] [,mbps_rd_max=<mbps>] [,mbps_wr=<mbps>] [,mbps_wr_max=<mbps>] [,media=<cdrom|disk>] [,product=<product>] [,queues=<integer>] [,replicate=<1|0>] [,rerror=<ignore|report|stop>] [,ro=<1|0>] [,scsiblock=<1|0>] [,serial=<serial>] [,shared=<1|0>] [,size=<DiskSize>] [,snapshot=<1|0>] [,ssd=<1|0>] [,vendor=<vendor>] [,werror=<enum>] [,wwn=<wwn>]",
                    "x-proxmox-optional": true
                  },
                  "scsihw": {
                    "type": "string",
                    "description": "SCSI controller model",
                    "enum": [
                      "lsi",
                      "lsi53c810",
                      "virtio-scsi-pci",
                      "virtio-scsi-single",
                      "megasas",
                      "pvscsi"
                    ],
                    "default": "lsi",
                    "x-proxmox-optional": true
                  },
                  "searchdomain": {
                    "type": "string",
                    "description": "cloud-init: Sets DNS search domains for a container. Create will automatically use the setting from the host if neither searchdomain nor nameserver are set.",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "serial[n]": {
                    "type": "string",
                    "description": "Create a serial device inside the VM (n is 0 to 3)\n\nCreate a serial device inside the VM (n is 0 to 3), and pass through a\nhost serial device (i.e. /dev/ttyS0), or create a unix socket on the\nhost side (use 'qm terminal' to open a terminal connection).\n\nNOTE: If you pass through a host serial device, it is no longer possible to migrate such machines -\nuse with special care.\n\nCAUTION: Experimental! User reported problems with this option.\n",
                    "pattern": "(/dev/.+|socket)",
                    "x-proxmox-optional": true
                  },
                  "shares": {
                    "type": "integer",
                    "description": "Amount of memory shares for auto-ballooning. The larger the number is, the more memory this VM gets. Number is relative to weights of all other running VMs. Using zero disables auto-ballooning. Auto-ballooning is done by pvestatd.",
                    "default": 1000,
                    "minimum": 0,
                    "maximum": 50000,
                    "x-proxmox-typetext": "<integer> (0 - 50000)",
                    "x-proxmox-optional": true
                  },
                  "skiplock": {
                    "type": "boolean",
                    "description": "Ignore locks - only root is allowed to use this option.",
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "smbios1": {
                    "type": "string",
                    "description": "Specify SMBIOS type 1 fields.",
                    "maxLength": 512,
                    "format": "pve-qm-smbios1",
                    "x-proxmox-typetext": "[base64=<1|0>] [,family=<Base64 encoded string>] [,manufacturer=<Base64 encoded string>] [,product=<Base64 encoded string>] [,serial=<Base64 encoded string>] [,sku=<Base64 encoded string>] [,uuid=<UUID>] [,version=<Base64 encoded string>]",
                    "x-proxmox-optional": true
                  },
                  "smp": {
                    "type": "integer",
                    "description": "The number of CPUs. Please use option -sockets instead.",
                    "default": 1,
                    "minimum": 1,
                    "x-proxmox-typetext": "<integer> (1 - N)",
                    "x-proxmox-optional": true
                  },
                  "sockets": {
                    "type": "integer",
                    "description": "The number of CPU sockets.",
                    "default": 1,
                    "minimum": 1,
                    "x-proxmox-typetext": "<integer> (1 - N)",
                    "x-proxmox-optional": true
                  },
                  "spice_enhancements": {
                    "type": "string",
                    "description": "Configure additional enhancements for SPICE.",
                    "x-proxmox-typetext": "[foldersharing=<1|0>] [,videostreaming=<off|all|filter>]",
                    "x-proxmox-optional": true
                  },
                  "sshkeys": {
                    "type": "string",
                    "description": "cloud-init: Setup public SSH keys (one key per line, OpenSSH format).",
                    "format": "urlencoded",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "startdate": {
                    "type": "string",
                    "description": "Set the initial date of the real time clock. Valid format for date are:'now' or '2006-06-17T16:01:21' or '2006-06-17'.",
                    "default": "now",
                    "pattern": "(now|\\d{4}-\\d{1,2}-\\d{1,2}(T\\d{1,2}:\\d{1,2}:\\d{1,2})?)",
                    "x-proxmox-typetext": "(now | YYYY-MM-DD | YYYY-MM-DDTHH:MM:SS)",
                    "x-proxmox-optional": true
                  },
                  "startup": {
                    "type": "string",
                    "description": "Startup and shutdown behavior. Order is a non-negative number defining the general startup order. Shutdown in done with reverse ordering. Additionally you can set the 'up' or 'down' delay in seconds, which specifies a delay to wait before the next VM is started or stopped.",
                    "format": "pve-startup-order",
                    "x-proxmox-typetext": "[[order=]\\d+] [,up=\\d+] [,down=\\d+] ",
                    "x-proxmox-optional": true
                  },
                  "tablet": {
                    "type": "boolean",
                    "description": "Enable/disable the USB tablet device.\n\nEnable/disable the USB tablet device. This device is usually needed to allow absolute mouse positioning with VNC. Else the mouse runs out of sync with normal VNC clients. If you're running lots of console-only guests on one host, you may consider disabling this to save some context switches. This is turned off by default if you use spice (`qm set <vmid> --vga qxl`).",
                    "default": true,
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "tags": {
                    "type": "string",
                    "description": "Tags of the VM. This is only meta information.",
                    "format": "pve-tag-list",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "tdf": {
                    "type": "boolean",
                    "description": "Enable/disable time drift fix.",
                    "default": false,
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "template": {
                    "type": "boolean",
                    "description": "Enable/disable Template.",
                    "default": false,
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "tpmstate0": {
                    "type": "string",
                    "description": "Configure a Disk for storing TPM state. The format is fixed to 'raw'. Use the special syntax STORAGE_ID:SIZE_IN_GiB to allocate a new volume. Note that SIZE_IN_GiB is ignored here and 4 MiB will be used instead. Use STORAGE_ID:0 and the 'import-from' parameter to import from an existing volume.",
                    "x-proxmox-typetext": "[file=]<volume> [,import-from=<source volume>] [,size=<DiskSize>] [,version=<v1.2|v2.0>]",
                    "x-proxmox-optional": true
                  },
                  "unused[n]": {
                    "type": "string",
                    "description": "Reference to unused volumes. This is used internally, and should not be modified manually.",
                    "x-proxmox-typetext": "[file=]<volume>",
                    "x-proxmox-optional": true
                  },
                  "usb[n]": {
                    "type": "string",
                    "description": "Configure an USB device (n is 0 to 4, for machine version >= 7.1 and ostype l26 or windows > 7, n can be up to 14).",
                    "x-proxmox-typetext": "[[host=]<HOSTUSBDEVICE|spice>] [,mapping=<mapping-id>] [,usb3=<1|0>]",
                    "x-proxmox-optional": true
                  },
                  "vcpus": {
                    "type": "integer",
                    "description": "Number of hotplugged vcpus.",
                    "default": 0,
                    "minimum": 1,
                    "x-proxmox-typetext": "<integer> (1 - N)",
                    "x-proxmox-optional": true
                  },
                  "vga": {
                    "type": "string",
                    "description": "Configure the VGA hardware.\n\nConfigure the VGA Hardware. If you want to use high resolution modes (>= 1280x1024x16) you may need to increase the vga memory option. Since QEMU 2.9 the default VGA display type is 'std' for all OS types besides some Windows versions (XP and older) which use 'cirrus'. The 'qxl' option enables the SPICE display server. For win* OS you can select how many independent displays you want, Linux guests can add displays them self.\nYou can also run without any graphic card, using a serial device as terminal.",
                    "x-proxmox-typetext": "[[type=]<enum>] [,clipboard=<vnc>] [,memory=<integer>]",
                    "x-proxmox-optional": true
                  },
                  "virtio[n]": {
                    "type": "string",
                    "description": "Use volume as VIRTIO hard disk (n is 0 to 15). Use the special syntax STORAGE_ID:SIZE_IN_GiB to allocate a new volume. Use STORAGE_ID:0 and the 'import-from' parameter to import from an existing volume.",
                    "x-proxmox-typetext": "[file=]<volume> [,aio=<native|threads|io_uring>] [,backup=<1|0>] [,bps=<bps>] [,bps_max_length=<seconds>] [,bps_rd=<bps>] [,bps_rd_max_length=<seconds>] [,bps_wr=<bps>] [,bps_wr_max_length=<seconds>] [,cache=<enum>] [,detect_zeroes=<1|0>] [,discard=<ignore|on>] [,format=<enum>] [,import-from=<source volume>] [,iops=<iops>] [,iops_max=<iops>] [,iops_max_length=<seconds>] [,iops_rd=<iops>] [,iops_rd_max=<iops>] [,iops_rd_max_length=<seconds>] [,iops_wr=<iops>] [,iops_wr_max=<iops>] [,iops_wr_max_length=<seconds>] [,iothread=<1|0>] [,mbps=<mbps>] [,mbps_max=<mbps>] [,mbps_rd=<mbps>] [,mbps_rd_max=<mbps>] [,mbps_wr=<mbps>] [,mbps_wr_max=<mbps>] [,media=<cdrom|disk>] [,replicate=<1|0>] [,rerror=<ignore|report|stop>] [,ro=<1|0>] [,serial=<serial>] [,shared=<1|0>] [,size=<DiskSize>] [,snapshot=<1|0>] [,werror=<enum>]",
                    "x-proxmox-optional": true
                  },
                  "virtiofs[n]": {
                    "type": "string",
                    "description": "Configuration for sharing a directory between host and guest using Virtio-fs.",
                    "x-proxmox-typetext": "[dirid=]<mapping-id> [,cache=<enum>] [,direct-io=<1|0>] [,expose-acl=<1|0>] [,expose-xattr=<1|0>]",
                    "x-proxmox-optional": true
                  },
                  "vmgenid": {
                    "type": "string",
                    "description": "Set VM Generation ID. Use '1' to autogenerate on create or update, pass '0' to disable explicitly.\n\nThe VM generation ID (vmgenid) device exposes a 128-bit integer value identifier to the guest OS. This allows to notify the guest operating system when the virtual machine is executed with a different configuration (e.g. snapshot execution or creation from a template). The guest operating system notices the change, and is then able to react as appropriate by marking its copies of distributed databases as dirty, re-initializing its random number generator, etc.\nNote that auto-creation only works when done through API/CLI create or update methods, but not when manually editing the config file.",
                    "default": "1 (autogenerated)",
                    "pattern": "(?:[a-fA-F0-9]{8}(?:-[a-fA-F0-9]{4}){3}-[a-fA-F0-9]{12}|[01])",
                    "x-proxmox-format-description": "UUID",
                    "x-proxmox-optional": true
                  },
                  "vmstatestorage": {
                    "type": "string",
                    "description": "Default storage for VM state volumes/files.",
                    "format": "pve-storage-id",
                    "x-proxmox-format-description": "storage ID",
                    "x-proxmox-typetext": "<storage ID>",
                    "x-proxmox-optional": true
                  },
                  "watchdog": {
                    "type": "string",
                    "description": "Create a virtual hardware watchdog device.\n\nCreate a virtual hardware watchdog device. Once enabled (by a guest action), the watchdog must be periodically polled by an agent inside the guest or else the watchdog will reset the guest (or execute the respective action specified)",
                    "format": "pve-qm-watchdog",
                    "x-proxmox-typetext": "[[model=]<i6300esb|ib700>] [,action=<enum>]",
                    "x-proxmox-optional": true
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/vms/{vmid}",
                [
                  "VM.Config.Disk",
                  "VM.Config.CDROM",
                  "VM.Config.CPU",
                  "VM.Config.Memory",
                  "VM.Config.Network",
                  "VM.Config.HWType",
                  "VM.Config.Options",
                  "VM.Config.Cloudinit"
                ],
                "any",
                1
              ]
            }
          ]
        }
      },
      "put": {
        "operationId": "put-nodes-node-qemu-vmid-config",
        "summary": "update_vm",
        "description": "Set virtual machine options (synchronous API) - You should consider using the POST method instead for any actions involving hotplug or storage allocation.",
        "tags": [
          "/nodes/{node}/qemu/{vmid}/config"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "put-nodes-node-qemu-vmid-config",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "description": "The (unique) ID of the VM.",
            "schema": {
              "type": "integer",
              "description": "The (unique) ID of the VM.",
              "minimum": 100,
              "maximum": 999999999,
              "format": "pve-vmid",
              "x-proxmox-typetext": "<integer> (100 - 999999999)"
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "acpi": {
                    "type": "boolean",
                    "description": "Enable/disable ACPI.",
                    "default": true,
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "affinity": {
                    "type": "string",
                    "description": "List of host cores used to execute guest processes, for example: 0,5,8-11",
                    "format": "pve-cpuset",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "agent": {
                    "type": "string",
                    "description": "Enable/disable communication with the QEMU Guest Agent and its properties.",
                    "x-proxmox-typetext": "[enabled=]<1|0> [,freeze-fs-on-backup=<1|0>] [,fstrim_cloned_disks=<1|0>] [,type=<virtio|isa>]",
                    "x-proxmox-optional": true
                  },
                  "amd-sev": {
                    "type": "string",
                    "description": "Secure Encrypted Virtualization (SEV) features by AMD CPUs",
                    "format": "pve-qemu-sev-fmt",
                    "x-proxmox-typetext": "[type=]<sev-type> [,allow-smt=<1|0>] [,kernel-hashes=<1|0>] [,no-debug=<1|0>] [,no-key-sharing=<1|0>]",
                    "x-proxmox-optional": true
                  },
                  "arch": {
                    "type": "string",
                    "description": "Virtual processor architecture. Defaults to the host.",
                    "enum": [
                      "x86_64",
                      "aarch64"
                    ],
                    "x-proxmox-optional": true
                  },
                  "args": {
                    "type": "string",
                    "description": "Arbitrary arguments passed to kvm.\n\nArbitrary arguments passed to kvm, for example:\n\nargs: -no-reboot -smbios 'type=0,vendor=FOO'\n\nNOTE: this option is for experts only.\n",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "audio0": {
                    "type": "string",
                    "description": "Configure a audio device, useful in combination with QXL/Spice.",
                    "x-proxmox-typetext": "device=<ich9-intel-hda|intel-hda|AC97> [,driver=<spice|none>]",
                    "x-proxmox-optional": true
                  },
                  "autostart": {
                    "type": "boolean",
                    "description": "Automatic restart after crash (currently ignored).",
                    "default": false,
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "balloon": {
                    "type": "integer",
                    "description": "Amount of target RAM for the VM in MiB. Using zero disables the ballon driver.",
                    "minimum": 0,
                    "x-proxmox-typetext": "<integer> (0 - N)",
                    "x-proxmox-optional": true
                  },
                  "bios": {
                    "type": "string",
                    "description": "Select BIOS implementation.",
                    "enum": [
                      "seabios",
                      "ovmf"
                    ],
                    "default": "seabios",
                    "x-proxmox-optional": true
                  },
                  "boot": {
                    "type": "string",
                    "description": "Specify guest boot order. Use the 'order=' sub-property as usage with no key or 'legacy=' is deprecated.",
                    "format": "pve-qm-boot",
                    "x-proxmox-typetext": "[[legacy=]<[acdn]{1,4}>] [,order=<device[;device...]>]",
                    "x-proxmox-optional": true
                  },
                  "bootdisk": {
                    "type": "string",
                    "description": "Enable booting from specified disk. Deprecated: Use 'boot: order=foo;bar' instead.",
                    "pattern": "(ide|sata|scsi|virtio)\\d+",
                    "format": "pve-qm-bootdisk",
                    "x-proxmox-optional": true
                  },
                  "cdrom": {
                    "type": "string",
                    "description": "This is an alias for option -ide2",
                    "format": "pve-qm-ide",
                    "x-proxmox-typetext": "<volume>",
                    "x-proxmox-optional": true
                  },
                  "cicustom": {
                    "type": "string",
                    "description": "cloud-init: Specify custom files to replace the automatically generated ones at start.",
                    "format": "pve-qm-cicustom",
                    "x-proxmox-typetext": "[meta=<volume>] [,network=<volume>] [,user=<volume>] [,vendor=<volume>]",
                    "x-proxmox-optional": true
                  },
                  "cipassword": {
                    "type": "string",
                    "description": "cloud-init: Password to assign the user. Using this is generally not recommended. Use ssh keys instead. Also note that older cloud-init versions do not support hashed passwords.",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "citype": {
                    "type": "string",
                    "description": "Specifies the cloud-init configuration format. The default depends on the configured operating system type (`ostype`. We use the `nocloud` format for Linux, and `configdrive2` for windows.",
                    "enum": [
                      "configdrive2",
                      "nocloud",
                      "opennebula"
                    ],
                    "x-proxmox-optional": true
                  },
                  "ciupgrade": {
                    "type": "boolean",
                    "description": "cloud-init: do an automatic package upgrade after the first boot.",
                    "default": true,
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "ciuser": {
                    "type": "string",
                    "description": "cloud-init: User name to change ssh keys and password for instead of the image's configured default user.",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "cores": {
                    "type": "integer",
                    "description": "The number of cores per socket.",
                    "default": 1,
                    "minimum": 1,
                    "x-proxmox-typetext": "<integer> (1 - N)",
                    "x-proxmox-optional": true
                  },
                  "cpu": {
                    "type": "string",
                    "description": "Emulated CPU type.",
                    "format": "pve-vm-cpu-conf",
                    "x-proxmox-typetext": "[[cputype=]<string>] [,flags=<+FLAG[;-FLAG...]>] [,hidden=<1|0>] [,hv-vendor-id=<vendor-id>] [,phys-bits=<8-64|host>] [,reported-model=<enum>]",
                    "x-proxmox-optional": true
                  },
                  "cpulimit": {
                    "type": "number",
                    "description": "Limit of CPU usage.\n\nLimit of CPU usage.\n\nNOTE: If the computer has 2 CPUs, it has total of '2' CPU time. Value '0' indicates no CPU limit.",
                    "default": 0,
                    "minimum": 0,
                    "maximum": 128,
                    "x-proxmox-typetext": "<number> (0 - 128)",
                    "x-proxmox-optional": true
                  },
                  "cpuunits": {
                    "type": "integer",
                    "description": "CPU weight for a VM, will be clamped to [1, 10000] in cgroup v2.\n\nCPU weight for a VM. Argument is used in the kernel fair scheduler. The larger the number is, the more CPU time this VM gets. Number is relative to weights of all the other running VMs.",
                    "default": "cgroup v1: 1024, cgroup v2: 100",
                    "minimum": 1,
                    "maximum": 262144,
                    "x-proxmox-typetext": "<integer> (1 - 262144)",
                    "x-proxmox-optional": true
                  },
                  "delete": {
                    "type": "string",
                    "description": "A list of settings you want to delete.",
                    "format": "pve-configid-list",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "description": {
                    "type": "string",
                    "description": "Description for the VM. Shown in the web-interface VM's summary. This is saved as comment inside the configuration file.",
                    "maxLength": 8192,
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "digest": {
                    "type": "string",
                    "description": "Prevent changes if current configuration file has different SHA1 digest. This can be used to prevent concurrent modifications.",
                    "maxLength": 40,
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "efidisk0": {
                    "type": "string",
                    "description": "Configure a disk for storing EFI vars. Use the special syntax STORAGE_ID:SIZE_IN_GiB to allocate a new volume. Note that SIZE_IN_GiB is ignored here and that the default EFI vars are copied to the volume instead. Use STORAGE_ID:0 and the 'import-from' parameter to import from an existing volume.",
                    "x-proxmox-typetext": "[file=]<volume> [,efitype=<2m|4m>] [,format=<enum>] [,import-from=<source volume>] [,pre-enrolled-keys=<1|0>] [,size=<DiskSize>]",
                    "x-proxmox-optional": true
                  },
                  "force": {
                    "type": "boolean",
                    "description": "Force physical removal. Without this, we simple remove the disk from the config file and create an additional configuration entry called 'unused[n]', which contains the volume ID. Unlink of unused[n] always cause physical removal.",
                    "x-proxmox-requires": [
                      "delete"
                    ],
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "freeze": {
                    "type": "boolean",
                    "description": "Freeze CPU at startup (use 'c' monitor command to start execution).",
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "hookscript": {
                    "type": "string",
                    "description": "Script that will be executed during various steps in the vms lifetime.",
                    "format": "pve-volume-id",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "hostpci[n]": {
                    "type": "string",
                    "description": "Map host PCI devices into guest.\n\nMap host PCI devices into guest.\n\nNOTE: This option allows direct access to host hardware. So it is no longer\npossible to migrate such machines - use with special care.\n\nCAUTION: Experimental! User reported problems with this option.\n",
                    "format": "pve-qm-hostpci",
                    "x-proxmox-typetext": "[[host=]<HOSTPCIID[;HOSTPCIID2...]>] [,device-id=<hex id>] [,legacy-igd=<1|0>] [,mapping=<mapping-id>] [,mdev=<string>] [,pcie=<1|0>] [,rombar=<1|0>] [,romfile=<string>] [,sub-device-id=<hex id>] [,sub-vendor-id=<hex id>] [,vendor-id=<hex id>] [,x-vga=<1|0>]",
                    "x-proxmox-optional": true
                  },
                  "hotplug": {
                    "type": "string",
                    "description": "Selectively enable hotplug features. This is a comma separated list of hotplug features: 'network', 'disk', 'cpu', 'memory', 'usb' and 'cloudinit'. Use '0' to disable hotplug completely. Using '1' as value is an alias for the default `network,disk,usb`. USB hotplugging is possible for guests with machine version >= 7.1 and ostype l26 or windows > 7.",
                    "default": "network,disk,usb",
                    "format": "pve-hotplug-features",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "hugepages": {
                    "type": "string",
                    "description": "Enable/disable hugepages memory.",
                    "enum": [
                      "any",
                      "2",
                      "1024"
                    ],
                    "x-proxmox-optional": true
                  },
                  "ide[n]": {
                    "type": "string",
                    "description": "Use volume as IDE hard disk or CD-ROM (n is 0 to 3). Use the special syntax STORAGE_ID:SIZE_IN_GiB to allocate a new volume. Use STORAGE_ID:0 and the 'import-from' parameter to import from an existing volume.",
                    "x-proxmox-typetext": "[file=]<volume> [,aio=<native|threads|io_uring>] [,backup=<1|0>] [,bps=<bps>] [,bps_max_length=<seconds>] [,bps_rd=<bps>] [,bps_rd_max_length=<seconds>] [,bps_wr=<bps>] [,bps_wr_max_length=<seconds>] [,cache=<enum>] [,detect_zeroes=<1|0>] [,discard=<ignore|on>] [,format=<enum>] [,import-from=<source volume>] [,iops=<iops>] [,iops_max=<iops>] [,iops_max_length=<seconds>] [,iops_rd=<iops>] [,iops_rd_max=<iops>] [,iops_rd_max_length=<seconds>] [,iops_wr=<iops>] [,iops_wr_max=<iops>] [,iops_wr_max_length=<seconds>] [,mbps=<mbps>] [,mbps_max=<mbps>] [,mbps_rd=<mbps>] [,mbps_rd_max=<mbps>] [,mbps_wr=<mbps>] [,mbps_wr_max=<mbps>] [,media=<cdrom|disk>] [,model=<model>] [,replicate=<1|0>] [,rerror=<ignore|report|stop>] [,serial=<serial>] [,shared=<1|0>] [,size=<DiskSize>] [,snapshot=<1|0>] [,ssd=<1|0>] [,werror=<enum>] [,wwn=<wwn>]",
                    "x-proxmox-optional": true
                  },
                  "ipconfig[n]": {
                    "type": "string",
                    "description": "cloud-init: Specify IP addresses and gateways for the corresponding interface.\n\nIP addresses use CIDR notation, gateways are optional but need an IP of the same type specified.\n\nThe special string 'dhcp' can be used for IP addresses to use DHCP, in which case no explicit\ngateway should be provided.\nFor IPv6 the special string 'auto' can be used to use stateless autoconfiguration. This requires\ncloud-init 19.4 or newer.\n\nIf cloud-init is enabled and neither an IPv4 nor an IPv6 address is specified, it defaults to using\ndhcp on IPv4.\n",
                    "format": "pve-qm-ipconfig",
                    "x-proxmox-typetext": "[gw=<GatewayIPv4>] [,gw6=<GatewayIPv6>] [,ip=<IPv4Format/CIDR>] [,ip6=<IPv6Format/CIDR>]",
                    "x-proxmox-optional": true
                  },
                  "ivshmem": {
                    "type": "string",
                    "description": "Inter-VM shared memory. Useful for direct communication between VMs, or to the host.",
                    "x-proxmox-typetext": "size=<integer> [,name=<string>]",
                    "x-proxmox-optional": true
                  },
                  "keephugepages": {
                    "type": "boolean",
                    "description": "Use together with hugepages. If enabled, hugepages will not not be deleted after VM shutdown and can be used for subsequent starts.",
                    "default": false,
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "keyboard": {
                    "type": "string",
                    "description": "Keyboard layout for VNC server. This option is generally not required and is often better handled from within the guest OS.",
                    "enum": [
                      "de",
                      "de-ch",
                      "da",
                      "en-gb",
                      "en-us",
                      "es",
                      "fi",
                      "fr",
                      "fr-be",
                      "fr-ca",
                      "fr-ch",
                      "hu",
                      "is",
                      "it",
                      "ja",
                      "lt",
                      "mk",
                      "nl",
                      "no",
                      "pl",
                      "pt",
                      "pt-br",
                      "sv",
                      "sl",
                      "tr"
                    ],
                    "default": null,
                    "x-proxmox-optional": true
                  },
                  "kvm": {
                    "type": "boolean",
                    "description": "Enable/disable KVM hardware virtualization.",
                    "default": true,
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "localtime": {
                    "type": "boolean",
                    "description": "Set the real time clock (RTC) to local time. This is enabled by default if the `ostype` indicates a Microsoft Windows OS.",
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "lock": {
                    "type": "string",
                    "description": "Lock/unlock the VM.",
                    "enum": [
                      "backup",
                      "clone",
                      "create",
                      "migrate",
                      "rollback",
                      "snapshot",
                      "snapshot-delete",
                      "suspending",
                      "suspended"
                    ],
                    "x-proxmox-optional": true
                  },
                  "machine": {
                    "type": "string",
                    "description": "Specify the QEMU machine.",
                    "x-proxmox-typetext": "[[type=]<machine type>] [,enable-s3=<1|0>] [,enable-s4=<1|0>] [,viommu=<intel|virtio>]",
                    "x-proxmox-optional": true
                  },
                  "memory": {
                    "type": "string",
                    "description": "Memory properties.",
                    "x-proxmox-typetext": "[current=]<integer>",
                    "x-proxmox-optional": true
                  },
                  "migrate_downtime": {
                    "type": "number",
                    "description": "Set maximum tolerated downtime (in seconds) for migrations. Should the migration not be able to converge in the very end, because too much newly dirtied RAM needs to be transferred, the limit will be increased automatically step-by-step until migration can converge.",
                    "default": 0.1,
                    "minimum": 0,
                    "x-proxmox-typetext": "<number> (0 - N)",
                    "x-proxmox-optional": true
                  },
                  "migrate_speed": {
                    "type": "integer",
                    "description": "Set maximum speed (in MB/s) for migrations. Value 0 is no limit.",
                    "default": 0,
                    "minimum": 0,
                    "x-proxmox-typetext": "<integer> (0 - N)",
                    "x-proxmox-optional": true
                  },
                  "name": {
                    "type": "string",
                    "description": "Set a name for the VM. Only used on the configuration web interface.",
                    "format": "dns-name",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "nameserver": {
                    "type": "string",
                    "description": "cloud-init: Sets DNS server IP address for a container. Create will automatically use the setting from the host if neither searchdomain nor nameserver are set.",
                    "format": "address-list",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "net[n]": {
                    "type": "string",
                    "description": "Specify network devices.",
                    "x-proxmox-typetext": "[model=]<enum> [,bridge=<bridge>] [,firewall=<1|0>] [,link_down=<1|0>] [,macaddr=<XX:XX:XX:XX:XX:XX>] [,mtu=<integer>] [,queues=<integer>] [,rate=<number>] [,tag=<integer>] [,trunks=<vlanid[;vlanid...]>] [,<model>=<macaddr>]",
                    "x-proxmox-optional": true
                  },
                  "numa": {
                    "type": "boolean",
                    "description": "Enable/disable NUMA.",
                    "default": false,
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "numa[n]": {
                    "type": "string",
                    "description": "NUMA topology.",
                    "x-proxmox-typetext": "cpus=<id[-id];...> [,hostnodes=<id[-id];...>] [,memory=<number>] [,policy=<preferred|bind|interleave>]",
                    "x-proxmox-optional": true
                  },
                  "onboot": {
                    "type": "boolean",
                    "description": "Specifies whether a VM will be started during system bootup.",
                    "default": false,
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "ostype": {
                    "type": "string",
                    "description": "Specify guest operating system.\n\nSpecify guest operating system. This is used to enable special\noptimization/features for specific operating systems:\n\n[horizontal]\nother;; unspecified OS\nwxp;; Microsoft Windows XP\nw2k;; Microsoft Windows 2000\nw2k3;; Microsoft Windows 2003\nw2k8;; Microsoft Windows 2008\nwvista;; Microsoft Windows Vista\nwin7;; Microsoft Windows 7\nwin8;; Microsoft Windows 8/2012/2012r2\nwin10;; Microsoft Windows 10/2016/2019\nwin11;; Microsoft Windows 11/2022/2025\nl24;; Linux 2.4 Kernel\nl26;; Linux 2.6 - 6.X Kernel\nsolaris;; Solaris/OpenSolaris/OpenIndiania kernel\n",
                    "enum": [
                      "other",
                      "wxp",
                      "w2k",
                      "w2k3",
                      "w2k8",
                      "wvista",
                      "win7",
                      "win8",
                      "win10",
                      "win11",
                      "l24",
                      "l26",
                      "solaris"
                    ],
                    "x-proxmox-optional": true
                  },
                  "parallel[n]": {
                    "type": "string",
                    "description": "Map host parallel devices (n is 0 to 2).\n\nMap host parallel devices (n is 0 to 2).\n\nNOTE: This option allows direct access to host hardware. So it is no longer possible to migrate such\nmachines - use with special care.\n\nCAUTION: Experimental! User reported problems with this option.\n",
                    "pattern": "/dev/parport\\d+|/dev/usb/lp\\d+",
                    "x-proxmox-optional": true
                  },
                  "protection": {
                    "type": "boolean",
                    "description": "Sets the protection flag of the VM. This will disable the remove VM and remove disk operations.",
                    "default": false,
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "reboot": {
                    "type": "boolean",
                    "description": "Allow reboot. If set to '0' the VM exit on reboot.",
                    "default": true,
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "revert": {
                    "type": "string",
                    "description": "Revert a pending change.",
                    "format": "pve-configid-list",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "rng0": {
                    "type": "string",
                    "description": "Configure a VirtIO-based Random Number Generator.",
                    "format": "pve-qm-rng",
                    "x-proxmox-typetext": "[source=]</dev/urandom|/dev/random|/dev/hwrng> [,max_bytes=<integer>] [,period=<integer>]",
                    "x-proxmox-optional": true
                  },
                  "sata[n]": {
                    "type": "string",
                    "description": "Use volume as SATA hard disk or CD-ROM (n is 0 to 5). Use the special syntax STORAGE_ID:SIZE_IN_GiB to allocate a new volume. Use STORAGE_ID:0 and the 'import-from' parameter to import from an existing volume.",
                    "x-proxmox-typetext": "[file=]<volume> [,aio=<native|threads|io_uring>] [,backup=<1|0>] [,bps=<bps>] [,bps_max_length=<seconds>] [,bps_rd=<bps>] [,bps_rd_max_length=<seconds>] [,bps_wr=<bps>] [,bps_wr_max_length=<seconds>] [,cache=<enum>] [,detect_zeroes=<1|0>] [,discard=<ignore|on>] [,format=<enum>] [,import-from=<source volume>] [,iops=<iops>] [,iops_max=<iops>] [,iops_max_length=<seconds>] [,iops_rd=<iops>] [,iops_rd_max=<iops>] [,iops_rd_max_length=<seconds>] [,iops_wr=<iops>] [,iops_wr_max=<iops>] [,iops_wr_max_length=<seconds>] [,mbps=<mbps>] [,mbps_max=<mbps>] [,mbps_rd=<mbps>] [,mbps_rd_max=<mbps>] [,mbps_wr=<mbps>] [,mbps_wr_max=<mbps>] [,media=<cdrom|disk>] [,replicate=<1|0>] [,rerror=<ignore|report|stop>] [,serial=<serial>] [,shared=<1|0>] [,size=<DiskSize>] [,snapshot=<1|0>] [,ssd=<1|0>] [,werror=<enum>] [,wwn=<wwn>]",
                    "x-proxmox-optional": true
                  },
                  "scsi[n]": {
                    "type": "string",
                    "description": "Use volume as SCSI hard disk or CD-ROM (n is 0 to 30). Use the special syntax STORAGE_ID:SIZE_IN_GiB to allocate a new volume. Use STORAGE_ID:0 and the 'import-from' parameter to import from an existing volume.",
                    "x-proxmox-typetext": "[file=]<volume> [,aio=<native|threads|io_uring>] [,backup=<1|0>] [,bps=<bps>] [,bps_max_length=<seconds>] [,bps_rd=<bps>] [,bps_rd_max_length=<seconds>] [,bps_wr=<bps>] [,bps_wr_max_length=<seconds>] [,cache=<enum>] [,detect_zeroes=<1|0>] [,discard=<ignore|on>] [,format=<enum>] [,import-from=<source volume>] [,iops=<iops>] [,iops_max=<iops>] [,iops_max_length=<seconds>] [,iops_rd=<iops>] [,iops_rd_max=<iops>] [,iops_rd_max_length=<seconds>] [,iops_wr=<iops>] [,iops_wr_max=<iops>] [,iops_wr_max_length=<seconds>] [,iothread=<1|0>] [,mbps=<mbps>] [,mbps_max=<mbps>] [,mbps_rd=<mbps>] [,mbps_rd_max=<mbps>] [,mbps_wr=<mbps>] [,mbps_wr_max=<mbps>] [,media=<cdrom|disk>] [,product=<product>] [,queues=<integer>] [,replicate=<1|0>] [,rerror=<ignore|report|stop>] [,ro=<1|0>] [,scsiblock=<1|0>] [,serial=<serial>] [,shared=<1|0>] [,size=<DiskSize>] [,snapshot=<1|0>] [,ssd=<1|0>] [,vendor=<vendor>] [,werror=<enum>] [,wwn=<wwn>]",
                    "x-proxmox-optional": true
                  },
                  "scsihw": {
                    "type": "string",
                    "description": "SCSI controller model",
                    "enum": [
                      "lsi",
                      "lsi53c810",
                      "virtio-scsi-pci",
                      "virtio-scsi-single",
                      "megasas",
                      "pvscsi"
                    ],
                    "default": "lsi",
                    "x-proxmox-optional": true
                  },
                  "searchdomain": {
                    "type": "string",
                    "description": "cloud-init: Sets DNS search domains for a container. Create will automatically use the setting from the host if neither searchdomain nor nameserver are set.",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "serial[n]": {
                    "type": "string",
                    "description": "Create a serial device inside the VM (n is 0 to 3)\n\nCreate a serial device inside the VM (n is 0 to 3), and pass through a\nhost serial device (i.e. /dev/ttyS0), or create a unix socket on the\nhost side (use 'qm terminal' to open a terminal connection).\n\nNOTE: If you pass through a host serial device, it is no longer possible to migrate such machines -\nuse with special care.\n\nCAUTION: Experimental! User reported problems with this option.\n",
                    "pattern": "(/dev/.+|socket)",
                    "x-proxmox-optional": true
                  },
                  "shares": {
                    "type": "integer",
                    "description": "Amount of memory shares for auto-ballooning. The larger the number is, the more memory this VM gets. Number is relative to weights of all other running VMs. Using zero disables auto-ballooning. Auto-ballooning is done by pvestatd.",
                    "default": 1000,
                    "minimum": 0,
                    "maximum": 50000,
                    "x-proxmox-typetext": "<integer> (0 - 50000)",
                    "x-proxmox-optional": true
                  },
                  "skiplock": {
                    "type": "boolean",
                    "description": "Ignore locks - only root is allowed to use this option.",
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "smbios1": {
                    "type": "string",
                    "description": "Specify SMBIOS type 1 fields.",
                    "maxLength": 512,
                    "format": "pve-qm-smbios1",
                    "x-proxmox-typetext": "[base64=<1|0>] [,family=<Base64 encoded string>] [,manufacturer=<Base64 encoded string>] [,product=<Base64 encoded string>] [,serial=<Base64 encoded string>] [,sku=<Base64 encoded string>] [,uuid=<UUID>] [,version=<Base64 encoded string>]",
                    "x-proxmox-optional": true
                  },
                  "smp": {
                    "type": "integer",
                    "description": "The number of CPUs. Please use option -sockets instead.",
                    "default": 1,
                    "minimum": 1,
                    "x-proxmox-typetext": "<integer> (1 - N)",
                    "x-proxmox-optional": true
                  },
                  "sockets": {
                    "type": "integer",
                    "description": "The number of CPU sockets.",
                    "default": 1,
                    "minimum": 1,
                    "x-proxmox-typetext": "<integer> (1 - N)",
                    "x-proxmox-optional": true
                  },
                  "spice_enhancements": {
                    "type": "string",
                    "description": "Configure additional enhancements for SPICE.",
                    "x-proxmox-typetext": "[foldersharing=<1|0>] [,videostreaming=<off|all|filter>]",
                    "x-proxmox-optional": true
                  },
                  "sshkeys": {
                    "type": "string",
                    "description": "cloud-init: Setup public SSH keys (one key per line, OpenSSH format).",
                    "format": "urlencoded",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "startdate": {
                    "type": "string",
                    "description": "Set the initial date of the real time clock. Valid format for date are:'now' or '2006-06-17T16:01:21' or '2006-06-17'.",
                    "default": "now",
                    "pattern": "(now|\\d{4}-\\d{1,2}-\\d{1,2}(T\\d{1,2}:\\d{1,2}:\\d{1,2})?)",
                    "x-proxmox-typetext": "(now | YYYY-MM-DD | YYYY-MM-DDTHH:MM:SS)",
                    "x-proxmox-optional": true
                  },
                  "startup": {
                    "type": "string",
                    "description": "Startup and shutdown behavior. Order is a non-negative number defining the general startup order. Shutdown in done with reverse ordering. Additionally you can set the 'up' or 'down' delay in seconds, which specifies a delay to wait before the next VM is started or stopped.",
                    "format": "pve-startup-order",
                    "x-proxmox-typetext": "[[order=]\\d+] [,up=\\d+] [,down=\\d+] ",
                    "x-proxmox-optional": true
                  },
                  "tablet": {
                    "type": "boolean",
                    "description": "Enable/disable the USB tablet device.\n\nEnable/disable the USB tablet device. This device is usually needed to allow absolute mouse positioning with VNC. Else the mouse runs out of sync with normal VNC clients. If you're running lots of console-only guests on one host, you may consider disabling this to save some context switches. This is turned off by default if you use spice (`qm set <vmid> --vga qxl`).",
                    "default": true,
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "tags": {
                    "type": "string",
                    "description": "Tags of the VM. This is only meta information.",
                    "format": "pve-tag-list",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "tdf": {
                    "type": "boolean",
                    "description": "Enable/disable time drift fix.",
                    "default": false,
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "template": {
                    "type": "boolean",
                    "description": "Enable/disable Template.",
                    "default": false,
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "tpmstate0": {
                    "type": "string",
                    "description": "Configure a Disk for storing TPM state. The format is fixed to 'raw'. Use the special syntax STORAGE_ID:SIZE_IN_GiB to allocate a new volume. Note that SIZE_IN_GiB is ignored here and 4 MiB will be used instead. Use STORAGE_ID:0 and the 'import-from' parameter to import from an existing volume.",
                    "x-proxmox-typetext": "[file=]<volume> [,import-from=<source volume>] [,size=<DiskSize>] [,version=<v1.2|v2.0>]",
                    "x-proxmox-optional": true
                  },
                  "unused[n]": {
                    "type": "string",
                    "description": "Reference to unused volumes. This is used internally, and should not be modified manually.",
                    "x-proxmox-typetext": "[file=]<volume>",
                    "x-proxmox-optional": true
                  },
                  "usb[n]": {
                    "type": "string",
                    "description": "Configure an USB device (n is 0 to 4, for machine version >= 7.1 and ostype l26 or windows > 7, n can be up to 14).",
                    "x-proxmox-typetext": "[[host=]<HOSTUSBDEVICE|spice>] [,mapping=<mapping-id>] [,usb3=<1|0>]",
                    "x-proxmox-optional": true
                  },
                  "vcpus": {
                    "type": "integer",
                    "description": "Number of hotplugged vcpus.",
                    "default": 0,
                    "minimum": 1,
                    "x-proxmox-typetext": "<integer> (1 - N)",
                    "x-proxmox-optional": true
                  },
                  "vga": {
                    "type": "string",
                    "description": "Configure the VGA hardware.\n\nConfigure the VGA Hardware. If you want to use high resolution modes (>= 1280x1024x16) you may need to increase the vga memory option. Since QEMU 2.9 the default VGA display type is 'std' for all OS types besides some Windows versions (XP and older) which use 'cirrus'. The 'qxl' option enables the SPICE display server. For win* OS you can select how many independent displays you want, Linux guests can add displays them self.\nYou can also run without any graphic card, using a serial device as terminal.",
                    "x-proxmox-typetext": "[[type=]<enum>] [,clipboard=<vnc>] [,memory=<integer>]",
                    "x-proxmox-optional": true
                  },
                  "virtio[n]": {
                    "type": "string",
                    "description": "Use volume as VIRTIO hard disk (n is 0 to 15). Use the special syntax STORAGE_ID:SIZE_IN_GiB to allocate a new volume. Use STORAGE_ID:0 and the 'import-from' parameter to import from an existing volume.",
                    "x-proxmox-typetext": "[file=]<volume> [,aio=<native|threads|io_uring>] [,backup=<1|0>] [,bps=<bps>] [,bps_max_length=<seconds>] [,bps_rd=<bps>] [,bps_rd_max_length=<seconds>] [,bps_wr=<bps>] [,bps_wr_max_length=<seconds>] [,cache=<enum>] [,detect_zeroes=<1|0>] [,discard=<ignore|on>] [,format=<enum>] [,import-from=<source volume>] [,iops=<iops>] [,iops_max=<iops>] [,iops_max_length=<seconds>] [,iops_rd=<iops>] [,iops_rd_max=<iops>] [,iops_rd_max_length=<seconds>] [,iops_wr=<iops>] [,iops_wr_max=<iops>] [,iops_wr_max_length=<seconds>] [,iothread=<1|0>] [,mbps=<mbps>] [,mbps_max=<mbps>] [,mbps_rd=<mbps>] [,mbps_rd_max=<mbps>] [,mbps_wr=<mbps>] [,mbps_wr_max=<mbps>] [,media=<cdrom|disk>] [,replicate=<1|0>] [,rerror=<ignore|report|stop>] [,ro=<1|0>] [,serial=<serial>] [,shared=<1|0>] [,size=<DiskSize>] [,snapshot=<1|0>] [,werror=<enum>]",
                    "x-proxmox-optional": true
                  },
                  "virtiofs[n]": {
                    "type": "string",
                    "description": "Configuration for sharing a directory between host and guest using Virtio-fs.",
                    "x-proxmox-typetext": "[dirid=]<mapping-id> [,cache=<enum>] [,direct-io=<1|0>] [,expose-acl=<1|0>] [,expose-xattr=<1|0>]",
                    "x-proxmox-optional": true
                  },
                  "vmgenid": {
                    "type": "string",
                    "description": "Set VM Generation ID. Use '1' to autogenerate on create or update, pass '0' to disable explicitly.\n\nThe VM generation ID (vmgenid) device exposes a 128-bit integer value identifier to the guest OS. This allows to notify the guest operating system when the virtual machine is executed with a different configuration (e.g. snapshot execution or creation from a template). The guest operating system notices the change, and is then able to react as appropriate by marking its copies of distributed databases as dirty, re-initializing its random number generator, etc.\nNote that auto-creation only works when done through API/CLI create or update methods, but not when manually editing the config file.",
                    "default": "1 (autogenerated)",
                    "pattern": "(?:[a-fA-F0-9]{8}(?:-[a-fA-F0-9]{4}){3}-[a-fA-F0-9]{12}|[01])",
                    "x-proxmox-format-description": "UUID",
                    "x-proxmox-optional": true
                  },
                  "vmstatestorage": {
                    "type": "string",
                    "description": "Default storage for VM state volumes/files.",
                    "format": "pve-storage-id",
                    "x-proxmox-format-description": "storage ID",
                    "x-proxmox-typetext": "<storage ID>",
                    "x-proxmox-optional": true
                  },
                  "watchdog": {
                    "type": "string",
                    "description": "Create a virtual hardware watchdog device.\n\nCreate a virtual hardware watchdog device. Once enabled (by a guest action), the watchdog must be periodically polled by an agent inside the guest or else the watchdog will reset the guest (or execute the respective action specified)",
                    "format": "pve-qm-watchdog",
                    "x-proxmox-typetext": "[[model=]<i6300esb|ib700>] [,action=<enum>]",
                    "x-proxmox-optional": true
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/vms/{vmid}",
                [
                  "VM.Config.Disk",
                  "VM.Config.CDROM",
                  "VM.Config.CPU",
                  "VM.Config.Memory",
                  "VM.Config.Network",
                  "VM.Config.HWType",
                  "VM.Config.Options",
                  "VM.Config.Cloudinit"
                ],
                "any",
                1
              ]
            }
          ]
        }
      }
    },
    "/nodes/{node}/qemu/{vmid}/dbus-vmstate": {
      "post": {
        "operationId": "post-nodes-node-qemu-vmid-dbus-vmstate",
        "summary": "dbus_vmstate",
        "description": "Stop the dbus-vmstate helper for the given VM if running.",
        "tags": [
          "/nodes/{node}/qemu/{vmid}/dbus-vmstate"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "post-nodes-node-qemu-vmid-dbus-vmstate",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "description": "The (unique) ID of the VM.",
            "schema": {
              "type": "integer",
              "description": "The (unique) ID of the VM.",
              "minimum": 100,
              "maximum": 999999999,
              "format": "pve-vmid",
              "x-proxmox-typetext": "<integer> (100 - 999999999)"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "action": {
                    "type": "string",
                    "description": "Action to perform on the DBus VMState helper.",
                    "enum": [
                      "start",
                      "stop"
                    ],
                    "x-proxmox-optional": false
                  }
                },
                "required": [
                  "action"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "security": [],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/vms/{vmid}",
                [
                  "VM.Migrate"
                ]
              ]
            }
          ]
        }
      }
    },
    "/nodes/{node}/qemu/{vmid}/feature": {
      "get": {
        "operationId": "get-nodes-node-qemu-vmid-feature",
        "summary": "vm_feature",
        "description": "Check if feature for virtual machine is available.",
        "tags": [
          "/nodes/{node}/qemu/{vmid}/feature"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hasFeature": {
                      "type": "boolean"
                    },
                    "nodes": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "hasFeature",
                    "nodes"
                  ]
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-nodes-node-qemu-vmid-feature",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "feature",
            "in": "query",
            "required": true,
            "description": "Feature to check.",
            "schema": {
              "type": "string",
              "description": "Feature to check.",
              "enum": [
                "snapshot",
                "clone",
                "copy"
              ]
            }
          },
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "snapname",
            "in": "query",
            "required": false,
            "description": "The name of the snapshot.",
            "schema": {
              "type": "string",
              "description": "The name of the snapshot.",
              "maxLength": 40,
              "format": "pve-configid",
              "x-proxmox-typetext": "<string>",
              "x-proxmox-optional": true
            }
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "description": "The (unique) ID of the VM.",
            "schema": {
              "type": "integer",
              "description": "The (unique) ID of the VM.",
              "minimum": 100,
              "maximum": 999999999,
              "format": "pve-vmid",
              "x-proxmox-typetext": "<integer> (100 - 999999999)"
            }
          }
        ],
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/vms/{vmid}",
                [
                  "VM.Audit"
                ]
              ]
            }
          ]
        }
      }
    },
    "/nodes/{node}/qemu/{vmid}/firewall": {
      "get": {
        "operationId": "get-nodes-node-qemu-vmid-firewall",
        "summary": "index",
        "description": "Directory index.",
        "tags": [
          "/nodes/{node}/qemu/{vmid}/firewall"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  },
                  "x-proxmox-metadata": {
                    "links": [
                      {
                        "href": "{name}",
                        "rel": "child"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-nodes-node-qemu-vmid-firewall",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "description": "The (unique) ID of the VM.",
            "schema": {
              "type": "integer",
              "description": "The (unique) ID of the VM.",
              "minimum": 100,
              "maximum": 999999999,
              "format": "pve-vmid",
              "x-proxmox-typetext": "<integer> (100 - 999999999)"
            }
          }
        ],
        "security": [],
        "x-proxmox-permissions": {
          "all": [
            {
              "user": "all"
            }
          ]
        }
      }
    },
    "/nodes/{node}/qemu/{vmid}/firewall/aliases": {
      "get": {
        "operationId": "get-nodes-node-qemu-vmid-firewall-aliases",
        "summary": "get_aliases",
        "description": "List aliases",
        "tags": [
          "/nodes/{node}/qemu/{vmid}/firewall/aliases"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "cidr": {
                        "type": "string"
                      },
                      "comment": {
                        "type": "string",
                        "x-proxmox-optional": true
                      },
                      "digest": {
                        "type": "string",
                        "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
                        "maxLength": 64,
                        "x-proxmox-optional": false
                      },
                      "name": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "cidr",
                      "digest",
                      "name"
                    ]
                  },
                  "x-proxmox-metadata": {
                    "links": [
                      {
                        "href": "{name}",
                        "rel": "child"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-nodes-node-qemu-vmid-firewall-aliases",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "description": "The (unique) ID of the VM.",
            "schema": {
              "type": "integer",
              "description": "The (unique) ID of the VM.",
              "minimum": 100,
              "maximum": 999999999,
              "format": "pve-vmid",
              "x-proxmox-typetext": "<integer> (100 - 999999999)"
            }
          }
        ],
        "security": [],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/vms/{vmid}",
                [
                  "VM.Audit"
                ]
              ]
            }
          ]
        }
      },
      "post": {
        "operationId": "post-nodes-node-qemu-vmid-firewall-aliases",
        "summary": "create_alias",
        "description": "Create IP or Network Alias.",
        "tags": [
          "/nodes/{node}/qemu/{vmid}/firewall/aliases"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "post-nodes-node-qemu-vmid-firewall-aliases",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "description": "The (unique) ID of the VM.",
            "schema": {
              "type": "integer",
              "description": "The (unique) ID of the VM.",
              "minimum": 100,
              "maximum": 999999999,
              "format": "pve-vmid",
              "x-proxmox-typetext": "<integer> (100 - 999999999)"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "cidr": {
                    "type": "string",
                    "description": "Network/IP specification in CIDR format.",
                    "format": "IPorCIDR",
                    "x-proxmox-typetext": "<string>"
                  },
                  "comment": {
                    "type": "string",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "name": {
                    "type": "string",
                    "description": "Alias name.",
                    "minLength": 2,
                    "maxLength": 64,
                    "pattern": "[A-Za-z][A-Za-z0-9\\-\\_]+"
                  }
                },
                "required": [
                  "cidr",
                  "name"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/vms/{vmid}",
                [
                  "VM.Config.Network"
                ]
              ]
            }
          ]
        }
      }
    },
    "/nodes/{node}/qemu/{vmid}/firewall/aliases/{name}": {
      "delete": {
        "operationId": "delete-nodes-node-qemu-vmid-firewall-aliases-name",
        "summary": "remove_alias",
        "description": "Remove IP or Network alias.",
        "tags": [
          "/nodes/{node}/qemu/{vmid}/firewall/aliases/{name}"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "delete-nodes-node-qemu-vmid-firewall-aliases-name",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "digest",
            "in": "query",
            "required": false,
            "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
            "schema": {
              "type": "string",
              "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
              "maxLength": 64,
              "x-proxmox-typetext": "<string>",
              "x-proxmox-optional": true
            }
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "description": "Alias name.",
            "schema": {
              "type": "string",
              "description": "Alias name.",
              "minLength": 2,
              "maxLength": 64,
              "pattern": "[A-Za-z][A-Za-z0-9\\-\\_]+"
            }
          },
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "description": "The (unique) ID of the VM.",
            "schema": {
              "type": "integer",
              "description": "The (unique) ID of the VM.",
              "minimum": 100,
              "maximum": 999999999,
              "format": "pve-vmid",
              "x-proxmox-typetext": "<integer> (100 - 999999999)"
            }
          }
        ],
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/vms/{vmid}",
                [
                  "VM.Config.Network"
                ]
              ]
            }
          ]
        }
      },
      "get": {
        "operationId": "get-nodes-node-qemu-vmid-firewall-aliases-name",
        "summary": "read_alias",
        "description": "Read alias.",
        "tags": [
          "/nodes/{node}/qemu/{vmid}/firewall/aliases/{name}"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-nodes-node-qemu-vmid-firewall-aliases-name",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "description": "Alias name.",
            "schema": {
              "type": "string",
              "description": "Alias name.",
              "minLength": 2,
              "maxLength": 64,
              "pattern": "[A-Za-z][A-Za-z0-9\\-\\_]+"
            }
          },
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "description": "The (unique) ID of the VM.",
            "schema": {
              "type": "integer",
              "description": "The (unique) ID of the VM.",
              "minimum": 100,
              "maximum": 999999999,
              "format": "pve-vmid",
              "x-proxmox-typetext": "<integer> (100 - 999999999)"
            }
          }
        ],
        "security": [],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/vms/{vmid}",
                [
                  "VM.Audit"
                ]
              ]
            }
          ]
        }
      },
      "put": {
        "operationId": "put-nodes-node-qemu-vmid-firewall-aliases-name",
        "summary": "update_alias",
        "description": "Update IP or Network alias.",
        "tags": [
          "/nodes/{node}/qemu/{vmid}/firewall/aliases/{name}"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "put-nodes-node-qemu-vmid-firewall-aliases-name",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "description": "Alias name.",
            "schema": {
              "type": "string",
              "description": "Alias name.",
              "minLength": 2,
              "maxLength": 64,
              "pattern": "[A-Za-z][A-Za-z0-9\\-\\_]+"
            }
          },
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "description": "The (unique) ID of the VM.",
            "schema": {
              "type": "integer",
              "description": "The (unique) ID of the VM.",
              "minimum": 100,
              "maximum": 999999999,
              "format": "pve-vmid",
              "x-proxmox-typetext": "<integer> (100 - 999999999)"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "cidr": {
                    "type": "string",
                    "description": "Network/IP specification in CIDR format.",
                    "format": "IPorCIDR",
                    "x-proxmox-typetext": "<string>"
                  },
                  "comment": {
                    "type": "string",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "digest": {
                    "type": "string",
                    "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
                    "maxLength": 64,
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "rename": {
                    "type": "string",
                    "description": "Rename an existing alias.",
                    "minLength": 2,
                    "maxLength": 64,
                    "pattern": "[A-Za-z][A-Za-z0-9\\-\\_]+",
                    "x-proxmox-optional": true
                  }
                },
                "required": [
                  "cidr"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/vms/{vmid}",
                [
                  "VM.Config.Network"
                ]
              ]
            }
          ]
        }
      }
    },
    "/nodes/{node}/qemu/{vmid}/firewall/ipset": {
      "get": {
        "operationId": "get-nodes-node-qemu-vmid-firewall-ipset",
        "summary": "ipset_index",
        "description": "List IPSets",
        "tags": [
          "/nodes/{node}/qemu/{vmid}/firewall/ipset"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "comment": {
                        "type": "string",
                        "x-proxmox-optional": true
                      },
                      "digest": {
                        "type": "string",
                        "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
                        "maxLength": 64,
                        "x-proxmox-optional": false
                      },
                      "name": {
                        "type": "string",
                        "description": "IP set name.",
                        "minLength": 2,
                        "maxLength": 64,
                        "pattern": "[A-Za-z][A-Za-z0-9\\-\\_]+"
                      }
                    },
                    "required": [
                      "digest",
                      "name"
                    ]
                  },
                  "x-proxmox-metadata": {
                    "links": [
                      {
                        "href": "{name}",
                        "rel": "child"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-nodes-node-qemu-vmid-firewall-ipset",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "description": "The (unique) ID of the VM.",
            "schema": {
              "type": "integer",
              "description": "The (unique) ID of the VM.",
              "minimum": 100,
              "maximum": 999999999,
              "format": "pve-vmid",
              "x-proxmox-typetext": "<integer> (100 - 999999999)"
            }
          }
        ],
        "security": [],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/vms/{vmid}",
                [
                  "VM.Audit"
                ]
              ]
            }
          ]
        }
      },
      "post": {
        "operationId": "post-nodes-node-qemu-vmid-firewall-ipset",
        "summary": "create_ipset",
        "description": "Create new IPSet",
        "tags": [
          "/nodes/{node}/qemu/{vmid}/firewall/ipset"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "post-nodes-node-qemu-vmid-firewall-ipset",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "description": "The (unique) ID of the VM.",
            "schema": {
              "type": "integer",
              "description": "The (unique) ID of the VM.",
              "minimum": 100,
              "maximum": 999999999,
              "format": "pve-vmid",
              "x-proxmox-typetext": "<integer> (100 - 999999999)"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "comment": {
                    "type": "string",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "digest": {
                    "type": "string",
                    "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
                    "maxLength": 64,
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "name": {
                    "type": "string",
                    "description": "IP set name.",
                    "minLength": 2,
                    "maxLength": 64,
                    "pattern": "[A-Za-z][A-Za-z0-9\\-\\_]+"
                  },
                  "rename": {
                    "type": "string",
                    "description": "Rename an existing IPSet. You can set 'rename' to the same value as 'name' to update the 'comment' of an existing IPSet.",
                    "minLength": 2,
                    "maxLength": 64,
                    "pattern": "[A-Za-z][A-Za-z0-9\\-\\_]+",
                    "x-proxmox-optional": true
                  }
                },
                "required": [
                  "name"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/vms/{vmid}",
                [
                  "VM.Config.Network"
                ]
              ]
            }
          ]
        }
      }
    },
    "/nodes/{node}/qemu/{vmid}/firewall/ipset/{name}": {
      "delete": {
        "operationId": "delete-nodes-node-qemu-vmid-firewall-ipset-name",
        "summary": "delete_ipset",
        "description": "Delete IPSet",
        "tags": [
          "/nodes/{node}/qemu/{vmid}/firewall/ipset/{name}"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "delete-nodes-node-qemu-vmid-firewall-ipset-name",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "force",
            "in": "query",
            "required": false,
            "description": "Delete all members of the IPSet, if there are any.",
            "schema": {
              "type": "boolean",
              "description": "Delete all members of the IPSet, if there are any.",
              "x-proxmox-typetext": "<boolean>",
              "x-proxmox-optional": true
            }
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "description": "IP set name.",
            "schema": {
              "type": "string",
              "description": "IP set name.",
              "minLength": 2,
              "maxLength": 64,
              "pattern": "[A-Za-z][A-Za-z0-9\\-\\_]+"
            }
          },
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "description": "The (unique) ID of the VM.",
            "schema": {
              "type": "integer",
              "description": "The (unique) ID of the VM.",
              "minimum": 100,
              "maximum": 999999999,
              "format": "pve-vmid",
              "x-proxmox-typetext": "<integer> (100 - 999999999)"
            }
          }
        ],
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/vms/{vmid}",
                [
                  "VM.Config.Network"
                ]
              ]
            }
          ]
        }
      },
      "get": {
        "operationId": "get-nodes-node-qemu-vmid-firewall-ipset-name",
        "summary": "get_ipset",
        "description": "List IPSet content",
        "tags": [
          "/nodes/{node}/qemu/{vmid}/firewall/ipset/{name}"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "cidr": {
                        "type": "string"
                      },
                      "comment": {
                        "type": "string",
                        "x-proxmox-optional": true
                      },
                      "digest": {
                        "type": "string",
                        "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
                        "maxLength": 64,
                        "x-proxmox-optional": false
                      },
                      "nomatch": {
                        "type": "boolean",
                        "x-proxmox-optional": true
                      }
                    },
                    "required": [
                      "cidr",
                      "digest"
                    ]
                  },
                  "x-proxmox-metadata": {
                    "links": [
                      {
                        "href": "{cidr}",
                        "rel": "child"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-nodes-node-qemu-vmid-firewall-ipset-name",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "description": "IP set name.",
            "schema": {
              "type": "string",
              "description": "IP set name.",
              "minLength": 2,
              "maxLength": 64,
              "pattern": "[A-Za-z][A-Za-z0-9\\-\\_]+"
            }
          },
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "description": "The (unique) ID of the VM.",
            "schema": {
              "type": "integer",
              "description": "The (unique) ID of the VM.",
              "minimum": 100,
              "maximum": 999999999,
              "format": "pve-vmid",
              "x-proxmox-typetext": "<integer> (100 - 999999999)"
            }
          }
        ],
        "security": [],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/vms/{vmid}",
                [
                  "VM.Audit"
                ]
              ]
            }
          ]
        }
      },
      "post": {
        "operationId": "post-nodes-node-qemu-vmid-firewall-ipset-name",
        "summary": "create_ip",
        "description": "Add IP or Network to IPSet.",
        "tags": [
          "/nodes/{node}/qemu/{vmid}/firewall/ipset/{name}"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "post-nodes-node-qemu-vmid-firewall-ipset-name",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "description": "IP set name.",
            "schema": {
              "type": "string",
              "description": "IP set name.",
              "minLength": 2,
              "maxLength": 64,
              "pattern": "[A-Za-z][A-Za-z0-9\\-\\_]+"
            }
          },
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "description": "The (unique) ID of the VM.",
            "schema": {
              "type": "integer",
              "description": "The (unique) ID of the VM.",
              "minimum": 100,
              "maximum": 999999999,
              "format": "pve-vmid",
              "x-proxmox-typetext": "<integer> (100 - 999999999)"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "cidr": {
                    "type": "string",
                    "description": "Network/IP specification in CIDR format.",
                    "format": "IPorCIDRorAlias",
                    "x-proxmox-typetext": "<string>"
                  },
                  "comment": {
                    "type": "string",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "nomatch": {
                    "type": "boolean",
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  }
                },
                "required": [
                  "cidr"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/vms/{vmid}",
                [
                  "VM.Config.Network"
                ]
              ]
            }
          ]
        }
      }
    },
    "/nodes/{node}/qemu/{vmid}/firewall/ipset/{name}/{cidr}": {
      "delete": {
        "operationId": "delete-nodes-node-qemu-vmid-firewall-ipset-name-cidr",
        "summary": "remove_ip",
        "description": "Remove IP or Network from IPSet.",
        "tags": [
          "/nodes/{node}/qemu/{vmid}/firewall/ipset/{name}/{cidr}"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "delete-nodes-node-qemu-vmid-firewall-ipset-name-cidr",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "cidr",
            "in": "path",
            "required": true,
            "description": "Network/IP specification in CIDR format.",
            "schema": {
              "type": "string",
              "description": "Network/IP specification in CIDR format.",
              "format": "IPorCIDRorAlias",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "digest",
            "in": "query",
            "required": false,
            "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
            "schema": {
              "type": "string",
              "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
              "maxLength": 64,
              "x-proxmox-typetext": "<string>",
              "x-proxmox-optional": true
            }
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "description": "IP set name.",
            "schema": {
              "type": "string",
              "description": "IP set name.",
              "minLength": 2,
              "maxLength": 64,
              "pattern": "[A-Za-z][A-Za-z0-9\\-\\_]+"
            }
          },
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "description": "The (unique) ID of the VM.",
            "schema": {
              "type": "integer",
              "description": "The (unique) ID of the VM.",
              "minimum": 100,
              "maximum": 999999999,
              "format": "pve-vmid",
              "x-proxmox-typetext": "<integer> (100 - 999999999)"
            }
          }
        ],
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/vms/{vmid}",
                [
                  "VM.Config.Network"
                ]
              ]
            }
          ]
        }
      },
      "get": {
        "operationId": "get-nodes-node-qemu-vmid-firewall-ipset-name-cidr",
        "summary": "read_ip",
        "description": "Read IP or Network settings from IPSet.",
        "tags": [
          "/nodes/{node}/qemu/{vmid}/firewall/ipset/{name}/{cidr}"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-nodes-node-qemu-vmid-firewall-ipset-name-cidr",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "cidr",
            "in": "path",
            "required": true,
            "description": "Network/IP specification in CIDR format.",
            "schema": {
              "type": "string",
              "description": "Network/IP specification in CIDR format.",
              "format": "IPorCIDRorAlias",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "description": "IP set name.",
            "schema": {
              "type": "string",
              "description": "IP set name.",
              "minLength": 2,
              "maxLength": 64,
              "pattern": "[A-Za-z][A-Za-z0-9\\-\\_]+"
            }
          },
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "description": "The (unique) ID of the VM.",
            "schema": {
              "type": "integer",
              "description": "The (unique) ID of the VM.",
              "minimum": 100,
              "maximum": 999999999,
              "format": "pve-vmid",
              "x-proxmox-typetext": "<integer> (100 - 999999999)"
            }
          }
        ],
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/vms/{vmid}",
                [
                  "VM.Audit"
                ]
              ]
            }
          ]
        }
      },
      "put": {
        "operationId": "put-nodes-node-qemu-vmid-firewall-ipset-name-cidr",
        "summary": "update_ip",
        "description": "Update IP or Network settings",
        "tags": [
          "/nodes/{node}/qemu/{vmid}/firewall/ipset/{name}/{cidr}"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "put-nodes-node-qemu-vmid-firewall-ipset-name-cidr",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "cidr",
            "in": "path",
            "required": true,
            "description": "Network/IP specification in CIDR format.",
            "schema": {
              "type": "string",
              "description": "Network/IP specification in CIDR format.",
              "format": "IPorCIDRorAlias",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "name",
            "in": "path",
            "required": true,
            "description": "IP set name.",
            "schema": {
              "type": "string",
              "description": "IP set name.",
              "minLength": 2,
              "maxLength": 64,
              "pattern": "[A-Za-z][A-Za-z0-9\\-\\_]+"
            }
          },
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "description": "The (unique) ID of the VM.",
            "schema": {
              "type": "integer",
              "description": "The (unique) ID of the VM.",
              "minimum": 100,
              "maximum": 999999999,
              "format": "pve-vmid",
              "x-proxmox-typetext": "<integer> (100 - 999999999)"
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "comment": {
                    "type": "string",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "digest": {
                    "type": "string",
                    "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
                    "maxLength": 64,
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "nomatch": {
                    "type": "boolean",
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/vms/{vmid}",
                [
                  "VM.Config.Network"
                ]
              ]
            }
          ]
        }
      }
    },
    "/nodes/{node}/qemu/{vmid}/firewall/log": {
      "get": {
        "operationId": "get-nodes-node-qemu-vmid-firewall-log",
        "summary": "log",
        "description": "Read firewall log",
        "tags": [
          "/nodes/{node}/qemu/{vmid}/firewall/log"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "n": {
                        "type": "integer",
                        "description": "Line number"
                      },
                      "t": {
                        "type": "string",
                        "description": "Line text"
                      }
                    },
                    "required": [
                      "n",
                      "t"
                    ]
                  }
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-nodes-node-qemu-vmid-firewall-log",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "x-proxmox-typetext": "<integer> (0 - N)",
              "x-proxmox-optional": true
            }
          },
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "since",
            "in": "query",
            "required": false,
            "description": "Display log since this UNIX epoch.",
            "schema": {
              "type": "integer",
              "description": "Display log since this UNIX epoch.",
              "minimum": 0,
              "x-proxmox-typetext": "<integer> (0 - N)",
              "x-proxmox-optional": true
            }
          },
          {
            "name": "start",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "x-proxmox-typetext": "<integer> (0 - N)",
              "x-proxmox-optional": true
            }
          },
          {
            "name": "until",
            "in": "query",
            "required": false,
            "description": "Display log until this UNIX epoch.",
            "schema": {
              "type": "integer",
              "description": "Display log until this UNIX epoch.",
              "minimum": 0,
              "x-proxmox-typetext": "<integer> (0 - N)",
              "x-proxmox-optional": true
            }
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "description": "The (unique) ID of the VM.",
            "schema": {
              "type": "integer",
              "description": "The (unique) ID of the VM.",
              "minimum": 100,
              "maximum": 999999999,
              "format": "pve-vmid",
              "x-proxmox-typetext": "<integer> (100 - 999999999)"
            }
          }
        ],
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/vms/{vmid}",
                [
                  "VM.Console"
                ]
              ]
            }
          ]
        }
      }
    },
    "/nodes/{node}/qemu/{vmid}/firewall/options": {
      "get": {
        "operationId": "get-nodes-node-qemu-vmid-firewall-options",
        "summary": "get_options",
        "description": "Get VM firewall options.",
        "tags": [
          "/nodes/{node}/qemu/{vmid}/firewall/options"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "dhcp": {
                      "type": "boolean",
                      "description": "Enable DHCP.",
                      "default": false,
                      "x-proxmox-optional": true
                    },
                    "enable": {
                      "type": "boolean",
                      "description": "Enable/disable firewall rules.",
                      "default": false,
                      "x-proxmox-optional": true
                    },
                    "ipfilter": {
                      "type": "boolean",
                      "description": "Enable default IP filters. This is equivalent to adding an empty ipfilter-net<id> ipset for every interface. Such ipsets implicitly contain sane default restrictions such as restricting IPv6 link local addresses to the one derived from the interface's MAC address. For containers the configured IP addresses will be implicitly added.",
                      "x-proxmox-optional": true
                    },
                    "log_level_in": {
                      "type": "string",
                      "description": "Log level for incoming traffic.",
                      "enum": [
                        "emerg",
                        "alert",
                        "crit",
                        "err",
                        "warning",
                        "notice",
                        "info",
                        "debug",
                        "nolog"
                      ],
                      "x-proxmox-optional": true
                    },
                    "log_level_out": {
                      "type": "string",
                      "description": "Log level for outgoing traffic.",
                      "enum": [
                        "emerg",
                        "alert",
                        "crit",
                        "err",
                        "warning",
                        "notice",
                        "info",
                        "debug",
                        "nolog"
                      ],
                      "x-proxmox-optional": true
                    },
                    "macfilter": {
                      "type": "boolean",
                      "description": "Enable/disable MAC address filter.",
                      "default": true,
                      "x-proxmox-optional": true
                    },
                    "ndp": {
                      "type": "boolean",
                      "description": "Enable NDP (Neighbor Discovery Protocol).",
                      "default": false,
                      "x-proxmox-optional": true
                    },
                    "policy_in": {
                      "type": "string",
                      "description": "Input policy.",
                      "enum": [
                        "ACCEPT",
                        "REJECT",
                        "DROP"
                      ],
                      "x-proxmox-optional": true
                    },
                    "policy_out": {
                      "type": "string",
                      "description": "Output policy.",
                      "enum": [
                        "ACCEPT",
                        "REJECT",
                        "DROP"
                      ],
                      "x-proxmox-optional": true
                    },
                    "radv": {
                      "type": "boolean",
                      "description": "Allow sending Router Advertisement.",
                      "x-proxmox-optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-nodes-node-qemu-vmid-firewall-options",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "description": "The (unique) ID of the VM.",
            "schema": {
              "type": "integer",
              "description": "The (unique) ID of the VM.",
              "minimum": 100,
              "maximum": 999999999,
              "format": "pve-vmid",
              "x-proxmox-typetext": "<integer> (100 - 999999999)"
            }
          }
        ],
        "security": [],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/vms/{vmid}",
                [
                  "VM.Audit"
                ]
              ]
            }
          ]
        }
      },
      "put": {
        "operationId": "put-nodes-node-qemu-vmid-firewall-options",
        "summary": "set_options",
        "description": "Set Firewall options.",
        "tags": [
          "/nodes/{node}/qemu/{vmid}/firewall/options"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "put-nodes-node-qemu-vmid-firewall-options",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "description": "The (unique) ID of the VM.",
            "schema": {
              "type": "integer",
              "description": "The (unique) ID of the VM.",
              "minimum": 100,
              "maximum": 999999999,
              "format": "pve-vmid",
              "x-proxmox-typetext": "<integer> (100 - 999999999)"
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "delete": {
                    "type": "string",
                    "description": "A list of settings you want to delete.",
                    "format": "pve-configid-list",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "dhcp": {
                    "type": "boolean",
                    "description": "Enable DHCP.",
                    "default": false,
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "digest": {
                    "type": "string",
                    "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
                    "maxLength": 64,
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "enable": {
                    "type": "boolean",
                    "description": "Enable/disable firewall rules.",
                    "default": false,
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "ipfilter": {
                    "type": "boolean",
                    "description": "Enable default IP filters. This is equivalent to adding an empty ipfilter-net<id> ipset for every interface. Such ipsets implicitly contain sane default restrictions such as restricting IPv6 link local addresses to the one derived from the interface's MAC address. For containers the configured IP addresses will be implicitly added.",
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "log_level_in": {
                    "type": "string",
                    "description": "Log level for incoming traffic.",
                    "enum": [
                      "emerg",
                      "alert",
                      "crit",
                      "err",
                      "warning",
                      "notice",
                      "info",
                      "debug",
                      "nolog"
                    ],
                    "x-proxmox-optional": true
                  },
                  "log_level_out": {
                    "type": "string",
                    "description": "Log level for outgoing traffic.",
                    "enum": [
                      "emerg",
                      "alert",
                      "crit",
                      "err",
                      "warning",
                      "notice",
                      "info",
                      "debug",
                      "nolog"
                    ],
                    "x-proxmox-optional": true
                  },
                  "macfilter": {
                    "type": "boolean",
                    "description": "Enable/disable MAC address filter.",
                    "default": true,
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "ndp": {
                    "type": "boolean",
                    "description": "Enable NDP (Neighbor Discovery Protocol).",
                    "default": false,
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "policy_in": {
                    "type": "string",
                    "description": "Input policy.",
                    "enum": [
                      "ACCEPT",
                      "REJECT",
                      "DROP"
                    ],
                    "x-proxmox-optional": true
                  },
                  "policy_out": {
                    "type": "string",
                    "description": "Output policy.",
                    "enum": [
                      "ACCEPT",
                      "REJECT",
                      "DROP"
                    ],
                    "x-proxmox-optional": true
                  },
                  "radv": {
                    "type": "boolean",
                    "description": "Allow sending Router Advertisement.",
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/vms/{vmid}",
                [
                  "VM.Config.Network"
                ]
              ]
            }
          ]
        }
      }
    },
    "/nodes/{node}/qemu/{vmid}/firewall/refs": {
      "get": {
        "operationId": "get-nodes-node-qemu-vmid-firewall-refs",
        "summary": "refs",
        "description": "Lists possible IPSet/Alias reference which are allowed in source/dest properties.",
        "tags": [
          "/nodes/{node}/qemu/{vmid}/firewall/refs"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "comment": {
                        "type": "string",
                        "x-proxmox-optional": true
                      },
                      "name": {
                        "type": "string"
                      },
                      "ref": {
                        "type": "string"
                      },
                      "scope": {
                        "type": "string"
                      },
                      "type": {
                        "type": "string",
                        "enum": [
                          "alias",
                          "ipset"
                        ]
                      }
                    },
                    "required": [
                      "name",
                      "ref",
                      "scope",
                      "type"
                    ]
                  }
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-nodes-node-qemu-vmid-firewall-refs",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "description": "Only list references of specified type.",
            "schema": {
              "type": "string",
              "description": "Only list references of specified type.",
              "enum": [
                "alias",
                "ipset"
              ],
              "x-proxmox-optional": true
            }
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "description": "The (unique) ID of the VM.",
            "schema": {
              "type": "integer",
              "description": "The (unique) ID of the VM.",
              "minimum": 100,
              "maximum": 999999999,
              "format": "pve-vmid",
              "x-proxmox-typetext": "<integer> (100 - 999999999)"
            }
          }
        ],
        "security": [],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/vms/{vmid}",
                [
                  "VM.Audit"
                ]
              ]
            }
          ]
        }
      }
    },
    "/nodes/{node}/qemu/{vmid}/firewall/rules": {
      "get": {
        "operationId": "get-nodes-node-qemu-vmid-firewall-rules",
        "summary": "get_rules",
        "description": "List rules.",
        "tags": [
          "/nodes/{node}/qemu/{vmid}/firewall/rules"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "pos": {
                        "type": "integer"
                      }
                    },
                    "required": [
                      "pos"
                    ]
                  },
                  "x-proxmox-metadata": {
                    "links": [
                      {
                        "href": "{pos}",
                        "rel": "child"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-nodes-node-qemu-vmid-firewall-rules",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "description": "The (unique) ID of the VM.",
            "schema": {
              "type": "integer",
              "description": "The (unique) ID of the VM.",
              "minimum": 100,
              "maximum": 999999999,
              "format": "pve-vmid",
              "x-proxmox-typetext": "<integer> (100 - 999999999)"
            }
          }
        ],
        "security": [],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/vms/{vmid}",
                [
                  "VM.Audit"
                ]
              ]
            }
          ]
        }
      },
      "post": {
        "operationId": "post-nodes-node-qemu-vmid-firewall-rules",
        "summary": "create_rule",
        "description": "Create new rule.",
        "tags": [
          "/nodes/{node}/qemu/{vmid}/firewall/rules"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "post-nodes-node-qemu-vmid-firewall-rules",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "description": "The (unique) ID of the VM.",
            "schema": {
              "type": "integer",
              "description": "The (unique) ID of the VM.",
              "minimum": 100,
              "maximum": 999999999,
              "format": "pve-vmid",
              "x-proxmox-typetext": "<integer> (100 - 999999999)"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "action": {
                    "type": "string",
                    "description": "Rule action ('ACCEPT', 'DROP', 'REJECT') or security group name.",
                    "minLength": 2,
                    "maxLength": 20,
                    "pattern": "[A-Za-z][A-Za-z0-9\\-\\_]+",
                    "x-proxmox-optional": false
                  },
                  "comment": {
                    "type": "string",
                    "description": "Descriptive comment.",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "dest": {
                    "type": "string",
                    "description": "Restrict packet destination address. This can refer to a single IP address, an IP set ('+ipsetname') or an IP alias definition. You can also specify an address range like '20.34.101.207-201.3.9.99', or a list of IP addresses and networks (entries are separated by comma). Please do not mix IPv4 and IPv6 addresses inside such lists.",
                    "maxLength": 512,
                    "format": "pve-fw-addr-spec",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "digest": {
                    "type": "string",
                    "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
                    "maxLength": 64,
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "dport": {
                    "type": "string",
                    "description": "Restrict TCP/UDP destination port. You can use service names or simple numbers (0-65535), as defined in '/etc/services'. Port ranges can be specified with '\\d+:\\d+', for example '80:85', and you can use comma separated list to match several ports or ranges.",
                    "format": "pve-fw-dport-spec",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "enable": {
                    "type": "integer",
                    "description": "Flag to enable/disable a rule.",
                    "minimum": 0,
                    "x-proxmox-typetext": "<integer> (0 - N)",
                    "x-proxmox-optional": true
                  },
                  "icmp-type": {
                    "type": "string",
                    "description": "Specify icmp-type. Only valid if proto equals 'icmp' or 'icmpv6'/'ipv6-icmp'.",
                    "format": "pve-fw-icmp-type-spec",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "iface": {
                    "type": "string",
                    "description": "Network interface name. You have to use network configuration key names for VMs and containers ('net\\d+'). Host related rules can use arbitrary strings.",
                    "minLength": 2,
                    "maxLength": 20,
                    "format": "pve-iface",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "log": {
                    "type": "string",
                    "description": "Log level for firewall rule.",
                    "enum": [
                      "emerg",
                      "alert",
                      "crit",
                      "err",
                      "warning",
                      "notice",
                      "info",
                      "debug",
                      "nolog"
                    ],
                    "x-proxmox-optional": true
                  },
                  "macro": {
                    "type": "string",
                    "description": "Use predefined standard macro.",
                    "maxLength": 128,
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "pos": {
                    "type": "integer",
                    "description": "Update rule at position <pos>.",
                    "minimum": 0,
                    "x-proxmox-typetext": "<integer> (0 - N)",
                    "x-proxmox-optional": true
                  },
                  "proto": {
                    "type": "string",
                    "description": "IP protocol. You can use protocol names ('tcp'/'udp') or simple numbers, as defined in '/etc/protocols'.",
                    "format": "pve-fw-protocol-spec",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "source": {
                    "type": "string",
                    "description": "Restrict packet source address. This can refer to a single IP address, an IP set ('+ipsetname') or an IP alias definition. You can also specify an address range like '20.34.101.207-201.3.9.99', or a list of IP addresses and networks (entries are separated by comma). Please do not mix IPv4 and IPv6 addresses inside such lists.",
                    "maxLength": 512,
                    "format": "pve-fw-addr-spec",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "sport": {
                    "type": "string",
                    "description": "Restrict TCP/UDP source port. You can use service names or simple numbers (0-65535), as defined in '/etc/services'. Port ranges can be specified with '\\d+:\\d+', for example '80:85', and you can use comma separated list to match several ports or ranges.",
                    "format": "pve-fw-sport-spec",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "type": {
                    "type": "string",
                    "description": "Rule type.",
                    "enum": [
                      "in",
                      "out",
                      "forward",
                      "group"
                    ],
                    "x-proxmox-optional": false
                  }
                },
                "required": [
                  "action",
                  "type"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/vms/{vmid}",
                [
                  "VM.Config.Network"
                ]
              ]
            }
          ]
        }
      }
    },
    "/nodes/{node}/qemu/{vmid}/firewall/rules/{pos}": {
      "delete": {
        "operationId": "delete-nodes-node-qemu-vmid-firewall-rules-pos",
        "summary": "delete_rule",
        "description": "Delete rule.",
        "tags": [
          "/nodes/{node}/qemu/{vmid}/firewall/rules/{pos}"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "delete-nodes-node-qemu-vmid-firewall-rules-pos",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "digest",
            "in": "query",
            "required": false,
            "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
            "schema": {
              "type": "string",
              "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
              "maxLength": 64,
              "x-proxmox-typetext": "<string>",
              "x-proxmox-optional": true
            }
          },
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "pos",
            "in": "path",
            "required": true,
            "description": "Update rule at position <pos>.",
            "schema": {
              "type": "integer",
              "description": "Update rule at position <pos>.",
              "minimum": 0,
              "x-proxmox-typetext": "<integer> (0 - N)",
              "x-proxmox-optional": true
            }
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "description": "The (unique) ID of the VM.",
            "schema": {
              "type": "integer",
              "description": "The (unique) ID of the VM.",
              "minimum": 100,
              "maximum": 999999999,
              "format": "pve-vmid",
              "x-proxmox-typetext": "<integer> (100 - 999999999)"
            }
          }
        ],
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/vms/{vmid}",
                [
                  "VM.Config.Network"
                ]
              ]
            }
          ]
        }
      },
      "get": {
        "operationId": "get-nodes-node-qemu-vmid-firewall-rules-pos",
        "summary": "get_rule",
        "description": "Get single rule data.",
        "tags": [
          "/nodes/{node}/qemu/{vmid}/firewall/rules/{pos}"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "action": {
                      "type": "string"
                    },
                    "comment": {
                      "type": "string",
                      "x-proxmox-optional": true
                    },
                    "dest": {
                      "type": "string",
                      "x-proxmox-optional": true
                    },
                    "dport": {
                      "type": "string",
                      "x-proxmox-optional": true
                    },
                    "enable": {
                      "type": "integer",
                      "x-proxmox-optional": true
                    },
                    "icmp-type": {
                      "type": "string",
                      "x-proxmox-optional": true
                    },
                    "iface": {
                      "type": "string",
                      "x-proxmox-optional": true
                    },
                    "ipversion": {
                      "type": "integer",
                      "x-proxmox-optional": true
                    },
                    "log": {
                      "type": "string",
                      "description": "Log level for firewall rule",
                      "enum": [
                        "emerg",
                        "alert",
                        "crit",
                        "err",
                        "warning",
                        "notice",
                        "info",
                        "debug",
                        "nolog"
                      ],
                      "x-proxmox-optional": true
                    },
                    "macro": {
                      "type": "string",
                      "x-proxmox-optional": true
                    },
                    "pos": {
                      "type": "integer"
                    },
                    "proto": {
                      "type": "string",
                      "x-proxmox-optional": true
                    },
                    "source": {
                      "type": "string",
                      "x-proxmox-optional": true
                    },
                    "sport": {
                      "type": "string",
                      "x-proxmox-optional": true
                    },
                    "type": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "action",
                    "pos",
                    "type"
                  ]
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-nodes-node-qemu-vmid-firewall-rules-pos",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "pos",
            "in": "path",
            "required": true,
            "description": "Update rule at position <pos>.",
            "schema": {
              "type": "integer",
              "description": "Update rule at position <pos>.",
              "minimum": 0,
              "x-proxmox-typetext": "<integer> (0 - N)",
              "x-proxmox-optional": true
            }
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "description": "The (unique) ID of the VM.",
            "schema": {
              "type": "integer",
              "description": "The (unique) ID of the VM.",
              "minimum": 100,
              "maximum": 999999999,
              "format": "pve-vmid",
              "x-proxmox-typetext": "<integer> (100 - 999999999)"
            }
          }
        ],
        "security": [],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/vms/{vmid}",
                [
                  "VM.Audit"
                ]
              ]
            }
          ]
        }
      },
      "put": {
        "operationId": "put-nodes-node-qemu-vmid-firewall-rules-pos",
        "summary": "update_rule",
        "description": "Modify rule data.",
        "tags": [
          "/nodes/{node}/qemu/{vmid}/firewall/rules/{pos}"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "put-nodes-node-qemu-vmid-firewall-rules-pos",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "pos",
            "in": "path",
            "required": true,
            "description": "Update rule at position <pos>.",
            "schema": {
              "type": "integer",
              "description": "Update rule at position <pos>.",
              "minimum": 0,
              "x-proxmox-typetext": "<integer> (0 - N)",
              "x-proxmox-optional": true
            }
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "description": "The (unique) ID of the VM.",
            "schema": {
              "type": "integer",
              "description": "The (unique) ID of the VM.",
              "minimum": 100,
              "maximum": 999999999,
              "format": "pve-vmid",
              "x-proxmox-typetext": "<integer> (100 - 999999999)"
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "action": {
                    "type": "string",
                    "description": "Rule action ('ACCEPT', 'DROP', 'REJECT') or security group name.",
                    "minLength": 2,
                    "maxLength": 20,
                    "pattern": "[A-Za-z][A-Za-z0-9\\-\\_]+",
                    "x-proxmox-optional": true
                  },
                  "comment": {
                    "type": "string",
                    "description": "Descriptive comment.",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "delete": {
                    "type": "string",
                    "description": "A list of settings you want to delete.",
                    "format": "pve-configid-list",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "dest": {
                    "type": "string",
                    "description": "Restrict packet destination address. This can refer to a single IP address, an IP set ('+ipsetname') or an IP alias definition. You can also specify an address range like '20.34.101.207-201.3.9.99', or a list of IP addresses and networks (entries are separated by comma). Please do not mix IPv4 and IPv6 addresses inside such lists.",
                    "maxLength": 512,
                    "format": "pve-fw-addr-spec",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "digest": {
                    "type": "string",
                    "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
                    "maxLength": 64,
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "dport": {
                    "type": "string",
                    "description": "Restrict TCP/UDP destination port. You can use service names or simple numbers (0-65535), as defined in '/etc/services'. Port ranges can be specified with '\\d+:\\d+', for example '80:85', and you can use comma separated list to match several ports or ranges.",
                    "format": "pve-fw-dport-spec",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "enable": {
                    "type": "integer",
                    "description": "Flag to enable/disable a rule.",
                    "minimum": 0,
                    "x-proxmox-typetext": "<integer> (0 - N)",
                    "x-proxmox-optional": true
                  },
                  "icmp-type": {
                    "type": "string",
                    "description": "Specify icmp-type. Only valid if proto equals 'icmp' or 'icmpv6'/'ipv6-icmp'.",
                    "format": "pve-fw-icmp-type-spec",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "iface": {
                    "type": "string",
                    "description": "Network interface name. You have to use network configuration key names for VMs and containers ('net\\d+'). Host related rules can use arbitrary strings.",
                    "minLength": 2,
                    "maxLength": 20,
                    "format": "pve-iface",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "log": {
                    "type": "string",
                    "description": "Log level for firewall rule.",
                    "enum": [
                      "emerg",
                      "alert",
                      "crit",
                      "err",
                      "warning",
                      "notice",
                      "info",
                      "debug",
                      "nolog"
                    ],
                    "x-proxmox-optional": true
                  },
                  "macro": {
                    "type": "string",
                    "description": "Use predefined standard macro.",
                    "maxLength": 128,
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "moveto": {
                    "type": "integer",
                    "description": "Move rule to new position <moveto>. Other arguments are ignored.",
                    "minimum": 0,
                    "x-proxmox-typetext": "<integer> (0 - N)",
                    "x-proxmox-optional": true
                  },
                  "proto": {
                    "type": "string",
                    "description": "IP protocol. You can use protocol names ('tcp'/'udp') or simple numbers, as defined in '/etc/protocols'.",
                    "format": "pve-fw-protocol-spec",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "source": {
                    "type": "string",
                    "description": "Restrict packet source address. This can refer to a single IP address, an IP set ('+ipsetname') or an IP alias definition. You can also specify an address range like '20.34.101.207-201.3.9.99', or a list of IP addresses and networks (entries are separated by comma). Please do not mix IPv4 and IPv6 addresses inside such lists.",
                    "maxLength": 512,
                    "format": "pve-fw-addr-spec",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "sport": {
                    "type": "string",
                    "description": "Restrict TCP/UDP source port. You can use service names or simple numbers (0-65535), as defined in '/etc/services'. Port ranges can be specified with '\\d+:\\d+', for example '80:85', and you can use comma separated list to match several ports or ranges.",
                    "format": "pve-fw-sport-spec",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "type": {
                    "type": "string",
                    "description": "Rule type.",
                    "enum": [
                      "in",
                      "out",
                      "forward",
                      "group"
                    ],
                    "x-proxmox-optional": true
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/vms/{vmid}",
                [
                  "VM.Config.Network"
                ]
              ]
            }
          ]
        }
      }
    },
    "/nodes/{node}/qemu/{vmid}/migrate": {
      "get": {
        "operationId": "get-nodes-node-qemu-vmid-migrate",
        "summary": "migrate_vm_precondition",
        "description": "Get preconditions for migration.",
        "tags": [
          "/nodes/{node}/qemu/{vmid}/migrate"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "allowed_nodes": {
                      "type": "array",
                      "description": "List of nodes allowed for migration.",
                      "items": {
                        "type": "string",
                        "description": "An allowed node"
                      },
                      "x-proxmox-optional": true
                    },
                    "dependent-ha-resources": {
                      "type": "array",
                      "description": "HA resources, which will be migrated to the same target node as the VM, because these are in positive affinity with the VM.",
                      "items": {
                        "type": "string",
                        "description": "The '<ty>:<id>' resource IDs of a HA resource with a positive affinity rule to this VM."
                      },
                      "x-proxmox-optional": true
                    },
                    "has-dbus-vmstate": {
                      "type": "boolean",
                      "description": "Whether the VM host supports migrating additional VM state, such as conntrack entries."
                    },
                    "local_disks": {
                      "type": "array",
                      "description": "List local disks including CD-Rom, unused and not referenced disks",
                      "items": {
                        "type": "object",
                        "properties": {
                          "cdrom": {
                            "type": "boolean",
                            "description": "True if the disk is a cdrom."
                          },
                          "is_unused": {
                            "type": "boolean",
                            "description": "True if the disk is unused."
                          },
                          "size": {
                            "type": "integer",
                            "description": "The size of the disk in bytes."
                          },
                          "volid": {
                            "type": "string",
                            "description": "The volid of the disk."
                          }
                        },
                        "required": [
                          "cdrom",
                          "is_unused",
                          "size",
                          "volid"
                        ]
                      }
                    },
                    "local_resources": {
                      "type": "array",
                      "description": "List local resources (e.g. pci, usb) that block migration.",
                      "items": {
                        "type": "string",
                        "description": "A local resource"
                      }
                    },
                    "mapped-resource-info": {
                      "type": "object",
                      "description": "Object of mapped resources with additional information such if they're live migratable."
                    },
                    "mapped-resources": {
                      "type": "array",
                      "description": "List of mapped resources e.g. pci, usb. Deprecated, use 'mapped-resource-info' instead.",
                      "items": {
                        "type": "string",
                        "description": "A mapped resource"
                      }
                    },
                    "not_allowed_nodes": {
                      "type": "object",
                      "description": "List of not allowed nodes with additional information.",
                      "properties": {
                        "blocking-ha-resources": {
                          "type": "array",
                          "description": "HA resources, which are blocking the VM from being migrated to the node.",
                          "items": {
                            "type": "object",
                            "description": "A blocking HA resource",
                            "properties": {
                              "cause": {
                                "type": "string",
                                "description": "The reason why the HA resource is blocking the migration.",
                                "enum": [
                                  "resource-affinity"
                                ]
                              },
                              "sid": {
                                "type": "string",
                                "description": "The blocking HA resource id"
                              }
                            },
                            "required": [
                              "cause",
                              "sid"
                            ]
                          },
                          "x-proxmox-optional": true
                        },
                        "unavailable_storages": {
                          "type": "array",
                          "description": "A list of not available storages.",
                          "items": {
                            "type": "string",
                            "description": "A storage"
                          },
                          "x-proxmox-optional": true
                        }
                      },
                      "x-proxmox-optional": true
                    },
                    "running": {
                      "type": "boolean",
                      "description": "Determines if the VM is running."
                    }
                  },
                  "required": [
                    "has-dbus-vmstate",
                    "local_disks",
                    "local_resources",
                    "mapped-resource-info",
                    "mapped-resources",
                    "running"
                  ]
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-nodes-node-qemu-vmid-migrate",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "target",
            "in": "query",
            "required": false,
            "description": "Target node.",
            "schema": {
              "type": "string",
              "description": "Target node.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>",
              "x-proxmox-optional": true
            }
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "description": "The (unique) ID of the VM.",
            "schema": {
              "type": "integer",
              "description": "The (unique) ID of the VM.",
              "minimum": 100,
              "maximum": 999999999,
              "format": "pve-vmid",
              "x-proxmox-typetext": "<integer> (100 - 999999999)"
            }
          }
        ],
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/vms/{vmid}",
                [
                  "VM.Migrate"
                ]
              ]
            }
          ]
        }
      },
      "post": {
        "operationId": "post-nodes-node-qemu-vmid-migrate",
        "summary": "migrate_vm",
        "description": "Migrate virtual machine. Creates a new migration task.",
        "tags": [
          "/nodes/{node}/qemu/{vmid}/migrate"
        ],
        "responses": {
          "200": {
            "description": "the task ID.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "the task ID."
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "post-nodes-node-qemu-vmid-migrate",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "description": "The (unique) ID of the VM.",
            "schema": {
              "type": "integer",
              "description": "The (unique) ID of the VM.",
              "minimum": 100,
              "maximum": 999999999,
              "format": "pve-vmid",
              "x-proxmox-typetext": "<integer> (100 - 999999999)"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "bwlimit": {
                    "type": "integer",
                    "description": "Override I/O bandwidth limit (in KiB/s).",
                    "default": "migrate limit from datacenter or storage config",
                    "x-proxmox-typetext": "<integer> (0 - N)",
                    "x-proxmox-optional": true
                  },
                  "force": {
                    "type": "boolean",
                    "description": "Allow to migrate VMs which use local devices. Only root may use this option.",
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "migration_network": {
                    "type": "string",
                    "description": "CIDR of the (sub) network that is used for migration.",
                    "format": "CIDR",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "migration_type": {
                    "type": "string",
                    "description": "Migration traffic is encrypted using an SSH tunnel by default. On secure, completely private networks this can be disabled to increase performance.",
                    "enum": [
                      "secure",
                      "insecure"
                    ],
                    "x-proxmox-optional": true
                  },
                  "online": {
                    "type": "boolean",
                    "description": "Use online/live migration if VM is running. Ignored if VM is stopped.",
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "target": {
                    "type": "string",
                    "description": "Target node.",
                    "format": "pve-node",
                    "x-proxmox-typetext": "<string>"
                  },
                  "targetstorage": {
                    "type": "string",
                    "description": "Mapping from source to target storages. Providing only a single storage ID maps all source storages to that storage. Providing the special value '1' will map each source storage to itself.",
                    "format": "storage-pair-list",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "with-conntrack-state": {
                    "type": "boolean",
                    "description": "Whether to migrate conntrack entries for running VMs.",
                    "default": false,
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "with-local-disks": {
                    "type": "boolean",
                    "description": "Enable live storage migration for local disk",
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  }
                },
                "required": [
                  "target"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/vms/{vmid}",
                [
                  "VM.Migrate"
                ]
              ]
            }
          ]
        }
      }
    },
    "/nodes/{node}/qemu/{vmid}/monitor": {
      "post": {
        "operationId": "post-nodes-node-qemu-vmid-monitor",
        "summary": "monitor",
        "description": "Execute QEMU monitor commands.",
        "tags": [
          "/nodes/{node}/qemu/{vmid}/monitor"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "post-nodes-node-qemu-vmid-monitor",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "description": "The (unique) ID of the VM.",
            "schema": {
              "type": "integer",
              "description": "The (unique) ID of the VM.",
              "minimum": 100,
              "maximum": 999999999,
              "format": "pve-vmid",
              "x-proxmox-typetext": "<integer> (100 - 999999999)"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "command": {
                    "type": "string",
                    "description": "The monitor command.",
                    "x-proxmox-typetext": "<string>"
                  }
                },
                "required": [
                  "command"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "description": "The following commands do not require any additional privilege: ?, help, info\n\nThe following commands require 'Sys.Modify': announce_self, backup_cancel, balloon, block_job_cancel, block_job_complete, block_job_pause, block_job_resume, block_job_set_speed, block_resize, block_set_io_throttle, boot_set, c, calc_dirty_rate, cancel_vcpu_dirty_limit, chardev-send-break, closefd, commit, cont, cpu, delvm, eject, exit_preconfig, expire_password, getfd, gpa2hpa, gpa2hva, gva2gpa, i, loadvm, log, migrate_cancel, migrate_continue, migrate_pause, migrate_set_capability, migrate_set_parameter, migrate_start_postcopy, mouse_button, mouse_move, mouse_set, one-insn-per-tb, p, print, q, qemu-io, qom-get, qom-list, quit, replay_break, replay_delete_break, replay_seek, ringbuf_read, ringbuf_write, s, savevm, sendkey, set_link, set_password, set_vcpu_dirty_limit, snapshot_blkdev_internal, snapshot_delete_blkdev_internal, stop, stopcapture, sum, sync-profile, system_powerdown, system_reset, system_wakeup, trace-event, x, x_colo_lost_heartbeat, xp\n\nThe following commands are root-only: backup, block_stream, change, chardev-add, chardev-change, chardev-remove, client_migrate_info, device_add, device_del, drive_add, drive_backup, drive_del, drive_mirror, dump-guest-memory, dumpdtb, gdbserver, hostfwd_add, hostfwd_remove, logfile, mce, memsave, migrate, migrate_incoming, migrate_recover, nbd_server_add, nbd_server_remove, nbd_server_start, nbd_server_stop, netdev_add, netdev_del, nmi, o, object_add, object_del, pcie_aer_inject_error, pmemsave, qom-set, savevm-end, savevm-start, screendump, snapshot_blkdev, watchdog_action, wavcapture, xen-event-inject, xen-event-list\n",
              "check": [
                "perm",
                "/vms/{vmid}",
                [
                  "Sys.Audit",
                  "Sys.Modify"
                ],
                "any",
                1
              ]
            }
          ]
        }
      }
    },
    "/nodes/{node}/qemu/{vmid}/move_disk": {
      "post": {
        "operationId": "post-nodes-node-qemu-vmid-move-disk",
        "summary": "move_vm_disk",
        "description": "Move volume to different storage or to a different VM.",
        "tags": [
          "/nodes/{node}/qemu/{vmid}/move_disk"
        ],
        "responses": {
          "200": {
            "description": "the task ID.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "the task ID."
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "post-nodes-node-qemu-vmid-move-disk",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "description": "The (unique) ID of the VM.",
            "schema": {
              "type": "integer",
              "description": "The (unique) ID of the VM.",
              "minimum": 100,
              "maximum": 999999999,
              "format": "pve-vmid",
              "x-proxmox-typetext": "<integer> (100 - 999999999)"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "bwlimit": {
                    "type": "integer",
                    "description": "Override I/O bandwidth limit (in KiB/s).",
                    "default": "move limit from datacenter or storage config",
                    "x-proxmox-typetext": "<integer> (0 - N)",
                    "x-proxmox-optional": true
                  },
                  "delete": {
                    "type": "boolean",
                    "description": "Delete the original disk after successful copy. By default the original disk is kept as unused disk.",
                    "default": false,
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "digest": {
                    "type": "string",
                    "description": "Prevent changes if current configuration file has different SHA1\"\n\t\t    .\" digest. This can be used to prevent concurrent modifications.",
                    "maxLength": 40,
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "disk": {
                    "type": "string",
                    "description": "The disk you want to move.",
                    "enum": [
                      "ide0",
                      "ide1",
                      "ide2",
                      "ide3",
                      "scsi0",
                      "scsi1",
                      "scsi2",
                      "scsi3",
                      "scsi4",
                      "scsi5",
                      "scsi6",
                      "scsi7",
                      "scsi8",
                      "scsi9",
                      "scsi10",
                      "scsi11",
                      "scsi12",
                      "scsi13",
                      "scsi14",
                      "scsi15",
                      "scsi16",
                      "scsi17",
                      "scsi18",
                      "scsi19",
                      "scsi20",
                      "scsi21",
                      "scsi22",
                      "scsi23",
                      "scsi24",
                      "scsi25",
                      "scsi26",
                      "scsi27",
                      "scsi28",
                      "scsi29",
                      "scsi30",
                      "virtio0",
                      "virtio1",
                      "virtio2",
                      "virtio3",
                      "virtio4",
                      "virtio5",
                      "virtio6",
                      "virtio7",
                      "virtio8",
                      "virtio9",
                      "virtio10",
                      "virtio11",
                      "virtio12",
                      "virtio13",
                      "virtio14",
                      "virtio15",
                      "sata0",
                      "sata1",
                      "sata2",
                      "sata3",
                      "sata4",
                      "sata5",
                      "efidisk0",
                      "tpmstate0",
                      "unused0",
                      "unused1",
                      "unused2",
                      "unused3",
                      "unused4",
                      "unused5",
                      "unused6",
                      "unused7",
                      "unused8",
                      "unused9",
                      "unused10",
                      "unused11",
                      "unused12",
                      "unused13",
                      "unused14",
                      "unused15",
                      "unused16",
                      "unused17",
                      "unused18",
                      "unused19",
                      "unused20",
                      "unused21",
                      "unused22",
                      "unused23",
                      "unused24",
                      "unused25",
                      "unused26",
                      "unused27",
                      "unused28",
                      "unused29",
                      "unused30",
                      "unused31",
                      "unused32",
                      "unused33",
                      "unused34",
                      "unused35",
                      "unused36",
                      "unused37",
                      "unused38",
                      "unused39",
                      "unused40",
                      "unused41",
                      "unused42",
                      "unused43",
                      "unused44",
                      "unused45",
                      "unused46",
                      "unused47",
                      "unused48",
                      "unused49",
                      "unused50",
                      "unused51",
                      "unused52",
                      "unused53",
                      "unused54",
                      "unused55",
                      "unused56",
                      "unused57",
                      "unused58",
                      "unused59",
                      "unused60",
                      "unused61",
                      "unused62",
                      "unused63",
                      "unused64",
                      "unused65",
                      "unused66",
                      "unused67",
                      "unused68",
                      "unused69",
                      "unused70",
                      "unused71",
                      "unused72",
                      "unused73",
                      "unused74",
                      "unused75",
                      "unused76",
                      "unused77",
                      "unused78",
                      "unused79",
                      "unused80",
                      "unused81",
                      "unused82",
                      "unused83",
                      "unused84",
                      "unused85",
                      "unused86",
                      "unused87",
                      "unused88",
                      "unused89",
                      "unused90",
                      "unused91",
                      "unused92",
                      "unused93",
                      "unused94",
                      "unused95",
                      "unused96",
                      "unused97",
                      "unused98",
                      "unused99",
                      "unused100",
                      "unused101",
                      "unused102",
                      "unused103",
                      "unused104",
                      "unused105",
                      "unused106",
                      "unused107",
                      "unused108",
                      "unused109",
                      "unused110",
                      "unused111",
                      "unused112",
                      "unused113",
                      "unused114",
                      "unused115",
                      "unused116",
                      "unused117",
                      "unused118",
                      "unused119",
                      "unused120",
                      "unused121",
                      "unused122",
                      "unused123",
                      "unused124",
                      "unused125",
                      "unused126",
                      "unused127",
                      "unused128",
                      "unused129",
                      "unused130",
                      "unused131",
                      "unused132",
                      "unused133",
                      "unused134",
                      "unused135",
                      "unused136",
                      "unused137",
                      "unused138",
                      "unused139",
                      "unused140",
                      "unused141",
                      "unused142",
                      "unused143",
                      "unused144",
                      "unused145",
                      "unused146",
                      "unused147",
                      "unused148",
                      "unused149",
                      "unused150",
                      "unused151",
                      "unused152",
                      "unused153",
                      "unused154",
                      "unused155",
                      "unused156",
                      "unused157",
                      "unused158",
                      "unused159",
                      "unused160",
                      "unused161",
                      "unused162",
                      "unused163",
                      "unused164",
                      "unused165",
                      "unused166",
                      "unused167",
                      "unused168",
                      "unused169",
                      "unused170",
                      "unused171",
                      "unused172",
                      "unused173",
                      "unused174",
                      "unused175",
                      "unused176",
                      "unused177",
                      "unused178",
                      "unused179",
                      "unused180",
                      "unused181",
                      "unused182",
                      "unused183",
                      "unused184",
                      "unused185",
                      "unused186",
                      "unused187",
                      "unused188",
                      "unused189",
                      "unused190",
                      "unused191",
                      "unused192",
                      "unused193",
                      "unused194",
                      "unused195",
                      "unused196",
                      "unused197",
                      "unused198",
                      "unused199",
                      "unused200",
                      "unused201",
                      "unused202",
                      "unused203",
                      "unused204",
                      "unused205",
                      "unused206",
                      "unused207",
                      "unused208",
                      "unused209",
                      "unused210",
                      "unused211",
                      "unused212",
                      "unused213",
                      "unused214",
                      "unused215",
                      "unused216",
                      "unused217",
                      "unused218",
                      "unused219",
                      "unused220",
                      "unused221",
                      "unused222",
                      "unused223",
                      "unused224",
                      "unused225",
                      "unused226",
                      "unused227",
                      "unused228",
                      "unused229",
                      "unused230",
                      "unused231",
                      "unused232",
                      "unused233",
                      "unused234",
                      "unused235",
                      "unused236",
                      "unused237",
                      "unused238",
                      "unused239",
                      "unused240",
                      "unused241",
                      "unused242",
                      "unused243",
                      "unused244",
                      "unused245",
                      "unused246",
                      "unused247",
                      "unused248",
                      "unused249",
                      "unused250",
                      "unused251",
                      "unused252",
                      "unused253",
                      "unused254",
                      "unused255"
                    ]
                  },
                  "format": {
                    "type": "string",
                    "description": "Target Format.",
                    "enum": [
                      "raw",
                      "qcow2",
                      "vmdk"
                    ],
                    "x-proxmox-optional": true
                  },
                  "storage": {
                    "type": "string",
                    "description": "Target storage.",
                    "format": "pve-storage-id",
                    "x-proxmox-format-description": "storage ID",
                    "x-proxmox-typetext": "<storage ID>",
                    "x-proxmox-optional": true
                  },
                  "target-digest": {
                    "type": "string",
                    "description": "Prevent changes if the current config file of the target VM has a\"\n\t\t    .\" different SHA1 digest. This can be used to detect concurrent modifications.",
                    "maxLength": 40,
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "target-disk": {
                    "type": "string",
                    "description": "The config key the disk will be moved to on the target VM (for example, ide0 or scsi1). Default is the source disk key.",
                    "enum": [
                      "ide0",
                      "ide1",
                      "ide2",
                      "ide3",
                      "scsi0",
                      "scsi1",
                      "scsi2",
                      "scsi3",
                      "scsi4",
                      "scsi5",
                      "scsi6",
                      "scsi7",
                      "scsi8",
                      "scsi9",
                      "scsi10",
                      "scsi11",
                      "scsi12",
                      "scsi13",
                      "scsi14",
                      "scsi15",
                      "scsi16",
                      "scsi17",
                      "scsi18",
                      "scsi19",
                      "scsi20",
                      "scsi21",
                      "scsi22",
                      "scsi23",
                      "scsi24",
                      "scsi25",
                      "scsi26",
                      "scsi27",
                      "scsi28",
                      "scsi29",
                      "scsi30",
                      "virtio0",
                      "virtio1",
                      "virtio2",
                      "virtio3",
                      "virtio4",
                      "virtio5",
                      "virtio6",
                      "virtio7",
                      "virtio8",
                      "virtio9",
                      "virtio10",
                      "virtio11",
                      "virtio12",
                      "virtio13",
                      "virtio14",
                      "virtio15",
                      "sata0",
                      "sata1",
                      "sata2",
                      "sata3",
                      "sata4",
                      "sata5",
                      "efidisk0",
                      "tpmstate0",
                      "unused0",
                      "unused1",
                      "unused2",
                      "unused3",
                      "unused4",
                      "unused5",
                      "unused6",
                      "unused7",
                      "unused8",
                      "unused9",
                      "unused10",
                      "unused11",
                      "unused12",
                      "unused13",
                      "unused14",
                      "unused15",
                      "unused16",
                      "unused17",
                      "unused18",
                      "unused19",
                      "unused20",
                      "unused21",
                      "unused22",
                      "unused23",
                      "unused24",
                      "unused25",
                      "unused26",
                      "unused27",
                      "unused28",
                      "unused29",
                      "unused30",
                      "unused31",
                      "unused32",
                      "unused33",
                      "unused34",
                      "unused35",
                      "unused36",
                      "unused37",
                      "unused38",
                      "unused39",
                      "unused40",
                      "unused41",
                      "unused42",
                      "unused43",
                      "unused44",
                      "unused45",
                      "unused46",
                      "unused47",
                      "unused48",
                      "unused49",
                      "unused50",
                      "unused51",
                      "unused52",
                      "unused53",
                      "unused54",
                      "unused55",
                      "unused56",
                      "unused57",
                      "unused58",
                      "unused59",
                      "unused60",
                      "unused61",
                      "unused62",
                      "unused63",
                      "unused64",
                      "unused65",
                      "unused66",
                      "unused67",
                      "unused68",
                      "unused69",
                      "unused70",
                      "unused71",
                      "unused72",
                      "unused73",
                      "unused74",
                      "unused75",
                      "unused76",
                      "unused77",
                      "unused78",
                      "unused79",
                      "unused80",
                      "unused81",
                      "unused82",
                      "unused83",
                      "unused84",
                      "unused85",
                      "unused86",
                      "unused87",
                      "unused88",
                      "unused89",
                      "unused90",
                      "unused91",
                      "unused92",
                      "unused93",
                      "unused94",
                      "unused95",
                      "unused96",
                      "unused97",
                      "unused98",
                      "unused99",
                      "unused100",
                      "unused101",
                      "unused102",
                      "unused103",
                      "unused104",
                      "unused105",
                      "unused106",
                      "unused107",
                      "unused108",
                      "unused109",
                      "unused110",
                      "unused111",
                      "unused112",
                      "unused113",
                      "unused114",
                      "unused115",
                      "unused116",
                      "unused117",
                      "unused118",
                      "unused119",
                      "unused120",
                      "unused121",
                      "unused122",
                      "unused123",
                      "unused124",
                      "unused125",
                      "unused126",
                      "unused127",
                      "unused128",
                      "unused129",
                      "unused130",
                      "unused131",
                      "unused132",
                      "unused133",
                      "unused134",
                      "unused135",
                      "unused136",
                      "unused137",
                      "unused138",
                      "unused139",
                      "unused140",
                      "unused141",
                      "unused142",
                      "unused143",
                      "unused144",
                      "unused145",
                      "unused146",
                      "unused147",
                      "unused148",
                      "unused149",
                      "unused150",
                      "unused151",
                      "unused152",
                      "unused153",
                      "unused154",
                      "unused155",
                      "unused156",
                      "unused157",
                      "unused158",
                      "unused159",
                      "unused160",
                      "unused161",
                      "unused162",
                      "unused163",
                      "unused164",
                      "unused165",
                      "unused166",
                      "unused167",
                      "unused168",
                      "unused169",
                      "unused170",
                      "unused171",
                      "unused172",
                      "unused173",
                      "unused174",
                      "unused175",
                      "unused176",
                      "unused177",
                      "unused178",
                      "unused179",
                      "unused180",
                      "unused181",
                      "unused182",
                      "unused183",
                      "unused184",
                      "unused185",
                      "unused186",
                      "unused187",
                      "unused188",
                      "unused189",
                      "unused190",
                      "unused191",
                      "unused192",
                      "unused193",
                      "unused194",
                      "unused195",
                      "unused196",
                      "unused197",
                      "unused198",
                      "unused199",
                      "unused200",
                      "unused201",
                      "unused202",
                      "unused203",
                      "unused204",
                      "unused205",
                      "unused206",
                      "unused207",
                      "unused208",
                      "unused209",
                      "unused210",
                      "unused211",
                      "unused212",
                      "unused213",
                      "unused214",
                      "unused215",
                      "unused216",
                      "unused217",
                      "unused218",
                      "unused219",
                      "unused220",
                      "unused221",
                      "unused222",
                      "unused223",
                      "unused224",
                      "unused225",
                      "unused226",
                      "unused227",
                      "unused228",
                      "unused229",
                      "unused230",
                      "unused231",
                      "unused232",
                      "unused233",
                      "unused234",
                      "unused235",
                      "unused236",
                      "unused237",
                      "unused238",
                      "unused239",
                      "unused240",
                      "unused241",
                      "unused242",
                      "unused243",
                      "unused244",
                      "unused245",
                      "unused246",
                      "unused247",
                      "unused248",
                      "unused249",
                      "unused250",
                      "unused251",
                      "unused252",
                      "unused253",
                      "unused254",
                      "unused255"
                    ],
                    "x-proxmox-optional": true
                  },
                  "target-vmid": {
                    "type": "integer",
                    "description": "The (unique) ID of the VM.",
                    "minimum": 100,
                    "maximum": 999999999,
                    "format": "pve-vmid",
                    "x-proxmox-typetext": "<integer> (100 - 999999999)",
                    "x-proxmox-optional": true
                  }
                },
                "required": [
                  "disk"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "description": "You need 'VM.Config.Disk' permissions on /vms/{vmid}, and 'Datastore.AllocateSpace' permissions on the storage. To move a disk to another VM, you need the permissions on the target VM as well.",
              "check": [
                "perm",
                "/vms/{vmid}",
                [
                  "VM.Config.Disk"
                ]
              ]
            }
          ]
        }
      }
    },
    "/nodes/{node}/qemu/{vmid}/mtunnel": {
      "post": {
        "operationId": "post-nodes-node-qemu-vmid-mtunnel",
        "summary": "mtunnel",
        "description": "Migration tunnel endpoint - only for internal use by VM migration.",
        "tags": [
          "/nodes/{node}/qemu/{vmid}/mtunnel"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "socket": {
                      "type": "string"
                    },
                    "ticket": {
                      "type": "string"
                    },
                    "upid": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "socket",
                    "ticket",
                    "upid"
                  ],
                  "additionalProperties": false
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "post-nodes-node-qemu-vmid-mtunnel",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "description": "The (unique) ID of the VM.",
            "schema": {
              "type": "integer",
              "description": "The (unique) ID of the VM.",
              "minimum": 100,
              "maximum": 999999999,
              "format": "pve-vmid",
              "x-proxmox-typetext": "<integer> (100 - 999999999)"
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "bridges": {
                    "type": "string",
                    "description": "List of network bridges to check availability. Will be checked again for actually used bridges during migration.",
                    "format": "pve-bridge-id-list",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "storages": {
                    "type": "string",
                    "description": "List of storages to check permission and availability. Will be checked again for all actually used storages during migration.",
                    "format": "pve-storage-id-list",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "description": "You need 'VM.Allocate' permissions on '/vms/{vmid}' and Sys.Incoming on '/'. Further permission checks happen during the actual migration.",
              "check": [
                "and",
                [
                  "perm",
                  "/vms/{vmid}",
                  [
                    "VM.Allocate"
                  ]
                ],
                [
                  "perm",
                  "/",
                  [
                    "Sys.Incoming"
                  ]
                ]
              ]
            }
          ]
        }
      }
    },
    "/nodes/{node}/qemu/{vmid}/mtunnelwebsocket": {
      "get": {
        "operationId": "get-nodes-node-qemu-vmid-mtunnelwebsocket",
        "summary": "mtunnelwebsocket",
        "description": "Migration tunnel endpoint for websocket upgrade - only for internal use by VM migration.",
        "tags": [
          "/nodes/{node}/qemu/{vmid}/mtunnelwebsocket"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "port": {
                      "type": "string",
                      "x-proxmox-optional": true
                    },
                    "socket": {
                      "type": "string",
                      "x-proxmox-optional": true
                    }
                  }
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-nodes-node-qemu-vmid-mtunnelwebsocket",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "socket",
            "in": "query",
            "required": true,
            "description": "unix socket to forward to",
            "schema": {
              "type": "string",
              "description": "unix socket to forward to",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "ticket",
            "in": "query",
            "required": true,
            "description": "ticket return by initial 'mtunnel' API call, or retrieved via 'ticket' tunnel command",
            "schema": {
              "type": "string",
              "description": "ticket return by initial 'mtunnel' API call, or retrieved via 'ticket' tunnel command",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "description": "The (unique) ID of the VM.",
            "schema": {
              "type": "integer",
              "description": "The (unique) ID of the VM.",
              "minimum": 100,
              "maximum": 999999999,
              "format": "pve-vmid",
              "x-proxmox-typetext": "<integer> (100 - 999999999)"
            }
          }
        ],
        "security": [],
        "x-proxmox-permissions": {
          "all": [
            {
              "description": "You need to pass a ticket valid for the selected socket. Tickets can be created via the mtunnel API call, which will check permissions accordingly.",
              "user": "all"
            }
          ]
        }
      }
    },
    "/nodes/{node}/qemu/{vmid}/pending": {
      "get": {
        "operationId": "get-nodes-node-qemu-vmid-pending",
        "summary": "vm_pending",
        "description": "Get the virtual machine configuration with both current and pending values.",
        "tags": [
          "/nodes/{node}/qemu/{vmid}/pending"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "delete": {
                        "type": "integer",
                        "description": "Indicates a pending delete request if present and not 0. The value 2 indicates a force-delete request.",
                        "minimum": 0,
                        "maximum": 2,
                        "x-proxmox-optional": true
                      },
                      "key": {
                        "type": "string",
                        "description": "Configuration option name."
                      },
                      "pending": {
                        "type": "string",
                        "description": "Pending value.",
                        "x-proxmox-optional": true
                      },
                      "value": {
                        "type": "string",
                        "description": "Current value.",
                        "x-proxmox-optional": true
                      }
                    },
                    "required": [
                      "key"
                    ]
                  }
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-nodes-node-qemu-vmid-pending",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "description": "The (unique) ID of the VM.",
            "schema": {
              "type": "integer",
              "description": "The (unique) ID of the VM.",
              "minimum": 100,
              "maximum": 999999999,
              "format": "pve-vmid",
              "x-proxmox-typetext": "<integer> (100 - 999999999)"
            }
          }
        ],
        "security": [],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/vms/{vmid}",
                [
                  "VM.Audit"
                ]
              ]
            }
          ]
        }
      }
    },
    "/nodes/{node}/qemu/{vmid}/remote_migrate": {
      "post": {
        "operationId": "post-nodes-node-qemu-vmid-remote-migrate",
        "summary": "remote_migrate_vm",
        "description": "Migrate virtual machine to a remote cluster. Creates a new migration task. EXPERIMENTAL feature!",
        "tags": [
          "/nodes/{node}/qemu/{vmid}/remote_migrate"
        ],
        "responses": {
          "200": {
            "description": "the task ID.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "the task ID."
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "post-nodes-node-qemu-vmid-remote-migrate",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "description": "The (unique) ID of the VM.",
            "schema": {
              "type": "integer",
              "description": "The (unique) ID of the VM.",
              "minimum": 100,
              "maximum": 999999999,
              "format": "pve-vmid",
              "x-proxmox-typetext": "<integer> (100 - 999999999)"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "bwlimit": {
                    "type": "integer",
                    "description": "Override I/O bandwidth limit (in KiB/s).",
                    "default": "migrate limit from datacenter or storage config",
                    "x-proxmox-typetext": "<integer> (0 - N)",
                    "x-proxmox-optional": true
                  },
                  "delete": {
                    "type": "boolean",
                    "description": "Delete the original VM and related data after successful migration. By default the original VM is kept on the source cluster in a stopped state.",
                    "default": false,
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "online": {
                    "type": "boolean",
                    "description": "Use online/live migration if VM is running. Ignored if VM is stopped.",
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "target-bridge": {
                    "type": "string",
                    "description": "Mapping from source to target bridges. Providing only a single bridge ID maps all source bridges to that bridge. Providing the special value '1' will map each source bridge to itself.",
                    "format": "bridge-pair-list",
                    "x-proxmox-typetext": "<string>"
                  },
                  "target-endpoint": {
                    "type": "string",
                    "description": "Remote target endpoint",
                    "format": "proxmox-remote",
                    "x-proxmox-typetext": "apitoken=<PVEAPIToken=user@realm!token=SECRET> ,host=<ADDRESS> [,fingerprint=<FINGERPRINT>] [,port=<PORT>]"
                  },
                  "target-storage": {
                    "type": "string",
                    "description": "Mapping from source to target storages. Providing only a single storage ID maps all source storages to that storage. Providing the special value '1' will map each source storage to itself.",
                    "format": "storage-pair-list",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": false
                  },
                  "target-vmid": {
                    "type": "integer",
                    "description": "The (unique) ID of the VM.",
                    "minimum": 100,
                    "maximum": 999999999,
                    "format": "pve-vmid",
                    "x-proxmox-typetext": "<integer> (100 - 999999999)",
                    "x-proxmox-optional": true
                  }
                },
                "required": [
                  "target-bridge",
                  "target-endpoint",
                  "target-storage"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/vms/{vmid}",
                [
                  "VM.Migrate"
                ]
              ]
            }
          ]
        }
      }
    },
    "/nodes/{node}/qemu/{vmid}/resize": {
      "put": {
        "operationId": "put-nodes-node-qemu-vmid-resize",
        "summary": "resize_vm",
        "description": "Extend volume size.",
        "tags": [
          "/nodes/{node}/qemu/{vmid}/resize"
        ],
        "responses": {
          "200": {
            "description": "the task ID.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "the task ID."
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "put-nodes-node-qemu-vmid-resize",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "description": "The (unique) ID of the VM.",
            "schema": {
              "type": "integer",
              "description": "The (unique) ID of the VM.",
              "minimum": 100,
              "maximum": 999999999,
              "format": "pve-vmid",
              "x-proxmox-typetext": "<integer> (100 - 999999999)"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "digest": {
                    "type": "string",
                    "description": "Prevent changes if current configuration file has different SHA1 digest. This can be used to prevent concurrent modifications.",
                    "maxLength": 40,
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "disk": {
                    "type": "string",
                    "description": "The disk you want to resize.",
                    "enum": [
                      "ide0",
                      "ide1",
                      "ide2",
                      "ide3",
                      "scsi0",
                      "scsi1",
                      "scsi2",
                      "scsi3",
                      "scsi4",
                      "scsi5",
                      "scsi6",
                      "scsi7",
                      "scsi8",
                      "scsi9",
                      "scsi10",
                      "scsi11",
                      "scsi12",
                      "scsi13",
                      "scsi14",
                      "scsi15",
                      "scsi16",
                      "scsi17",
                      "scsi18",
                      "scsi19",
                      "scsi20",
                      "scsi21",
                      "scsi22",
                      "scsi23",
                      "scsi24",
                      "scsi25",
                      "scsi26",
                      "scsi27",
                      "scsi28",
                      "scsi29",
                      "scsi30",
                      "virtio0",
                      "virtio1",
                      "virtio2",
                      "virtio3",
                      "virtio4",
                      "virtio5",
                      "virtio6",
                      "virtio7",
                      "virtio8",
                      "virtio9",
                      "virtio10",
                      "virtio11",
                      "virtio12",
                      "virtio13",
                      "virtio14",
                      "virtio15",
                      "sata0",
                      "sata1",
                      "sata2",
                      "sata3",
                      "sata4",
                      "sata5",
                      "efidisk0",
                      "tpmstate0"
                    ]
                  },
                  "size": {
                    "type": "string",
                    "description": "The new size. With the `+` sign the value is added to the actual size of the volume and without it, the value is taken as an absolute one. Shrinking disk size is not supported.",
                    "pattern": "\\+?\\d+(\\.\\d+)?[KMGT]?"
                  },
                  "skiplock": {
                    "type": "boolean",
                    "description": "Ignore locks - only root is allowed to use this option.",
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  }
                },
                "required": [
                  "disk",
                  "size"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/vms/{vmid}",
                [
                  "VM.Config.Disk"
                ]
              ]
            }
          ]
        }
      }
    },
    "/nodes/{node}/qemu/{vmid}/rrd": {
      "get": {
        "operationId": "get-nodes-node-qemu-vmid-rrd",
        "summary": "rrd",
        "description": "Read VM RRD statistics (returns PNG)",
        "tags": [
          "/nodes/{node}/qemu/{vmid}/rrd"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "filename": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "filename"
                  ]
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-nodes-node-qemu-vmid-rrd",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "cf",
            "in": "query",
            "required": false,
            "description": "The RRD consolidation function",
            "schema": {
              "type": "string",
              "description": "The RRD consolidation function",
              "enum": [
                "AVERAGE",
                "MAX"
              ],
              "x-proxmox-optional": true
            }
          },
          {
            "name": "ds",
            "in": "query",
            "required": true,
            "description": "The list of datasources you want to display.",
            "schema": {
              "type": "string",
              "description": "The list of datasources you want to display.",
              "format": "pve-configid-list",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "timeframe",
            "in": "query",
            "required": true,
            "description": "Specify the time frame you are interested in.",
            "schema": {
              "type": "string",
              "description": "Specify the time frame you are interested in.",
              "enum": [
                "hour",
                "day",
                "week",
                "month",
                "year"
              ]
            }
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "description": "The (unique) ID of the VM.",
            "schema": {
              "type": "integer",
              "description": "The (unique) ID of the VM.",
              "minimum": 100,
              "maximum": 999999999,
              "format": "pve-vmid",
              "x-proxmox-typetext": "<integer> (100 - 999999999)"
            }
          }
        ],
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/vms/{vmid}",
                [
                  "VM.Audit"
                ]
              ]
            }
          ]
        }
      }
    },
    "/nodes/{node}/qemu/{vmid}/rrddata": {
      "get": {
        "operationId": "get-nodes-node-qemu-vmid-rrddata",
        "summary": "rrddata",
        "description": "Read VM RRD statistics",
        "tags": [
          "/nodes/{node}/qemu/{vmid}/rrddata"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  }
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-nodes-node-qemu-vmid-rrddata",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "cf",
            "in": "query",
            "required": false,
            "description": "The RRD consolidation function",
            "schema": {
              "type": "string",
              "description": "The RRD consolidation function",
              "enum": [
                "AVERAGE",
                "MAX"
              ],
              "x-proxmox-optional": true
            }
          },
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "timeframe",
            "in": "query",
            "required": true,
            "description": "Specify the time frame you are interested in.",
            "schema": {
              "type": "string",
              "description": "Specify the time frame you are interested in.",
              "enum": [
                "hour",
                "day",
                "week",
                "month",
                "year"
              ]
            }
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "description": "The (unique) ID of the VM.",
            "schema": {
              "type": "integer",
              "description": "The (unique) ID of the VM.",
              "minimum": 100,
              "maximum": 999999999,
              "format": "pve-vmid",
              "x-proxmox-typetext": "<integer> (100 - 999999999)"
            }
          }
        ],
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/vms/{vmid}",
                [
                  "VM.Audit"
                ]
              ]
            }
          ]
        }
      }
    },
    "/nodes/{node}/qemu/{vmid}/sendkey": {
      "put": {
        "operationId": "put-nodes-node-qemu-vmid-sendkey",
        "summary": "vm_sendkey",
        "description": "Send key event to virtual machine.",
        "tags": [
          "/nodes/{node}/qemu/{vmid}/sendkey"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "put-nodes-node-qemu-vmid-sendkey",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "description": "The (unique) ID of the VM.",
            "schema": {
              "type": "integer",
              "description": "The (unique) ID of the VM.",
              "minimum": 100,
              "maximum": 999999999,
              "format": "pve-vmid",
              "x-proxmox-typetext": "<integer> (100 - 999999999)"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "key": {
                    "type": "string",
                    "description": "The key (qemu monitor encoding).",
                    "x-proxmox-typetext": "<string>"
                  },
                  "skiplock": {
                    "type": "boolean",
                    "description": "Ignore locks - only root is allowed to use this option.",
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  }
                },
                "required": [
                  "key"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/vms/{vmid}",
                [
                  "VM.Console"
                ]
              ]
            }
          ]
        }
      }
    },
    "/nodes/{node}/qemu/{vmid}/snapshot": {
      "get": {
        "operationId": "get-nodes-node-qemu-vmid-snapshot",
        "summary": "snapshot_list",
        "description": "List all snapshots.",
        "tags": [
          "/nodes/{node}/qemu/{vmid}/snapshot"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "description": {
                        "type": "string",
                        "description": "Snapshot description."
                      },
                      "name": {
                        "type": "string",
                        "description": "Snapshot identifier. Value 'current' identifies the current VM."
                      },
                      "parent": {
                        "type": "string",
                        "description": "Parent snapshot identifier.",
                        "x-proxmox-optional": true
                      },
                      "snaptime": {
                        "type": "integer",
                        "description": "Snapshot creation time",
                        "x-proxmox-optional": true,
                        "x-proxmox-metadata": {
                          "renderer": "timestamp"
                        }
                      },
                      "vmstate": {
                        "type": "boolean",
                        "description": "Snapshot includes RAM.",
                        "x-proxmox-optional": true
                      }
                    },
                    "required": [
                      "description",
                      "name"
                    ]
                  },
                  "x-proxmox-metadata": {
                    "links": [
                      {
                        "href": "{name}",
                        "rel": "child"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-nodes-node-qemu-vmid-snapshot",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "description": "The (unique) ID of the VM.",
            "schema": {
              "type": "integer",
              "description": "The (unique) ID of the VM.",
              "minimum": 100,
              "maximum": 999999999,
              "format": "pve-vmid",
              "x-proxmox-typetext": "<integer> (100 - 999999999)"
            }
          }
        ],
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/vms/{vmid}",
                [
                  "VM.Audit"
                ]
              ]
            }
          ]
        }
      },
      "post": {
        "operationId": "post-nodes-node-qemu-vmid-snapshot",
        "summary": "snapshot",
        "description": "Snapshot a VM.",
        "tags": [
          "/nodes/{node}/qemu/{vmid}/snapshot"
        ],
        "responses": {
          "200": {
            "description": "the task ID.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "the task ID."
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "post-nodes-node-qemu-vmid-snapshot",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "description": "The (unique) ID of the VM.",
            "schema": {
              "type": "integer",
              "description": "The (unique) ID of the VM.",
              "minimum": 100,
              "maximum": 999999999,
              "format": "pve-vmid",
              "x-proxmox-typetext": "<integer> (100 - 999999999)"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "description": {
                    "type": "string",
                    "description": "A textual description or comment.",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "snapname": {
                    "type": "string",
                    "description": "The name of the snapshot.",
                    "maxLength": 40,
                    "format": "pve-configid",
                    "x-proxmox-typetext": "<string>"
                  },
                  "vmstate": {
                    "type": "boolean",
                    "description": "Save the vmstate",
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  }
                },
                "required": [
                  "snapname"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/vms/{vmid}",
                [
                  "VM.Snapshot"
                ]
              ]
            }
          ]
        }
      }
    },
    "/nodes/{node}/qemu/{vmid}/snapshot/{snapname}": {
      "delete": {
        "operationId": "delete-nodes-node-qemu-vmid-snapshot-snapname",
        "summary": "delsnapshot",
        "description": "Delete a VM snapshot.",
        "tags": [
          "/nodes/{node}/qemu/{vmid}/snapshot/{snapname}"
        ],
        "responses": {
          "200": {
            "description": "the task ID.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "the task ID."
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "delete-nodes-node-qemu-vmid-snapshot-snapname",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "force",
            "in": "query",
            "required": false,
            "description": "For removal from config file, even if removing disk snapshots fails.",
            "schema": {
              "type": "boolean",
              "description": "For removal from config file, even if removing disk snapshots fails.",
              "x-proxmox-typetext": "<boolean>",
              "x-proxmox-optional": true
            }
          },
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "snapname",
            "in": "path",
            "required": true,
            "description": "The name of the snapshot.",
            "schema": {
              "type": "string",
              "description": "The name of the snapshot.",
              "maxLength": 40,
              "format": "pve-configid",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "description": "The (unique) ID of the VM.",
            "schema": {
              "type": "integer",
              "description": "The (unique) ID of the VM.",
              "minimum": 100,
              "maximum": 999999999,
              "format": "pve-vmid",
              "x-proxmox-typetext": "<integer> (100 - 999999999)"
            }
          }
        ],
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/vms/{vmid}",
                [
                  "VM.Snapshot"
                ]
              ]
            }
          ]
        }
      },
      "get": {
        "operationId": "get-nodes-node-qemu-vmid-snapshot-snapname",
        "summary": "snapshot_cmd_idx",
        "description": "",
        "tags": [
          "/nodes/{node}/qemu/{vmid}/snapshot/{snapname}"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  },
                  "x-proxmox-metadata": {
                    "links": [
                      {
                        "href": "{cmd}",
                        "rel": "child"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-nodes-node-qemu-vmid-snapshot-snapname",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "snapname",
            "in": "path",
            "required": true,
            "description": "The name of the snapshot.",
            "schema": {
              "type": "string",
              "description": "The name of the snapshot.",
              "maxLength": 40,
              "format": "pve-configid",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "description": "The (unique) ID of the VM.",
            "schema": {
              "type": "integer",
              "description": "The (unique) ID of the VM.",
              "minimum": 100,
              "maximum": 999999999,
              "format": "pve-vmid",
              "x-proxmox-typetext": "<integer> (100 - 999999999)"
            }
          }
        ],
        "security": [],
        "x-proxmox-permissions": {
          "all": [
            {
              "user": "all"
            }
          ]
        }
      }
    },
    "/nodes/{node}/qemu/{vmid}/snapshot/{snapname}/config": {
      "get": {
        "operationId": "get-nodes-node-qemu-vmid-snapshot-snapname-config",
        "summary": "get_snapshot_config",
        "description": "Get snapshot configuration",
        "tags": [
          "/nodes/{node}/qemu/{vmid}/snapshot/{snapname}/config"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-nodes-node-qemu-vmid-snapshot-snapname-config",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "snapname",
            "in": "path",
            "required": true,
            "description": "The name of the snapshot.",
            "schema": {
              "type": "string",
              "description": "The name of the snapshot.",
              "maxLength": 40,
              "format": "pve-configid",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "description": "The (unique) ID of the VM.",
            "schema": {
              "type": "integer",
              "description": "The (unique) ID of the VM.",
              "minimum": 100,
              "maximum": 999999999,
              "format": "pve-vmid",
              "x-proxmox-typetext": "<integer> (100 - 999999999)"
            }
          }
        ],
        "security": [],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/vms/{vmid}",
                [
                  "VM.Snapshot",
                  "VM.Snapshot.Rollback",
                  "VM.Audit"
                ],
                "any",
                1
              ]
            }
          ]
        }
      },
      "put": {
        "operationId": "put-nodes-node-qemu-vmid-snapshot-snapname-config",
        "summary": "update_snapshot_config",
        "description": "Update snapshot metadata.",
        "tags": [
          "/nodes/{node}/qemu/{vmid}/snapshot/{snapname}/config"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "put-nodes-node-qemu-vmid-snapshot-snapname-config",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "snapname",
            "in": "path",
            "required": true,
            "description": "The name of the snapshot.",
            "schema": {
              "type": "string",
              "description": "The name of the snapshot.",
              "maxLength": 40,
              "format": "pve-configid",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "description": "The (unique) ID of the VM.",
            "schema": {
              "type": "integer",
              "description": "The (unique) ID of the VM.",
              "minimum": 100,
              "maximum": 999999999,
              "format": "pve-vmid",
              "x-proxmox-typetext": "<integer> (100 - 999999999)"
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "description": {
                    "type": "string",
                    "description": "A textual description or comment.",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/vms/{vmid}",
                [
                  "VM.Snapshot"
                ]
              ]
            }
          ]
        }
      }
    },
    "/nodes/{node}/qemu/{vmid}/snapshot/{snapname}/rollback": {
      "post": {
        "operationId": "post-nodes-node-qemu-vmid-snapshot-snapname-rollback",
        "summary": "rollback",
        "description": "Rollback VM state to specified snapshot.",
        "tags": [
          "/nodes/{node}/qemu/{vmid}/snapshot/{snapname}/rollback"
        ],
        "responses": {
          "200": {
            "description": "the task ID.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "the task ID."
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "post-nodes-node-qemu-vmid-snapshot-snapname-rollback",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "snapname",
            "in": "path",
            "required": true,
            "description": "The name of the snapshot.",
            "schema": {
              "type": "string",
              "description": "The name of the snapshot.",
              "maxLength": 40,
              "format": "pve-configid",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "description": "The (unique) ID of the VM.",
            "schema": {
              "type": "integer",
              "description": "The (unique) ID of the VM.",
              "minimum": 100,
              "maximum": 999999999,
              "format": "pve-vmid",
              "x-proxmox-typetext": "<integer> (100 - 999999999)"
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "start": {
                    "type": "boolean",
                    "description": "Whether the VM should get started after rolling back successfully. (Note: VMs will be automatically started if the snapshot includes RAM.)",
                    "default": false,
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/vms/{vmid}",
                [
                  "VM.Snapshot",
                  "VM.Snapshot.Rollback"
                ],
                "any",
                1
              ]
            }
          ]
        }
      }
    },
    "/nodes/{node}/qemu/{vmid}/spiceproxy": {
      "post": {
        "operationId": "post-nodes-node-qemu-vmid-spiceproxy",
        "summary": "spiceproxy",
        "description": "Returns a SPICE configuration to connect to the VM.",
        "tags": [
          "/nodes/{node}/qemu/{vmid}/spiceproxy"
        ],
        "responses": {
          "200": {
            "description": "Returned values can be directly passed to the 'remote-viewer' application.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Returned values can be directly passed to the 'remote-viewer' application.",
                  "properties": {
                    "host": {
                      "type": "string"
                    },
                    "password": {
                      "type": "string"
                    },
                    "proxy": {
                      "type": "string"
                    },
                    "tls-port": {
                      "type": "integer"
                    },
                    "type": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "host",
                    "password",
                    "proxy",
                    "tls-port",
                    "type"
                  ],
                  "additionalProperties": true
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "post-nodes-node-qemu-vmid-spiceproxy",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "description": "The (unique) ID of the VM.",
            "schema": {
              "type": "integer",
              "description": "The (unique) ID of the VM.",
              "minimum": 100,
              "maximum": 999999999,
              "format": "pve-vmid",
              "x-proxmox-typetext": "<integer> (100 - 999999999)"
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "proxy": {
                    "type": "string",
                    "description": "SPICE proxy server. This can be used by the client to specify the proxy server. All nodes in a cluster runs 'spiceproxy', so it is up to the client to choose one. By default, we return the node where the VM is currently running. As reasonable setting is to use same node you use to connect to the API (This is window.location.hostname for the JS GUI).",
                    "format": "address",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/vms/{vmid}",
                [
                  "VM.Console"
                ]
              ]
            }
          ]
        }
      }
    },
    "/nodes/{node}/qemu/{vmid}/status": {
      "get": {
        "operationId": "get-nodes-node-qemu-vmid-status",
        "summary": "vmcmdidx",
        "description": "Directory index",
        "tags": [
          "/nodes/{node}/qemu/{vmid}/status"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "subdir": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "subdir"
                    ]
                  },
                  "x-proxmox-metadata": {
                    "links": [
                      {
                        "href": "{subdir}",
                        "rel": "child"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-nodes-node-qemu-vmid-status",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "description": "The (unique) ID of the VM.",
            "schema": {
              "type": "integer",
              "description": "The (unique) ID of the VM.",
              "minimum": 100,
              "maximum": 999999999,
              "format": "pve-vmid",
              "x-proxmox-typetext": "<integer> (100 - 999999999)"
            }
          }
        ],
        "security": [],
        "x-proxmox-permissions": {
          "all": [
            {
              "user": "all"
            }
          ]
        }
      }
    },
    "/nodes/{node}/qemu/{vmid}/status/current": {
      "get": {
        "operationId": "get-nodes-node-qemu-vmid-status-current",
        "summary": "vm_status",
        "description": "Get virtual machine status.",
        "tags": [
          "/nodes/{node}/qemu/{vmid}/status/current"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "agent": {
                      "type": "boolean",
                      "description": "QEMU Guest Agent is enabled in config.",
                      "x-proxmox-optional": true
                    },
                    "clipboard": {
                      "type": "string",
                      "description": "Enable a specific clipboard. If not set, depending on the display type the SPICE one will be added.",
                      "enum": [
                        "vnc"
                      ],
                      "x-proxmox-optional": true
                    },
                    "cpu": {
                      "type": "number",
                      "description": "Current CPU usage.",
                      "x-proxmox-optional": true
                    },
                    "cpus": {
                      "type": "number",
                      "description": "Maximum usable CPUs.",
                      "x-proxmox-optional": true
                    },
                    "diskread": {
                      "type": "integer",
                      "description": "The amount of bytes the guest read from it's block devices since the guest was started. (Note: This info is not available for all storage types.)",
                      "x-proxmox-optional": true,
                      "x-proxmox-metadata": {
                        "renderer": "bytes"
                      }
                    },
                    "diskwrite": {
                      "type": "integer",
                      "description": "The amount of bytes the guest wrote from it's block devices since the guest was started. (Note: This info is not available for all storage types.)",
                      "x-proxmox-optional": true,
                      "x-proxmox-metadata": {
                        "renderer": "bytes"
                      }
                    },
                    "ha": {
                      "type": "object",
                      "description": "HA manager service status."
                    },
                    "lock": {
                      "type": "string",
                      "description": "The current config lock, if any.",
                      "x-proxmox-optional": true
                    },
                    "maxdisk": {
                      "type": "integer",
                      "description": "Root disk size in bytes.",
                      "x-proxmox-optional": true,
                      "x-proxmox-metadata": {
                        "renderer": "bytes"
                      }
                    },
                    "maxmem": {
                      "type": "integer",
                      "description": "Maximum memory in bytes.",
                      "x-proxmox-optional": true,
                      "x-proxmox-metadata": {
                        "renderer": "bytes"
                      }
                    },
                    "mem": {
                      "type": "integer",
                      "description": "Currently used memory in bytes.",
                      "x-proxmox-optional": true,
                      "x-proxmox-metadata": {
                        "renderer": "bytes"
                      }
                    },
                    "memhost": {
                      "type": "integer",
                      "description": "Current memory usage on the host.",
                      "x-proxmox-optional": true,
                      "x-proxmox-metadata": {
                        "renderer": "bytes"
                      }
                    },
                    "name": {
                      "type": "string",
                      "description": "VM (host)name.",
                      "x-proxmox-optional": true
                    },
                    "netin": {
                      "type": "integer",
                      "description": "The amount of traffic in bytes that was sent to the guest over the network since it was started.",
                      "x-proxmox-optional": true,
                      "x-proxmox-metadata": {
                        "renderer": "bytes"
                      }
                    },
                    "netout": {
                      "type": "integer",
                      "description": "The amount of traffic in bytes that was sent from the guest over the network since it was started.",
                      "x-proxmox-optional": true,
                      "x-proxmox-metadata": {
                        "renderer": "bytes"
                      }
                    },
                    "pid": {
                      "type": "integer",
                      "description": "PID of the QEMU process, if the VM is running.",
                      "x-proxmox-optional": true
                    },
                    "pressurecpufull": {
                      "type": "number",
                      "description": "CPU Full pressure stall average over the last 10 seconds.",
                      "x-proxmox-optional": true
                    },
                    "pressurecpusome": {
                      "type": "number",
                      "description": "CPU Some pressure stall average over the last 10 seconds.",
                      "x-proxmox-optional": true
                    },
                    "pressureiofull": {
                      "type": "number",
                      "description": "IO Full pressure stall average over the last 10 seconds.",
                      "x-proxmox-optional": true
                    },
                    "pressureiosome": {
                      "type": "number",
                      "description": "IO Some pressure stall average over the last 10 seconds.",
                      "x-proxmox-optional": true
                    },
                    "pressurememoryfull": {
                      "type": "number",
                      "description": "Memory Full pressure stall average over the last 10 seconds.",
                      "x-proxmox-optional": true
                    },
                    "pressurememorysome": {
                      "type": "number",
                      "description": "Memory Some pressure stall average over the last 10 seconds.",
                      "x-proxmox-optional": true
                    },
                    "qmpstatus": {
                      "type": "string",
                      "description": "VM run state from the 'query-status' QMP monitor command.",
                      "x-proxmox-optional": true
                    },
                    "running-machine": {
                      "type": "string",
                      "description": "The currently running machine type (if running).",
                      "x-proxmox-optional": true
                    },
                    "running-qemu": {
                      "type": "string",
                      "description": "The QEMU version the VM is currently using (if running).",
                      "x-proxmox-optional": true
                    },
                    "serial": {
                      "type": "boolean",
                      "description": "Guest has serial device configured.",
                      "x-proxmox-optional": true
                    },
                    "spice": {
                      "type": "boolean",
                      "description": "QEMU VGA configuration supports spice.",
                      "x-proxmox-optional": true
                    },
                    "status": {
                      "type": "string",
                      "description": "QEMU process status.",
                      "enum": [
                        "stopped",
                        "running"
                      ]
                    },
                    "tags": {
                      "type": "string",
                      "description": "The current configured tags, if any",
                      "x-proxmox-optional": true
                    },
                    "template": {
                      "type": "boolean",
                      "description": "Determines if the guest is a template.",
                      "default": false,
                      "x-proxmox-optional": true
                    },
                    "uptime": {
                      "type": "integer",
                      "description": "Uptime in seconds.",
                      "x-proxmox-optional": true,
                      "x-proxmox-metadata": {
                        "renderer": "duration"
                      }
                    },
                    "vmid": {
                      "type": "integer",
                      "description": "The (unique) ID of the VM.",
                      "minimum": 100,
                      "maximum": 999999999,
                      "format": "pve-vmid"
                    }
                  },
                  "required": [
                    "ha",
                    "status",
                    "vmid"
                  ]
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-nodes-node-qemu-vmid-status-current",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "description": "The (unique) ID of the VM.",
            "schema": {
              "type": "integer",
              "description": "The (unique) ID of the VM.",
              "minimum": 100,
              "maximum": 999999999,
              "format": "pve-vmid",
              "x-proxmox-typetext": "<integer> (100 - 999999999)"
            }
          }
        ],
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/vms/{vmid}",
                [
                  "VM.Audit"
                ]
              ]
            }
          ]
        }
      }
    },
    "/nodes/{node}/qemu/{vmid}/status/reboot": {
      "post": {
        "operationId": "post-nodes-node-qemu-vmid-status-reboot",
        "summary": "vm_reboot",
        "description": "Reboot the VM by shutting it down, and starting it again. Applies pending changes.",
        "tags": [
          "/nodes/{node}/qemu/{vmid}/status/reboot"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "post-nodes-node-qemu-vmid-status-reboot",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "description": "The (unique) ID of the VM.",
            "schema": {
              "type": "integer",
              "description": "The (unique) ID of the VM.",
              "minimum": 100,
              "maximum": 999999999,
              "format": "pve-vmid",
              "x-proxmox-typetext": "<integer> (100 - 999999999)"
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "timeout": {
                    "type": "integer",
                    "description": "Wait maximal timeout seconds for the shutdown.",
                    "minimum": 0,
                    "x-proxmox-typetext": "<integer> (0 - N)",
                    "x-proxmox-optional": true
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/vms/{vmid}",
                [
                  "VM.PowerMgmt"
                ]
              ]
            }
          ]
        }
      }
    },
    "/nodes/{node}/qemu/{vmid}/status/reset": {
      "post": {
        "operationId": "post-nodes-node-qemu-vmid-status-reset",
        "summary": "vm_reset",
        "description": "Reset virtual machine.",
        "tags": [
          "/nodes/{node}/qemu/{vmid}/status/reset"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "post-nodes-node-qemu-vmid-status-reset",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "description": "The (unique) ID of the VM.",
            "schema": {
              "type": "integer",
              "description": "The (unique) ID of the VM.",
              "minimum": 100,
              "maximum": 999999999,
              "format": "pve-vmid",
              "x-proxmox-typetext": "<integer> (100 - 999999999)"
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "skiplock": {
                    "type": "boolean",
                    "description": "Ignore locks - only root is allowed to use this option.",
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/vms/{vmid}",
                [
                  "VM.PowerMgmt"
                ]
              ]
            }
          ]
        }
      }
    },
    "/nodes/{node}/qemu/{vmid}/status/resume": {
      "post": {
        "operationId": "post-nodes-node-qemu-vmid-status-resume",
        "summary": "vm_resume",
        "description": "Resume virtual machine.",
        "tags": [
          "/nodes/{node}/qemu/{vmid}/status/resume"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "post-nodes-node-qemu-vmid-status-resume",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "description": "The (unique) ID of the VM.",
            "schema": {
              "type": "integer",
              "description": "The (unique) ID of the VM.",
              "minimum": 100,
              "maximum": 999999999,
              "format": "pve-vmid",
              "x-proxmox-typetext": "<integer> (100 - 999999999)"
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "nocheck": {
                    "type": "boolean",
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "skiplock": {
                    "type": "boolean",
                    "description": "Ignore locks - only root is allowed to use this option.",
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/vms/{vmid}",
                [
                  "VM.PowerMgmt"
                ]
              ]
            }
          ]
        }
      }
    },
    "/nodes/{node}/qemu/{vmid}/status/shutdown": {
      "post": {
        "operationId": "post-nodes-node-qemu-vmid-status-shutdown",
        "summary": "vm_shutdown",
        "description": "Shutdown virtual machine. This is similar to pressing the power button on a physical machine. This will send an ACPI event for the guest OS, which should then proceed to a clean shutdown.",
        "tags": [
          "/nodes/{node}/qemu/{vmid}/status/shutdown"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "post-nodes-node-qemu-vmid-status-shutdown",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "description": "The (unique) ID of the VM.",
            "schema": {
              "type": "integer",
              "description": "The (unique) ID of the VM.",
              "minimum": 100,
              "maximum": 999999999,
              "format": "pve-vmid",
              "x-proxmox-typetext": "<integer> (100 - 999999999)"
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "forceStop": {
                    "type": "boolean",
                    "description": "Make sure the VM stops.",
                    "default": false,
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "keepActive": {
                    "type": "boolean",
                    "description": "Do not deactivate storage volumes.",
                    "default": false,
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "skiplock": {
                    "type": "boolean",
                    "description": "Ignore locks - only root is allowed to use this option.",
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "timeout": {
                    "type": "integer",
                    "description": "Wait maximal timeout seconds.",
                    "minimum": 0,
                    "x-proxmox-typetext": "<integer> (0 - N)",
                    "x-proxmox-optional": true
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/vms/{vmid}",
                [
                  "VM.PowerMgmt"
                ]
              ]
            }
          ]
        }
      }
    },
    "/nodes/{node}/qemu/{vmid}/status/start": {
      "post": {
        "operationId": "post-nodes-node-qemu-vmid-status-start",
        "summary": "vm_start",
        "description": "Start virtual machine.",
        "tags": [
          "/nodes/{node}/qemu/{vmid}/status/start"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "post-nodes-node-qemu-vmid-status-start",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "description": "The (unique) ID of the VM.",
            "schema": {
              "type": "integer",
              "description": "The (unique) ID of the VM.",
              "minimum": 100,
              "maximum": 999999999,
              "format": "pve-vmid",
              "x-proxmox-typetext": "<integer> (100 - 999999999)"
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "force-cpu": {
                    "type": "string",
                    "description": "Override QEMU's -cpu argument with the given string.",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "machine": {
                    "type": "string",
                    "description": "Specify the QEMU machine.",
                    "x-proxmox-typetext": "[[type=]<machine type>] [,enable-s3=<1|0>] [,enable-s4=<1|0>] [,viommu=<intel|virtio>]",
                    "x-proxmox-optional": true
                  },
                  "migratedfrom": {
                    "type": "string",
                    "description": "The cluster node name.",
                    "format": "pve-node",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "migration_network": {
                    "type": "string",
                    "description": "CIDR of the (sub) network that is used for migration.",
                    "format": "CIDR",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "migration_type": {
                    "type": "string",
                    "description": "Migration traffic is encrypted using an SSH tunnel by default. On secure, completely private networks this can be disabled to increase performance.",
                    "enum": [
                      "secure",
                      "insecure"
                    ],
                    "x-proxmox-optional": true
                  },
                  "skiplock": {
                    "type": "boolean",
                    "description": "Ignore locks - only root is allowed to use this option.",
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "stateuri": {
                    "type": "string",
                    "description": "Some command save/restore state from this location.",
                    "maxLength": 128,
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "targetstorage": {
                    "type": "string",
                    "description": "Mapping from source to target storages. Providing only a single storage ID maps all source storages to that storage. Providing the special value '1' will map each source storage to itself.",
                    "format": "storage-pair-list",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "timeout": {
                    "type": "integer",
                    "description": "Wait maximal timeout seconds.",
                    "default": "max(30, vm memory in GiB)",
                    "minimum": 0,
                    "x-proxmox-typetext": "<integer> (0 - N)",
                    "x-proxmox-optional": true
                  },
                  "with-conntrack-state": {
                    "type": "boolean",
                    "description": "Whether to migrate conntrack entries for running VMs.",
                    "default": false,
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/vms/{vmid}",
                [
                  "VM.PowerMgmt"
                ]
              ]
            }
          ]
        }
      }
    },
    "/nodes/{node}/qemu/{vmid}/status/stop": {
      "post": {
        "operationId": "post-nodes-node-qemu-vmid-status-stop",
        "summary": "vm_stop",
        "description": "Stop virtual machine. The qemu process will exit immediately. This is akin to pulling the power plug of a running computer and may damage the VM data.",
        "tags": [
          "/nodes/{node}/qemu/{vmid}/status/stop"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "post-nodes-node-qemu-vmid-status-stop",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "description": "The (unique) ID of the VM.",
            "schema": {
              "type": "integer",
              "description": "The (unique) ID of the VM.",
              "minimum": 100,
              "maximum": 999999999,
              "format": "pve-vmid",
              "x-proxmox-typetext": "<integer> (100 - 999999999)"
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "keepActive": {
                    "type": "boolean",
                    "description": "Do not deactivate storage volumes.",
                    "default": false,
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "migratedfrom": {
                    "type": "string",
                    "description": "The cluster node name.",
                    "format": "pve-node",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "overrule-shutdown": {
                    "type": "boolean",
                    "description": "Try to abort active 'qmshutdown' tasks before stopping.",
                    "default": false,
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "skiplock": {
                    "type": "boolean",
                    "description": "Ignore locks - only root is allowed to use this option.",
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "timeout": {
                    "type": "integer",
                    "description": "Wait maximal timeout seconds.",
                    "minimum": 0,
                    "x-proxmox-typetext": "<integer> (0 - N)",
                    "x-proxmox-optional": true
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/vms/{vmid}",
                [
                  "VM.PowerMgmt"
                ]
              ]
            }
          ]
        }
      }
    },
    "/nodes/{node}/qemu/{vmid}/status/suspend": {
      "post": {
        "operationId": "post-nodes-node-qemu-vmid-status-suspend",
        "summary": "vm_suspend",
        "description": "Suspend virtual machine.",
        "tags": [
          "/nodes/{node}/qemu/{vmid}/status/suspend"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "post-nodes-node-qemu-vmid-status-suspend",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "description": "The (unique) ID of the VM.",
            "schema": {
              "type": "integer",
              "description": "The (unique) ID of the VM.",
              "minimum": 100,
              "maximum": 999999999,
              "format": "pve-vmid",
              "x-proxmox-typetext": "<integer> (100 - 999999999)"
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "skiplock": {
                    "type": "boolean",
                    "description": "Ignore locks - only root is allowed to use this option.",
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "statestorage": {
                    "type": "string",
                    "description": "The storage for the VM state",
                    "format": "pve-storage-id",
                    "x-proxmox-format-description": "storage ID",
                    "x-proxmox-requires": [
                      "todisk"
                    ],
                    "x-proxmox-typetext": "<storage ID>",
                    "x-proxmox-optional": true
                  },
                  "todisk": {
                    "type": "boolean",
                    "description": "If set, suspends the VM to disk. Will be resumed on next VM start.",
                    "default": false,
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "description": "You need 'VM.PowerMgmt' on /vms/{vmid}, and if you have set 'todisk', you need also 'VM.Config.Disk' on /vms/{vmid} and 'Datastore.AllocateSpace' on the storage for the vmstate.",
              "check": [
                "perm",
                "/vms/{vmid}",
                [
                  "VM.PowerMgmt"
                ]
              ]
            }
          ]
        }
      }
    },
    "/nodes/{node}/qemu/{vmid}/template": {
      "post": {
        "operationId": "post-nodes-node-qemu-vmid-template",
        "summary": "template",
        "description": "Create a Template.",
        "tags": [
          "/nodes/{node}/qemu/{vmid}/template"
        ],
        "responses": {
          "200": {
            "description": "the task ID.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "the task ID."
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "post-nodes-node-qemu-vmid-template",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "description": "The (unique) ID of the VM.",
            "schema": {
              "type": "integer",
              "description": "The (unique) ID of the VM.",
              "minimum": 100,
              "maximum": 999999999,
              "format": "pve-vmid",
              "x-proxmox-typetext": "<integer> (100 - 999999999)"
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "disk": {
                    "type": "string",
                    "description": "If you want to convert only 1 disk to base image.",
                    "enum": [
                      "ide0",
                      "ide1",
                      "ide2",
                      "ide3",
                      "scsi0",
                      "scsi1",
                      "scsi2",
                      "scsi3",
                      "scsi4",
                      "scsi5",
                      "scsi6",
                      "scsi7",
                      "scsi8",
                      "scsi9",
                      "scsi10",
                      "scsi11",
                      "scsi12",
                      "scsi13",
                      "scsi14",
                      "scsi15",
                      "scsi16",
                      "scsi17",
                      "scsi18",
                      "scsi19",
                      "scsi20",
                      "scsi21",
                      "scsi22",
                      "scsi23",
                      "scsi24",
                      "scsi25",
                      "scsi26",
                      "scsi27",
                      "scsi28",
                      "scsi29",
                      "scsi30",
                      "virtio0",
                      "virtio1",
                      "virtio2",
                      "virtio3",
                      "virtio4",
                      "virtio5",
                      "virtio6",
                      "virtio7",
                      "virtio8",
                      "virtio9",
                      "virtio10",
                      "virtio11",
                      "virtio12",
                      "virtio13",
                      "virtio14",
                      "virtio15",
                      "sata0",
                      "sata1",
                      "sata2",
                      "sata3",
                      "sata4",
                      "sata5",
                      "efidisk0",
                      "tpmstate0"
                    ],
                    "x-proxmox-optional": true
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "description": "You need 'VM.Allocate' permissions on /vms/{vmid}",
              "check": [
                "perm",
                "/vms/{vmid}",
                [
                  "VM.Allocate"
                ]
              ]
            }
          ]
        }
      }
    },
    "/nodes/{node}/qemu/{vmid}/termproxy": {
      "post": {
        "operationId": "post-nodes-node-qemu-vmid-termproxy",
        "summary": "termproxy",
        "description": "Creates a TCP proxy connections.",
        "tags": [
          "/nodes/{node}/qemu/{vmid}/termproxy"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "port": {
                      "type": "integer"
                    },
                    "ticket": {
                      "type": "string"
                    },
                    "upid": {
                      "type": "string"
                    },
                    "user": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "port",
                    "ticket",
                    "upid",
                    "user"
                  ],
                  "additionalProperties": false
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "post-nodes-node-qemu-vmid-termproxy",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "description": "The (unique) ID of the VM.",
            "schema": {
              "type": "integer",
              "description": "The (unique) ID of the VM.",
              "minimum": 100,
              "maximum": 999999999,
              "format": "pve-vmid",
              "x-proxmox-typetext": "<integer> (100 - 999999999)"
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "serial": {
                    "type": "string",
                    "description": "opens a serial terminal (defaults to display)",
                    "enum": [
                      "serial0",
                      "serial1",
                      "serial2",
                      "serial3"
                    ],
                    "x-proxmox-optional": true
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/vms/{vmid}",
                [
                  "VM.Console"
                ]
              ]
            }
          ]
        }
      }
    },
    "/nodes/{node}/qemu/{vmid}/unlink": {
      "put": {
        "operationId": "put-nodes-node-qemu-vmid-unlink",
        "summary": "unlink",
        "description": "Unlink/delete disk images.",
        "tags": [
          "/nodes/{node}/qemu/{vmid}/unlink"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "put-nodes-node-qemu-vmid-unlink",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "description": "The (unique) ID of the VM.",
            "schema": {
              "type": "integer",
              "description": "The (unique) ID of the VM.",
              "minimum": 100,
              "maximum": 999999999,
              "format": "pve-vmid",
              "x-proxmox-typetext": "<integer> (100 - 999999999)"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "force": {
                    "type": "boolean",
                    "description": "Force physical removal. Without this, we simple remove the disk from the config file and create an additional configuration entry called 'unused[n]', which contains the volume ID. Unlink of unused[n] always cause physical removal.",
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "idlist": {
                    "type": "string",
                    "description": "A list of disk IDs you want to delete.",
                    "format": "pve-configid-list",
                    "x-proxmox-typetext": "<string>"
                  }
                },
                "required": [
                  "idlist"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/vms/{vmid}",
                [
                  "VM.Config.Disk"
                ]
              ]
            }
          ]
        }
      }
    },
    "/nodes/{node}/qemu/{vmid}/vncproxy": {
      "post": {
        "operationId": "post-nodes-node-qemu-vmid-vncproxy",
        "summary": "vncproxy",
        "description": "Creates a TCP VNC proxy connections.",
        "tags": [
          "/nodes/{node}/qemu/{vmid}/vncproxy"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "cert": {
                      "type": "string"
                    },
                    "password": {
                      "type": "string",
                      "description": "Returned if requested with 'generate-password' param. Consists of printable ASCII characters ('!' .. '~').",
                      "x-proxmox-optional": true
                    },
                    "port": {
                      "type": "integer"
                    },
                    "ticket": {
                      "type": "string"
                    },
                    "upid": {
                      "type": "string"
                    },
                    "user": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "cert",
                    "port",
                    "ticket",
                    "upid",
                    "user"
                  ],
                  "additionalProperties": false
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "post-nodes-node-qemu-vmid-vncproxy",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "description": "The (unique) ID of the VM.",
            "schema": {
              "type": "integer",
              "description": "The (unique) ID of the VM.",
              "minimum": 100,
              "maximum": 999999999,
              "format": "pve-vmid",
              "x-proxmox-typetext": "<integer> (100 - 999999999)"
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "generate-password": {
                    "type": "boolean",
                    "description": "Generates a random password to be used as ticket instead of the API ticket.",
                    "default": false,
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "websocket": {
                    "type": "boolean",
                    "description": "Prepare for websocket upgrade (only required when using serial terminal, otherwise upgrade is always possible).",
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/vms/{vmid}",
                [
                  "VM.Console"
                ]
              ]
            }
          ]
        }
      }
    },
    "/nodes/{node}/qemu/{vmid}/vncwebsocket": {
      "get": {
        "operationId": "get-nodes-node-qemu-vmid-vncwebsocket",
        "summary": "vncwebsocket",
        "description": "Opens a weksocket for VNC traffic.",
        "tags": [
          "/nodes/{node}/qemu/{vmid}/vncwebsocket"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "port": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "port"
                  ]
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-nodes-node-qemu-vmid-vncwebsocket",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "port",
            "in": "query",
            "required": true,
            "description": "Port number returned by previous vncproxy call.",
            "schema": {
              "type": "integer",
              "description": "Port number returned by previous vncproxy call.",
              "minimum": 5900,
              "maximum": 5999,
              "x-proxmox-typetext": "<integer> (5900 - 5999)"
            }
          },
          {
            "name": "vmid",
            "in": "path",
            "required": true,
            "description": "The (unique) ID of the VM.",
            "schema": {
              "type": "integer",
              "description": "The (unique) ID of the VM.",
              "minimum": 100,
              "maximum": 999999999,
              "format": "pve-vmid",
              "x-proxmox-typetext": "<integer> (100 - 999999999)"
            }
          },
          {
            "name": "vncticket",
            "in": "query",
            "required": true,
            "description": "Ticket from previous call to vncproxy.",
            "schema": {
              "type": "string",
              "description": "Ticket from previous call to vncproxy.",
              "maxLength": 512,
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "security": [],
        "x-proxmox-permissions": {
          "all": [
            {
              "description": "You also need to pass a valid ticket (vncticket).",
              "check": [
                "perm",
                "/vms/{vmid}",
                [
                  "VM.Console"
                ]
              ]
            }
          ]
        }
      }
    },
    "/nodes/{node}/query-url-metadata": {
      "get": {
        "operationId": "get-nodes-node-query-url-metadata",
        "summary": "query_url_metadata",
        "description": "Query metadata of an URL: file size, file name and mime type.",
        "tags": [
          "/nodes/{node}/query-url-metadata"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "filename": {
                      "type": "string",
                      "x-proxmox-optional": true
                    },
                    "mimetype": {
                      "type": "string",
                      "x-proxmox-optional": true
                    },
                    "size": {
                      "type": "integer",
                      "x-proxmox-optional": true,
                      "x-proxmox-metadata": {
                        "renderer": "bytes"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-nodes-node-query-url-metadata",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "url",
            "in": "query",
            "required": true,
            "description": "The URL to query the metadata from.",
            "schema": {
              "type": "string",
              "description": "The URL to query the metadata from.",
              "pattern": "https?://.*"
            }
          },
          {
            "name": "verify-certificates",
            "in": "query",
            "required": false,
            "description": "If false, no SSL/TLS certificates will be verified.",
            "schema": {
              "type": "boolean",
              "description": "If false, no SSL/TLS certificates will be verified.",
              "default": true,
              "x-proxmox-typetext": "<boolean>",
              "x-proxmox-optional": true
            }
          }
        ],
        "security": [],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "or",
                [
                  "perm",
                  "/",
                  [
                    "Sys.Audit",
                    "Sys.Modify"
                  ]
                ],
                [
                  "perm",
                  "/nodes/{node}",
                  [
                    "Sys.AccessNetwork"
                  ]
                ]
              ]
            }
          ]
        }
      }
    },
    "/nodes/{node}/replication": {
      "get": {
        "operationId": "get-nodes-node-replication",
        "summary": "status",
        "description": "List status of all replication jobs on this node.",
        "tags": [
          "/nodes/{node}/replication"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id"
                    ]
                  },
                  "x-proxmox-metadata": {
                    "links": [
                      {
                        "href": "{id}",
                        "rel": "child"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-nodes-node-replication",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "guest",
            "in": "query",
            "required": false,
            "description": "Only list replication jobs for this guest.",
            "schema": {
              "type": "integer",
              "description": "Only list replication jobs for this guest.",
              "minimum": 100,
              "maximum": 999999999,
              "format": "pve-vmid",
              "x-proxmox-typetext": "<integer> (100 - 999999999)",
              "x-proxmox-optional": true
            }
          },
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "description": "Requires the VM.Audit permission on /vms/<vmid>.",
              "user": "all"
            }
          ]
        }
      }
    },
    "/nodes/{node}/replication/{id}": {
      "get": {
        "operationId": "get-nodes-node-replication-id",
        "summary": "index",
        "description": "Directory index.",
        "tags": [
          "/nodes/{node}/replication/{id}"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  },
                  "x-proxmox-metadata": {
                    "links": [
                      {
                        "href": "{name}",
                        "rel": "child"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-nodes-node-replication-id",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Replication Job ID. The ID is composed of a Guest ID and a job number, separated by a hyphen, i.e. '<GUEST>-<JOBNUM>'.",
            "schema": {
              "type": "string",
              "description": "Replication Job ID. The ID is composed of a Guest ID and a job number, separated by a hyphen, i.e. '<GUEST>-<JOBNUM>'.",
              "pattern": "[1-9][0-9]{2,8}-\\d{1,9}",
              "format": "pve-replication-job-id"
            }
          },
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "security": [],
        "x-proxmox-permissions": {
          "all": [
            {
              "user": "all"
            }
          ]
        }
      }
    },
    "/nodes/{node}/replication/{id}/log": {
      "get": {
        "operationId": "get-nodes-node-replication-id-log",
        "summary": "read_job_log",
        "description": "Read replication job log.",
        "tags": [
          "/nodes/{node}/replication/{id}/log"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "n": {
                        "type": "integer",
                        "description": "Line number"
                      },
                      "t": {
                        "type": "string",
                        "description": "Line text"
                      }
                    },
                    "required": [
                      "n",
                      "t"
                    ]
                  }
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-nodes-node-replication-id-log",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Replication Job ID. The ID is composed of a Guest ID and a job number, separated by a hyphen, i.e. '<GUEST>-<JOBNUM>'.",
            "schema": {
              "type": "string",
              "description": "Replication Job ID. The ID is composed of a Guest ID and a job number, separated by a hyphen, i.e. '<GUEST>-<JOBNUM>'.",
              "pattern": "[1-9][0-9]{2,8}-\\d{1,9}",
              "format": "pve-replication-job-id"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "x-proxmox-typetext": "<integer> (0 - N)",
              "x-proxmox-optional": true
            }
          },
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "start",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "x-proxmox-typetext": "<integer> (0 - N)",
              "x-proxmox-optional": true
            }
          }
        ],
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "description": "Requires the VM.Audit permission on /vms/<vmid>, or 'Sys.Audit' on '/nodes/<node>'",
              "user": "all"
            }
          ]
        }
      }
    },
    "/nodes/{node}/replication/{id}/schedule_now": {
      "post": {
        "operationId": "post-nodes-node-replication-id-schedule-now",
        "summary": "schedule_now",
        "description": "Schedule replication job to start as soon as possible.",
        "tags": [
          "/nodes/{node}/replication/{id}/schedule_now"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "post-nodes-node-replication-id-schedule-now",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Replication Job ID. The ID is composed of a Guest ID and a job number, separated by a hyphen, i.e. '<GUEST>-<JOBNUM>'.",
            "schema": {
              "type": "string",
              "description": "Replication Job ID. The ID is composed of a Guest ID and a job number, separated by a hyphen, i.e. '<GUEST>-<JOBNUM>'.",
              "pattern": "[1-9][0-9]{2,8}-\\d{1,9}",
              "format": "pve-replication-job-id"
            }
          },
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "description": "Requires the VM.Replicate permission on /vms/<vmid>.",
              "user": "all"
            }
          ]
        }
      }
    },
    "/nodes/{node}/replication/{id}/status": {
      "get": {
        "operationId": "get-nodes-node-replication-id-status",
        "summary": "job_status",
        "description": "Get replication job status.",
        "tags": [
          "/nodes/{node}/replication/{id}/status"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-nodes-node-replication-id-status",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Replication Job ID. The ID is composed of a Guest ID and a job number, separated by a hyphen, i.e. '<GUEST>-<JOBNUM>'.",
            "schema": {
              "type": "string",
              "description": "Replication Job ID. The ID is composed of a Guest ID and a job number, separated by a hyphen, i.e. '<GUEST>-<JOBNUM>'.",
              "pattern": "[1-9][0-9]{2,8}-\\d{1,9}",
              "format": "pve-replication-job-id"
            }
          },
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "description": "Requires the VM.Audit permission on /vms/<vmid>.",
              "user": "all"
            }
          ]
        }
      }
    },
    "/nodes/{node}/report": {
      "get": {
        "operationId": "get-nodes-node-report",
        "summary": "report",
        "description": "Gather various systems information about a node",
        "tags": [
          "/nodes/{node}/report"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-nodes-node-report",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/nodes/{node}",
                [
                  "Sys.Audit"
                ]
              ]
            }
          ]
        }
      }
    },
    "/nodes/{node}/rrd": {
      "get": {
        "operationId": "get-nodes-node-rrd",
        "summary": "rrd",
        "description": "Read node RRD statistics (returns PNG)",
        "tags": [
          "/nodes/{node}/rrd"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "filename": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "filename"
                  ]
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-nodes-node-rrd",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "cf",
            "in": "query",
            "required": false,
            "description": "The RRD consolidation function",
            "schema": {
              "type": "string",
              "description": "The RRD consolidation function",
              "enum": [
                "AVERAGE",
                "MAX"
              ],
              "x-proxmox-optional": true
            }
          },
          {
            "name": "ds",
            "in": "query",
            "required": true,
            "description": "The list of datasources you want to display.",
            "schema": {
              "type": "string",
              "description": "The list of datasources you want to display.",
              "format": "pve-configid-list",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "timeframe",
            "in": "query",
            "required": true,
            "description": "Specify the time frame you are interested in.",
            "schema": {
              "type": "string",
              "description": "Specify the time frame you are interested in.",
              "enum": [
                "hour",
                "day",
                "week",
                "month",
                "year",
                "decade"
              ]
            }
          }
        ],
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/nodes/{node}",
                [
                  "Sys.Audit"
                ]
              ]
            }
          ]
        }
      }
    },
    "/nodes/{node}/rrddata": {
      "get": {
        "operationId": "get-nodes-node-rrddata",
        "summary": "rrddata",
        "description": "Read node RRD statistics",
        "tags": [
          "/nodes/{node}/rrddata"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  }
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-nodes-node-rrddata",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "cf",
            "in": "query",
            "required": false,
            "description": "The RRD consolidation function",
            "schema": {
              "type": "string",
              "description": "The RRD consolidation function",
              "enum": [
                "AVERAGE",
                "MAX"
              ],
              "x-proxmox-optional": true
            }
          },
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "timeframe",
            "in": "query",
            "required": true,
            "description": "Specify the time frame you are interested in.",
            "schema": {
              "type": "string",
              "description": "Specify the time frame you are interested in.",
              "enum": [
                "hour",
                "day",
                "week",
                "month",
                "year",
                "decade"
              ]
            }
          }
        ],
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/nodes/{node}",
                [
                  "Sys.Audit"
                ]
              ]
            }
          ]
        }
      }
    },
    "/nodes/{node}/scan": {
      "get": {
        "operationId": "get-nodes-node-scan",
        "summary": "index",
        "description": "Index of available scan methods",
        "tags": [
          "/nodes/{node}/scan"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "method": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "method"
                    ]
                  },
                  "x-proxmox-metadata": {
                    "links": [
                      {
                        "href": "{method}",
                        "rel": "child"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-nodes-node-scan",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "security": [],
        "x-proxmox-permissions": {
          "all": [
            {
              "user": "all"
            }
          ]
        }
      }
    },
    "/nodes/{node}/scan/cifs": {
      "get": {
        "operationId": "get-nodes-node-scan-cifs",
        "summary": "cifsscan",
        "description": "Scan remote CIFS server.",
        "tags": [
          "/nodes/{node}/scan/cifs"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "description": {
                        "type": "string",
                        "description": "Descriptive text from server."
                      },
                      "share": {
                        "type": "string",
                        "description": "The cifs share name."
                      }
                    },
                    "required": [
                      "description",
                      "share"
                    ]
                  }
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-nodes-node-scan-cifs",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "domain",
            "in": "query",
            "required": false,
            "description": "SMB domain (Workgroup).",
            "schema": {
              "type": "string",
              "description": "SMB domain (Workgroup).",
              "x-proxmox-typetext": "<string>",
              "x-proxmox-optional": true
            }
          },
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "password",
            "in": "query",
            "required": false,
            "description": "User password.",
            "schema": {
              "type": "string",
              "description": "User password.",
              "x-proxmox-typetext": "<string>",
              "x-proxmox-optional": true
            }
          },
          {
            "name": "server",
            "in": "query",
            "required": true,
            "description": "The server address (name or IP).",
            "schema": {
              "type": "string",
              "description": "The server address (name or IP).",
              "format": "pve-storage-server",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "username",
            "in": "query",
            "required": false,
            "description": "User name.",
            "schema": {
              "type": "string",
              "description": "User name.",
              "x-proxmox-typetext": "<string>",
              "x-proxmox-optional": true
            }
          }
        ],
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/storage",
                [
                  "Datastore.Allocate"
                ]
              ]
            }
          ]
        }
      }
    },
    "/nodes/{node}/scan/iscsi": {
      "get": {
        "operationId": "get-nodes-node-scan-iscsi",
        "summary": "iscsiscan",
        "description": "Scan remote iSCSI server.",
        "tags": [
          "/nodes/{node}/scan/iscsi"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "portal": {
                        "type": "string",
                        "description": "The iSCSI portal name."
                      },
                      "target": {
                        "type": "string",
                        "description": "The iSCSI target name."
                      }
                    },
                    "required": [
                      "portal",
                      "target"
                    ]
                  }
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-nodes-node-scan-iscsi",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "portal",
            "in": "query",
            "required": true,
            "description": "The iSCSI portal (IP or DNS name with optional port).",
            "schema": {
              "type": "string",
              "description": "The iSCSI portal (IP or DNS name with optional port).",
              "format": "pve-storage-portal-dns",
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/storage",
                [
                  "Datastore.Allocate"
                ]
              ]
            }
          ]
        }
      }
    },
    "/nodes/{node}/scan/lvm": {
      "get": {
        "operationId": "get-nodes-node-scan-lvm",
        "summary": "lvmscan",
        "description": "List local LVM volume groups.",
        "tags": [
          "/nodes/{node}/scan/lvm"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "vg": {
                        "type": "string",
                        "description": "The LVM logical volume group name."
                      }
                    },
                    "required": [
                      "vg"
                    ]
                  }
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-nodes-node-scan-lvm",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/storage",
                [
                  "Datastore.Allocate"
                ]
              ]
            }
          ]
        }
      }
    },
    "/nodes/{node}/scan/lvmthin": {
      "get": {
        "operationId": "get-nodes-node-scan-lvmthin",
        "summary": "lvmthinscan",
        "description": "List local LVM Thin Pools.",
        "tags": [
          "/nodes/{node}/scan/lvmthin"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "lv": {
                        "type": "string",
                        "description": "The LVM Thin Pool name (LVM logical volume)."
                      }
                    },
                    "required": [
                      "lv"
                    ]
                  }
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-nodes-node-scan-lvmthin",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "vg",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 100,
              "pattern": "[a-zA-Z0-9\\.\\+\\_][a-zA-Z0-9\\.\\+\\_\\-]+"
            }
          }
        ],
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/storage",
                [
                  "Datastore.Allocate"
                ]
              ]
            }
          ]
        }
      }
    },
    "/nodes/{node}/scan/nfs": {
      "get": {
        "operationId": "get-nodes-node-scan-nfs",
        "summary": "nfsscan",
        "description": "Scan remote NFS server.",
        "tags": [
          "/nodes/{node}/scan/nfs"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "options": {
                        "type": "string",
                        "description": "NFS export options."
                      },
                      "path": {
                        "type": "string",
                        "description": "The exported path."
                      }
                    },
                    "required": [
                      "options",
                      "path"
                    ]
                  }
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-nodes-node-scan-nfs",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "server",
            "in": "query",
            "required": true,
            "description": "The server address (name or IP).",
            "schema": {
              "type": "string",
              "description": "The server address (name or IP).",
              "format": "pve-storage-server",
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/storage",
                [
                  "Datastore.Allocate"
                ]
              ]
            }
          ]
        }
      }
    },
    "/nodes/{node}/scan/pbs": {
      "get": {
        "operationId": "get-nodes-node-scan-pbs",
        "summary": "pbsscan",
        "description": "Scan remote Proxmox Backup Server.",
        "tags": [
          "/nodes/{node}/scan/pbs"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "comment": {
                        "type": "string",
                        "description": "Comment from server.",
                        "x-proxmox-optional": true
                      },
                      "store": {
                        "type": "string",
                        "description": "The datastore name."
                      }
                    },
                    "required": [
                      "store"
                    ]
                  }
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-nodes-node-scan-pbs",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "fingerprint",
            "in": "query",
            "required": false,
            "description": "Certificate SHA 256 fingerprint.",
            "schema": {
              "type": "string",
              "description": "Certificate SHA 256 fingerprint.",
              "pattern": "([A-Fa-f0-9]{2}:){31}[A-Fa-f0-9]{2}",
              "x-proxmox-optional": true
            }
          },
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "password",
            "in": "query",
            "required": true,
            "description": "User password or API token secret.",
            "schema": {
              "type": "string",
              "description": "User password or API token secret.",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "port",
            "in": "query",
            "required": false,
            "description": "Optional port.",
            "schema": {
              "type": "integer",
              "description": "Optional port.",
              "default": 8007,
              "minimum": 1,
              "maximum": 65535,
              "x-proxmox-typetext": "<integer> (1 - 65535)",
              "x-proxmox-optional": true
            }
          },
          {
            "name": "server",
            "in": "query",
            "required": true,
            "description": "The server address (name or IP).",
            "schema": {
              "type": "string",
              "description": "The server address (name or IP).",
              "format": "pve-storage-server",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "username",
            "in": "query",
            "required": true,
            "description": "User-name or API token-ID.",
            "schema": {
              "type": "string",
              "description": "User-name or API token-ID.",
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/storage",
                [
                  "Datastore.Allocate"
                ]
              ]
            }
          ]
        }
      }
    },
    "/nodes/{node}/scan/zfs": {
      "get": {
        "operationId": "get-nodes-node-scan-zfs",
        "summary": "zfsscan",
        "description": "Scan zfs pool list on local node.",
        "tags": [
          "/nodes/{node}/scan/zfs"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "pool": {
                        "type": "string",
                        "description": "ZFS pool name."
                      }
                    },
                    "required": [
                      "pool"
                    ]
                  }
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-nodes-node-scan-zfs",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/storage",
                [
                  "Datastore.Allocate"
                ]
              ]
            }
          ]
        }
      }
    },
    "/nodes/{node}/sdn": {
      "get": {
        "operationId": "get-nodes-node-sdn",
        "summary": "sdnindex",
        "description": "SDN index.",
        "tags": [
          "/nodes/{node}/sdn"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  },
                  "x-proxmox-metadata": {
                    "links": [
                      {
                        "href": "{name}",
                        "rel": "child"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-nodes-node-sdn",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "security": [],
        "x-proxmox-permissions": {
          "all": [
            {
              "user": "all"
            }
          ]
        }
      }
    },
    "/nodes/{node}/sdn/zones": {
      "get": {
        "operationId": "get-nodes-node-sdn-zones",
        "summary": "index",
        "description": "Get status for all zones.",
        "tags": [
          "/nodes/{node}/sdn/zones"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "description": "Status of zone",
                        "enum": [
                          "available",
                          "pending",
                          "error"
                        ]
                      },
                      "zone": {
                        "type": "string",
                        "description": "The SDN zone object identifier.",
                        "format": "pve-sdn-zone-id"
                      }
                    },
                    "required": [
                      "status",
                      "zone"
                    ]
                  },
                  "x-proxmox-metadata": {
                    "links": [
                      {
                        "href": "{zone}",
                        "rel": "child"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-nodes-node-sdn-zones",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "description": "Only list entries where you have 'SDN.Audit'",
              "user": "all"
            }
          ]
        }
      }
    },
    "/nodes/{node}/sdn/zones/{zone}": {
      "get": {
        "operationId": "get-nodes-node-sdn-zones-zone",
        "summary": "diridx",
        "description": "",
        "tags": [
          "/nodes/{node}/sdn/zones/{zone}"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "subdir": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "subdir"
                    ]
                  },
                  "x-proxmox-metadata": {
                    "links": [
                      {
                        "href": "{subdir}",
                        "rel": "child"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-nodes-node-sdn-zones-zone",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "zone",
            "in": "path",
            "required": true,
            "description": "The SDN zone object identifier.",
            "schema": {
              "type": "string",
              "description": "The SDN zone object identifier.",
              "format": "pve-sdn-zone-id",
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "security": [],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/sdn/zones/{zone}",
                [
                  "SDN.Audit"
                ],
                "any",
                1
              ]
            }
          ]
        }
      }
    },
    "/nodes/{node}/sdn/zones/{zone}/content": {
      "get": {
        "operationId": "get-nodes-node-sdn-zones-zone-content",
        "summary": "index",
        "description": "List zone content.",
        "tags": [
          "/nodes/{node}/sdn/zones/{zone}/content"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "description": "Status.",
                        "x-proxmox-optional": true
                      },
                      "statusmsg": {
                        "type": "string",
                        "description": "Status details",
                        "x-proxmox-optional": true
                      },
                      "vnet": {
                        "type": "string",
                        "description": "Vnet identifier."
                      }
                    },
                    "required": [
                      "vnet"
                    ]
                  },
                  "x-proxmox-metadata": {
                    "links": [
                      {
                        "href": "{vnet}",
                        "rel": "child"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-nodes-node-sdn-zones-zone-content",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "zone",
            "in": "path",
            "required": true,
            "description": "The SDN zone object identifier.",
            "schema": {
              "type": "string",
              "description": "The SDN zone object identifier.",
              "format": "pve-sdn-zone-id",
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/sdn/zones/{zone}",
                [
                  "SDN.Audit"
                ],
                "any",
                1
              ]
            }
          ]
        }
      }
    },
    "/nodes/{node}/services": {
      "get": {
        "operationId": "get-nodes-node-services",
        "summary": "index",
        "description": "Service list.",
        "tags": [
          "/nodes/{node}/services"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  },
                  "x-proxmox-metadata": {
                    "links": [
                      {
                        "href": "{service}",
                        "rel": "child"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-nodes-node-services",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/nodes/{node}",
                [
                  "Sys.Audit"
                ]
              ]
            }
          ]
        }
      }
    },
    "/nodes/{node}/services/{service}": {
      "get": {
        "operationId": "get-nodes-node-services-service",
        "summary": "srvcmdidx",
        "description": "Directory index",
        "tags": [
          "/nodes/{node}/services/{service}"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "subdir": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "subdir"
                    ]
                  },
                  "x-proxmox-metadata": {
                    "links": [
                      {
                        "href": "{subdir}",
                        "rel": "child"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-nodes-node-services-service",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "service",
            "in": "path",
            "required": true,
            "description": "Service ID",
            "schema": {
              "type": "string",
              "description": "Service ID",
              "enum": [
                "chrony",
                "corosync",
                "cron",
                "ksmtuned",
                "lxcfs",
                "postfix",
                "proxmox-firewall",
                "pve-cluster",
                "pve-firewall",
                "pve-ha-crm",
                "pve-ha-lrm",
                "pve-lxc-syscalld",
                "pvedaemon",
                "pvefw-logger",
                "pveproxy",
                "pvescheduler",
                "pvestatd",
                "qmeventd",
                "spiceproxy",
                "sshd",
                "syslog",
                "systemd-journald",
                "systemd-timesyncd"
              ]
            }
          }
        ],
        "security": [],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/nodes/{node}",
                [
                  "Sys.Audit"
                ]
              ]
            }
          ]
        }
      }
    },
    "/nodes/{node}/services/{service}/reload": {
      "post": {
        "operationId": "post-nodes-node-services-service-reload",
        "summary": "service_reload",
        "description": "Reload service. Falls back to restart if service cannot be reloaded.",
        "tags": [
          "/nodes/{node}/services/{service}/reload"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "post-nodes-node-services-service-reload",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "service",
            "in": "path",
            "required": true,
            "description": "Service ID",
            "schema": {
              "type": "string",
              "description": "Service ID",
              "enum": [
                "chrony",
                "corosync",
                "cron",
                "ksmtuned",
                "lxcfs",
                "postfix",
                "proxmox-firewall",
                "pve-cluster",
                "pve-firewall",
                "pve-ha-crm",
                "pve-ha-lrm",
                "pve-lxc-syscalld",
                "pvedaemon",
                "pvefw-logger",
                "pveproxy",
                "pvescheduler",
                "pvestatd",
                "qmeventd",
                "spiceproxy",
                "sshd",
                "syslog",
                "systemd-journald",
                "systemd-timesyncd"
              ]
            }
          }
        ],
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/nodes/{node}",
                [
                  "Sys.Modify"
                ]
              ]
            }
          ]
        }
      }
    },
    "/nodes/{node}/services/{service}/restart": {
      "post": {
        "operationId": "post-nodes-node-services-service-restart",
        "summary": "service_restart",
        "description": "Hard restart service. Use reload if you want to reduce interruptions.",
        "tags": [
          "/nodes/{node}/services/{service}/restart"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "post-nodes-node-services-service-restart",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "service",
            "in": "path",
            "required": true,
            "description": "Service ID",
            "schema": {
              "type": "string",
              "description": "Service ID",
              "enum": [
                "chrony",
                "corosync",
                "cron",
                "ksmtuned",
                "lxcfs",
                "postfix",
                "proxmox-firewall",
                "pve-cluster",
                "pve-firewall",
                "pve-ha-crm",
                "pve-ha-lrm",
                "pve-lxc-syscalld",
                "pvedaemon",
                "pvefw-logger",
                "pveproxy",
                "pvescheduler",
                "pvestatd",
                "qmeventd",
                "spiceproxy",
                "sshd",
                "syslog",
                "systemd-journald",
                "systemd-timesyncd"
              ]
            }
          }
        ],
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/nodes/{node}",
                [
                  "Sys.Modify"
                ]
              ]
            }
          ]
        }
      }
    },
    "/nodes/{node}/services/{service}/start": {
      "post": {
        "operationId": "post-nodes-node-services-service-start",
        "summary": "service_start",
        "description": "Start service.",
        "tags": [
          "/nodes/{node}/services/{service}/start"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "post-nodes-node-services-service-start",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "service",
            "in": "path",
            "required": true,
            "description": "Service ID",
            "schema": {
              "type": "string",
              "description": "Service ID",
              "enum": [
                "chrony",
                "corosync",
                "cron",
                "ksmtuned",
                "lxcfs",
                "postfix",
                "proxmox-firewall",
                "pve-cluster",
                "pve-firewall",
                "pve-ha-crm",
                "pve-ha-lrm",
                "pve-lxc-syscalld",
                "pvedaemon",
                "pvefw-logger",
                "pveproxy",
                "pvescheduler",
                "pvestatd",
                "qmeventd",
                "spiceproxy",
                "sshd",
                "syslog",
                "systemd-journald",
                "systemd-timesyncd"
              ]
            }
          }
        ],
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/nodes/{node}",
                [
                  "Sys.Modify"
                ]
              ]
            }
          ]
        }
      }
    },
    "/nodes/{node}/services/{service}/state": {
      "get": {
        "operationId": "get-nodes-node-services-service-state",
        "summary": "service_state",
        "description": "Read service properties",
        "tags": [
          "/nodes/{node}/services/{service}/state"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-nodes-node-services-service-state",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "service",
            "in": "path",
            "required": true,
            "description": "Service ID",
            "schema": {
              "type": "string",
              "description": "Service ID",
              "enum": [
                "chrony",
                "corosync",
                "cron",
                "ksmtuned",
                "lxcfs",
                "postfix",
                "proxmox-firewall",
                "pve-cluster",
                "pve-firewall",
                "pve-ha-crm",
                "pve-ha-lrm",
                "pve-lxc-syscalld",
                "pvedaemon",
                "pvefw-logger",
                "pveproxy",
                "pvescheduler",
                "pvestatd",
                "qmeventd",
                "spiceproxy",
                "sshd",
                "syslog",
                "systemd-journald",
                "systemd-timesyncd"
              ]
            }
          }
        ],
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/nodes/{node}",
                [
                  "Sys.Audit"
                ]
              ]
            }
          ]
        }
      }
    },
    "/nodes/{node}/services/{service}/stop": {
      "post": {
        "operationId": "post-nodes-node-services-service-stop",
        "summary": "service_stop",
        "description": "Stop service.",
        "tags": [
          "/nodes/{node}/services/{service}/stop"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "post-nodes-node-services-service-stop",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "service",
            "in": "path",
            "required": true,
            "description": "Service ID",
            "schema": {
              "type": "string",
              "description": "Service ID",
              "enum": [
                "chrony",
                "corosync",
                "cron",
                "ksmtuned",
                "lxcfs",
                "postfix",
                "proxmox-firewall",
                "pve-cluster",
                "pve-firewall",
                "pve-ha-crm",
                "pve-ha-lrm",
                "pve-lxc-syscalld",
                "pvedaemon",
                "pvefw-logger",
                "pveproxy",
                "pvescheduler",
                "pvestatd",
                "qmeventd",
                "spiceproxy",
                "sshd",
                "syslog",
                "systemd-journald",
                "systemd-timesyncd"
              ]
            }
          }
        ],
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/nodes/{node}",
                [
                  "Sys.Modify"
                ]
              ]
            }
          ]
        }
      }
    },
    "/nodes/{node}/spiceshell": {
      "post": {
        "operationId": "post-nodes-node-spiceshell",
        "summary": "spiceshell",
        "description": "Creates a SPICE shell.",
        "tags": [
          "/nodes/{node}/spiceshell"
        ],
        "responses": {
          "200": {
            "description": "Returned values can be directly passed to the 'remote-viewer' application.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Returned values can be directly passed to the 'remote-viewer' application.",
                  "properties": {
                    "host": {
                      "type": "string"
                    },
                    "password": {
                      "type": "string"
                    },
                    "proxy": {
                      "type": "string"
                    },
                    "tls-port": {
                      "type": "integer"
                    },
                    "type": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "host",
                    "password",
                    "proxy",
                    "tls-port",
                    "type"
                  ],
                  "additionalProperties": true
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "post-nodes-node-spiceshell",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "cmd": {
                    "type": "string",
                    "description": "Run specific command or default to login (requires 'root@pam')",
                    "enum": [
                      "upgrade",
                      "ceph_install",
                      "login"
                    ],
                    "default": "login",
                    "x-proxmox-optional": true
                  },
                  "cmd-opts": {
                    "type": "string",
                    "description": "Add parameters to a command. Encoded as null terminated strings.",
                    "default": "",
                    "x-proxmox-requires": [
                      "cmd"
                    ],
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "proxy": {
                    "type": "string",
                    "description": "SPICE proxy server. This can be used by the client to specify the proxy server. All nodes in a cluster runs 'spiceproxy', so it is up to the client to choose one. By default, we return the node where the VM is currently running. As reasonable setting is to use same node you use to connect to the API (This is window.location.hostname for the JS GUI).",
                    "format": "address",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/nodes/{node}",
                [
                  "Sys.Console"
                ]
              ]
            }
          ]
        }
      }
    },
    "/nodes/{node}/startall": {
      "post": {
        "operationId": "post-nodes-node-startall",
        "summary": "startall",
        "description": "Start all VMs and containers located on this node (by default only those with onboot=1).",
        "tags": [
          "/nodes/{node}/startall"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "post-nodes-node-startall",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "force": {
                    "type": "boolean",
                    "description": "Issue start command even if virtual guest have 'onboot' not set or set to off.",
                    "default": "off",
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "vms": {
                    "type": "string",
                    "description": "Only consider guests from this comma separated list of VMIDs.",
                    "format": "pve-vmid-list",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "description": "The 'VM.PowerMgmt' permission is required on '/' or on '/vms/<ID>' for each ID passed via the 'vms' parameter.",
              "user": "all"
            }
          ]
        }
      }
    },
    "/nodes/{node}/status": {
      "get": {
        "operationId": "get-nodes-node-status",
        "summary": "status",
        "description": "Read node status",
        "tags": [
          "/nodes/{node}/status"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "boot-info": {
                      "type": "object",
                      "description": "Meta-information about the boot mode.",
                      "properties": {
                        "mode": {
                          "type": "string",
                          "description": "Through which firmware the system got booted.",
                          "enum": [
                            "efi",
                            "legacy-bios"
                          ]
                        },
                        "secureboot": {
                          "type": "boolean",
                          "description": "System is booted in secure mode, only applicable for the \"efi\" mode.",
                          "x-proxmox-optional": true
                        }
                      },
                      "required": [
                        "mode"
                      ]
                    },
                    "cpu": {
                      "type": "number",
                      "description": "The current cpu usage."
                    },
                    "cpuinfo": {
                      "type": "object",
                      "properties": {
                        "cores": {
                          "type": "integer",
                          "description": "The number of physical cores of the CPU."
                        },
                        "cpus": {
                          "type": "integer",
                          "description": "The number of logical threads of the CPU."
                        },
                        "model": {
                          "type": "string",
                          "description": "The CPU model"
                        },
                        "sockets": {
                          "type": "integer",
                          "description": "The number of logical threads of the CPU."
                        }
                      },
                      "required": [
                        "cores",
                        "cpus",
                        "model",
                        "sockets"
                      ]
                    },
                    "current-kernel": {
                      "type": "object",
                      "description": "Meta-information about the currently booted kernel of this node.",
                      "properties": {
                        "machine": {
                          "type": "string",
                          "description": "Hardware (architecture) type"
                        },
                        "release": {
                          "type": "string",
                          "description": "OS kernel release (e.g., \"6.8.0\")"
                        },
                        "sysname": {
                          "type": "string",
                          "description": "OS kernel name (e.g., \"Linux\")"
                        },
                        "version": {
                          "type": "string",
                          "description": "OS kernel version with build info"
                        }
                      },
                      "required": [
                        "machine",
                        "release",
                        "sysname",
                        "version"
                      ]
                    },
                    "loadavg": {
                      "type": "array",
                      "description": "An array of load avg for 1, 5 and 15 minutes respectively.",
                      "items": {
                        "type": "string",
                        "description": "The value of the load."
                      }
                    },
                    "memory": {
                      "type": "object",
                      "properties": {
                        "available": {
                          "type": "integer",
                          "description": "The available memory in bytes."
                        },
                        "free": {
                          "type": "integer",
                          "description": "The free memory in bytes."
                        },
                        "total": {
                          "type": "integer",
                          "description": "The total memory in bytes."
                        },
                        "used": {
                          "type": "integer",
                          "description": "The used memory in bytes."
                        }
                      },
                      "required": [
                        "available",
                        "free",
                        "total",
                        "used"
                      ]
                    },
                    "pveversion": {
                      "type": "string",
                      "description": "The PVE version string."
                    },
                    "rootfs": {
                      "type": "object",
                      "properties": {
                        "avail": {
                          "type": "integer",
                          "description": "The available bytes in the root filesystem."
                        },
                        "free": {
                          "type": "integer",
                          "description": "The free bytes on the root filesystem."
                        },
                        "total": {
                          "type": "integer",
                          "description": "The total size of the root filesystem in bytes."
                        },
                        "used": {
                          "type": "integer",
                          "description": "The used bytes in the root filesystem."
                        }
                      },
                      "required": [
                        "avail",
                        "free",
                        "total",
                        "used"
                      ]
                    }
                  },
                  "required": [
                    "boot-info",
                    "cpu",
                    "cpuinfo",
                    "current-kernel",
                    "loadavg",
                    "memory",
                    "pveversion",
                    "rootfs"
                  ],
                  "additionalProperties": true
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-nodes-node-status",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "security": [],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/nodes/{node}",
                [
                  "Sys.Audit"
                ]
              ]
            }
          ]
        }
      },
      "post": {
        "operationId": "post-nodes-node-status",
        "summary": "node_cmd",
        "description": "Reboot or shutdown a node.",
        "tags": [
          "/nodes/{node}/status"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "post-nodes-node-status",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "command": {
                    "type": "string",
                    "description": "Specify the command.",
                    "enum": [
                      "reboot",
                      "shutdown"
                    ]
                  }
                },
                "required": [
                  "command"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/nodes/{node}",
                [
                  "Sys.PowerMgmt"
                ]
              ]
            }
          ]
        }
      }
    },
    "/nodes/{node}/stopall": {
      "post": {
        "operationId": "post-nodes-node-stopall",
        "summary": "stopall",
        "description": "Stop all VMs and Containers.",
        "tags": [
          "/nodes/{node}/stopall"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "post-nodes-node-stopall",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "force-stop": {
                    "type": "boolean",
                    "description": "Force a hard-stop after the timeout.",
                    "default": true,
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "timeout": {
                    "type": "integer",
                    "description": "Timeout for each guest shutdown task. Depending on `force-stop`, the shutdown gets then simply aborted or a hard-stop is forced.",
                    "default": 180,
                    "minimum": 0,
                    "maximum": 7200,
                    "x-proxmox-typetext": "<integer> (0 - 7200)",
                    "x-proxmox-optional": true
                  },
                  "vms": {
                    "type": "string",
                    "description": "Only consider Guests with these IDs.",
                    "format": "pve-vmid-list",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "description": "The 'VM.PowerMgmt' permission is required on '/' or on '/vms/<ID>' for each ID passed via the 'vms' parameter.",
              "user": "all"
            }
          ]
        }
      }
    },
    "/nodes/{node}/storage": {
      "get": {
        "operationId": "get-nodes-node-storage",
        "summary": "index",
        "description": "Get status for all datastores.",
        "tags": [
          "/nodes/{node}/storage"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "active": {
                        "type": "boolean",
                        "description": "Set when storage is accessible.",
                        "x-proxmox-optional": true
                      },
                      "avail": {
                        "type": "integer",
                        "description": "Available storage space in bytes.",
                        "x-proxmox-optional": true,
                        "x-proxmox-metadata": {
                          "renderer": "bytes"
                        }
                      },
                      "content": {
                        "type": "string",
                        "description": "Allowed storage content types.",
                        "format": "pve-storage-content-list"
                      },
                      "enabled": {
                        "type": "boolean",
                        "description": "Set when storage is enabled (not disabled).",
                        "x-proxmox-optional": true
                      },
                      "shared": {
                        "type": "boolean",
                        "description": "Shared flag from storage configuration.",
                        "x-proxmox-optional": true
                      },
                      "storage": {
                        "type": "string",
                        "description": "The storage identifier.",
                        "format": "pve-storage-id",
                        "x-proxmox-format-description": "storage ID"
                      },
                      "total": {
                        "type": "integer",
                        "description": "Total storage space in bytes.",
                        "x-proxmox-optional": true,
                        "x-proxmox-metadata": {
                          "renderer": "bytes"
                        }
                      },
                      "type": {
                        "type": "string",
                        "description": "Storage type."
                      },
                      "used": {
                        "type": "integer",
                        "description": "Used storage space in bytes.",
                        "x-proxmox-optional": true,
                        "x-proxmox-metadata": {
                          "renderer": "bytes"
                        }
                      },
                      "used_fraction": {
                        "type": "number",
                        "description": "Used fraction (used/total).",
                        "x-proxmox-optional": true,
                        "x-proxmox-metadata": {
                          "renderer": "fraction_as_percentage"
                        }
                      }
                    },
                    "required": [
                      "content",
                      "storage",
                      "type"
                    ]
                  },
                  "x-proxmox-metadata": {
                    "links": [
                      {
                        "href": "{storage}",
                        "rel": "child"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-nodes-node-storage",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "content",
            "in": "query",
            "required": false,
            "description": "Only list stores which support this content type.",
            "schema": {
              "type": "string",
              "description": "Only list stores which support this content type.",
              "format": "pve-storage-content-list",
              "x-proxmox-typetext": "<string>",
              "x-proxmox-optional": true
            }
          },
          {
            "name": "enabled",
            "in": "query",
            "required": false,
            "description": "Only list stores which are enabled (not disabled in config).",
            "schema": {
              "type": "boolean",
              "description": "Only list stores which are enabled (not disabled in config).",
              "default": false,
              "x-proxmox-typetext": "<boolean>",
              "x-proxmox-optional": true
            }
          },
          {
            "name": "format",
            "in": "query",
            "required": false,
            "description": "Include information about formats",
            "schema": {
              "type": "boolean",
              "description": "Include information about formats",
              "default": false,
              "x-proxmox-typetext": "<boolean>",
              "x-proxmox-optional": true
            }
          },
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "storage",
            "in": "query",
            "required": false,
            "description": "Only list status for  specified storage",
            "schema": {
              "type": "string",
              "description": "Only list status for  specified storage",
              "format": "pve-storage-id",
              "x-proxmox-format-description": "storage ID",
              "x-proxmox-typetext": "<storage ID>",
              "x-proxmox-optional": true
            }
          },
          {
            "name": "target",
            "in": "query",
            "required": false,
            "description": "If target is different to 'node', we only lists shared storages which content is accessible on this 'node' and the specified 'target' node.",
            "schema": {
              "type": "string",
              "description": "If target is different to 'node', we only lists shared storages which content is accessible on this 'node' and the specified 'target' node.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>",
              "x-proxmox-optional": true
            }
          }
        ],
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "description": "Only list entries where you have 'Datastore.Audit' or 'Datastore.AllocateSpace' permissions on '/storage/<storage>'",
              "user": "all"
            }
          ]
        }
      }
    },
    "/nodes/{node}/storage/{storage}": {
      "get": {
        "operationId": "get-nodes-node-storage-storage",
        "summary": "diridx",
        "description": "",
        "tags": [
          "/nodes/{node}/storage/{storage}"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "subdir": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "subdir"
                    ]
                  },
                  "x-proxmox-metadata": {
                    "links": [
                      {
                        "href": "{subdir}",
                        "rel": "child"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-nodes-node-storage-storage",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "storage",
            "in": "path",
            "required": true,
            "description": "The storage identifier.",
            "schema": {
              "type": "string",
              "description": "The storage identifier.",
              "format": "pve-storage-id",
              "x-proxmox-format-description": "storage ID",
              "x-proxmox-typetext": "<storage ID>"
            }
          }
        ],
        "security": [],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/storage/{storage}",
                [
                  "Datastore.Audit",
                  "Datastore.AllocateSpace"
                ],
                "any",
                1
              ]
            }
          ]
        }
      }
    },
    "/nodes/{node}/storage/{storage}/content": {
      "get": {
        "operationId": "get-nodes-node-storage-storage-content",
        "summary": "index",
        "description": "List storage content.",
        "tags": [
          "/nodes/{node}/storage/{storage}/content"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "ctime": {
                        "type": "integer",
                        "description": "Creation time (seconds since the UNIX Epoch).",
                        "minimum": 0,
                        "x-proxmox-optional": true
                      },
                      "encrypted": {
                        "type": "string",
                        "description": "If whole backup is encrypted, value is the fingerprint or '1'  if encrypted. Only useful for the Proxmox Backup Server storage type.",
                        "x-proxmox-optional": true
                      },
                      "format": {
                        "type": "string",
                        "description": "Format identifier ('raw', 'qcow2', 'subvol', 'iso', 'tgz' ...)"
                      },
                      "notes": {
                        "type": "string",
                        "description": "Optional notes. If they contain multiple lines, only the first one is returned here.",
                        "x-proxmox-optional": true
                      },
                      "parent": {
                        "type": "string",
                        "description": "Volume identifier of parent (for linked cloned).",
                        "x-proxmox-optional": true
                      },
                      "protected": {
                        "type": "boolean",
                        "description": "Protection status. Currently only supported for backups.",
                        "x-proxmox-optional": true
                      },
                      "size": {
                        "type": "integer",
                        "description": "Volume size in bytes.",
                        "x-proxmox-metadata": {
                          "renderer": "bytes"
                        }
                      },
                      "used": {
                        "type": "integer",
                        "description": "Used space. Please note that most storage plugins do not report anything useful here.",
                        "x-proxmox-optional": true,
                        "x-proxmox-metadata": {
                          "renderer": "bytes"
                        }
                      },
                      "verification": {
                        "type": "object",
                        "description": "Last backup verification result, only useful for PBS storages.",
                        "properties": {
                          "state": {
                            "type": "string",
                            "description": "Last backup verification state."
                          },
                          "upid": {
                            "type": "string",
                            "description": "Last backup verification UPID."
                          }
                        },
                        "required": [
                          "state",
                          "upid"
                        ],
                        "x-proxmox-optional": true
                      },
                      "vmid": {
                        "type": "integer",
                        "description": "Associated Owner VMID.",
                        "x-proxmox-optional": true
                      },
                      "volid": {
                        "type": "string",
                        "description": "Volume identifier."
                      }
                    },
                    "required": [
                      "format",
                      "size",
                      "volid"
                    ]
                  },
                  "x-proxmox-metadata": {
                    "links": [
                      {
                        "href": "{volid}",
                        "rel": "child"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-nodes-node-storage-storage-content",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "content",
            "in": "query",
            "required": false,
            "description": "Only list content of this type.",
            "schema": {
              "type": "string",
              "description": "Only list content of this type.",
              "format": "pve-storage-content",
              "x-proxmox-typetext": "<string>",
              "x-proxmox-optional": true
            }
          },
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "storage",
            "in": "path",
            "required": true,
            "description": "The storage identifier.",
            "schema": {
              "type": "string",
              "description": "The storage identifier.",
              "format": "pve-storage-id",
              "x-proxmox-format-description": "storage ID",
              "x-proxmox-typetext": "<storage ID>"
            }
          },
          {
            "name": "vmid",
            "in": "query",
            "required": false,
            "description": "Only list images for this VM",
            "schema": {
              "type": "integer",
              "description": "Only list images for this VM",
              "minimum": 100,
              "maximum": 999999999,
              "format": "pve-vmid",
              "x-proxmox-typetext": "<integer> (100 - 999999999)",
              "x-proxmox-optional": true
            }
          }
        ],
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/storage/{storage}",
                [
                  "Datastore.Audit",
                  "Datastore.AllocateSpace"
                ],
                "any",
                1
              ]
            }
          ]
        }
      },
      "post": {
        "operationId": "post-nodes-node-storage-storage-content",
        "summary": "create",
        "description": "Allocate disk images.",
        "tags": [
          "/nodes/{node}/storage/{storage}/content"
        ],
        "responses": {
          "200": {
            "description": "Volume identifier",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Volume identifier"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "post-nodes-node-storage-storage-content",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "storage",
            "in": "path",
            "required": true,
            "description": "The storage identifier.",
            "schema": {
              "type": "string",
              "description": "The storage identifier.",
              "format": "pve-storage-id",
              "x-proxmox-format-description": "storage ID",
              "x-proxmox-typetext": "<storage ID>"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "filename": {
                    "type": "string",
                    "description": "The name of the file to create.",
                    "x-proxmox-typetext": "<string>"
                  },
                  "format": {
                    "type": "string",
                    "description": "Format of the image.",
                    "enum": [
                      "raw",
                      "qcow2",
                      "subvol",
                      "vmdk"
                    ],
                    "x-proxmox-requires": [
                      "size"
                    ],
                    "x-proxmox-optional": true
                  },
                  "size": {
                    "type": "string",
                    "description": "Size in kilobyte (1024 bytes). Optional suffixes 'M' (megabyte, 1024K) and 'G' (gigabyte, 1024M)",
                    "pattern": "\\d+[MG]?"
                  },
                  "vmid": {
                    "type": "integer",
                    "description": "Specify owner VM",
                    "minimum": 100,
                    "maximum": 999999999,
                    "format": "pve-vmid",
                    "x-proxmox-typetext": "<integer> (100 - 999999999)"
                  }
                },
                "required": [
                  "filename",
                  "size",
                  "vmid"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/storage/{storage}",
                [
                  "Datastore.AllocateSpace"
                ]
              ]
            }
          ]
        }
      }
    },
    "/nodes/{node}/storage/{storage}/content/{volume}": {
      "delete": {
        "operationId": "delete-nodes-node-storage-storage-content-volume",
        "summary": "delete",
        "description": "Delete volume",
        "tags": [
          "/nodes/{node}/storage/{storage}/content/{volume}"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "x-proxmox-optional": true
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "delete-nodes-node-storage-storage-content-volume",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "delay",
            "in": "query",
            "required": false,
            "description": "Time to wait for the task to finish. We return 'null' if the task finish within that time.",
            "schema": {
              "type": "integer",
              "description": "Time to wait for the task to finish. We return 'null' if the task finish within that time.",
              "minimum": 1,
              "maximum": 30,
              "x-proxmox-typetext": "<integer> (1 - 30)",
              "x-proxmox-optional": true
            }
          },
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "storage",
            "in": "path",
            "required": true,
            "description": "The storage identifier.",
            "schema": {
              "type": "string",
              "description": "The storage identifier.",
              "format": "pve-storage-id",
              "x-proxmox-format-description": "storage ID",
              "x-proxmox-typetext": "<storage ID>",
              "x-proxmox-optional": true
            }
          },
          {
            "name": "volume",
            "in": "path",
            "required": true,
            "description": "Volume identifier",
            "schema": {
              "type": "string",
              "description": "Volume identifier",
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "description": "You need 'Datastore.Allocate' privilege on the storage (or 'Datastore.AllocateSpace' for backup volumes if you have VM.Backup privilege on the VM).",
              "user": "all"
            }
          ]
        }
      },
      "get": {
        "operationId": "get-nodes-node-storage-storage-content-volume",
        "summary": "info",
        "description": "Get volume attributes",
        "tags": [
          "/nodes/{node}/storage/{storage}/content/{volume}"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "format": {
                      "type": "string",
                      "description": "Format identifier ('raw', 'qcow2', 'subvol', 'iso', 'tgz' ...)"
                    },
                    "notes": {
                      "type": "string",
                      "description": "Optional notes.",
                      "x-proxmox-optional": true
                    },
                    "path": {
                      "type": "string",
                      "description": "The Path"
                    },
                    "protected": {
                      "type": "boolean",
                      "description": "Protection status. Currently only supported for backups.",
                      "x-proxmox-optional": true
                    },
                    "size": {
                      "type": "integer",
                      "description": "Volume size in bytes.",
                      "x-proxmox-metadata": {
                        "renderer": "bytes"
                      }
                    },
                    "used": {
                      "type": "integer",
                      "description": "Used space. Please note that most storage plugins do not report anything useful here.",
                      "x-proxmox-metadata": {
                        "renderer": "bytes"
                      }
                    }
                  },
                  "required": [
                    "format",
                    "path",
                    "size",
                    "used"
                  ]
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-nodes-node-storage-storage-content-volume",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "storage",
            "in": "path",
            "required": true,
            "description": "The storage identifier.",
            "schema": {
              "type": "string",
              "description": "The storage identifier.",
              "format": "pve-storage-id",
              "x-proxmox-format-description": "storage ID",
              "x-proxmox-typetext": "<storage ID>",
              "x-proxmox-optional": true
            }
          },
          {
            "name": "volume",
            "in": "path",
            "required": true,
            "description": "Volume identifier",
            "schema": {
              "type": "string",
              "description": "Volume identifier",
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "description": "You need read access for the volume.",
              "user": "all"
            }
          ]
        }
      },
      "post": {
        "operationId": "post-nodes-node-storage-storage-content-volume",
        "summary": "copy",
        "description": "Copy a volume. This is experimental code - do not use.",
        "tags": [
          "/nodes/{node}/storage/{storage}/content/{volume}"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "post-nodes-node-storage-storage-content-volume",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "storage",
            "in": "path",
            "required": true,
            "description": "The storage identifier.",
            "schema": {
              "type": "string",
              "description": "The storage identifier.",
              "format": "pve-storage-id",
              "x-proxmox-format-description": "storage ID",
              "x-proxmox-typetext": "<storage ID>",
              "x-proxmox-optional": true
            }
          },
          {
            "name": "volume",
            "in": "path",
            "required": true,
            "description": "Source volume identifier",
            "schema": {
              "type": "string",
              "description": "Source volume identifier",
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "target": {
                    "type": "string",
                    "description": "Target volume identifier",
                    "x-proxmox-typetext": "<string>"
                  },
                  "target_node": {
                    "type": "string",
                    "description": "Target node. Default is local node.",
                    "format": "pve-node",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  }
                },
                "required": [
                  "target"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ]
      },
      "put": {
        "operationId": "put-nodes-node-storage-storage-content-volume",
        "summary": "updateattributes",
        "description": "Update volume attributes",
        "tags": [
          "/nodes/{node}/storage/{storage}/content/{volume}"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "put-nodes-node-storage-storage-content-volume",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "storage",
            "in": "path",
            "required": true,
            "description": "The storage identifier.",
            "schema": {
              "type": "string",
              "description": "The storage identifier.",
              "format": "pve-storage-id",
              "x-proxmox-format-description": "storage ID",
              "x-proxmox-typetext": "<storage ID>",
              "x-proxmox-optional": true
            }
          },
          {
            "name": "volume",
            "in": "path",
            "required": true,
            "description": "Volume identifier",
            "schema": {
              "type": "string",
              "description": "Volume identifier",
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "notes": {
                    "type": "string",
                    "description": "The new notes.",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "protected": {
                    "type": "boolean",
                    "description": "Protection status. Currently only supported for backups.",
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "description": "You need read access for the volume.",
              "user": "all"
            }
          ]
        }
      }
    },
    "/nodes/{node}/storage/{storage}/download-url": {
      "post": {
        "operationId": "post-nodes-node-storage-storage-download-url",
        "summary": "download_url",
        "description": "Download templates, ISO images, OVAs and VM images by using an URL.",
        "tags": [
          "/nodes/{node}/storage/{storage}/download-url"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "post-nodes-node-storage-storage-download-url",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "storage",
            "in": "path",
            "required": true,
            "description": "The storage identifier.",
            "schema": {
              "type": "string",
              "description": "The storage identifier.",
              "format": "pve-storage-id",
              "x-proxmox-format-description": "storage ID",
              "x-proxmox-typetext": "<storage ID>"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "checksum": {
                    "type": "string",
                    "description": "The expected checksum of the file.",
                    "x-proxmox-requires": [
                      "checksum-algorithm"
                    ],
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "checksum-algorithm": {
                    "type": "string",
                    "description": "The algorithm to calculate the checksum of the file.",
                    "enum": [
                      "md5",
                      "sha1",
                      "sha224",
                      "sha256",
                      "sha384",
                      "sha512"
                    ],
                    "x-proxmox-requires": [
                      "checksum"
                    ],
                    "x-proxmox-optional": true
                  },
                  "compression": {
                    "type": "string",
                    "description": "Decompress the downloaded file using the specified compression algorithm.",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "content": {
                    "type": "string",
                    "description": "Content type.",
                    "enum": [
                      "iso",
                      "vztmpl",
                      "import"
                    ],
                    "format": "pve-storage-content"
                  },
                  "filename": {
                    "type": "string",
                    "description": "The name of the file to create. Caution: This will be normalized!",
                    "maxLength": 255,
                    "x-proxmox-typetext": "<string>"
                  },
                  "url": {
                    "type": "string",
                    "description": "The URL to download the file from.",
                    "pattern": "https?://.*"
                  },
                  "verify-certificates": {
                    "type": "boolean",
                    "description": "If false, no SSL/TLS certificates will be verified.",
                    "default": true,
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  }
                },
                "required": [
                  "content",
                  "filename",
                  "url"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "description": "Requires allocation access on the storage and as this allows one to probe the (local!) host network indirectly it also requires one of Sys.Modify on / (for backwards compatibility) or the newer Sys.AccessNetwork privilege on the node.",
              "check": [
                "and",
                [
                  "perm",
                  "/storage/{storage}",
                  [
                    "Datastore.AllocateTemplate"
                  ]
                ],
                [
                  "or",
                  [
                    "perm",
                    "/",
                    [
                      "Sys.Audit",
                      "Sys.Modify"
                    ]
                  ],
                  [
                    "perm",
                    "/nodes/{node}",
                    [
                      "Sys.AccessNetwork"
                    ]
                  ]
                ]
              ]
            }
          ]
        }
      }
    },
    "/nodes/{node}/storage/{storage}/file-restore/download": {
      "get": {
        "operationId": "get-nodes-node-storage-storage-file-restore-download",
        "summary": "download",
        "description": "Extract a file or directory (as zip archive) from a PBS backup.",
        "tags": [
          "/nodes/{node}/storage/{storage}/file-restore/download"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-nodes-node-storage-storage-file-restore-download",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "filepath",
            "in": "query",
            "required": true,
            "description": "base64-path to the directory or file to download.",
            "schema": {
              "type": "string",
              "description": "base64-path to the directory or file to download.",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "storage",
            "in": "path",
            "required": true,
            "description": "The storage identifier.",
            "schema": {
              "type": "string",
              "description": "The storage identifier.",
              "format": "pve-storage-id",
              "x-proxmox-format-description": "storage ID",
              "x-proxmox-typetext": "<storage ID>"
            }
          },
          {
            "name": "tar",
            "in": "query",
            "required": false,
            "description": "Download dirs as 'tar.zst' instead of 'zip'.",
            "schema": {
              "type": "boolean",
              "description": "Download dirs as 'tar.zst' instead of 'zip'.",
              "default": false,
              "x-proxmox-typetext": "<boolean>",
              "x-proxmox-optional": true
            }
          },
          {
            "name": "volume",
            "in": "query",
            "required": true,
            "description": "Backup volume ID or name. Currently only PBS snapshots are supported.",
            "schema": {
              "type": "string",
              "description": "Backup volume ID or name. Currently only PBS snapshots are supported.",
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "description": "You need read access for the volume.",
              "user": "all"
            }
          ]
        }
      }
    },
    "/nodes/{node}/storage/{storage}/file-restore/list": {
      "get": {
        "operationId": "get-nodes-node-storage-storage-file-restore-list",
        "summary": "list",
        "description": "List files and directories for single file restore under the given path.",
        "tags": [
          "/nodes/{node}/storage/{storage}/file-restore/list"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "filepath": {
                        "type": "string",
                        "description": "base64 path of the current entry"
                      },
                      "leaf": {
                        "type": "boolean",
                        "description": "If this entry is a leaf in the directory graph."
                      },
                      "mtime": {
                        "type": "integer",
                        "description": "Entry last-modified time (unix timestamp).",
                        "x-proxmox-optional": true
                      },
                      "size": {
                        "type": "integer",
                        "description": "Entry file size.",
                        "x-proxmox-optional": true
                      },
                      "text": {
                        "type": "string",
                        "description": "Entry display text."
                      },
                      "type": {
                        "type": "string",
                        "description": "Entry type."
                      }
                    },
                    "required": [
                      "filepath",
                      "leaf",
                      "text",
                      "type"
                    ]
                  }
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-nodes-node-storage-storage-file-restore-list",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "filepath",
            "in": "query",
            "required": true,
            "description": "base64-path to the directory or file being listed, or \"/\".",
            "schema": {
              "type": "string",
              "description": "base64-path to the directory or file being listed, or \"/\".",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "storage",
            "in": "path",
            "required": true,
            "description": "The storage identifier.",
            "schema": {
              "type": "string",
              "description": "The storage identifier.",
              "format": "pve-storage-id",
              "x-proxmox-format-description": "storage ID",
              "x-proxmox-typetext": "<storage ID>"
            }
          },
          {
            "name": "volume",
            "in": "query",
            "required": true,
            "description": "Backup volume ID or name. Currently only PBS snapshots are supported.",
            "schema": {
              "type": "string",
              "description": "Backup volume ID or name. Currently only PBS snapshots are supported.",
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "description": "You need read access for the volume.",
              "user": "all"
            }
          ]
        }
      }
    },
    "/nodes/{node}/storage/{storage}/import-metadata": {
      "get": {
        "operationId": "get-nodes-node-storage-storage-import-metadata",
        "summary": "get_import_metadata",
        "description": "Get the base parameters for creating a guest which imports data from a foreign importable guest, like an ESXi VM",
        "tags": [
          "/nodes/{node}/storage/{storage}/import-metadata"
        ],
        "responses": {
          "200": {
            "description": "Information about how to import a guest.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Information about how to import a guest.",
                  "properties": {
                    "create-args": {
                      "type": "object",
                      "description": "Parameters which can be used in a call to create a VM or container.",
                      "additionalProperties": true
                    },
                    "disks": {
                      "type": "object",
                      "description": "Recognised disk volumes as `$bus$id` => `$storeid:$path` map.",
                      "additionalProperties": true,
                      "x-proxmox-optional": true
                    },
                    "net": {
                      "type": "object",
                      "description": "Recognised network interfaces as `net$id` => { ...params } object.",
                      "additionalProperties": true,
                      "x-proxmox-optional": true
                    },
                    "source": {
                      "type": "string",
                      "description": "The type of the import-source of this guest volume.",
                      "enum": [
                        "esxi"
                      ]
                    },
                    "type": {
                      "type": "string",
                      "description": "The type of guest this is going to produce.",
                      "enum": [
                        "vm"
                      ]
                    },
                    "warnings": {
                      "type": "array",
                      "description": "List of known issues that can affect the import of a guest. Note that lack of warning does not imply that there cannot be any problems.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "key": {
                            "type": "string",
                            "description": "Related subject (config) key of warning.",
                            "x-proxmox-optional": true
                          },
                          "type": {
                            "type": "string",
                            "description": "What this warning is about.",
                            "enum": [
                              "cdrom-image-ignored",
                              "efi-state-lost",
                              "guest-is-running",
                              "nvme-unsupported",
                              "ova-needs-extracting",
                              "ovmf-with-lsi-unsupported",
                              "serial-port-socket-only"
                            ]
                          },
                          "value": {
                            "type": "string",
                            "description": "Related subject (config) value of warning.",
                            "x-proxmox-optional": true
                          }
                        },
                        "required": [
                          "type"
                        ],
                        "additionalProperties": true
                      },
                      "x-proxmox-optional": true
                    }
                  },
                  "required": [
                    "create-args",
                    "source",
                    "type"
                  ],
                  "additionalProperties": false
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-nodes-node-storage-storage-import-metadata",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "storage",
            "in": "path",
            "required": true,
            "description": "The storage identifier.",
            "schema": {
              "type": "string",
              "description": "The storage identifier.",
              "format": "pve-storage-id",
              "x-proxmox-format-description": "storage ID",
              "x-proxmox-typetext": "<storage ID>"
            }
          },
          {
            "name": "volume",
            "in": "query",
            "required": true,
            "description": "Volume identifier for the guest archive/entry.",
            "schema": {
              "type": "string",
              "description": "Volume identifier for the guest archive/entry.",
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "description": "You need read access for the volume.",
              "user": "all"
            }
          ]
        }
      }
    },
    "/nodes/{node}/storage/{storage}/prunebackups": {
      "delete": {
        "operationId": "delete-nodes-node-storage-storage-prunebackups",
        "summary": "delete",
        "description": "Prune backups. Only those using the standard naming scheme are considered.",
        "tags": [
          "/nodes/{node}/storage/{storage}/prunebackups"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "delete-nodes-node-storage-storage-prunebackups",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "prune-backups",
            "in": "query",
            "required": false,
            "description": "Use these retention options instead of those from the storage configuration.",
            "schema": {
              "type": "string",
              "description": "Use these retention options instead of those from the storage configuration.",
              "format": "prune-backups",
              "x-proxmox-typetext": "[keep-all=<1|0>] [,keep-daily=<N>] [,keep-hourly=<N>] [,keep-last=<N>] [,keep-monthly=<N>] [,keep-weekly=<N>] [,keep-yearly=<N>]",
              "x-proxmox-optional": true
            }
          },
          {
            "name": "storage",
            "in": "path",
            "required": true,
            "description": "The storage identifier.",
            "schema": {
              "type": "string",
              "description": "The storage identifier.",
              "format": "pve-storage-id",
              "x-proxmox-format-description": "storage ID",
              "x-proxmox-typetext": "<storage ID>"
            }
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "description": "Either 'qemu' or 'lxc'. Only consider backups for guests of this type.",
            "schema": {
              "type": "string",
              "description": "Either 'qemu' or 'lxc'. Only consider backups for guests of this type.",
              "enum": [
                "qemu",
                "lxc"
              ],
              "x-proxmox-optional": true
            }
          },
          {
            "name": "vmid",
            "in": "query",
            "required": false,
            "description": "Only prune backups for this VM.",
            "schema": {
              "type": "integer",
              "description": "Only prune backups for this VM.",
              "minimum": 100,
              "maximum": 999999999,
              "format": "pve-vmid",
              "x-proxmox-typetext": "<integer> (100 - 999999999)",
              "x-proxmox-optional": true
            }
          }
        ],
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "description": "You need the 'Datastore.Allocate' privilege on the storage (or if a VM ID is specified, 'Datastore.AllocateSpace' and 'VM.Backup' for the VM).",
              "user": "all"
            }
          ]
        }
      },
      "get": {
        "operationId": "get-nodes-node-storage-storage-prunebackups",
        "summary": "dryrun",
        "description": "Get prune information for backups. NOTE: this is only a preview and might not be what a subsequent prune call does if backups are removed/added in the meantime.",
        "tags": [
          "/nodes/{node}/storage/{storage}/prunebackups"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "ctime": {
                        "type": "integer",
                        "description": "Creation time of the backup (seconds since the UNIX epoch)."
                      },
                      "mark": {
                        "type": "string",
                        "description": "Whether the backup would be kept or removed. Backups that are protected or don't use the standard naming scheme are not removed.",
                        "enum": [
                          "keep",
                          "remove",
                          "protected",
                          "renamed"
                        ]
                      },
                      "type": {
                        "type": "string",
                        "description": "One of 'qemu', 'lxc', 'openvz' or 'unknown'."
                      },
                      "vmid": {
                        "type": "integer",
                        "description": "The VM the backup belongs to.",
                        "x-proxmox-optional": true
                      },
                      "volid": {
                        "type": "string",
                        "description": "Backup volume ID."
                      }
                    },
                    "required": [
                      "ctime",
                      "mark",
                      "type",
                      "volid"
                    ]
                  }
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-nodes-node-storage-storage-prunebackups",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "prune-backups",
            "in": "query",
            "required": false,
            "description": "Use these retention options instead of those from the storage configuration.",
            "schema": {
              "type": "string",
              "description": "Use these retention options instead of those from the storage configuration.",
              "format": "prune-backups",
              "x-proxmox-typetext": "[keep-all=<1|0>] [,keep-daily=<N>] [,keep-hourly=<N>] [,keep-last=<N>] [,keep-monthly=<N>] [,keep-weekly=<N>] [,keep-yearly=<N>]",
              "x-proxmox-optional": true
            }
          },
          {
            "name": "storage",
            "in": "path",
            "required": true,
            "description": "The storage identifier.",
            "schema": {
              "type": "string",
              "description": "The storage identifier.",
              "format": "pve-storage-id",
              "x-proxmox-format-description": "storage ID",
              "x-proxmox-typetext": "<storage ID>"
            }
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "description": "Either 'qemu' or 'lxc'. Only consider backups for guests of this type.",
            "schema": {
              "type": "string",
              "description": "Either 'qemu' or 'lxc'. Only consider backups for guests of this type.",
              "enum": [
                "qemu",
                "lxc"
              ],
              "x-proxmox-optional": true
            }
          },
          {
            "name": "vmid",
            "in": "query",
            "required": false,
            "description": "Only consider backups for this guest.",
            "schema": {
              "type": "integer",
              "description": "Only consider backups for this guest.",
              "minimum": 100,
              "maximum": 999999999,
              "format": "pve-vmid",
              "x-proxmox-typetext": "<integer> (100 - 999999999)",
              "x-proxmox-optional": true
            }
          }
        ],
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/storage/{storage}",
                [
                  "Datastore.Audit",
                  "Datastore.AllocateSpace"
                ],
                "any",
                1
              ]
            }
          ]
        }
      }
    },
    "/nodes/{node}/storage/{storage}/rrd": {
      "get": {
        "operationId": "get-nodes-node-storage-storage-rrd",
        "summary": "rrd",
        "description": "Read storage RRD statistics (returns PNG).",
        "tags": [
          "/nodes/{node}/storage/{storage}/rrd"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "filename": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "filename"
                  ]
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-nodes-node-storage-storage-rrd",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "cf",
            "in": "query",
            "required": false,
            "description": "The RRD consolidation function",
            "schema": {
              "type": "string",
              "description": "The RRD consolidation function",
              "enum": [
                "AVERAGE",
                "MAX"
              ],
              "x-proxmox-optional": true
            }
          },
          {
            "name": "ds",
            "in": "query",
            "required": true,
            "description": "The list of datasources you want to display.",
            "schema": {
              "type": "string",
              "description": "The list of datasources you want to display.",
              "format": "pve-configid-list",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "storage",
            "in": "path",
            "required": true,
            "description": "The storage identifier.",
            "schema": {
              "type": "string",
              "description": "The storage identifier.",
              "format": "pve-storage-id",
              "x-proxmox-format-description": "storage ID",
              "x-proxmox-typetext": "<storage ID>"
            }
          },
          {
            "name": "timeframe",
            "in": "query",
            "required": true,
            "description": "Specify the time frame you are interested in.",
            "schema": {
              "type": "string",
              "description": "Specify the time frame you are interested in.",
              "enum": [
                "hour",
                "day",
                "week",
                "month",
                "year"
              ]
            }
          }
        ],
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/storage/{storage}",
                [
                  "Datastore.Audit",
                  "Datastore.AllocateSpace"
                ],
                "any",
                1
              ]
            }
          ]
        }
      }
    },
    "/nodes/{node}/storage/{storage}/rrddata": {
      "get": {
        "operationId": "get-nodes-node-storage-storage-rrddata",
        "summary": "rrddata",
        "description": "Read storage RRD statistics.",
        "tags": [
          "/nodes/{node}/storage/{storage}/rrddata"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  }
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-nodes-node-storage-storage-rrddata",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "cf",
            "in": "query",
            "required": false,
            "description": "The RRD consolidation function",
            "schema": {
              "type": "string",
              "description": "The RRD consolidation function",
              "enum": [
                "AVERAGE",
                "MAX"
              ],
              "x-proxmox-optional": true
            }
          },
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "storage",
            "in": "path",
            "required": true,
            "description": "The storage identifier.",
            "schema": {
              "type": "string",
              "description": "The storage identifier.",
              "format": "pve-storage-id",
              "x-proxmox-format-description": "storage ID",
              "x-proxmox-typetext": "<storage ID>"
            }
          },
          {
            "name": "timeframe",
            "in": "query",
            "required": true,
            "description": "Specify the time frame you are interested in.",
            "schema": {
              "type": "string",
              "description": "Specify the time frame you are interested in.",
              "enum": [
                "hour",
                "day",
                "week",
                "month",
                "year"
              ]
            }
          }
        ],
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/storage/{storage}",
                [
                  "Datastore.Audit",
                  "Datastore.AllocateSpace"
                ],
                "any",
                1
              ]
            }
          ]
        }
      }
    },
    "/nodes/{node}/storage/{storage}/status": {
      "get": {
        "operationId": "get-nodes-node-storage-storage-status",
        "summary": "read_status",
        "description": "Read storage status.",
        "tags": [
          "/nodes/{node}/storage/{storage}/status"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-nodes-node-storage-storage-status",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "storage",
            "in": "path",
            "required": true,
            "description": "The storage identifier.",
            "schema": {
              "type": "string",
              "description": "The storage identifier.",
              "format": "pve-storage-id",
              "x-proxmox-format-description": "storage ID",
              "x-proxmox-typetext": "<storage ID>"
            }
          }
        ],
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/storage/{storage}",
                [
                  "Datastore.Audit",
                  "Datastore.AllocateSpace"
                ],
                "any",
                1
              ]
            }
          ]
        }
      }
    },
    "/nodes/{node}/storage/{storage}/upload": {
      "post": {
        "operationId": "post-nodes-node-storage-storage-upload",
        "summary": "upload",
        "description": "Upload templates, ISO images, OVAs and VM images.",
        "tags": [
          "/nodes/{node}/storage/{storage}/upload"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "post-nodes-node-storage-storage-upload",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "storage",
            "in": "path",
            "required": true,
            "description": "The storage identifier.",
            "schema": {
              "type": "string",
              "description": "The storage identifier.",
              "format": "pve-storage-id",
              "x-proxmox-format-description": "storage ID",
              "x-proxmox-typetext": "<storage ID>"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "checksum": {
                    "type": "string",
                    "description": "The expected checksum of the file.",
                    "x-proxmox-requires": [
                      "checksum-algorithm"
                    ],
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "checksum-algorithm": {
                    "type": "string",
                    "description": "The algorithm to calculate the checksum of the file.",
                    "enum": [
                      "md5",
                      "sha1",
                      "sha224",
                      "sha256",
                      "sha384",
                      "sha512"
                    ],
                    "x-proxmox-requires": [
                      "checksum"
                    ],
                    "x-proxmox-optional": true
                  },
                  "content": {
                    "type": "string",
                    "description": "Content type.",
                    "enum": [
                      "iso",
                      "vztmpl",
                      "import"
                    ],
                    "format": "pve-storage-content"
                  },
                  "filename": {
                    "type": "string",
                    "description": "The name of the file to create. Caution: This will be normalized!",
                    "maxLength": 255,
                    "x-proxmox-typetext": "<string>"
                  },
                  "tmpfilename": {
                    "type": "string",
                    "description": "The source file name. This parameter is usually set by the REST handler. You can only overwrite it when connecting to the trusted port on localhost.",
                    "pattern": "/var/tmp/pveupload-[0-9a-f]+",
                    "x-proxmox-optional": true
                  }
                },
                "required": [
                  "content",
                  "filename"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/storage/{storage}",
                [
                  "Datastore.AllocateTemplate"
                ]
              ]
            }
          ]
        }
      }
    },
    "/nodes/{node}/subscription": {
      "delete": {
        "operationId": "delete-nodes-node-subscription",
        "summary": "delete",
        "description": "Delete subscription key of this node.",
        "tags": [
          "/nodes/{node}/subscription"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "delete-nodes-node-subscription",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/nodes/{node}",
                [
                  "Sys.Modify"
                ]
              ]
            }
          ]
        }
      },
      "get": {
        "operationId": "get-nodes-node-subscription",
        "summary": "get",
        "description": "Read subscription info.",
        "tags": [
          "/nodes/{node}/subscription"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "checktime": {
                      "type": "integer",
                      "description": "Timestamp of the last check done.",
                      "x-proxmox-optional": true
                    },
                    "key": {
                      "type": "string",
                      "description": "The subscription key, if set and permitted to access.",
                      "x-proxmox-optional": true
                    },
                    "level": {
                      "type": "string",
                      "description": "A short code for the subscription level.",
                      "x-proxmox-optional": true
                    },
                    "message": {
                      "type": "string",
                      "description": "A more human readable status message.",
                      "x-proxmox-optional": true
                    },
                    "nextduedate": {
                      "type": "string",
                      "description": "Next due date of the set subscription.",
                      "x-proxmox-optional": true
                    },
                    "productname": {
                      "type": "string",
                      "description": "Human readable productname of the set subscription.",
                      "x-proxmox-optional": true
                    },
                    "regdate": {
                      "type": "string",
                      "description": "Register date of the set subscription.",
                      "x-proxmox-optional": true
                    },
                    "serverid": {
                      "type": "string",
                      "description": "The server ID, if permitted to access.",
                      "x-proxmox-optional": true
                    },
                    "signature": {
                      "type": "string",
                      "description": "Signature for offline keys",
                      "x-proxmox-optional": true
                    },
                    "sockets": {
                      "type": "integer",
                      "description": "The number of sockets for this host.",
                      "x-proxmox-optional": true
                    },
                    "status": {
                      "type": "string",
                      "description": "The current subscription status.",
                      "enum": [
                        "new",
                        "notfound",
                        "active",
                        "invalid",
                        "expired",
                        "suspended"
                      ]
                    },
                    "url": {
                      "type": "string",
                      "description": "URL to the web shop.",
                      "x-proxmox-optional": true
                    }
                  },
                  "required": [
                    "status"
                  ],
                  "additionalProperties": false
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-nodes-node-subscription",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "security": [],
        "x-proxmox-permissions": {
          "all": [
            {
              "user": "all"
            }
          ]
        }
      },
      "post": {
        "operationId": "post-nodes-node-subscription",
        "summary": "update",
        "description": "Update subscription info.",
        "tags": [
          "/nodes/{node}/subscription"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "post-nodes-node-subscription",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "force": {
                    "type": "boolean",
                    "description": "Always connect to server, even if local cache is still valid.",
                    "default": false,
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/nodes/{node}",
                [
                  "Sys.Modify"
                ]
              ]
            }
          ]
        }
      },
      "put": {
        "operationId": "put-nodes-node-subscription",
        "summary": "set",
        "description": "Set subscription key.",
        "tags": [
          "/nodes/{node}/subscription"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "put-nodes-node-subscription",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "key": {
                    "type": "string",
                    "description": "Proxmox VE subscription key",
                    "maxLength": 32,
                    "pattern": "\\s*pve([1248])([cbsp])-[0-9a-f]{10}\\s*"
                  }
                },
                "required": [
                  "key"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/nodes/{node}",
                [
                  "Sys.Modify"
                ]
              ]
            }
          ]
        }
      }
    },
    "/nodes/{node}/suspendall": {
      "post": {
        "operationId": "post-nodes-node-suspendall",
        "summary": "suspendall",
        "description": "Suspend all VMs.",
        "tags": [
          "/nodes/{node}/suspendall"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "post-nodes-node-suspendall",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "vms": {
                    "type": "string",
                    "description": "Only consider Guests with these IDs.",
                    "format": "pve-vmid-list",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "description": "The 'VM.PowerMgmt' permission is required on '/' or on '/vms/<ID>' for each ID passed via the 'vms' parameter. Additionally, you need 'VM.Config.Disk' on the '/vms/{vmid}' path and 'Datastore.AllocateSpace' for the configured state-storage(s)",
              "user": "all"
            }
          ]
        }
      }
    },
    "/nodes/{node}/syslog": {
      "get": {
        "operationId": "get-nodes-node-syslog",
        "summary": "syslog",
        "description": "Read system log",
        "tags": [
          "/nodes/{node}/syslog"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "n": {
                        "type": "integer",
                        "description": "Line number"
                      },
                      "t": {
                        "type": "string",
                        "description": "Line text"
                      }
                    },
                    "required": [
                      "n",
                      "t"
                    ]
                  }
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-nodes-node-syslog",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "x-proxmox-typetext": "<integer> (0 - N)",
              "x-proxmox-optional": true
            }
          },
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "service",
            "in": "query",
            "required": false,
            "description": "Service ID",
            "schema": {
              "type": "string",
              "description": "Service ID",
              "maxLength": 128,
              "x-proxmox-typetext": "<string>",
              "x-proxmox-optional": true
            }
          },
          {
            "name": "since",
            "in": "query",
            "required": false,
            "description": "Display all log since this date-time string.",
            "schema": {
              "type": "string",
              "description": "Display all log since this date-time string.",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}( \\d{2}:\\d{2}(:\\d{2})?)?$",
              "x-proxmox-optional": true
            }
          },
          {
            "name": "start",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "x-proxmox-typetext": "<integer> (0 - N)",
              "x-proxmox-optional": true
            }
          },
          {
            "name": "until",
            "in": "query",
            "required": false,
            "description": "Display all log until this date-time string.",
            "schema": {
              "type": "string",
              "description": "Display all log until this date-time string.",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}( \\d{2}:\\d{2}(:\\d{2})?)?$",
              "x-proxmox-optional": true
            }
          }
        ],
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/nodes/{node}",
                [
                  "Sys.Syslog"
                ]
              ]
            }
          ]
        }
      }
    },
    "/nodes/{node}/tasks": {
      "get": {
        "operationId": "get-nodes-node-tasks",
        "summary": "node_tasks",
        "description": "Read task list for one node (finished tasks).",
        "tags": [
          "/nodes/{node}/tasks"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "endtime": {
                        "type": "integer",
                        "x-proxmox-optional": true,
                        "x-proxmox-metadata": {
                          "title": "Endtime"
                        }
                      },
                      "id": {
                        "type": "string",
                        "x-proxmox-metadata": {
                          "title": "ID"
                        }
                      },
                      "node": {
                        "type": "string",
                        "x-proxmox-metadata": {
                          "title": "Node"
                        }
                      },
                      "pid": {
                        "type": "integer",
                        "x-proxmox-metadata": {
                          "title": "PID"
                        }
                      },
                      "pstart": {
                        "type": "integer"
                      },
                      "starttime": {
                        "type": "integer",
                        "x-proxmox-metadata": {
                          "title": "Starttime"
                        }
                      },
                      "status": {
                        "type": "string",
                        "x-proxmox-optional": true,
                        "x-proxmox-metadata": {
                          "title": "Status"
                        }
                      },
                      "type": {
                        "type": "string",
                        "x-proxmox-metadata": {
                          "title": "Type"
                        }
                      },
                      "upid": {
                        "type": "string",
                        "x-proxmox-metadata": {
                          "title": "UPID"
                        }
                      },
                      "user": {
                        "type": "string",
                        "x-proxmox-metadata": {
                          "title": "User"
                        }
                      }
                    },
                    "required": [
                      "id",
                      "node",
                      "pid",
                      "pstart",
                      "starttime",
                      "type",
                      "upid",
                      "user"
                    ]
                  },
                  "x-proxmox-metadata": {
                    "links": [
                      {
                        "href": "{upid}",
                        "rel": "child"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-nodes-node-tasks",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "errors",
            "in": "query",
            "required": false,
            "description": "Only list tasks with a status of ERROR.",
            "schema": {
              "type": "boolean",
              "description": "Only list tasks with a status of ERROR.",
              "default": false,
              "x-proxmox-typetext": "<boolean>",
              "x-proxmox-optional": true
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "description": "Only list this amount of tasks.",
            "schema": {
              "type": "integer",
              "description": "Only list this amount of tasks.",
              "default": 50,
              "minimum": 0,
              "x-proxmox-typetext": "<integer> (0 - N)",
              "x-proxmox-optional": true
            }
          },
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "since",
            "in": "query",
            "required": false,
            "description": "Only list tasks since this UNIX epoch.",
            "schema": {
              "type": "integer",
              "description": "Only list tasks since this UNIX epoch.",
              "x-proxmox-typetext": "<integer>",
              "x-proxmox-optional": true
            }
          },
          {
            "name": "source",
            "in": "query",
            "required": false,
            "description": "List archived, active or all tasks.",
            "schema": {
              "type": "string",
              "description": "List archived, active or all tasks.",
              "enum": [
                "archive",
                "active",
                "all"
              ],
              "default": "archive",
              "x-proxmox-optional": true
            }
          },
          {
            "name": "start",
            "in": "query",
            "required": false,
            "description": "List tasks beginning from this offset.",
            "schema": {
              "type": "integer",
              "description": "List tasks beginning from this offset.",
              "default": 0,
              "minimum": 0,
              "x-proxmox-typetext": "<integer> (0 - N)",
              "x-proxmox-optional": true
            }
          },
          {
            "name": "statusfilter",
            "in": "query",
            "required": false,
            "description": "List of Task States that should be returned.",
            "schema": {
              "type": "string",
              "description": "List of Task States that should be returned.",
              "format": "pve-task-status-type-list",
              "x-proxmox-typetext": "<string>",
              "x-proxmox-optional": true
            }
          },
          {
            "name": "typefilter",
            "in": "query",
            "required": false,
            "description": "Only list tasks of this type (e.g., vzstart, vzdump).",
            "schema": {
              "type": "string",
              "description": "Only list tasks of this type (e.g., vzstart, vzdump).",
              "x-proxmox-typetext": "<string>",
              "x-proxmox-optional": true
            }
          },
          {
            "name": "until",
            "in": "query",
            "required": false,
            "description": "Only list tasks until this UNIX epoch.",
            "schema": {
              "type": "integer",
              "description": "Only list tasks until this UNIX epoch.",
              "x-proxmox-typetext": "<integer>",
              "x-proxmox-optional": true
            }
          },
          {
            "name": "userfilter",
            "in": "query",
            "required": false,
            "description": "Only list tasks from this user.",
            "schema": {
              "type": "string",
              "description": "Only list tasks from this user.",
              "x-proxmox-typetext": "<string>",
              "x-proxmox-optional": true
            }
          },
          {
            "name": "vmid",
            "in": "query",
            "required": false,
            "description": "Only list tasks for this VM.",
            "schema": {
              "type": "integer",
              "description": "Only list tasks for this VM.",
              "minimum": 100,
              "maximum": 999999999,
              "format": "pve-vmid",
              "x-proxmox-typetext": "<integer> (100 - 999999999)",
              "x-proxmox-optional": true
            }
          }
        ],
        "security": [],
        "x-proxmox-permissions": {
          "all": [
            {
              "description": "List task associated with the current user, or all task the user has 'Sys.Audit' permissions on /nodes/<node> (the <node> the task runs on).",
              "user": "all"
            }
          ]
        }
      }
    },
    "/nodes/{node}/tasks/{upid}": {
      "delete": {
        "operationId": "delete-nodes-node-tasks-upid",
        "summary": "stop_task",
        "description": "Stop a task.",
        "tags": [
          "/nodes/{node}/tasks/{upid}"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "delete-nodes-node-tasks-upid",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "upid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "description": "The user needs 'Sys.Modify' permissions on '/nodes/<node>' if they aren't the owner of the task.",
              "user": "all"
            }
          ]
        }
      },
      "get": {
        "operationId": "get-nodes-node-tasks-upid",
        "summary": "upid_index",
        "description": "",
        "tags": [
          "/nodes/{node}/tasks/{upid}"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  },
                  "x-proxmox-metadata": {
                    "links": [
                      {
                        "href": "{name}",
                        "rel": "child"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-nodes-node-tasks-upid",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "upid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "security": [],
        "x-proxmox-permissions": {
          "all": [
            {
              "user": "all"
            }
          ]
        }
      }
    },
    "/nodes/{node}/tasks/{upid}/log": {
      "get": {
        "operationId": "get-nodes-node-tasks-upid-log",
        "summary": "read_task_log",
        "description": "Read task log.",
        "tags": [
          "/nodes/{node}/tasks/{upid}/log"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "n": {
                        "type": "integer",
                        "description": "Line number"
                      },
                      "t": {
                        "type": "string",
                        "description": "Line text"
                      }
                    },
                    "required": [
                      "n",
                      "t"
                    ]
                  }
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-nodes-node-tasks-upid-log",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "download",
            "in": "query",
            "required": false,
            "description": "Whether the tasklog file should be downloaded. This parameter can't be used in conjunction with other parameters",
            "schema": {
              "type": "boolean",
              "description": "Whether the tasklog file should be downloaded. This parameter can't be used in conjunction with other parameters",
              "x-proxmox-typetext": "<boolean>",
              "x-proxmox-optional": true
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "description": "The amount of lines to read from the tasklog.",
            "schema": {
              "type": "integer",
              "description": "The amount of lines to read from the tasklog.",
              "default": 50,
              "minimum": 0,
              "x-proxmox-typetext": "<integer> (0 - N)",
              "x-proxmox-optional": true
            }
          },
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "start",
            "in": "query",
            "required": false,
            "description": "Start at this line when reading the tasklog",
            "schema": {
              "type": "integer",
              "description": "Start at this line when reading the tasklog",
              "default": 0,
              "minimum": 0,
              "x-proxmox-typetext": "<integer> (0 - N)",
              "x-proxmox-optional": true
            }
          },
          {
            "name": "upid",
            "in": "path",
            "required": true,
            "description": "The task's unique ID.",
            "schema": {
              "type": "string",
              "description": "The task's unique ID.",
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "description": "The user needs 'Sys.Audit' permissions on '/nodes/<node>' if they aren't the owner of the task.",
              "user": "all"
            }
          ]
        }
      }
    },
    "/nodes/{node}/tasks/{upid}/status": {
      "get": {
        "operationId": "get-nodes-node-tasks-upid-status",
        "summary": "read_task_status",
        "description": "Read task status.",
        "tags": [
          "/nodes/{node}/tasks/{upid}/status"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "exitstatus": {
                      "type": "string",
                      "x-proxmox-optional": true
                    },
                    "id": {
                      "type": "string"
                    },
                    "node": {
                      "type": "string"
                    },
                    "pid": {
                      "type": "integer"
                    },
                    "pstart": {
                      "type": "integer"
                    },
                    "starttime": {
                      "type": "integer"
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "running",
                        "stopped"
                      ]
                    },
                    "type": {
                      "type": "string"
                    },
                    "upid": {
                      "type": "string"
                    },
                    "user": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "node",
                    "pid",
                    "pstart",
                    "starttime",
                    "status",
                    "type",
                    "upid",
                    "user"
                  ]
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-nodes-node-tasks-upid-status",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "upid",
            "in": "path",
            "required": true,
            "description": "The task's unique ID.",
            "schema": {
              "type": "string",
              "description": "The task's unique ID.",
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "description": "The user needs 'Sys.Audit' permissions on '/nodes/<node>' if they are not the owner of the task.",
              "user": "all"
            }
          ]
        }
      }
    },
    "/nodes/{node}/termproxy": {
      "post": {
        "operationId": "post-nodes-node-termproxy",
        "summary": "termproxy",
        "description": "Creates a VNC Shell proxy.",
        "tags": [
          "/nodes/{node}/termproxy"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "port": {
                      "type": "integer"
                    },
                    "ticket": {
                      "type": "string"
                    },
                    "upid": {
                      "type": "string"
                    },
                    "user": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "port",
                    "ticket",
                    "upid",
                    "user"
                  ],
                  "additionalProperties": false
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "post-nodes-node-termproxy",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "cmd": {
                    "type": "string",
                    "description": "Run specific command or default to login (requires 'root@pam')",
                    "enum": [
                      "upgrade",
                      "ceph_install",
                      "login"
                    ],
                    "default": "login",
                    "x-proxmox-optional": true
                  },
                  "cmd-opts": {
                    "type": "string",
                    "description": "Add parameters to a command. Encoded as null terminated strings.",
                    "default": "",
                    "x-proxmox-requires": [
                      "cmd"
                    ],
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/nodes/{node}",
                [
                  "Sys.Console"
                ]
              ]
            }
          ]
        }
      }
    },
    "/nodes/{node}/time": {
      "get": {
        "operationId": "get-nodes-node-time",
        "summary": "time",
        "description": "Read server time and time zone settings.",
        "tags": [
          "/nodes/{node}/time"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "localtime": {
                      "type": "integer",
                      "description": "Seconds since 1970-01-01 00:00:00 (local time)",
                      "minimum": 1297163644,
                      "x-proxmox-metadata": {
                        "renderer": "timestamp_gmt"
                      }
                    },
                    "time": {
                      "type": "integer",
                      "description": "Seconds since 1970-01-01 00:00:00 UTC.",
                      "minimum": 1297163644,
                      "x-proxmox-metadata": {
                        "renderer": "timestamp"
                      }
                    },
                    "timezone": {
                      "type": "string",
                      "description": "Time zone"
                    }
                  },
                  "required": [
                    "localtime",
                    "time",
                    "timezone"
                  ],
                  "additionalProperties": false
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-nodes-node-time",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "security": [],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/nodes/{node}",
                [
                  "Sys.Audit"
                ]
              ]
            }
          ]
        }
      },
      "put": {
        "operationId": "put-nodes-node-time",
        "summary": "set_timezone",
        "description": "Set time zone.",
        "tags": [
          "/nodes/{node}/time"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "put-nodes-node-time",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "timezone": {
                    "type": "string",
                    "description": "Time zone. The file '/usr/share/zoneinfo/zone.tab' contains the list of valid names.",
                    "x-proxmox-typetext": "<string>"
                  }
                },
                "required": [
                  "timezone"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/nodes/{node}",
                [
                  "Sys.Modify"
                ]
              ]
            }
          ]
        }
      }
    },
    "/nodes/{node}/version": {
      "get": {
        "operationId": "get-nodes-node-version",
        "summary": "version",
        "description": "API version details",
        "tags": [
          "/nodes/{node}/version"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "release": {
                      "type": "string",
                      "description": "The current installed Proxmox VE Release"
                    },
                    "repoid": {
                      "type": "string",
                      "description": "The short git commit hash ID from which this version was build"
                    },
                    "version": {
                      "type": "string",
                      "description": "The current installed pve-manager package version"
                    }
                  },
                  "required": [
                    "release",
                    "repoid",
                    "version"
                  ]
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-nodes-node-version",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "security": [],
        "x-proxmox-permissions": {
          "all": [
            {
              "user": "all"
            }
          ]
        }
      }
    },
    "/nodes/{node}/vncshell": {
      "post": {
        "operationId": "post-nodes-node-vncshell",
        "summary": "vncshell",
        "description": "Creates a VNC Shell proxy.",
        "tags": [
          "/nodes/{node}/vncshell"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "cert": {
                      "type": "string"
                    },
                    "port": {
                      "type": "integer"
                    },
                    "ticket": {
                      "type": "string"
                    },
                    "upid": {
                      "type": "string"
                    },
                    "user": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "cert",
                    "port",
                    "ticket",
                    "upid",
                    "user"
                  ],
                  "additionalProperties": false
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "post-nodes-node-vncshell",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "cmd": {
                    "type": "string",
                    "description": "Run specific command or default to login (requires 'root@pam')",
                    "enum": [
                      "upgrade",
                      "ceph_install",
                      "login"
                    ],
                    "default": "login",
                    "x-proxmox-optional": true
                  },
                  "cmd-opts": {
                    "type": "string",
                    "description": "Add parameters to a command. Encoded as null terminated strings.",
                    "default": "",
                    "x-proxmox-requires": [
                      "cmd"
                    ],
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "height": {
                    "type": "integer",
                    "description": "sets the height of the console in pixels.",
                    "minimum": 16,
                    "maximum": 2160,
                    "x-proxmox-typetext": "<integer> (16 - 2160)",
                    "x-proxmox-optional": true
                  },
                  "websocket": {
                    "type": "boolean",
                    "description": "use websocket instead of standard vnc.",
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "width": {
                    "type": "integer",
                    "description": "sets the width of the console in pixels.",
                    "minimum": 16,
                    "maximum": 4096,
                    "x-proxmox-typetext": "<integer> (16 - 4096)",
                    "x-proxmox-optional": true
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/nodes/{node}",
                [
                  "Sys.Console"
                ]
              ]
            }
          ]
        }
      }
    },
    "/nodes/{node}/vncwebsocket": {
      "get": {
        "operationId": "get-nodes-node-vncwebsocket",
        "summary": "vncwebsocket",
        "description": "Opens a websocket for VNC traffic.",
        "tags": [
          "/nodes/{node}/vncwebsocket"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "port": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "port"
                  ]
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-nodes-node-vncwebsocket",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "port",
            "in": "query",
            "required": true,
            "description": "Port number returned by previous vncproxy call.",
            "schema": {
              "type": "integer",
              "description": "Port number returned by previous vncproxy call.",
              "minimum": 5900,
              "maximum": 5999,
              "x-proxmox-typetext": "<integer> (5900 - 5999)"
            }
          },
          {
            "name": "vncticket",
            "in": "query",
            "required": true,
            "description": "Ticket from previous call to vncproxy.",
            "schema": {
              "type": "string",
              "description": "Ticket from previous call to vncproxy.",
              "maxLength": 512,
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "security": [],
        "x-proxmox-permissions": {
          "all": [
            {
              "description": "You also need to pass a valid ticket (vncticket).",
              "check": [
                "perm",
                "/nodes/{node}",
                [
                  "Sys.Console"
                ]
              ]
            }
          ]
        }
      }
    },
    "/nodes/{node}/vzdump": {
      "post": {
        "operationId": "post-nodes-node-vzdump",
        "summary": "vzdump",
        "description": "Create backup.",
        "tags": [
          "/nodes/{node}/vzdump"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "post-nodes-node-vzdump",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "Only run if executed on this node.",
            "schema": {
              "type": "string",
              "description": "Only run if executed on this node.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>",
              "x-proxmox-optional": true
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "all": {
                    "type": "boolean",
                    "description": "Backup all known guest systems on this host.",
                    "default": false,
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "bwlimit": {
                    "type": "integer",
                    "description": "Limit I/O bandwidth (in KiB/s).",
                    "default": 0,
                    "minimum": 0,
                    "x-proxmox-typetext": "<integer> (0 - N)",
                    "x-proxmox-optional": true
                  },
                  "compress": {
                    "type": "string",
                    "description": "Compress dump file.",
                    "enum": [
                      "0",
                      "1",
                      "gzip",
                      "lzo",
                      "zstd"
                    ],
                    "default": "0",
                    "x-proxmox-optional": true
                  },
                  "dumpdir": {
                    "type": "string",
                    "description": "Store resulting files to specified directory.",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "exclude": {
                    "type": "string",
                    "description": "Exclude specified guest systems (assumes --all)",
                    "format": "pve-vmid-list",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "exclude-path": {
                    "type": "array",
                    "description": "Exclude certain files/directories (shell globs). Paths starting with '/' are anchored to the container's root, other paths match relative to each subdirectory.",
                    "items": {
                      "type": "string"
                    },
                    "x-proxmox-typetext": "<array>",
                    "x-proxmox-optional": true
                  },
                  "fleecing": {
                    "type": "string",
                    "description": "Options for backup fleecing (VM only).",
                    "format": "backup-fleecing",
                    "x-proxmox-typetext": "[[enabled=]<1|0>] [,storage=<storage ID>]",
                    "x-proxmox-optional": true
                  },
                  "ionice": {
                    "type": "integer",
                    "description": "Set IO priority when using the BFQ scheduler. For snapshot and suspend mode backups of VMs, this only affects the compressor. A value of 8 means the idle priority is used, otherwise the best-effort priority is used with the specified value.",
                    "default": 7,
                    "minimum": 0,
                    "maximum": 8,
                    "x-proxmox-typetext": "<integer> (0 - 8)",
                    "x-proxmox-optional": true
                  },
                  "job-id": {
                    "type": "string",
                    "description": "The ID of the backup job. If set, the 'backup-job' metadata field of the backup notification will be set to this value. Only root@pam can set this parameter.",
                    "maxLength": 50,
                    "pattern": "\\S+",
                    "x-proxmox-optional": true
                  },
                  "lockwait": {
                    "type": "integer",
                    "description": "Maximal time to wait for the global lock (minutes).",
                    "default": 180,
                    "minimum": 0,
                    "x-proxmox-typetext": "<integer> (0 - N)",
                    "x-proxmox-optional": true
                  },
                  "mailnotification": {
                    "type": "string",
                    "description": "Deprecated: use notification targets/matchers instead. Specify when to send a notification mail",
                    "enum": [
                      "always",
                      "failure"
                    ],
                    "default": "always",
                    "x-proxmox-optional": true
                  },
                  "mailto": {
                    "type": "string",
                    "description": "Deprecated: Use notification targets/matchers instead. Comma-separated list of email addresses or users that should receive email notifications.",
                    "format": "email-or-username-list",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "maxfiles": {
                    "type": "integer",
                    "description": "Deprecated: use 'prune-backups' instead. Maximal number of backup files per guest system.",
                    "minimum": 1,
                    "x-proxmox-typetext": "<integer> (1 - N)",
                    "x-proxmox-optional": true
                  },
                  "mode": {
                    "type": "string",
                    "description": "Backup mode.",
                    "enum": [
                      "snapshot",
                      "suspend",
                      "stop"
                    ],
                    "default": "snapshot",
                    "x-proxmox-optional": true
                  },
                  "notes-template": {
                    "type": "string",
                    "description": "Template string for generating notes for the backup(s). It can contain variables which will be replaced by their values. Currently supported are {{cluster}}, {{guestname}}, {{node}}, and {{vmid}}, but more might be added in the future. Needs to be a single line, newline and backslash need to be escaped as '\\n' and '\\\\' respectively.",
                    "maxLength": 1024,
                    "x-proxmox-requires": [
                      "storage"
                    ],
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "notification-mode": {
                    "type": "string",
                    "description": "Determine which notification system to use. If set to 'legacy-sendmail', vzdump will consider the mailto/mailnotification parameters and send emails to the specified address(es) via the 'sendmail' command. If set to 'notification-system', a notification will be sent via PVE's notification system, and the mailto and mailnotification will be ignored. If set to 'auto' (default setting), an email will be sent if mailto is set, and the notification system will be used if not.",
                    "enum": [
                      "auto",
                      "legacy-sendmail",
                      "notification-system"
                    ],
                    "default": "auto",
                    "x-proxmox-optional": true
                  },
                  "pbs-change-detection-mode": {
                    "type": "string",
                    "description": "PBS mode used to detect file changes and switch encoding format for container backups.",
                    "enum": [
                      "legacy",
                      "data",
                      "metadata"
                    ],
                    "x-proxmox-optional": true
                  },
                  "performance": {
                    "type": "string",
                    "description": "Other performance-related settings.",
                    "format": "backup-performance",
                    "x-proxmox-typetext": "[max-workers=<integer>] [,pbs-entries-max=<integer>]",
                    "x-proxmox-optional": true
                  },
                  "pigz": {
                    "type": "integer",
                    "description": "Use pigz instead of gzip when N>0. N=1 uses half of cores, N>1 uses N as thread count.",
                    "default": 0,
                    "x-proxmox-typetext": "<integer>",
                    "x-proxmox-optional": true
                  },
                  "pool": {
                    "type": "string",
                    "description": "Backup all known guest systems included in the specified pool.",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "protected": {
                    "type": "boolean",
                    "description": "If true, mark backup(s) as protected.",
                    "x-proxmox-requires": [
                      "storage"
                    ],
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "prune-backups": {
                    "type": "string",
                    "description": "Use these retention options instead of those from the storage configuration.",
                    "default": "keep-all=1",
                    "format": "prune-backups",
                    "x-proxmox-typetext": "[keep-all=<1|0>] [,keep-daily=<N>] [,keep-hourly=<N>] [,keep-last=<N>] [,keep-monthly=<N>] [,keep-weekly=<N>] [,keep-yearly=<N>]",
                    "x-proxmox-optional": true
                  },
                  "quiet": {
                    "type": "boolean",
                    "description": "Be quiet.",
                    "default": false,
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "remove": {
                    "type": "boolean",
                    "description": "Prune older backups according to 'prune-backups'.",
                    "default": true,
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "script": {
                    "type": "string",
                    "description": "Use specified hook script.",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "stdexcludes": {
                    "type": "boolean",
                    "description": "Exclude temporary files and logs.",
                    "default": true,
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "stdout": {
                    "type": "boolean",
                    "description": "Write tar to stdout, not to a file.",
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "stop": {
                    "type": "boolean",
                    "description": "Stop running backup jobs on this host.",
                    "default": false,
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "stopwait": {
                    "type": "integer",
                    "description": "Maximal time to wait until a guest system is stopped (minutes).",
                    "default": 10,
                    "minimum": 0,
                    "x-proxmox-typetext": "<integer> (0 - N)",
                    "x-proxmox-optional": true
                  },
                  "storage": {
                    "type": "string",
                    "description": "Store resulting file to this storage.",
                    "format": "pve-storage-id",
                    "x-proxmox-format-description": "storage ID",
                    "x-proxmox-typetext": "<storage ID>",
                    "x-proxmox-optional": true
                  },
                  "tmpdir": {
                    "type": "string",
                    "description": "Store temporary files to specified directory.",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "vmid": {
                    "type": "string",
                    "description": "The ID of the guest system you want to backup.",
                    "format": "pve-vmid-list",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "zstd": {
                    "type": "integer",
                    "description": "Zstd threads. N=0 uses half of the available cores, if N is set to a value bigger than 0, N is used as thread count.",
                    "default": 1,
                    "x-proxmox-typetext": "<integer>",
                    "x-proxmox-optional": true
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "description": "The user needs 'VM.Backup' permissions on any VM, and 'Datastore.AllocateSpace' on the backup storage (and fleecing storage when fleecing is used). The 'tmpdir', 'dumpdir', 'script' and 'job-id' parameters are restricted to the 'root@pam' user. The 'prune-backups' setting requires 'Datastore.Allocate' on the backup storage. The 'bwlimit', 'performance' and 'ionice' parameters require 'Sys.Modify' on '/'.",
              "user": "all"
            }
          ]
        }
      }
    },
    "/nodes/{node}/vzdump/defaults": {
      "get": {
        "operationId": "get-nodes-node-vzdump-defaults",
        "summary": "defaults",
        "description": "Get the currently configured vzdump defaults.",
        "tags": [
          "/nodes/{node}/vzdump/defaults"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "all": {
                      "type": "boolean",
                      "description": "Backup all known guest systems on this host.",
                      "default": false,
                      "x-proxmox-optional": true
                    },
                    "bwlimit": {
                      "type": "integer",
                      "description": "Limit I/O bandwidth (in KiB/s).",
                      "default": 0,
                      "minimum": 0,
                      "x-proxmox-optional": true
                    },
                    "compress": {
                      "type": "string",
                      "description": "Compress dump file.",
                      "enum": [
                        "0",
                        "1",
                        "gzip",
                        "lzo",
                        "zstd"
                      ],
                      "default": "0",
                      "x-proxmox-optional": true
                    },
                    "dumpdir": {
                      "type": "string",
                      "description": "Store resulting files to specified directory.",
                      "x-proxmox-optional": true
                    },
                    "exclude": {
                      "type": "string",
                      "description": "Exclude specified guest systems (assumes --all)",
                      "format": "pve-vmid-list",
                      "x-proxmox-optional": true
                    },
                    "exclude-path": {
                      "type": "array",
                      "description": "Exclude certain files/directories (shell globs). Paths starting with '/' are anchored to the container's root, other paths match relative to each subdirectory.",
                      "items": {
                        "type": "string"
                      },
                      "x-proxmox-optional": true
                    },
                    "fleecing": {
                      "type": "string",
                      "description": "Options for backup fleecing (VM only).",
                      "format": "backup-fleecing",
                      "x-proxmox-optional": true
                    },
                    "ionice": {
                      "type": "integer",
                      "description": "Set IO priority when using the BFQ scheduler. For snapshot and suspend mode backups of VMs, this only affects the compressor. A value of 8 means the idle priority is used, otherwise the best-effort priority is used with the specified value.",
                      "default": 7,
                      "minimum": 0,
                      "maximum": 8,
                      "x-proxmox-optional": true
                    },
                    "lockwait": {
                      "type": "integer",
                      "description": "Maximal time to wait for the global lock (minutes).",
                      "default": 180,
                      "minimum": 0,
                      "x-proxmox-optional": true
                    },
                    "mailnotification": {
                      "type": "string",
                      "description": "Deprecated: use notification targets/matchers instead. Specify when to send a notification mail",
                      "enum": [
                        "always",
                        "failure"
                      ],
                      "default": "always",
                      "x-proxmox-optional": true
                    },
                    "mailto": {
                      "type": "string",
                      "description": "Deprecated: Use notification targets/matchers instead. Comma-separated list of email addresses or users that should receive email notifications.",
                      "format": "email-or-username-list",
                      "x-proxmox-optional": true
                    },
                    "maxfiles": {
                      "type": "integer",
                      "description": "Deprecated: use 'prune-backups' instead. Maximal number of backup files per guest system.",
                      "minimum": 1,
                      "x-proxmox-optional": true
                    },
                    "mode": {
                      "type": "string",
                      "description": "Backup mode.",
                      "enum": [
                        "snapshot",
                        "suspend",
                        "stop"
                      ],
                      "default": "snapshot",
                      "x-proxmox-optional": true
                    },
                    "node": {
                      "type": "string",
                      "description": "Only run if executed on this node.",
                      "format": "pve-node",
                      "x-proxmox-optional": true
                    },
                    "notes-template": {
                      "type": "string",
                      "description": "Template string for generating notes for the backup(s). It can contain variables which will be replaced by their values. Currently supported are {{cluster}}, {{guestname}}, {{node}}, and {{vmid}}, but more might be added in the future. Needs to be a single line, newline and backslash need to be escaped as '\\n' and '\\\\' respectively.",
                      "maxLength": 1024,
                      "x-proxmox-requires": [
                        "storage"
                      ],
                      "x-proxmox-optional": true
                    },
                    "notification-mode": {
                      "type": "string",
                      "description": "Determine which notification system to use. If set to 'legacy-sendmail', vzdump will consider the mailto/mailnotification parameters and send emails to the specified address(es) via the 'sendmail' command. If set to 'notification-system', a notification will be sent via PVE's notification system, and the mailto and mailnotification will be ignored. If set to 'auto' (default setting), an email will be sent if mailto is set, and the notification system will be used if not.",
                      "enum": [
                        "auto",
                        "legacy-sendmail",
                        "notification-system"
                      ],
                      "default": "auto",
                      "x-proxmox-optional": true
                    },
                    "pbs-change-detection-mode": {
                      "type": "string",
                      "description": "PBS mode used to detect file changes and switch encoding format for container backups.",
                      "enum": [
                        "legacy",
                        "data",
                        "metadata"
                      ],
                      "x-proxmox-optional": true
                    },
                    "performance": {
                      "type": "string",
                      "description": "Other performance-related settings.",
                      "format": "backup-performance",
                      "x-proxmox-optional": true
                    },
                    "pigz": {
                      "type": "integer",
                      "description": "Use pigz instead of gzip when N>0. N=1 uses half of cores, N>1 uses N as thread count.",
                      "default": 0,
                      "x-proxmox-optional": true
                    },
                    "pool": {
                      "type": "string",
                      "description": "Backup all known guest systems included in the specified pool.",
                      "x-proxmox-optional": true
                    },
                    "protected": {
                      "type": "boolean",
                      "description": "If true, mark backup(s) as protected.",
                      "x-proxmox-requires": [
                        "storage"
                      ],
                      "x-proxmox-optional": true
                    },
                    "prune-backups": {
                      "type": "string",
                      "description": "Use these retention options instead of those from the storage configuration.",
                      "default": "keep-all=1",
                      "format": "prune-backups",
                      "x-proxmox-optional": true
                    },
                    "quiet": {
                      "type": "boolean",
                      "description": "Be quiet.",
                      "default": false,
                      "x-proxmox-optional": true
                    },
                    "remove": {
                      "type": "boolean",
                      "description": "Prune older backups according to 'prune-backups'.",
                      "default": true,
                      "x-proxmox-optional": true
                    },
                    "script": {
                      "type": "string",
                      "description": "Use specified hook script.",
                      "x-proxmox-optional": true
                    },
                    "stdexcludes": {
                      "type": "boolean",
                      "description": "Exclude temporary files and logs.",
                      "default": true,
                      "x-proxmox-optional": true
                    },
                    "stop": {
                      "type": "boolean",
                      "description": "Stop running backup jobs on this host.",
                      "default": false,
                      "x-proxmox-optional": true
                    },
                    "stopwait": {
                      "type": "integer",
                      "description": "Maximal time to wait until a guest system is stopped (minutes).",
                      "default": 10,
                      "minimum": 0,
                      "x-proxmox-optional": true
                    },
                    "storage": {
                      "type": "string",
                      "description": "Store resulting file to this storage.",
                      "format": "pve-storage-id",
                      "x-proxmox-format-description": "storage ID",
                      "x-proxmox-optional": true
                    },
                    "tmpdir": {
                      "type": "string",
                      "description": "Store temporary files to specified directory.",
                      "x-proxmox-optional": true
                    },
                    "vmid": {
                      "type": "string",
                      "description": "The ID of the guest system you want to backup.",
                      "format": "pve-vmid-list",
                      "x-proxmox-optional": true
                    },
                    "zstd": {
                      "type": "integer",
                      "description": "Zstd threads. N=0 uses half of the available cores, if N is set to a value bigger than 0, N is used as thread count.",
                      "default": 1,
                      "x-proxmox-optional": true
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-nodes-node-vzdump-defaults",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "storage",
            "in": "query",
            "required": false,
            "description": "The storage identifier.",
            "schema": {
              "type": "string",
              "description": "The storage identifier.",
              "format": "pve-storage-id",
              "x-proxmox-format-description": "storage ID",
              "x-proxmox-typetext": "<storage ID>",
              "x-proxmox-optional": true
            }
          }
        ],
        "security": [],
        "x-proxmox-permissions": {
          "all": [
            {
              "description": "The user needs 'Datastore.Audit' or 'Datastore.AllocateSpace' permissions for the specified storage (or default storage if none specified). Some properties are only returned when the user has 'Sys.Audit' permissions for the node.",
              "user": "all"
            }
          ]
        }
      }
    },
    "/nodes/{node}/vzdump/extractconfig": {
      "get": {
        "operationId": "get-nodes-node-vzdump-extractconfig",
        "summary": "extractconfig",
        "description": "Extract configuration from vzdump backup archive.",
        "tags": [
          "/nodes/{node}/vzdump/extractconfig"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-nodes-node-vzdump-extractconfig",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "The cluster node name.",
            "schema": {
              "type": "string",
              "description": "The cluster node name.",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "volume",
            "in": "query",
            "required": true,
            "description": "Volume identifier",
            "schema": {
              "type": "string",
              "description": "Volume identifier",
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "description": "The user needs 'VM.Backup' permissions on the backed up guest ID, and 'Datastore.AllocateSpace' on the backup storage.",
              "user": "all"
            }
          ]
        }
      }
    },
    "/nodes/{node}/wakeonlan": {
      "post": {
        "operationId": "post-nodes-node-wakeonlan",
        "summary": "wakeonlan",
        "description": "Try to wake a node via 'wake on LAN' network packet.",
        "tags": [
          "/nodes/{node}/wakeonlan"
        ],
        "responses": {
          "200": {
            "description": "MAC address used to assemble the WoL magic packet.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "MAC address used to assemble the WoL magic packet.",
                  "format": "mac-addr"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "post-nodes-node-wakeonlan",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "node",
            "in": "path",
            "required": true,
            "description": "target node for wake on LAN packet",
            "schema": {
              "type": "string",
              "description": "target node for wake on LAN packet",
              "format": "pve-node",
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/nodes/{node}",
                [
                  "Sys.PowerMgmt"
                ]
              ]
            }
          ]
        }
      }
    },
    "/pools": {
      "delete": {
        "operationId": "delete-pools",
        "summary": "delete_pool",
        "description": "Delete pool.",
        "tags": [
          "/pools"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "delete-pools",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "poolid",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "pve-poolid",
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "description": "You can only delete empty pools (no members).",
              "check": [
                "perm",
                "/pool/{poolid}",
                [
                  "Pool.Allocate"
                ]
              ]
            }
          ]
        }
      },
      "get": {
        "operationId": "get-pools",
        "summary": "index",
        "description": "List pools or get pool configuration.",
        "tags": [
          "/pools"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "comment": {
                        "type": "string",
                        "x-proxmox-optional": true
                      },
                      "members": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "node": {
                              "type": "string"
                            },
                            "storage": {
                              "type": "string",
                              "x-proxmox-optional": true
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "qemu",
                                "lxc",
                                "openvz",
                                "storage"
                              ]
                            },
                            "vmid": {
                              "type": "integer",
                              "x-proxmox-optional": true
                            }
                          },
                          "required": [
                            "id",
                            "node",
                            "type"
                          ],
                          "additionalProperties": true
                        },
                        "x-proxmox-optional": true
                      },
                      "poolid": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "poolid"
                    ]
                  },
                  "x-proxmox-metadata": {
                    "links": [
                      {
                        "href": "{poolid}",
                        "rel": "child"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-pools",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "poolid",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "pve-poolid",
              "x-proxmox-typetext": "<string>",
              "x-proxmox-optional": true
            }
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "qemu",
                "lxc",
                "storage"
              ],
              "x-proxmox-requires": [
                "poolid"
              ],
              "x-proxmox-optional": true
            }
          }
        ],
        "security": [],
        "x-proxmox-permissions": {
          "all": [
            {
              "description": "List all pools where you have Pool.Audit permissions on /pool/<pool>, or the pool specific with {poolid}",
              "user": "all"
            }
          ]
        }
      },
      "post": {
        "operationId": "post-pools",
        "summary": "create_pool",
        "description": "Create new pool.",
        "tags": [
          "/pools"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "post-pools",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "comment": {
                    "type": "string",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "poolid": {
                    "type": "string",
                    "format": "pve-poolid",
                    "x-proxmox-typetext": "<string>"
                  }
                },
                "required": [
                  "poolid"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/pool/{poolid}",
                [
                  "Pool.Allocate"
                ]
              ]
            }
          ]
        }
      },
      "put": {
        "operationId": "put-pools",
        "summary": "update_pool",
        "description": "Update pool.",
        "tags": [
          "/pools"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "put-pools",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "allow-move": {
                    "type": "boolean",
                    "description": "Allow adding a guest even if already in another pool. The guest will be removed from its current pool and added to this one.",
                    "default": false,
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "comment": {
                    "type": "string",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "delete": {
                    "type": "boolean",
                    "description": "Remove the passed VMIDs and/or storage IDs instead of adding them.",
                    "default": false,
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "poolid": {
                    "type": "string",
                    "format": "pve-poolid",
                    "x-proxmox-typetext": "<string>"
                  },
                  "storage": {
                    "type": "string",
                    "description": "List of storage IDs to add or remove from this pool.",
                    "format": "pve-storage-id-list",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "vms": {
                    "type": "string",
                    "description": "List of guest VMIDs to add or remove from this pool.",
                    "format": "pve-vmid-list",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  }
                },
                "required": [
                  "poolid"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "description": "You also need the right to modify permissions on any object you add/delete.",
              "check": [
                "perm",
                "/pool/{poolid}",
                [
                  "Pool.Allocate"
                ]
              ]
            }
          ]
        }
      }
    },
    "/pools/{poolid}": {
      "delete": {
        "operationId": "delete-pools-poolid",
        "summary": "delete_pool_deprecated",
        "description": "Delete pool (deprecated, no support for nested pools, use 'DELETE /pools/?poolid={poolid}').",
        "tags": [
          "/pools/{poolid}"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "delete-pools-poolid",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "poolid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "pve-poolid",
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "description": "You can only delete empty pools (no members).",
              "check": [
                "perm",
                "/pool/{poolid}",
                [
                  "Pool.Allocate"
                ]
              ]
            }
          ]
        }
      },
      "get": {
        "operationId": "get-pools-poolid",
        "summary": "read_pool",
        "description": "Get pool configuration (deprecated, no support for nested pools, use 'GET /pools/?poolid={poolid}').",
        "tags": [
          "/pools/{poolid}"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "comment": {
                      "type": "string",
                      "x-proxmox-optional": true
                    },
                    "members": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "node": {
                            "type": "string"
                          },
                          "storage": {
                            "type": "string",
                            "x-proxmox-optional": true
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "qemu",
                              "lxc",
                              "openvz",
                              "storage"
                            ]
                          },
                          "vmid": {
                            "type": "integer",
                            "x-proxmox-optional": true
                          }
                        },
                        "required": [
                          "id",
                          "node",
                          "type"
                        ],
                        "additionalProperties": true
                      }
                    }
                  },
                  "required": [
                    "members"
                  ],
                  "additionalProperties": false
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-pools-poolid",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "poolid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "pve-poolid",
              "x-proxmox-typetext": "<string>"
            }
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "qemu",
                "lxc",
                "storage"
              ],
              "x-proxmox-optional": true
            }
          }
        ],
        "security": [],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/pool/{poolid}",
                [
                  "Pool.Audit"
                ]
              ]
            }
          ]
        }
      },
      "put": {
        "operationId": "put-pools-poolid",
        "summary": "update_pool_deprecated",
        "description": "Update pool data (deprecated, no support for nested pools - use 'PUT /pools/?poolid={poolid}' instead).",
        "tags": [
          "/pools/{poolid}"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "put-pools-poolid",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "poolid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "pve-poolid",
              "x-proxmox-typetext": "<string>"
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "allow-move": {
                    "type": "boolean",
                    "description": "Allow adding a guest even if already in another pool. The guest will be removed from its current pool and added to this one.",
                    "default": false,
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "comment": {
                    "type": "string",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "delete": {
                    "type": "boolean",
                    "description": "Remove the passed VMIDs and/or storage IDs instead of adding them.",
                    "default": false,
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "storage": {
                    "type": "string",
                    "description": "List of storage IDs to add or remove from this pool.",
                    "format": "pve-storage-id-list",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "vms": {
                    "type": "string",
                    "description": "List of guest VMIDs to add or remove from this pool.",
                    "format": "pve-vmid-list",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "description": "You also need the right to modify permissions on any object you add/delete.",
              "check": [
                "perm",
                "/pool/{poolid}",
                [
                  "Pool.Allocate"
                ]
              ]
            }
          ]
        }
      }
    },
    "/storage": {
      "get": {
        "operationId": "get-storage",
        "summary": "index",
        "description": "Storage index.",
        "tags": [
          "/storage"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "storage": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "storage"
                    ]
                  },
                  "x-proxmox-metadata": {
                    "links": [
                      {
                        "href": "{storage}",
                        "rel": "child"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-storage",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "required": false,
            "description": "Only list storage of specific type",
            "schema": {
              "type": "string",
              "description": "Only list storage of specific type",
              "enum": [
                "btrfs",
                "cephfs",
                "cifs",
                "dir",
                "esxi",
                "iscsi",
                "iscsidirect",
                "lvm",
                "lvmthin",
                "nfs",
                "pbs",
                "rbd",
                "zfs",
                "zfspool"
              ],
              "x-proxmox-optional": true
            }
          }
        ],
        "security": [],
        "x-proxmox-permissions": {
          "all": [
            {
              "description": "Only list entries where you have 'Datastore.Audit' or 'Datastore.AllocateSpace' permissions on '/storage/<storage>'",
              "user": "all"
            }
          ]
        }
      },
      "post": {
        "operationId": "post-storage",
        "summary": "create",
        "description": "Create a new storage.",
        "tags": [
          "/storage"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "config": {
                      "type": "object",
                      "description": "Partial, possible server generated, configuration properties.",
                      "properties": {
                        "encryption-key": {
                          "type": "string",
                          "description": "The, possible auto-generated, encryption-key.",
                          "x-proxmox-optional": true
                        }
                      },
                      "additionalProperties": true,
                      "x-proxmox-optional": true
                    },
                    "storage": {
                      "type": "string",
                      "description": "The ID of the created storage."
                    },
                    "type": {
                      "type": "string",
                      "description": "The type of the created storage.",
                      "enum": [
                        "btrfs",
                        "cephfs",
                        "cifs",
                        "dir",
                        "esxi",
                        "iscsi",
                        "iscsidirect",
                        "lvm",
                        "lvmthin",
                        "nfs",
                        "pbs",
                        "rbd",
                        "zfs",
                        "zfspool"
                      ]
                    }
                  },
                  "required": [
                    "storage",
                    "type"
                  ]
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "post-storage",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "authsupported": {
                    "type": "string",
                    "description": "Authsupported.",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "base": {
                    "type": "string",
                    "description": "Base volume. This volume is automatically activated.",
                    "format": "pve-volume-id",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "blocksize": {
                    "type": "string",
                    "description": "block size",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "bwlimit": {
                    "type": "string",
                    "description": "Set I/O bandwidth limit for various operations (in KiB/s).",
                    "x-proxmox-typetext": "[clone=<LIMIT>] [,default=<LIMIT>] [,migration=<LIMIT>] [,move=<LIMIT>] [,restore=<LIMIT>]",
                    "x-proxmox-optional": true
                  },
                  "comstar_hg": {
                    "type": "string",
                    "description": "host group for comstar views",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "comstar_tg": {
                    "type": "string",
                    "description": "target group for comstar views",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "content": {
                    "type": "string",
                    "description": "Allowed content types.\n\nNOTE: the value 'rootdir' is used for Containers, and value 'images' for VMs.\n",
                    "format": "pve-storage-content-list",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "content-dirs": {
                    "type": "string",
                    "description": "Overrides for default content type directories.",
                    "format": "pve-dir-override-list",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "create-base-path": {
                    "type": "boolean",
                    "description": "Create the base directory if it doesn't exist.",
                    "default": "yes",
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "create-subdirs": {
                    "type": "boolean",
                    "description": "Populate the directory with the default structure.",
                    "default": "yes",
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "data-pool": {
                    "type": "string",
                    "description": "Data Pool (for erasure coding only)",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "datastore": {
                    "type": "string",
                    "description": "Proxmox Backup Server datastore name.",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "disable": {
                    "type": "boolean",
                    "description": "Flag to disable the storage.",
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "domain": {
                    "type": "string",
                    "description": "CIFS domain.",
                    "maxLength": 256,
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "encryption-key": {
                    "type": "string",
                    "description": "Encryption key. Use 'autogen' to generate one automatically without passphrase.",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "export": {
                    "type": "string",
                    "description": "NFS export path.",
                    "format": "pve-storage-path",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "fingerprint": {
                    "type": "string",
                    "description": "Certificate SHA 256 fingerprint.",
                    "pattern": "([A-Fa-f0-9]{2}:){31}[A-Fa-f0-9]{2}",
                    "x-proxmox-optional": true
                  },
                  "format": {
                    "type": "string",
                    "description": "Default image format.",
                    "enum": [
                      "raw",
                      "qcow2",
                      "subvol",
                      "vmdk"
                    ],
                    "x-proxmox-optional": true
                  },
                  "fs-name": {
                    "type": "string",
                    "description": "The Ceph filesystem name.",
                    "format": "pve-configid",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "fuse": {
                    "type": "boolean",
                    "description": "Mount CephFS through FUSE.",
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "is_mountpoint": {
                    "type": "string",
                    "description": "Assume the given path is an externally managed mountpoint and consider the storage offline if it is not mounted. Using a boolean (yes/no) value serves as a shortcut to using the target path in this field.",
                    "default": "no",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "iscsiprovider": {
                    "type": "string",
                    "description": "iscsi provider",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "keyring": {
                    "type": "string",
                    "description": "Client keyring contents (for external clusters).",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "krbd": {
                    "type": "boolean",
                    "description": "Always access rbd through krbd kernel module.",
                    "default": false,
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "lio_tpg": {
                    "type": "string",
                    "description": "target portal group for Linux LIO targets",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "master-pubkey": {
                    "type": "string",
                    "description": "Base64-encoded, PEM-formatted public RSA key. Used to encrypt a copy of the encryption-key which will be added to each encrypted backup.",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "max-protected-backups": {
                    "type": "integer",
                    "description": "Maximal number of protected backups per guest. Use '-1' for unlimited.",
                    "default": "Unlimited for users with Datastore.Allocate privilege, 5 for other users",
                    "minimum": -1,
                    "x-proxmox-typetext": "<integer> (-1 - N)",
                    "x-proxmox-optional": true
                  },
                  "mkdir": {
                    "type": "boolean",
                    "description": "Create the directory if it doesn't exist and populate it with default sub-dirs. NOTE: Deprecated, use the 'create-base-path' and 'create-subdirs' options instead.",
                    "default": "yes",
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "monhost": {
                    "type": "string",
                    "description": "IP addresses of monitors (for external clusters).",
                    "format": "pve-storage-portal-dns-list",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "mountpoint": {
                    "type": "string",
                    "description": "mount point",
                    "format": "pve-storage-path",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "namespace": {
                    "type": "string",
                    "description": "Namespace.",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "nocow": {
                    "type": "boolean",
                    "description": "Set the NOCOW flag on files. Disables data checksumming and causes data errors to be unrecoverable from while allowing direct I/O. Only use this if data does not need to be any more safe than on a single ext4 formatted disk with no underlying raid system.",
                    "default": false,
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "nodes": {
                    "type": "string",
                    "description": "List of nodes for which the storage configuration applies.",
                    "format": "pve-node-list",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "nowritecache": {
                    "type": "boolean",
                    "description": "disable write caching on the target",
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "options": {
                    "type": "string",
                    "description": "NFS/CIFS mount options (see 'man nfs' or 'man mount.cifs')",
                    "format": "pve-storage-options",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "password": {
                    "type": "string",
                    "description": "Password for accessing the share/datastore.",
                    "maxLength": 256,
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "path": {
                    "type": "string",
                    "description": "File system path.",
                    "format": "pve-storage-path",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "pool": {
                    "type": "string",
                    "description": "Pool.",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "port": {
                    "type": "integer",
                    "description": "Use this port to connect to the storage instead of the default one (for example, with PBS or ESXi). For NFS and CIFS, use the 'options' option to configure the port via the mount options.",
                    "minimum": 1,
                    "maximum": 65535,
                    "x-proxmox-typetext": "<integer> (1 - 65535)",
                    "x-proxmox-optional": true
                  },
                  "portal": {
                    "type": "string",
                    "description": "iSCSI portal (IP or DNS name with optional port).",
                    "format": "pve-storage-portal-dns",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "preallocation": {
                    "type": "string",
                    "description": "Preallocation mode for raw and qcow2 images. Using 'metadata' on raw images results in preallocation=off.",
                    "enum": [
                      "off",
                      "metadata",
                      "falloc",
                      "full"
                    ],
                    "default": "metadata",
                    "x-proxmox-optional": true
                  },
                  "prune-backups": {
                    "type": "string",
                    "description": "The retention options with shorter intervals are processed first with --keep-last being the very first one. Each option covers a specific period of time. We say that backups within this period are covered by this option. The next option does not take care of already covered backups and only considers older backups.",
                    "format": "prune-backups",
                    "x-proxmox-typetext": "[keep-all=<1|0>] [,keep-daily=<N>] [,keep-hourly=<N>] [,keep-last=<N>] [,keep-monthly=<N>] [,keep-weekly=<N>] [,keep-yearly=<N>]",
                    "x-proxmox-optional": true
                  },
                  "saferemove": {
                    "type": "boolean",
                    "description": "Zero-out data when removing LVs.",
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "saferemove_throughput": {
                    "type": "string",
                    "description": "Wipe throughput (cstream -t parameter value).",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "server": {
                    "type": "string",
                    "description": "Server IP or DNS name.",
                    "format": "pve-storage-server",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "share": {
                    "type": "string",
                    "description": "CIFS share.",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "shared": {
                    "type": "boolean",
                    "description": "Indicate that this is a single storage with the same contents on all nodes (or all listed in the 'nodes' option). It will not make the contents of a local storage automatically accessible to other nodes, it just marks an already shared storage as such!",
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "skip-cert-verification": {
                    "type": "boolean",
                    "description": "Disable TLS certificate verification, only enable on fully trusted networks!",
                    "default": "false",
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "smbversion": {
                    "type": "string",
                    "description": "SMB protocol version. 'default' if not set, negotiates the highest SMB2+ version supported by both the client and server.",
                    "enum": [
                      "default",
                      "2.0",
                      "2.1",
                      "3",
                      "3.0",
                      "3.11"
                    ],
                    "default": "default",
                    "x-proxmox-optional": true
                  },
                  "snapshot-as-volume-chain": {
                    "type": "boolean",
                    "description": "Enable support for creating storage-vendor agnostic snapshot through volume backing-chains.",
                    "default": false,
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "sparse": {
                    "type": "boolean",
                    "description": "use sparse volumes",
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "storage": {
                    "type": "string",
                    "description": "The storage identifier.",
                    "format": "pve-storage-id",
                    "x-proxmox-format-description": "storage ID",
                    "x-proxmox-typetext": "<storage ID>"
                  },
                  "subdir": {
                    "type": "string",
                    "description": "Subdir to mount.",
                    "format": "pve-storage-path",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "tagged_only": {
                    "type": "boolean",
                    "description": "Only use logical volumes tagged with 'pve-vm-ID'.",
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "target": {
                    "type": "string",
                    "description": "iSCSI target.",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "thinpool": {
                    "type": "string",
                    "description": "LVM thin pool LV name.",
                    "format": "pve-storage-vgname",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "type": {
                    "type": "string",
                    "description": "Storage type.",
                    "enum": [
                      "btrfs",
                      "cephfs",
                      "cifs",
                      "dir",
                      "esxi",
                      "iscsi",
                      "iscsidirect",
                      "lvm",
                      "lvmthin",
                      "nfs",
                      "pbs",
                      "rbd",
                      "zfs",
                      "zfspool"
                    ]
                  },
                  "username": {
                    "type": "string",
                    "description": "RBD Id.",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "vgname": {
                    "type": "string",
                    "description": "Volume group name.",
                    "format": "pve-storage-vgname",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "zfs-base-path": {
                    "type": "string",
                    "description": "Base path where to look for the created ZFS block devices. Set automatically during creation if not specified. Usually '/dev/zvol'.",
                    "format": "pve-storage-path",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  }
                },
                "required": [
                  "storage",
                  "type"
                ],
                "additionalProperties": false
              }
            }
          }
        },
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/storage",
                [
                  "Datastore.Allocate"
                ]
              ]
            }
          ]
        }
      }
    },
    "/storage/{storage}": {
      "delete": {
        "operationId": "delete-storage-storage",
        "summary": "delete",
        "description": "Delete storage configuration.",
        "tags": [
          "/storage/{storage}"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "delete-storage-storage",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "storage",
            "in": "path",
            "required": true,
            "description": "The storage identifier.",
            "schema": {
              "type": "string",
              "description": "The storage identifier.",
              "format": "pve-storage-id",
              "x-proxmox-format-description": "storage ID",
              "x-proxmox-typetext": "<storage ID>"
            }
          }
        ],
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/storage",
                [
                  "Datastore.Allocate"
                ]
              ]
            }
          ]
        }
      },
      "get": {
        "operationId": "get-storage-storage",
        "summary": "read",
        "description": "Read storage configuration.",
        "tags": [
          "/storage/{storage}"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-storage-storage",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "storage",
            "in": "path",
            "required": true,
            "description": "The storage identifier.",
            "schema": {
              "type": "string",
              "description": "The storage identifier.",
              "format": "pve-storage-id",
              "x-proxmox-format-description": "storage ID",
              "x-proxmox-typetext": "<storage ID>"
            }
          }
        ],
        "security": [],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/storage/{storage}",
                [
                  "Datastore.Allocate"
                ]
              ]
            }
          ]
        }
      },
      "put": {
        "operationId": "put-storage-storage",
        "summary": "update",
        "description": "Update storage configuration.",
        "tags": [
          "/storage/{storage}"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "config": {
                      "type": "object",
                      "description": "Partial, possible server generated, configuration properties.",
                      "properties": {
                        "encryption-key": {
                          "type": "string",
                          "description": "The, possible auto-generated, encryption-key.",
                          "x-proxmox-optional": true
                        }
                      },
                      "additionalProperties": true,
                      "x-proxmox-optional": true
                    },
                    "storage": {
                      "type": "string",
                      "description": "The ID of the created storage."
                    },
                    "type": {
                      "type": "string",
                      "description": "The type of the created storage.",
                      "enum": [
                        "btrfs",
                        "cephfs",
                        "cifs",
                        "dir",
                        "esxi",
                        "iscsi",
                        "iscsidirect",
                        "lvm",
                        "lvmthin",
                        "nfs",
                        "pbs",
                        "rbd",
                        "zfs",
                        "zfspool"
                      ]
                    }
                  },
                  "required": [
                    "storage",
                    "type"
                  ]
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "put-storage-storage",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "parameters": [
          {
            "name": "storage",
            "in": "path",
            "required": true,
            "description": "The storage identifier.",
            "schema": {
              "type": "string",
              "description": "The storage identifier.",
              "format": "pve-storage-id",
              "x-proxmox-format-description": "storage ID",
              "x-proxmox-typetext": "<storage ID>"
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "blocksize": {
                    "type": "string",
                    "description": "block size",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "bwlimit": {
                    "type": "string",
                    "description": "Set I/O bandwidth limit for various operations (in KiB/s).",
                    "x-proxmox-typetext": "[clone=<LIMIT>] [,default=<LIMIT>] [,migration=<LIMIT>] [,move=<LIMIT>] [,restore=<LIMIT>]",
                    "x-proxmox-optional": true
                  },
                  "comstar_hg": {
                    "type": "string",
                    "description": "host group for comstar views",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "comstar_tg": {
                    "type": "string",
                    "description": "target group for comstar views",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "content": {
                    "type": "string",
                    "description": "Allowed content types.\n\nNOTE: the value 'rootdir' is used for Containers, and value 'images' for VMs.\n",
                    "format": "pve-storage-content-list",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "content-dirs": {
                    "type": "string",
                    "description": "Overrides for default content type directories.",
                    "format": "pve-dir-override-list",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "create-base-path": {
                    "type": "boolean",
                    "description": "Create the base directory if it doesn't exist.",
                    "default": "yes",
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "create-subdirs": {
                    "type": "boolean",
                    "description": "Populate the directory with the default structure.",
                    "default": "yes",
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "data-pool": {
                    "type": "string",
                    "description": "Data Pool (for erasure coding only)",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "delete": {
                    "type": "string",
                    "description": "A list of settings you want to delete.",
                    "maxLength": 4096,
                    "format": "pve-configid-list",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "digest": {
                    "type": "string",
                    "description": "Prevent changes if current configuration file has a different digest. This can be used to prevent concurrent modifications.",
                    "maxLength": 64,
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "disable": {
                    "type": "boolean",
                    "description": "Flag to disable the storage.",
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "domain": {
                    "type": "string",
                    "description": "CIFS domain.",
                    "maxLength": 256,
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "encryption-key": {
                    "type": "string",
                    "description": "Encryption key. Use 'autogen' to generate one automatically without passphrase.",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "fingerprint": {
                    "type": "string",
                    "description": "Certificate SHA 256 fingerprint.",
                    "pattern": "([A-Fa-f0-9]{2}:){31}[A-Fa-f0-9]{2}",
                    "x-proxmox-optional": true
                  },
                  "format": {
                    "type": "string",
                    "description": "Default image format.",
                    "enum": [
                      "raw",
                      "qcow2",
                      "subvol",
                      "vmdk"
                    ],
                    "x-proxmox-optional": true
                  },
                  "fs-name": {
                    "type": "string",
                    "description": "The Ceph filesystem name.",
                    "format": "pve-configid",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "fuse": {
                    "type": "boolean",
                    "description": "Mount CephFS through FUSE.",
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "is_mountpoint": {
                    "type": "string",
                    "description": "Assume the given path is an externally managed mountpoint and consider the storage offline if it is not mounted. Using a boolean (yes/no) value serves as a shortcut to using the target path in this field.",
                    "default": "no",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "keyring": {
                    "type": "string",
                    "description": "Client keyring contents (for external clusters).",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "krbd": {
                    "type": "boolean",
                    "description": "Always access rbd through krbd kernel module.",
                    "default": false,
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "lio_tpg": {
                    "type": "string",
                    "description": "target portal group for Linux LIO targets",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "master-pubkey": {
                    "type": "string",
                    "description": "Base64-encoded, PEM-formatted public RSA key. Used to encrypt a copy of the encryption-key which will be added to each encrypted backup.",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "max-protected-backups": {
                    "type": "integer",
                    "description": "Maximal number of protected backups per guest. Use '-1' for unlimited.",
                    "default": "Unlimited for users with Datastore.Allocate privilege, 5 for other users",
                    "minimum": -1,
                    "x-proxmox-typetext": "<integer> (-1 - N)",
                    "x-proxmox-optional": true
                  },
                  "mkdir": {
                    "type": "boolean",
                    "description": "Create the directory if it doesn't exist and populate it with default sub-dirs. NOTE: Deprecated, use the 'create-base-path' and 'create-subdirs' options instead.",
                    "default": "yes",
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "monhost": {
                    "type": "string",
                    "description": "IP addresses of monitors (for external clusters).",
                    "format": "pve-storage-portal-dns-list",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "mountpoint": {
                    "type": "string",
                    "description": "mount point",
                    "format": "pve-storage-path",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "namespace": {
                    "type": "string",
                    "description": "Namespace.",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "nocow": {
                    "type": "boolean",
                    "description": "Set the NOCOW flag on files. Disables data checksumming and causes data errors to be unrecoverable from while allowing direct I/O. Only use this if data does not need to be any more safe than on a single ext4 formatted disk with no underlying raid system.",
                    "default": false,
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "nodes": {
                    "type": "string",
                    "description": "List of nodes for which the storage configuration applies.",
                    "format": "pve-node-list",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "nowritecache": {
                    "type": "boolean",
                    "description": "disable write caching on the target",
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "options": {
                    "type": "string",
                    "description": "NFS/CIFS mount options (see 'man nfs' or 'man mount.cifs')",
                    "format": "pve-storage-options",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "password": {
                    "type": "string",
                    "description": "Password for accessing the share/datastore.",
                    "maxLength": 256,
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "pool": {
                    "type": "string",
                    "description": "Pool.",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "port": {
                    "type": "integer",
                    "description": "Use this port to connect to the storage instead of the default one (for example, with PBS or ESXi). For NFS and CIFS, use the 'options' option to configure the port via the mount options.",
                    "minimum": 1,
                    "maximum": 65535,
                    "x-proxmox-typetext": "<integer> (1 - 65535)",
                    "x-proxmox-optional": true
                  },
                  "preallocation": {
                    "type": "string",
                    "description": "Preallocation mode for raw and qcow2 images. Using 'metadata' on raw images results in preallocation=off.",
                    "enum": [
                      "off",
                      "metadata",
                      "falloc",
                      "full"
                    ],
                    "default": "metadata",
                    "x-proxmox-optional": true
                  },
                  "prune-backups": {
                    "type": "string",
                    "description": "The retention options with shorter intervals are processed first with --keep-last being the very first one. Each option covers a specific period of time. We say that backups within this period are covered by this option. The next option does not take care of already covered backups and only considers older backups.",
                    "format": "prune-backups",
                    "x-proxmox-typetext": "[keep-all=<1|0>] [,keep-daily=<N>] [,keep-hourly=<N>] [,keep-last=<N>] [,keep-monthly=<N>] [,keep-weekly=<N>] [,keep-yearly=<N>]",
                    "x-proxmox-optional": true
                  },
                  "saferemove": {
                    "type": "boolean",
                    "description": "Zero-out data when removing LVs.",
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "saferemove_throughput": {
                    "type": "string",
                    "description": "Wipe throughput (cstream -t parameter value).",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "server": {
                    "type": "string",
                    "description": "Server IP or DNS name.",
                    "format": "pve-storage-server",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "shared": {
                    "type": "boolean",
                    "description": "Indicate that this is a single storage with the same contents on all nodes (or all listed in the 'nodes' option). It will not make the contents of a local storage automatically accessible to other nodes, it just marks an already shared storage as such!",
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "skip-cert-verification": {
                    "type": "boolean",
                    "description": "Disable TLS certificate verification, only enable on fully trusted networks!",
                    "default": "false",
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "smbversion": {
                    "type": "string",
                    "description": "SMB protocol version. 'default' if not set, negotiates the highest SMB2+ version supported by both the client and server.",
                    "enum": [
                      "default",
                      "2.0",
                      "2.1",
                      "3",
                      "3.0",
                      "3.11"
                    ],
                    "default": "default",
                    "x-proxmox-optional": true
                  },
                  "snapshot-as-volume-chain": {
                    "type": "boolean",
                    "description": "Enable support for creating storage-vendor agnostic snapshot through volume backing-chains.",
                    "default": false,
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "sparse": {
                    "type": "boolean",
                    "description": "use sparse volumes",
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "subdir": {
                    "type": "string",
                    "description": "Subdir to mount.",
                    "format": "pve-storage-path",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "tagged_only": {
                    "type": "boolean",
                    "description": "Only use logical volumes tagged with 'pve-vm-ID'.",
                    "x-proxmox-typetext": "<boolean>",
                    "x-proxmox-optional": true
                  },
                  "username": {
                    "type": "string",
                    "description": "RBD Id.",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  },
                  "zfs-base-path": {
                    "type": "string",
                    "description": "Base path where to look for the created ZFS block devices. Set automatically during creation if not specified. Usually '/dev/zvol'.",
                    "format": "pve-storage-path",
                    "x-proxmox-typetext": "<string>",
                    "x-proxmox-optional": true
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "security": [
          {
            "PVEAuthCookie": []
          },
          {
            "PVEAPIToken": []
          }
        ],
        "x-proxmox-permissions": {
          "all": [
            {
              "check": [
                "perm",
                "/storage",
                [
                  "Datastore.Allocate"
                ]
              ]
            }
          ]
        }
      }
    },
    "/version": {
      "get": {
        "operationId": "get-version",
        "summary": "version",
        "description": "API version details, including some parts of the global datacenter config.",
        "tags": [
          "/version"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "console": {
                      "type": "string",
                      "description": "The default console viewer to use.",
                      "enum": [
                        "applet",
                        "vv",
                        "html5",
                        "xtermjs"
                      ],
                      "x-proxmox-optional": true
                    },
                    "release": {
                      "type": "string",
                      "description": "The current Proxmox VE point release in `x.y` format."
                    },
                    "repoid": {
                      "type": "string",
                      "description": "The short git revision from which this version was build.",
                      "pattern": "[0-9a-fA-F]{8,64}"
                    },
                    "version": {
                      "type": "string",
                      "description": "The full pve-manager package version of this node."
                    }
                  },
                  "required": [
                    "release",
                    "repoid",
                    "version"
                  ]
                }
              }
            }
          }
        },
        "x-proxmox-endpoint-id": "get-version",
        "x-proxmox-features": {
          "proxy": false,
          "download": false,
          "upload": false
        },
        "security": [],
        "x-proxmox-permissions": {
          "all": [
            {
              "user": "all"
            }
          ]
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "PVEAuthCookie": {
        "type": "apiKey",
        "in": "cookie",
        "name": "PVEAuthCookie",
        "description": "Proxmox VE authentication cookie. Obtained via the access ticket endpoint."
      },
      "PVEAPIToken": {
        "type": "apiKey",
        "in": "header",
        "name": "Authorization",
        "description": "API token authentication using the `Authorization: PVEAPIToken=TOKEN` header."
      }
    }
  },
  "x-proxmox": {
    "irVersion": "1.0.0",
    "normalizedAt": "2025-09-30T01:48:14.178Z",
    "source": {
      "snapshotChecksum": "f122c4f84320d47d6cff6ee097d36b268bb35cc686abdf7e468ff90319ed12b0",
      "scrapedAt": "2025-09-30T01:05:25.797Z",
      "sourceUrl": "https://pve.proxmox.com/pve-docs/api-viewer/",
      "documentTitle": "Proxmox VE API Documentation",
      "rawStats": {
        "rootGroupCount": 6,
        "endpointCount": 628
      }
    },
    "summary": {
      "groupCount": 412,
      "endpointCount": 628,
      "methodCount": 628
    }
  }
}
